{
    "application": "muse",
    "software": [
        "python",
        "torch",
        "conda",
        "srun",
        "bash",
        "CUDA",
        "NCCL"
    ],
    "modules": [
        "muse",
        "miniconda3"
    ],
    "environment_variables": {
        "MUSE_REPO": "/admin/home/suraj/code/muse",
        "OUTPUT_DIR": "/fsx/suraj/research-run",
        "LOG_PATH": "/fsx/suraj/research-run/main_log.txt",
        "CONFIG_PATH": "/admin/home/suraj/code/muse-experiments/research_run/config.yaml",
        "GPUS_PER_NODE": "8",
        "NNODES": "$SLURM_NNODES",
        "CUDA_VISIBLE_DEVICES": "${SLURM_STEP_GPUS:-$SLURM_JOB_GPUS}",
        "MASTER_ADDR": "$(scontrol show hostnames $SLURM_JOB_NODELIST | head -n 1)",
        "MASTER_PORT": "6000",
        "LAUNCHER": "python -u -m torch.distributed.run --nproc_per_node $GPUS_PER_NODE --nnodes $NNODES --rdzv_endpoint $MASTER_ADDR:$MASTER_PORT --rdzv_backend c10d --max_restarts 0 --tee 3",
        "CMD": " $MUSE_REPO/training/train_muse.py config=$CONFIG_PATH experiment.name=$(basename $OUTPUT_DIR) experiment.output_dir=$OUTPUT_DIR ",
        "NCCL_ASYNC_ERROR_HANDLING": "1",
        "NCCL_PROTO": "simple",
        "RDMAV_FORK_SAFE": "1",
        "FI_EFA_FORK_SAFE": "1",
        "FI_EFA_USE_DEVICE_RDMA": "1",
        "FI_PROVIDER": "efa",
        "FI_LOG_LEVEL": "1",
        "NCCL_IB_DISABLE": "1",
        "NCCL_SOCKET_IFNAME": "ens",
        "SRUN_ARGS": " --wait=60 --kill-on-bad-exit=1 "
    },
    "resources": {
        "gres": "gpu:8",
        "cpus_per_task": "96",
        "tasks": null,
        "ntasks_per_code": null,
        "gpus": null,
        "gpus_per_node": "8",
        "cores_per_socket": null,
        "gpus_per_task": null,
        "exclusive": true,
        "cpus_per_gpu": null,
        "gpu_type": null,
        "time": null,
        "ntasks_per_node": "1",
        "nodes": "2",
        "memory": null,
        "sockets_per_node": null,
        "ntasks_per_socket": null,
        "mem_per_gpu": null,
        "mem_per_cpu": null,
        "gres_flags": ""
    },
    "versions": {}
}