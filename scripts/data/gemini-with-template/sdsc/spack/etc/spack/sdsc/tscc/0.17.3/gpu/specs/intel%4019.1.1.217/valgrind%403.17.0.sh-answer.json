{
    "application": "valgrind",
    "software": [
        "spack",
        "valgrind",
        "openblas"
    ],
    "modules": [
        "slurm",
        "intel/19.1.1.217",
        "gpu"
    ],
    "environment_variables": {
        "LOCAL_TIME": "20231026T141402-0700",
        "UNIX_TIME": "1730057242",
        "SYSTEM_NAME": "tscc",
        "SPACK_VERSION": "0.17.3",
        "SPACK_INSTANCE_NAME": "gpu",
        "SPACK_INSTANCE_DIR": "/cm/shared/apps/spack/0.17.3/gpu",
        "SLURM_JOB_SCRIPT": "#!/usr/bin/env bash\n\n#SBATCH --job-name=valgrind@3.17.0\n#SBATCH --account=sys200\n##SBATCH --reservation=root_73\n#SBATCH --partition=hotel-gpu\n#SBATCH --nodes=1\n#SBATCH --ntasks-per-node=1\n#SBATCH --cpus-per-task=8\n#SBATCH --time=00:30:00\n#SBATCH --output=%x.o%j.%N\n\ndeclare -xr LOCAL_TIME=\"$(date +'%Y%m%dT%H%M%S%z')\"\ndeclare -xir UNIX_TIME=\"$(date +'%s')\"\n\ndeclare -xr SYSTEM_NAME='tscc'\n\ndeclare -xr SPACK_VERSION='0.17.3'\ndeclare -xr SPACK_INSTANCE_NAME='gpu'\ndeclare -xr SPACK_INSTANCE_DIR=\"/cm/shared/apps/spack/${SPACK_VERSION}/${SPACK_INSTANCE_NAME}\"\n\ndeclare -xr SLURM_JOB_SCRIPT=\"$(scontrol show job ${SLURM_JOB_ID} | awk -F= '/Command=/{print $2}')\"\ndeclare -xr SLURM_JOB_MD5SUM=\"$(md5sum ${SLURM_JOB_SCRIPT})\"\n\ndeclare -xr SCHEDULER_MODULE='slurm'\n\necho \"${UNIX_TIME} ${SLURM_JOB_ID} ${SLURM_JOB_MD5SUM} ${SLURM_JOB_DEPENDENCY}\" \necho \"\"\n\ncat \"${SLURM_JOB_SCRIPT}\"\ndeclare -xr COMPILER_MODULE='intel/19.1.1.217'\n\nmodule purge\nmodule load \"${SCHEDULER_MODULE}\"\nmodule load ${SPACK_INSTANCE_NAME}\nmodule load ${COMPILER_MODULE}\nmodule list\n. \"${SPACK_INSTANCE_DIR}/share/spack/setup-env.sh\"\n\ndeclare -xr SPACK_PACKAGE='valgrind@3.17.0'\ndeclare -xr SPACK_COMPILER='intel@19.1.1.217'\ndeclare -xr SPACK_VARIANTS='~boost ~mpi +only64bit +ubsan'\ndeclare -xr SPACK_DEPENDENCIES=''\ndeclare -xr SPACK_SPEC=\"${SPACK_PACKAGE} % ${SPACK_COMPILER} ${SPACK_VARIANTS} ${SPACK_DEPENDENCIES}\"\n\nprintenv\n\nspack config get compilers  \nspack config get config  \nspack config get mirrors\nspack config get modules\nspack config get packages\nspack config get repos\nspack config get upstreams\n\nspack spec --long --namespaces --types \"${SPACK_SPEC}\"\nif [[ \"${?}\" -ne 0 ]]; then\n  echo 'ERROR: spack concretization failed.'\n  exit 1\nfi\n\ntime -p spack install --jobs \"${SLURM_CPUS_PER_TASK}\" --fail-fast --yes-to-all \"${SPACK_SPEC}\"\nif [[ \"${?}\" -ne 0 ]]; then\n  echo 'ERROR: spack install failed.'\n  exit 1\nfi\n\n#spack module lmod refresh --delete-tree -y\n\nsbatch --dependency=\"afterok:${SLURM_JOB_ID}\" 'openblas@0.3.17.sh'\n\nsleep 20",
        "SLURM_JOB_MD5SUM": "28c96b968f5573e7b966341798186c9e",
        "SCHEDULER_MODULE": "slurm",
        "COMPILER_MODULE": "intel/19.1.1.217",
        "SPACK_PACKAGE": "valgrind@3.17.0",
        "SPACK_COMPILER": "intel@19.1.1.217",
        "SPACK_VARIANTS": "~boost ~mpi +only64bit +ubsan",
        "SPACK_DEPENDENCIES": "",
        "SPACK_SPEC": "valgrind@3.17.0 % intel@19.1.1.217 ~boost ~mpi +only64bit +ubsan "
    },
    "resources": {
        "gres": "",
        "cpus_per_task": "8",
        "tasks": "1",
        "ntasks_per_code": "1",
        "gpus": "",
        "gpus_per_node": "",
        "cores_per_socket": "",
        "gpus_per_task": "",
        "exclusive": "",
        "cpus_per_gpu": "",
        "gpu_type": "",
        "time": "00:30:00",
        "ntasks_per_node": "1",
        "nodes": "1",
        "memory": "",
        "sockets_per_node": "",
        "ntasks_per_socket": "",
        "mem_per_gpu": "",
        "mem_per_cpu": "",
        "gres_flags": ""
    },
    "versions": {
        "openblas": "0.3.17.sh"
    }
}