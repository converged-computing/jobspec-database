{
    "application": "SLURM",
    "software": [
        "labutils",
        "awk",
        "sed",
        "cp",
        "bash"
    ],
    "modules": [],
    "environment_variables": {
        "SERVER": "the server and the directory to mount to the computing node (ex: 'cbsunt246 workdir/' or 'cbsubscb16 storage/')",
        "BAMLIST": "path to a list of merged bam files on the computing node once mounting is complete (ex: /fs/cbsunt246/workdir/cod/greenland-cod/sample_lists/bam_list_merged.txt)",
        "SAMPLETABLE": "path to a sample table on the computing node once mounting is complete (ex: /fs/cbsunt246/workdir/cod/greenland-cod/sample_lists/sample_table.tsv), where the 1st column is the prefix of the raw fastq files, the 4th column is the sample ID, the 2nd column is the lane number, and the 3rd column is sequence ID. The combination of these three columns have to be unique. The 6th column should be data type, which is either pe or se. This is the same as the 2nd argument provided to the low_coverage_mapping.sh script.",
        "JAVA": "the path to java that can be accessed from the SLURM cluster (ex: java, which will use the system default java).",
        "PICARD": "the path to the picard program that can be accessed from the SLURM cluster (ex: /programs/picard-tools-2.9.0/picard.jar).",
        "BAMUTIL": "the path the the bamutil program that can be accessed from the SLUMR cluster (ex: /programs/bamUtil/bam)",
        "ARRAY_LENGTH": "the number of array jobs to divide adapter clipping into. This must be less than or equal to the total number of samples in the BAMLIST. The number of samples that will be processed by each array job is equal to floor(total number of samples / ARRAY_LENGTH), and the memory and partition headers should be based on this.",
        "SCRIPT": "path to the deduplicate_clipoverlap.sh script on the computing node once mounting is complete (ex: /fs/cbsunt246/workdir/data-processing/scripts/deduplicate_clipoverlap.sh)"
    },
    "resources": {
        "gres": null,
        "cpus_per_task": null,
        "tasks": null,
        "ntasks_per_code": null,
        "gpus": null,
        "gpus_per_node": null,
        "cores_per_socket": null,
        "gpus_per_task": null,
        "exclusive": null,
        "cpus_per_gpu": null,
        "gpu_type": null,
        "time": null,
        "ntasks_per_node": null,
        "nodes": "1",
        "memory": null,
        "sockets_per_node": null,
        "ntasks_per_socket": null,
        "mem_per_gpu": null,
        "mem_per_cpu": null,
        "gres_flags": null
    },
    "versions": {}
}