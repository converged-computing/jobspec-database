{
    "application": "python",
    "software": [
        "FloodFillNetwork-Notes/run_inference.py",
        "FloodFillNetwork-Notes/visualize_segmentation_script.py"
    ],
    "modules": [
        "singularity-2.4.2"
    ],
    "environment_variables": {
        "PATH": "/act/Anaconda3-2.3.0/bin:${PATH}",
        "model_name": "Longtime_Mov/model.ckpt-14204266",
        "logfile_name": "inference_p11_6_exp1_batch_${PBS_ARRAYID}.log",
        "bounding_box": "start { x: 500 y: 500 z:0 } size { x:600 y:600 z:152 }",
        "bounding_box1": "start { x: 1500 y:  0 z:0 } size { x:600 y:600 z:152 }",
        "Request": "image { \nhdf5: \"/scratch/binxu.wang/ffn-Data/LGN_DATA/grayscale_ixP11_6_align_norm.h5:raw\" \n} \nimage_mean: 138 \nimage_stddev: 38 \ncheckpoint_interval: 1800 \nseed_policy: \"PolicyPeaks\" \nmodel_name: \"convstack_3d.ConvStack3DFFNModel\" \ninference_options { \n  init_activation: 0.95 \n  pad_value: 0.05 \n  move_threshold: 0.90 \n  min_boundary_dist { x: 5 y: 5 z: 1} \n  segment_threshold: 0.6 \n  min_segment_size: 5000 \n  disco_seed_threshold: 0.002 \n} \nmodel_checkpoint_path: \"/scratch/binxu.wang/ffn-Data/models/LR_model_Longtime_Mov/model.ckpt-14204266\" \nmodel_args: \"{\\\"depth\\\": 9, \\\"fov_size\\\": [37, 25, 15], \\\"deltas\\\": [8,6,2]}\" \nsegmentation_output_dir: \"/scratch/binxu.wang/results/LGN/p11_6_exp1-${PBS_ARRAYID}\"",
        "HDF5_USE_FILE_LOCKING": "FALSE"
    },
    "resources": {
        "gres": "gpu:1",
        "cpus_per_task": "2",
        "tasks": "32-45",
        "ntasks_per_code": "1",
        "gpus": "1",
        "gpus_per_node": "1",
        "cores_per_socket": null,
        "gpus_per_task": "1",
        "exclusive": null,
        "cpus_per_gpu": null,
        "gpu_type": "haswell",
        "time": "24:00:00",
        "ntasks_per_node": "1",
        "nodes": "1",
        "memory": "15gb",
        "sockets_per_node": null,
        "ntasks_per_socket": null,
        "mem_per_gpu": null,
        "mem_per_cpu": null,
        "gres_flags": null
    },
    "versions": {}
}