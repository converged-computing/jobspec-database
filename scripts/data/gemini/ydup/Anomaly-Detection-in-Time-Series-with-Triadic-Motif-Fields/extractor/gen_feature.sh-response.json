{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n\"application\": \"MPI\",\n\"details\": {\n\"language\": \"Python\",\n\"libraries\": [\"mpi4py\"],\n\"script\": \"gen_feature.py\",\n\"resource_requirements\": {\n\"nodes\": 1,\n\"cores_per_node\": 20,\n\"walltime\": \"88888:00:00\",\n\"queue\": \"adf\",\n\"job_dependency\": \"oe\",\n\"email_options\": {\n\"send_email_on_abort\": true,\n\"send_email_on_end\": true,\n\"email_address\": \"your@email.com\"\n}\n}\n}\n}\n```\n\n**Explanation:**\n\n* **Application:** The script uses `mpirun`, indicating it's running under the **Message Passing Interface (MPI)** framework.\n* **Language:** The script explicitly calls `which python`, confirming it's written in **Python**.\n* **Libraries:**  The usage of `mpirun` implies the script likely uses the `mpi4py` library for parallelization.\n* **Script:** The script executes `gen_feature.py`.\n* **Resource Requirements:** \n    * The script requests one node with 20 cores per node.\n    * It sets a walltime limit of 88888 hours.\n    * It specifies the \"adf\" queue.\n    * It uses \"oe\" for job dependency (output and error).\n    * It configures email notifications for job abort and completion.\n\n**Note:** The `gen_feature.py` script likely performs some kind of feature generation task, possibly related to ECG (Electrocardiogram) analysis as suggested by the job name. The `--mode`, `--freq`, `--slice`, and `--nodes` arguments passed to the script provide further context. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 188,
        "candidates_token_count": 405,
        "total_token_count": 593,
        "cached_content_token_count": 0
    }
}