{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n\"application\": \"Aegean\",\n\"software_requirements\": [\n\"BANE\",\n\"Aegean\"\n],\n\"resource_requirements\": {\n\"cores\": \"NCORES\",\n\"memory\": \"JOB_MEMORY\",\n\"walltime\": \"JOB_WALLTIME\",\n\"nodes\": \"JOB_NNODES\",\n\"queue\": \"BATCH_QUEUE\",\n\"batch_system\": \"BATCH_SYSTEM\"\n}\n}\n```\n\nThis script is running **Aegean**, a source finding and characterization tool for astronomical data. The script requires the following:\n\n* **Software:**\n    * **BANE:**  A tool for computing background and noise maps.\n    * **Aegean:** The primary source finding and characterization tool.\n\n* **Resource Requirements:**\n    * **Cores:** `NCORES` (user-defined, defaults to 1)\n    * **Memory:** `JOB_MEMORY` (user-defined, defaults to 4 GB)\n    * **Walltime:** `JOB_WALLTIME` (user-defined, defaults to 96 hours)\n    * **Nodes:** `JOB_NNODES` (user-defined, defaults to 1)\n    * **Queue:** `BATCH_QUEUE` (required if submitting to a batch system)\n    * **Batch System:** `BATCH_SYSTEM` (either \"PBS\" or \"SLURM\", required if submitting to a batch system)\n\nThe script can be used to either process a single input file or a list of files. It provides numerous options for customization, including:\n\n* **Input Options:**\n    * `--filelist`: Path to a file containing a list of input files.\n    * `--inputfile`: Path to a single input file.\n* **Output Options:**\n    * `--outdir`: Path to the output directory.\n    * `--save-regions`: Save DS9 regions (default: false).\n    * `--save-bkgmap`: Save background map in output ROOT file (default: false).\n* **Run Options:**\n    * `--envfile`: Path to a file containing environment variables to be loaded.\n    * `--maxfiles`: Maximum number of files to process from the file list (default: -1, all files).\n    * `--addrunindex`: Append a run index to the submission script (default: false).\n    * `--no-logredir`: Do not redirect logs to the output file in the script (default: false).\n    * `--ncores`: Number of processing cores to use (default: 1).\n* **Submission Options:**\n    * `--submit`: Submit the script to the batch system.\n    * `--batchsystem`: Name of the batch system (\"PBS\" or \"SLURM\").\n    * `--queue`: Name of the queue in the batch system.\n    * `--jobwalltime`: Job walltime in the batch system.\n    * `--jobcpus`: Number of CPUs per node requested for the job (default: 1).\n    * `--jobnodes`: Number of nodes requested for the job (default: 1).\n    * `--jobmemory`: Memory in GB required for the job (default: 4).\n    * `--jobusergroup`: Name of the job user group in the batch system.\n* **Background Options:**\n    * `--bkgbox`: Size of the grid to use for background computation (default: 101).\n    * `--bkggrid`: Size of the box over which to calculate RMS/background (default: 101).\n* **Compact Source Options:**\n    * `--seedthr`: Seed threshold (in sigmas) used in flood-fill (default: 5).\n    * `--mergethr`: Merge threshold (in sigmas) used in flood-fill (default: 4).\n* **Source Fitting Options:**\n    * `--fit-maxcomponents`: Maximum number of components fitted in a blob (default: 5).\n\nThe script defines various variables and performs argument parsing, then generates and submits individual run scripts for each input file. The specific commands used for submitting jobs and the directives for the batch system are determined based on the `BATCH_SYSTEM` variable. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 4997,
        "candidates_token_count": 918,
        "total_token_count": 5915,
        "cached_content_token_count": 0
    }
}