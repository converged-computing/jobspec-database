{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"snakemake\",\n  \"software_requirements\": [\n    \"bash\",\n    \"singularity\",\n    \"snakemake\",\n    \"sbatch\"\n  ],\n  \"resource_requirements\": {\n    \"slurm\": {\n      \"gres\": \"cluster.gres\",\n      \"threads\": \"cluster.threads\",\n      \"time\": \"cluster.time\",\n      \"mem\": \"cluster.mem\",\n      \"job_name\": \"params.rname\",\n      \"output\": \"$3/logfiles/slurmfiles/slurm-%j_{params.rname}.out\",\n      \"error\": \"$3/logfiles/slurmfiles/slurm-%j_{params.rname}.out\"\n    },\n    \"temporary_directory\": {\n      \"biowulf\": \"/lscratch/\\$SLURM_JOBID/\",\n      \"frce\": \"/scratch/cluster_scratch/\\$USER/\"\n    },\n    \"singularity_cache\": {\n      \"default\": \"${outdir}/.singularity\"\n    },\n    \"bind_paths\": {\n      \"description\": \"The pipeline uses singularity images for execution. Bind paths are used to mount the host file system to the container's file system. Multiple bind paths can be provided as a comma separated list. The main entry point of the pipeline internally collects and aggregates bind paths to mount to the container's filesystem. If you are manually running this script or by-passing the main entry point, you will need to provide the bind paths of the rawdata directory(s) along with the pipeline's output directory and any other directories for reference files.\",\n      \"example\": \"/data/$USER/,/lscratch\"\n    }\n  }\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "citation_metadata": {
                "citation_sources": [
                    {
                        "start_index": 782,
                        "end_index": 914,
                        "uri": "https://github.com/OpenOmics/cyte-seek",
                        "license_": ""
                    },
                    {
                        "start_index": 921,
                        "end_index": 1281,
                        "uri": "https://github.com/OpenOmics/cyte-seek",
                        "license_": ""
                    }
                ]
            },
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 3574,
        "candidates_token_count": 390,
        "total_token_count": 3964,
        "cached_content_token_count": 0
    }
}