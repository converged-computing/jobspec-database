{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"LSF\",\n  \"details\": {\n    \"resource_requirements\": {\n      \"memory\": \"ram_size\",\n      \"cores\": \"cores_per_node\",\n      \"nodes\": \"nodes\",\n      \"gpu\": {\n        \"count\": \"gpu_per_node\",\n        \"resource_name\": \"gpu_resource_name\"\n      },\n      \"walltime\": \"run_time\"\n    },\n    \"job_submission_options\": {\n      \"job_name\": \"job_name\",\n      \"job_queue\": \"job_queue\",\n      \"job_workspace\": \"job_workspace\",\n      \"output_file\": \"{{ job_name }}-{{ current }}.out\",\n      \"error_file\": \"{{ job_name }}-{{ current }}.out\"\n    }\n  }\n}\n```\n\nThis script is designed to run applications within the **LSF (Load Sharing Facility)** cluster management system. \n\nHere's a breakdown of the details:\n\n* **LSF:** This is a batch system used to manage and execute jobs on a cluster. \n* **Resource Requirements:** The script defines how much memory (ram_size), cores (cores_per_node), and nodes (nodes) the job needs. It also specifies GPU requirements, including the number of GPUs (gpu_per_node) and the resource name if applicable (gpu_resource_name).  It also sets a walltime limit (run_time) for the job.\n* **Job Submission Options:** The script sets the job name (job_name), the queue to run the job in (job_queue), the working directory (job_workspace), and defines where the output and error logs should be written (output_file, error_file).\n* **Environment Variable:** The script sets an environment variable `ENV_JOB_ID` to the LSF job ID (`LSB_JOBID`).\n\nThe script uses Jinja templating to allow for dynamic configuration of the job submission parameters. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 356,
        "candidates_token_count": 443,
        "total_token_count": 799,
        "cached_content_token_count": 0
    }
}