{
    "application": "ClimateModeling",
    "software": [
        "FESOM",
        "ECHAM6",
        "OASIS3-MCT",
        "SLURM"
    ],
    "resource_requirements": {
        "nodes": 48,
        "tasks": 4608,
        "tasks_per_node": 96,
        "time": "00:30:00",
        "partition": "standard96",
        "memory": "unlimited",
        "mpi": "intel/18.0.6 impi/2018.5",
        "openmp": "OMP_NUM_THREADS=1",
        "cpu_bind": "SLURM_CPU_BIND=none",
        "hydra_branch_count": "I_MPI_HYDRA_BRANCH_COUNT=-1",
        "hydra_topolib": "I_MPI_HYDRA_TOPOLIB=ipl",
        "mpi_fabrics": "I_MPI_FABRICS=shm:ofi",
        "mpi_ofi_provider": "I_MPI_OFI_PROVIDER=psm2"
    },
    "model_configurations": {
        "resolution": {
            "echam": "T63",
            "fesom": "CORE2"
        },
        "levels": "L47",
        "ensemble_size": 16,
        "time_steps": {
            "fesom": 900,
            "echam": 450,
            "coupling": 3600
        },
        "process_topology": {
            "echam": {
                "lat": 12,
                "lon": 8
            },
            "fesom": 192
        },
        "output_schedules": [
            {
                "vars": [
                    "evs",
                    "fsitherm",
                    "hfds",
                    "opottemptend",
                    "pbo",
                    "prlq",
                    "prsn",
                    "rsdo",
                    "siarean",
                    "siareas",
                    "sidmassevapsubl",
                    "sidmasssi",
                    "sidmassth",
                    "sidmasstranx",
                    "sidmasstrany",
                    "siextentn",
                    "siextents",
                    "sifllatstop",
                    "sisnconc",
                    "sisnmass",
                    "sisnthick",
                    "sispeed",
                    "sivol",
                    "sivoln",
                    "sivols",
                    "soga",
                    "thetaoga",
                    "u2o",
                    "uo",
                    "uso",
                    "uto",
                    "v2o",
                    "vo",
                    "volo",
                    "vso",
                    "vto",
                    "w2o",
                    "wfo",
                    "wo",
                    "wso",
                    "wto",
                    "zossq",
                    "rho",
                    "uhice",
                    "uhsnow",
                    "urho",
                    "uv",
                    "vhice",
                    "vhsnow",
                    "virtual_salt",
                    "vrho",
                    "mlotst",
                    "omldamax",
                    "sic",
                    "sistrxdtop",
                    "sistrxubot",
                    "sistrydtop",
                    "sistryubot",
                    "sithick",
                    "sitimefrac",
                    "siu",
                    "siv",
                    "so",
                    "sos",
                    "tauuo",
                    "tauvo",
                    "thetao",
                    "tos",
                    "zos",
                    "flice",
                    "wnet",
                    "evap",
                    "runoff",
                    "thdgr",
                    "thdgrsn",
                    "tso"
                ],
                "unit": "d",
                "rate": 1
            },
            {
                "vars": [
                    "restart"
                ],
                "unit": "m",
                "first": 12,
                "rate": 1
            },
            {
                "vars": [
                    "lwrd",
                    "olat",
                    "olwout",
                    "osen",
                    "relax_salt",
                    "shum",
                    "tair",
                    "uwind",
                    "vwind"
                ],
                "unit": "y",
                "first": 1000,
                "rate": 1
            }
        ],
        "postprocessing": {
            "enabled": false,
            "path": "${WORK_DIR}/test2_output/"
        }
    },
    "environment_variables": {
        "base_dir": "/home/${USER}/fesom_echam6_oasis3-mct.GMD",
        "work_dir": "/scratch/usr/${USER}/AWI-CM-PDAF",
        "ens_dir": "${WORK_DIR}/gmd_scaling16",
        "expid": "SCEN",
        "cdo_path": "",
        "nco_path": "",
        "ini_data": "/scratch/usr/hbkqtang/old_work2/input/pool-data/",
        "iniech": "${INI_DATA}/ECHAM6/input/r0004",
        "inijsb": "${INI_DATA}/JSBACH/input/r0007",
        "iniechfes": "$FESOM_meshpath/tarfiles${RES}/input/echam6",
        "inijsbfe": "$FESOM_meshpath/tarfiles${RES}/input/jsbach",
        "fesom_meshpath": "/scratch/usr/hbkqtang/old_work2/input/CORE2_final/",
        "fesom_opbndpath": "",
        "fesom_climatedatapath": "/scratch/usr/hbkqtang/old_work2/input/hydrography/",
        "fesom_forcingdatapath": "",
        "fesom_restartflag": "last",
        "fesom_tideforcingpath": "",
        "fesom_resultpath": "${RUN_DIR}",
        "fesom_spinup": "T",
        "fesom_spinup_path": "/scratch/usr/hbkqtang/old_work2/fesom_spinup_2016/",
        "fesom_spinup_year": 2016,
        "echam_spinup": "F",
        "echam_spinup_path": "/scratch/usr/hbkqtang/old_work2/echam_spinup_2016/",
        "fdate": 2000,
        "oasis_restart": "T",
        "oasis_restart_path": "/scratch/usr/hbkqtang/old_work2/input/",
        "postprocess": "F",
        "postprocess_path": "${WORK_DIR}/test2_output/",
        "begin_year": 2016,
        "begin_month": 1,
        "begin_day": 1,
        "end_year": 2700,
        "end_month": 1,
        "end_day": 1,
        "restart_year": 0,
        "restart_month": 0,
        "restart_day": 10
    },
    "execution_flow": {
        "steps": [
            "create ensemble directories",
            "setup environment variables",
            "prepare input files",
            "run FESOM and ECHAM models in parallel with mpirun",
            "check model status",
            "exit if models are complete"
        ]
    }
}