{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "Magpie\n```json\n{\n  \"application\": \"Magpie\",\n  \"software\": [\n    {\n      \"name\": \"Java\",\n      \"version\": \"1.8.0\",\n      \"path\": \"/usr/lib/jvm/jre-1.8.0/\"\n    },\n    {\n      \"name\": \"Python\",\n      \"path\": \"/usr/bin/python\"\n    },\n    {\n      \"name\": \"Alluxio\",\n      \"version\": \"2.3.0\",\n      \"path\": \"${HOME}/alluxio-2.3.0\"\n    }\n  ],\n  \"resources\": [\n    {\n      \"name\": \"Node Count\",\n      \"description\": \"Number of nodes required, including master and Zookeeper nodes if necessary.\",\n      \"variable\": \"MAGPIE_NODES\",\n      \"default\": null,\n      \"comment\": \"Node count should include one node for the\\nhead/management/master node.  For example, if you want 8 compute\\nnodes to process data, specify 9 nodes below.\\n\\nIf including Zookeeper, include expected Zookeeper nodes.  For\\nexample, if you want 8 Hadoop compute nodes and 3 Zookeeper nodes,\\nspecify 12 nodes (1 master, 8 Hadoop, 3 Zookeeper)\\n\\nAlso take into account additional nodes needed for other services.\"\n    },\n    {\n      \"name\": \"Walltime\",\n      \"description\": \"Maximum allowed runtime for the job.\",\n      \"variable\": \"MAGPIE_WALLTIME\",\n      \"default\": null,\n      \"comment\": \"Note defaults of MAGPIE_STARTUP_TIME & MAGPIE_SHUTDOWN_TIME, the\\nwalltime should be a fair amount larger than them combined.\"\n    },\n    {\n      \"name\": \"Alluxio Worker Memory\",\n      \"description\": \"Memory allocated for each Alluxio worker.\",\n      \"variable\": \"ALLUXIO_WORKER_MEMORY_SIZE\",\n      \"default\": \"16GB\",\n      \"comment\": \"Set the amount of memory each Alluxio worker will use. Memory would\\nbe used as the first tier of storage. The more memory would Alluxio have,\\nthe bigger first tier storage would be. Be mindful of the memory\\nrequirements of other services (e.g. Spark).\"\n    },\n    {\n      \"name\": \"Alluxio Tier0 Path\",\n      \"description\": \"Path for the Tier0 storage, typically RAM File System.\",\n      \"variable\": \"ALLUXIO_WORKER_TIER0_PATH\",\n      \"default\": \"/mnt/ramdisk\",\n      \"comment\": \"Alluxio will use RAM File System as caching storage.\\nIn this variable, there could be set path for tiered storage level 0.\\nDefault settings are /mnt/ramdisk on Linux and /Volumes/ramdisk on OSX.\\n\\nTo avoid sudo requirement but using tmpFS in Linux,\\nset here /dev/shm and ALLUXIO_RAMFS_MOUNT_OPTION to NoMount option.\"\n    },\n    {\n      \"name\": \"Alluxio RAMFS Mount Option\",\n      \"description\": \"Mount option for the RAM File System.\",\n      \"variable\": \"ALLUXIO_RAMFS_MOUNT_OPTION\",\n      \"default\": \"SudoMount\",\n      \"comment\": \"Select option how RamFS should be mounted in Alluxio.\\n\\nThere are 3 mount options for alluxio-start.sh command:\\nMount     - Mount the configured RamFS if it is not already mounted.\\nSudoMount - Mount the configured RamFS using sudo\\n            if it is not already mounted. This option requires sudo,\\n            it should not be used when user doesn't have sudo rights.\\nNoMount   - Do not mount the configured RamFS. Also, this option should\\n            be used when RamFS is not available.\\n\\nTo avoid sudo requirement but using tmpFS in Linux,\\nset ALLUXIO_WORKER_TIER0_PATH to /dev/shm and use here NoMount option.\\n\\nIf you have sudo and have doubts, leave the default value.\"\n    }\n  ],\n  \"job_types\": [\n    \"testall\",\n    \"script\",\n    \"interactive\",\n    \"setuponly\",\n    \"alluxio\"\n  ]\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 4714,
        "candidates_token_count": 980,
        "total_token_count": 5694,
        "cached_content_token_count": 0
    }
}