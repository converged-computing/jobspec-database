{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"Magpie\",\n  \"software_requirements\": [\n    {\n      \"name\": \"Java\",\n      \"version\": \"1.8.0\",\n      \"path\": \"/usr/lib/jvm/jre-1.8.0/\"\n    },\n    {\n      \"name\": \"Python\",\n      \"version\": \"Unspecified\",\n      \"path\": \"/usr/bin/python\"\n    },\n    {\n      \"name\": \"Spark\",\n      \"version\": \"2.3.0-bin-hadoop2.7\",\n      \"path\": \"${HOME}/spark-${SPARK_VERSION}\"\n    },\n    {\n      \"name\": \"Zeppelin\",\n      \"version\": \"0.8.2\",\n      \"path\": \"${HOME}/zeppelin-${ZEPPELIN_VERSION}-bin-all\"\n    },\n    {\n      \"name\": \"Scala\",\n      \"version\": \"2.10.4\",\n      \"path\": \"${HOME}/scala-2.10.4\"\n    },\n    {\n      \"name\": \"MPIRUN\",\n      \"version\": \"Unspecified\",\n      \"path\": \"mpirun\"\n    }\n  ],\n  \"resource_requirements\": [\n    {\n      \"name\": \"Node Count\",\n      \"value\": \"<my_node_count>\",\n      \"description\": \"Total number of nodes required, including the head node\"\n    },\n    {\n      \"name\": \"Time Limit\",\n      \"value\": \"<my_time_in_hours:minutes>\",\n      \"description\": \"Job time limit in hours:minutes\"\n    },\n    {\n      \"name\": \"Job Name\",\n      \"value\": \"<my_job_name>\",\n      \"description\": \"Name for the job and its associated directories\"\n    },\n    {\n      \"name\": \"Queue\",\n      \"value\": \"<my_queue>\",\n      \"description\": \"Queue to launch job in\"\n    },\n    {\n      \"name\": \"Scripts Home\",\n      \"value\": \"${HOME}/magpie\",\n      \"description\": \"Directory where the launching scripts are stored\"\n    },\n    {\n      \"name\": \"Local Directory\",\n      \"value\": \"/tmp/${USER}/magpie\",\n      \"description\": \"Directory to store local configuration files and logs\"\n    },\n    {\n      \"name\": \"Spark Worker Cores per Node\",\n      \"value\": \"8\",\n      \"description\": \"Number of cores per node for Spark workers\"\n    },\n    {\n      \"name\": \"Spark Worker Memory per Node\",\n      \"value\": \"16000M\",\n      \"description\": \"Memory per node for Spark workers\"\n    },\n    {\n      \"name\": \"Spark Job Memory\",\n      \"value\": \"2048M\",\n      \"description\": \"Memory for Spark jobs, including executor and driver\"\n    },\n    {\n      \"name\": \"Spark Daemon Heap Max\",\n      \"value\": \"2000M\",\n      \"description\": \"Maximum heap size for Spark daemons\"\n    },\n    {\n      \"name\": \"Spark Local Scratch Directory\",\n      \"value\": \"/lustre/${USER}/sparkscratch/\",\n      \"description\": \"Directory for Spark local scratch data\"\n    },\n    {\n      \"name\": \"Zeppelin Local Directory\",\n      \"value\": \"/tmp/${USER}/zeppelin\",\n      \"description\": \"Directory to store local Zeppelin configuration files and logs\"\n    },\n    {\n      \"name\": \"Zeppelin Notebook Persisted Directory\",\n      \"value\": \"/lustre/${USER}/zeppelin/notebook\",\n      \"description\": \"Location for Zeppelin notebook persistence\"\n    }\n  ],\n  \"notes\": [\n    \"Many of the above configurations can be set on the command line, and the default values may be adjusted in the script.\"\n  ]\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 8205,
        "candidates_token_count": 886,
        "total_token_count": 9091,
        "cached_content_token_count": 0
    }
}