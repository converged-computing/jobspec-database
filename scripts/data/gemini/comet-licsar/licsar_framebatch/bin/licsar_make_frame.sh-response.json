{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "Framebatch\n{\n\"application\": \"Framebatch\",\n\"software_dependencies\": [\n\"LiCSAR_0_getFiles.py\",\n\"LiCSAR_bash_lib.sh\",\n\"setFrameInactive.py\",\n\"setFrameActive.py\",\n\"framebatch_data_refill.sh\",\n\"createFrameCache.py\",\n\"checkNewRslc.py\",\n\"ab_LiCSAR_mk_image.py\",\n\"ab_LiCSAR_coreg.py\",\n\"ab_LiCSAR_mk_ifg.py\",\n\"ab_LiCSAR_unwrap.py\",\n\"framebatch_gapfill.sh\",\n\"framebatch_LOTUS_geo.sh\",\n\"store_to_curdir.sh\",\n\"make_bperp_4_matlab.sh\",\n\"unwrapped_pixels_framebatch.sh\",\n\"parse_list.sh\",\n\"baseline_qc_plot.sh\",\n\"base_calc\",\n\"bperp_framebatch.py\"\n],\n\"resource_requirements\": [\n\"BATCH_CACHE_DIR\",\n\"LiCSARpath\",\n\"LiCSAR_procdir\",\n\"LiCSAR_public\",\n\"LiCSAR_temp\",\n\"framebatch_config\",\n\"SQLPath\",\n\"mysqlhost\",\n\"mysqluser\",\n\"mysqlpass\",\n\"mysqldbname\"\n],\n\"execution_environment\": \"Linux\",\n\"description\": \"This script processes LiCSAR data for a given frame. It automates the generation of images, coregistration, interferogram creation, unwrapping, and gap filling. The script also supports optional steps like geocoding to geotiffs, publishing tiffs, and generating baseline plots.\"\n}\n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 12747,
        "candidates_token_count": 393,
        "total_token_count": 13140,
        "cached_content_token_count": 0
    }
}