{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n\"application\": \"dipy\",\n\"details\": {\n\"resource_requirements\": {\n\"nodes\": \"3\",\n\"processors_per_node\": \"16\",\n\"walltime\": \"1:00:00\"\n},\n\"software_requirements\": {\n\"python\": \"2.7\",\n\"anaconda\": \"2\",\n\"dipy\": \"/N/u/aryaam/Karst/github_repos/dipy\",\n\"nibabel\": \"/N/u/aryaam/Karst/github_repos/nibabel\",\n\"pyAFQ\": \"/N/u/aryaam/Karst/github_repos/pyAFQ\"\n},\n\"environment_variables\": {\n\"SERVICE_DIR\": \"current working directory\",\n\"ENV\": \"IUHPC or VM\",\n\"HPC\": \"KARST or CARBONATE\",\n\"PYTHONPATH\": \"/N/u/aryaam/Karst/github_repos/dipy:/N/u/aryaam/Karst/github_repos/nibabel:/N/u/aryaam/Karst/github_repos/pyAFQ or /usr/local/dipy:/usr/local/nibabel:/usr/local/pyAFQ\"\n},\n\"execution_flow\": {\n\"1\": \"Check if running on HPC or VM\",\n\"2\": \"Load required modules based on environment\",\n\"3\": \"Set PYTHONPATH based on environment\",\n\"4\": \"Run main.py using python\",\n\"5\": \"Check if main.py execution was successful\",\n\"6\": \"Check if mapping.nii.gz file exists\",\n\"7\": \"Write status to finished file\"\n}\n}\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 478,
        "candidates_token_count": 384,
        "total_token_count": 862,
        "cached_content_token_count": 0
    }
}