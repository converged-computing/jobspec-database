{
    "application": "SLURM",
    "details": {
        "job_name": "navigation-analysis-habitat",
        "output": "/checkpoint/%u/jobs/job.%j.out",
        "error": "/checkpoint/%u/jobs/job.%j.err",
        "gres": "gpu:8",
        "nodes": 1,
        "cpus-per-task": 10,
        "ntasks-per-node": 8,
        "mem": "400GB",
        "partition": "learnfair",
        "time": "24:00:00",
        "signal": "USR1@600",
        "open-mode": "append",
        "modules": [
            "cuda/10.0",
            "cudnn/v7.4-cuda.10.0",
            "NCCL/2.4.2-1-cuda.10.0"
        ],
        "environment_variables": {
            "PYTHONPATH": "$(pwd):$(pwd)/habitat-api-navigation-analysis:${PYTHONPATH}",
            "LD_LIBRARY_PATH": "/usr/lib/x86_64-linux-gnu/nvidia-opengl:${LD_LIBRARY_PATH}",
            "GLOG_minloglevel": "2",
            "MAGNUM_LOG": "quiet",
            "SIM_GPU_IDS": "0",
            "PTH_GPU_ID": "0",
            "SENSOR_TYPES": "RGB_SENSOR,DEPTH_SENSOR",
            "NUM_PROCESSES": "1",
            "CHECKPOINT_MODEL_DIR": "/checkpoint/akadian/exp-dir/blind_loopnav_checkpoint/",
            "MAX_EPISODE_TIMESTEPS": "2000",
            "TASK_CONFIG": "tasks/gibson.pointnav.yaml",
            "NAV_TASK": "loopnav",
            "TENSORBOARD_DIR": "/checkpoint/akadian/tensorboard-logs/dummy-eval-${NAV_TASK}",
            "COUNT_TEST_EPISODES": "1000",
            "VIDEO": "0",
            "OUT_DIR_VIDEO": "/private/home/akadian/navigation-analysis/navigation-analysis-habitat/eval-videos-${NAV_TASK}",
            "LOG_FILE": "/private/home/akadian/navigation-analysis/navigation-analysis-habitat/evaluate.blind.loopnav.S_T_S.log",
            "POSITIONS_FILE": "/private/home/akadian/navigation-analysis/navigation-analysis-habitat/sts_episodes.pkl"
        },
        "command": "python -u src/evaluate_ppo.py --checkpoint-model-dir ${CHECKPOINT_MODEL_DIR} --sim-gpu-ids ${SIM_GPU_IDS} --pth-gpu-id ${PTH_GPU_ID} --num-processes ${NUM_PROCESSES} --log-file ${LOG_FILE} --count-test-episodes ${COUNT_TEST_EPISODES} --video ${VIDEO} --out-dir-video ${OUT_DIR_VIDEO} --nav-task ${NAV_TASK} --tensorboard-dir ${TENSORBOARD_DIR}"
    }
}