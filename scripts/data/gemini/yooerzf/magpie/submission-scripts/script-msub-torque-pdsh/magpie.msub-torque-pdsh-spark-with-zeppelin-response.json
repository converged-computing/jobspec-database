{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "Magpie\n\n```json\n{\n  \"application\": \"Magpie\",\n  \"description\": \"Magpie is a set of scripts for running Hadoop on traditional HPC systems, enabling the use of big data tools on existing high-performance computing clusters.\",\n  \"software_requirements\": [\n    {\n      \"name\": \"Java\",\n      \"version\": \"1.8.0\",\n      \"path\": \"/usr/lib/jvm/jre-1.8.0/\"\n    },\n    {\n      \"name\": \"Python\",\n      \"version\": \"any\",\n      \"path\": \"/usr/bin/python\"\n    },\n    {\n      \"name\": \"Spark\",\n      \"version\": \"2.3.0-bin-hadoop2.7\",\n      \"path\": \"${HOME}/spark-${SPARK_VERSION}\"\n    },\n    {\n      \"name\": \"Zeppelin\",\n      \"version\": \"0.8.1\",\n      \"path\": \"${HOME}/zeppelin-${ZEPPELIN_VERSION}-bin-all\"\n    },\n    {\n      \"name\": \"Scala\",\n      \"version\": \"2.10.4\",\n      \"path\": \"${HOME}/scala-2.10.4\"\n    }\n  ],\n  \"resource_requirements\": [\n    {\n      \"name\": \"nodes\",\n      \"description\": \"Number of nodes required for the job, including the master node. This can be configured on the command line.\"\n    },\n    {\n      \"name\": \"walltime\",\n      \"description\": \"Total runtime for the job in seconds or HH:MM:SS format.  Must be larger than the startup and shutdown time combined.\"\n    },\n    {\n      \"name\": \"partition\",\n      \"description\": \"The partition to run the job on.  This can be configured on the command line.\"\n    },\n    {\n      \"name\": \"queue\",\n      \"description\": \"The batch queue to submit the job to. This can be configured on the command line.\"\n    },\n    {\n      \"name\": \"MAGPIE_STARTUP_TIME\",\n      \"description\": \"The amount of time to give startup activities a chance to succeed before Magpie will give up.  Defaults to 30 minutes.  Must be at least 5 minutes.\"\n    },\n    {\n      \"name\": \"MAGPIE_SHUTDOWN_TIME\",\n      \"description\": \"The amount of time to give shutdown activities a chance to succeed before Magpie will give up.  Defaults to 30 minutes.  Must be at least 5 minutes.\"\n    },\n    {\n      \"name\": \"SPARK_WORKER_CORES_PER_NODE\",\n      \"description\": \"The number of cores to use per worker node.  If not specified, a reasonable estimate will be calculated.\"\n    },\n    {\n      \"name\": \"SPARK_WORKER_MEMORY_PER_NODE\",\n      \"description\": \"The amount of memory to allocate per worker node in MB. If not specified, a reasonable estimate will be calculated.\"\n    },\n    {\n      \"name\": \"SPARK_JOB_MEMORY\",\n      \"description\": \"The amount of memory to allocate for Spark jobs, in MB.  Defaults to SPARK_WORKER_MEMORY_PER_NODE.\"\n    },\n    {\n      \"name\": \"SPARK_DAEMON_HEAP_MAX\",\n      \"description\": \"The maximum heap size for Spark daemons, in MB.  Defaults to 1000 MB.\"\n    },\n    {\n      \"name\": \"SPARK_LOCAL_SCRATCH_DIR\",\n      \"description\": \"The directory to use for local scratch data.  This can be set to a local drive for improved performance.  Defaults to /lustre/${USER}/sparkscratch/.\"\n    }\n  ]\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 8095,
        "candidates_token_count": 860,
        "total_token_count": 8955,
        "cached_content_token_count": 0
    }
}