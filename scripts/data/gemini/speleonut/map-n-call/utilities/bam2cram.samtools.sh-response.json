{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n\"application\": \"samtools\",\n\"software\": [\n\"samtools v1.9+\"\n],\n\"resources\": {\n\"nodes\": 1,\n\"cores\": 8,\n\"time\": \"05:30:00\",\n\"memory\": \"36G\"\n},\n\"modules\": [\n\"SAMtools/1.17-GCC-11.2.0\"\n],\n\"dependencies\": [\n\"samtools\"\n],\n\"input\": [\n\"bam file\",\n\"reference genome (optional)\",\n\"input file listing bam files (optional)\"\n],\n\"output\": [\n\"cram file\",\n\"cram index file\"\n],\n\"options\": [\n\"-b <arg>: REQUIRED: Path to your bam file.\",\n\"-g <arg>: OPTIONAL: Path to the original reference that your BAM file was mapped to.\",\n\"-o <arg>: OPTIONAL: Path to the output default is the folder that contains your bam file.\",\n\"--delete: OPTIONAL: Delete the original BAM if the CRAM file has been made successfully.\",\n\"-h | --help: Prints the message you are reading.\",\n\"-i <arg>: REQUIRED: A text file listing the bam files to convert.\",\n\"-g <arg>: OPTIONAL: Path to the original reference that your BAM file was mapped to. The script will try to locate the right genome based on the @SQ lines in the bam header if you don't set this. If you set this on an array job then all BAM files MUST be mapped to the same reference.\",\n\"-o <arg>: OPTIONAL: Path to the output default is the folder that contains your bam file.\",\n\"--delete: OPTIONAL: Delete the original BAM if the CRAM file has been made successfully.\",\n\"-h | --help: Prints the message you are reading.\"\n],\n\"notes\": [\n\"This script converts BAM files to CRAM files using samtools. It allows for both single file and array job conversion.\",\n\"The script automatically detects the genome build based on the @SQ lines in the bam header if the -g option is not specified.\"\n]\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "citation_metadata": {
                "citation_sources": [
                    {
                        "start_index": 824,
                        "end_index": 1015,
                        "uri": "https://github.com/speleonut/longReads",
                        "license_": ""
                    }
                ]
            },
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 2414,
        "candidates_token_count": 464,
        "total_token_count": 2878,
        "cached_content_token_count": 0
    }
}