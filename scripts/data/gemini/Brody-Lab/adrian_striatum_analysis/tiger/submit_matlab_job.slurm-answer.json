{
    "application": "SLURM",
    "details": "This script utilizes SLURM (Simple Linux Utility for Resource Management) to manage the execution of MATLAB scripts on a high-performance computing (HPC) cluster. It sets up a job submission with specific resource requirements, including:\n\n* **Array Job:** The `--array` flag indicates that this is an array job, meaning it can be split into multiple tasks that run independently.\n* **Output/Error Files:**  `-o` and `-e` specify where the standard output and error messages from the script should be directed.\n* **Runtime:**  `-t` sets the maximum runtime for each task to 180 minutes (3 hours).\n* **Nodes:**  `--nodes` requests 1 node for the job.\n* **Tasks per Node:**  `--ntasks-per-node` indicates 1 task should run on each node.\n* **CPU Cores per Task:**  `--cpus-per-task` designates 1 CPU core per task. This can be increased for multi-threaded tasks.\n* **Memory per CPU:**  `--mem-per-cpu` allocates 7 GB of memory per CPU core. This is important for resource-intensive processes or if the script utilizes smaller time bins.\n* **Email Notifications:**  `--mail-type` specifies the type of email notifications to be sent to the user (abondy@princeton.edu) for job failure, timeout, array task completion, and requeue events.\n\nThe script then retrieves the current working directory, hostname, and date. It then sorts and displays the environment variables using `env | sort`. The core functionality involves executing a MATLAB command specified as an argument to the script. It checks if the job is part of an array and dynamically constructs the MATLAB command, passing the array task ID if necessary. The script then runs the MATLAB command using `matlab -nodisplay -nodisplay -nodesktop -nosplash -r \"...\"`, ensuring that the MATLAB execution is non-interactive. The `|| exit 202` clause ensures that the script exits with a non-zero exit code if the MATLAB command fails, indicating an error. Finally, the script prints a confirmation message and displays the current date."
}