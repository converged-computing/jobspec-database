{
    "application": "CCGAN",
    "software_requirements": [
        "cuda/11.1.0-fasrc0",
        "cudnn/8.0.4.30_cuda11.1-fasrc01",
        "python/3.8.5-fasrc01",
        "GCC/8.2.0-2.31.1",
        "Anaconda/5.0.1-fasrc02",
        "pytorch_connectomics",
        "CCGAN"
    ],
    "resource_requirements": {
        "cores": 4,
        "runtime": "14 hours",
        "partition": "cox",
        "gpu": 7,
        "memory": "200000 MB",
        "email": "leander.lauenburg@gmail.com"
    },
    "script_details": {
        "utils_script": "./utils.sh",
        "config_file": "./.default_configs/test_pipline.yaml",
        "experiment_base_dir": "${experiment_base_dir}",
        "experiment_pytc": "${experiment_pytc}",
        "experiment_ccgan": "${experiment_ccgan}",
        "experiment_slurm": "${experiment_slurm}",
        "experiment_name": "${experiment_name}",
        "ccgan_data_root": "${ccgan_data_root}",
        "ccgan_model_name": "${ccgan_model_name}",
        "ccgan_epochs": "${ccgan_epochs}",
        "ccgan_epochs_decay": "${ccgan_epochs_decay}",
        "ccgan_display_server": "${ccgan_display_server}",
        "ccgan_display_port": "${ccgan_display_port}",
        "ccgan_display_columns": "${ccgan_display_columns}",
        "ccgan_model_mode": "${ccgan_model_mode}",
        "ccgan_data_mode": "${ccgan_data_mode}",
        "ccgan_display_train": "${ccgan_display_train}",
        "ccgan_model_mode_train": "${ccgan_model_mode_train}",
        "ccgan_data_mode_train": "${ccgan_data_mode_train}",
        "ccgan_weigths_train": "${ccgan_weigths_train}",
        "ccgan_data_files_train": "${ccgan_data_files_train}",
        "ccgan_num_test": "${ccgan_num_test}",
        "ccgan_data_stride_infer": "${ccgan_data_stride_infer}",
        "ccgan_data_files_infer": "${ccgan_data_files_infer}",
        "ccgan_data_vol_save": "${ccgan_data_vol_save}",
        "blending_data_vol_save": "${blending_data_vol_save}",
        "blending_merged_vol_A_shape": "${blending_merged_vol_A_shape}",
        "blending_merged_vol_B_shape": "${blending_merged_vol_B_shape}",
        "blending_sub_vol_shape": "${blending_sub_vol_shape}",
        "blending_stride": "${blending_stride}"
    }
}