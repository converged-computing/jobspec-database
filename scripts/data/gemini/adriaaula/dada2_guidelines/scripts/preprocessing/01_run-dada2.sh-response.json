{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n\"application\": \"DADA2\",\n\"software\": [\n\"R\",\n\"DADA2\"\n],\n\"resource_requirements\": {\n\"account\": \"<your-account>\",\n\"job_name\": \"dada2\",\n\"tasks\": 1,\n\"cpus_per_task\": 48,\n\"output_file\": \"data/logs/1_dada2_%J.out\",\n\"error_file\": \"data/logs/1_dada2_%J.err\",\n\"modules\": [\n\"gcc\",\n\"R\"\n]\n},\n\"script_arguments\": [\n\"input dataset path\",\n\"output directory path\",\n\"name identifier\",\n\"trim position (forward, reverse)\",\n\"max expected error (forward, reverse)\",\n\"minimum overlap reads\",\n\"pooling method (optional: pool, pseudo)\"\n],\n\"script_usage\": \"The script processes raw sequencing reads using DADA2 for denoising, error correction and amplicon sequence variant (ASV) inference. It takes the input data, output directory, project name, trim positions, maximum expected error, minimum overlap reads, and optional pooling method as arguments. The script also provides examples for running multiple runs and merging the results.\",\n\"script_output\": \"The script generates a .pdf file in the output directory depicting the error model and produces ASV tables for each sample.\"\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 894,
        "candidates_token_count": 308,
        "total_token_count": 1202,
        "cached_content_token_count": 0
    }
}