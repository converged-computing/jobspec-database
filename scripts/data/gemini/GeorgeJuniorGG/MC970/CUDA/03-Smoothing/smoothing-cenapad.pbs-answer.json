{
    "application": "PBS",
    "details": {
        "job_name": "smoothing",
        "queue": "testegpu",
        "error_output": "job_output.err",
        "standard_output": "job_output.out",
        "walltime": "00:25:00",
        "modules": [
            "gcc/9.4.0",
            "cmake/3.21.3-gcc-9.4.0",
            "cuda/11.5.0-gcc-9.4.0"
        ],
        "cmake_options": [
            "CMAKE_BUILD_TYPE=Release",
            "CMAKE_CUDA_COMPILER=/opt/pub/spack/cuda/11.5.0/gcc/9.4.0/bin/nvcc"
        ],
        "build_commands": [
            "make"
        ],
        "test_inputs": [
            "tests/1.in",
            "tests/2.in",
            "tests/3.in",
            "tests/4.in",
            "tests/5.in"
        ],
        "output_files": [
            "build/parallel.1.out",
            "build/parallel.2.out",
            "build/parallel.3.out",
            "build/parallel.4.out",
            "build/parallel.5.out",
            "build/serial.1.out",
            "build/serial.2.out",
            "build/serial.3.out",
            "build/serial.4.out",
            "build/serial.5.out",
            "build/parallel.1.time",
            "build/parallel.2.time",
            "build/parallel.3.time",
            "build/parallel.4.time",
            "build/parallel.5.time",
            "build/serial.1.time",
            "build/serial.2.time",
            "build/serial.3.time",
            "build/serial.4.time",
            "build/serial.5.time",
            "runtime.csv"
        ],
        "commands": [
            "cmake -E remove -f build",
            "cmake -E make_directory build",
            "cd build",
            "cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_COMPILER=/opt/pub/spack/cuda/11.5.0/gcc/9.4.0/bin/nvcc",
            "cd ..",
            "cd build",
            "make",
            "cd ..",
            "build/parallel tests/1.in 1>build/parallel.1.out 2>build/parallel.1.time",
            "build/serial tests/1.in 1>build/serial.1.out 2>build/serial.1.time",
            "cmp tests/1.out.ppm build/parallel.1.out >&2",
            "ser=$(<build/serial.1.time)",
            "par=$(<build/parallel.1.time)",
            "speedup=$(bc -l <<< \"scale=4; $ser/$par\")",
            "echo \"  Serial runtime: ${ser}s\"",
            "echo \"Parallel runtime: ${par}s\"",
            "echo \"         Speedup: ${speedup}x\"",
            "if [[ ! -f runtime.csv ]]; then echo \"# Input,Serial time,Parallel time,Speedup\" > runtime.csv; fi",
            "if [ $diff_status -eq 0 ]; then echo \"$a,$ser,$par,$speedup\" >> runtime.csv; fi",
            "build/parallel tests/2.in 1>build/parallel.2.out 2>build/parallel.2.time",
            "build/serial tests/2.in 1>build/serial.2.out 2>build/serial.2.time",
            "cmp tests/2.out.ppm build/parallel.2.out >&2",
            "ser=$(<build/serial.2.time)",
            "par=$(<build/parallel.2.time)",
            "speedup=$(bc -l <<< \"scale=4; $ser/$par\")",
            "echo \"  Serial runtime: ${ser}s\"",
            "echo \"Parallel runtime: ${par}s\"",
            "echo \"         Speedup: ${speedup}x\"",
            "if [[ ! -f runtime.csv ]]; then echo \"# Input,Serial time,Parallel time,Speedup\" > runtime.csv; fi",
            "if [ $diff_status -eq 0 ]; then echo \"$a,$ser,$par,$speedup\" >> runtime.csv; fi",
            "build/parallel tests/3.in 1>build/parallel.3.out 2>build/parallel.3.time",
            "build/serial tests/3.in 1>build/serial.3.out 2>build/serial.3.time",
            "cmp tests/3.out.ppm build/parallel.3.out >&2",
            "ser=$(<build/serial.3.time)",
            "par=$(<build/parallel.3.time)",
            "speedup=$(bc -l <<< \"scale=4; $ser/$par\")",
            "echo \"  Serial runtime: ${ser}s\"",
            "echo \"Parallel runtime: ${par}s\"",
            "echo \"         Speedup: ${speedup}x\"",
            "if [[ ! -f runtime.csv ]]; then echo \"# Input,Serial time,Parallel time,Speedup\" > runtime.csv; fi",
            "if [ $diff_status -eq 0 ]; then echo \"$a,$ser,$par,$speedup\" >> runtime.csv; fi",
            "build/parallel tests/4.in 1>build/parallel.4.out 2>build/parallel.4.time",
            "build/serial tests/4.in 1>build/serial.4.out 2>build/serial.4.time",
            "cmp tests/4.out.ppm build/parallel.4.out >&2",
            "ser=$(<build/serial.4.time)",
            "par=$(<build/parallel.4.time)",
            "speedup=$(bc -l <<< \"scale=4; $ser/$par\")",
            "echo \"  Serial runtime: ${ser}s\"",
            "echo \"Parallel runtime: ${par}s\"",
            "echo \"         Speedup: ${speedup}x\"",
            "if [[ ! -f runtime.csv ]]; then echo \"# Input,Serial time,Parallel time,Speedup\" > runtime.csv; fi",
            "if [ $diff_status -eq 0 ]; then echo \"$a,$ser,$par,$speedup\" >> runtime.csv; fi",
            "build/parallel tests/5.in 1>build/parallel.5.out 2>build/parallel.5.time",
            "build/serial tests/5.in 1>build/serial.5.out 2>build/serial.5.time",
            "cmp tests/5.out.ppm build/parallel.5.out >&2",
            "ser=$(<build/serial.5.time)",
            "par=$(<build/parallel.5.time)",
            "speedup=$(bc -l <<< \"scale=4; $ser/$par\")",
            "echo \"  Serial runtime: ${ser}s\"",
            "echo \"Parallel runtime: ${par}s\"",
            "echo \"         Speedup: ${speedup}x\"",
            "if [[ ! -f runtime.csv ]]; then echo \"# Input,Serial time,Parallel time,Speedup\" > runtime.csv; fi",
            "if [ $diff_status -eq 0 ]; then echo \"$a,$ser,$par,$speedup\" >> runtime.csv; fi"
        ]
    }
}