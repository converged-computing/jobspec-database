{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"JupyterLab\",\n  \"software\": [\n    \"Singularity\",\n    \"JupyterLab\",\n    \"PyTorch\",\n    \"Python 3.6\"\n  ],\n  \"resource_requirements\": {\n    \"cpu\": 8,\n    \"gpu\": 1,\n    \"memory\": \"48GB\",\n    \"scratch_local\": \"100GB\",\n    \"gpu_cap\": \"cuda80\",\n    \"cluster\": \"glados\",\n    \"cl_zubat\": false,\n    \"walltime\": \"9:00:00\"\n  }\n}\n```\n\nThe script is designed to run a JupyterLab server with PyTorch inside a Singularity container. It utilizes the PBS (Portable Batch System) for scheduling and resource allocation. The script defines a Singularity image, sets up environment variables, and prepares a Jupyter configuration file. It also dynamically finds a free port for the Jupyter server, handles user authentication, and sends an email notification with the access URL. Finally, it runs the JupyterLab server within the Singularity container with specified bind mounts for home directory, shared storage, and scratch directory.\n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 1186,
        "candidates_token_count": 260,
        "total_token_count": 1446,
        "cached_content_token_count": 0
    }
}