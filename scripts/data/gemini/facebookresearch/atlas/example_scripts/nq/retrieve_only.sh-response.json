{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"SLURM\",\n  \"details\": {\n    \"resources\": {\n      \"cpus\": 40,\n      \"nodes\": 4,\n      \"tasks_per_node\": 8,\n      \"gpus\": 8,\n      \"memory\": \"470GB\",\n      \"time\": \"4:00:00\",\n      \"partition\": \"devlab\",\n      \"constraint\": \"volta32gb\"\n    },\n    \"software\": {\n      \"python\": \"evaluate.py\",\n      \"model\": \"google/t5-${size}-lm-adapt\",\n      \"pretrained_model\": [\n        \"ATLAS-large (pretrained on NQ)\",\n        \"CONTriever (standard weights)\"\n      ],\n      \"corpus\": \"Wikipedia 2018 (30M passages)\",\n      \"data\": \"Natural Questions (dev and test sets)\"\n    }\n  }\n}\n```\n\n**Explanation:**\n\n* **SLURM:** The script utilizes the SLURM workload manager to allocate resources (CPU, memory, GPU, etc.) on a high-performance computing cluster.\n* **Resources:** The script requests a specific number of CPUs, nodes, tasks per node, GPUs, memory, time, partition, and constraint for its execution. \n* **Software:** \n    * The core functionality is implemented in Python using the `evaluate.py` script. \n    * It leverages the `google/t5-${size}-lm-adapt` model for retrieval tasks.\n    * The script can use either an ATLAS-large model pretrained on Natural Questions or standard CONTriever weights for retrieval. \n    * The script works with the Wikipedia 2018 corpus and Natural Questions (dev and test sets) datasets.\n* **Workflow:** The script downloads resources, embeds the corpus, saves the index, retrieves answers to QA pairs from the corpus using the specified model, and saves the retrieval results. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 895,
        "candidates_token_count": 436,
        "total_token_count": 1331,
        "cached_content_token_count": 0
    }
}