{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"MATLAB\",\n  \"details\": {\n    \"resource_requirements\": {\n      \"nodes\": \"1\",\n      \"processors_per_node\": \"1\",\n      \"virtual_memory\": \"10G\",\n      \"walltime\": \"30:00:00\"\n    },\n    \"software\": {\n      \"matlab\": {\n        \"options\": \"-singleCompThread -nojvm -nosplash -nodesktop -r\"\n      }\n    }\n  }\n}\n```\n\n**Explanation:**\n\n* **application:** The script uses the `matlab` command, indicating that it's running a MATLAB script.\n* **details:**\n    * **resource_requirements:** \n        * **nodes:** Specifies the number of nodes required for the job (1 in this case).\n        * **processors_per_node:**  Indicates the number of processors per node (1 in this case).\n        * **virtual_memory:**  Defines the amount of virtual memory required for the job (10GB).\n        * **walltime:** Sets the maximum runtime for the job (30 hours).\n    * **software:**\n        * **matlab:** \n            * **options:** Lists the options passed to MATLAB:\n                * `-singleCompThread`:  Uses a single computation thread for MATLAB.\n                * `-nojvm`: Disables the Java Virtual Machine.\n                * `-nosplash`: Prevents the MATLAB splash screen from appearing.\n                * `-nodesktop`:  Prevents the MATLAB desktop environment from launching.\n                * `-r`: Executes a specific command in MATLAB.\n                * `\"getInvertFileCls(${PBS_ARRAYID}); quit;\"`:  This command runs the `getInvertFileCls` function in MATLAB, passing the `PBS_ARRAYID` as an argument, then exits MATLAB. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 169,
        "candidates_token_count": 411,
        "total_token_count": 580,
        "cached_content_token_count": 0
    }
}