{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "NeuroMiner\n```json\n{\n  \"application\": \"NeuroMiner\",\n  \"version\": \"1.1\",\n  \"matlab_version\": \"R2022b\",\n  \"mcr_version\": \"v913\",\n  \"libraries\": [\n    \"LD_LIBRARY_PATH=/share/cluster/apps/MATLAB/R2022b/runtime/glnxa64:/share/cluster/apps/MATLAB/R2022b/bin/glnxa64:/share/cluster/apps/MATLAB/R2022b/sys/os/glnxa64:/share/cluster/apps/MATLAB/R2022b/sys/opengl/lib/glnxa64\"\n  ],\n  \"dependencies\": [\n    \"MATLAB\",\n    \"SLURM\"\n  ],\n  \"resources\": {\n    \"memory\": \"xxxx GB RAM / SLURM job\",\n    \"cores\": \"Specify number of CPUs assigned to MATLAB job [4, 8, 16, 32]\",\n    \"openmp\": \"Use OpenMP [yes = 1 | no = 0]\"\n  },\n  \"features\": {\n    \"preproc\": \"preprocess features\"\n  },\n  \"usage\": \"NeuroMiner 1.1 is a joblist manager that preprocesses features for analysis. It uses MATLAB and SLURM to manage jobs.  The script defines a set of parameters for the analysis, including the path to the data, the analysis index, the number of jobs, and the memory and cores required for each job. It then uses these parameters to generate a parameter file and a SLURM script for each job. The script can be used to submit the jobs to SLURM and run the preprocessing tasks in parallel.\"\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 1212,
        "candidates_token_count": 402,
        "total_token_count": 1614,
        "cached_content_token_count": 0
    }
}