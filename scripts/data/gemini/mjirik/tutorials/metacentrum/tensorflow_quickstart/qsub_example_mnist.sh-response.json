{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"PBS\",\n  \"details\": {\n    \"resource_requirements\": {\n      \"nodes\": 1,\n      \"cpus\": 1,\n      \"gpus\": 1,\n      \"memory\": \"10gb\",\n      \"scratch_local\": \"10gb\",\n      \"walltime\": \"01:00:00\",\n      \"queue\": \"gpu\"\n    },\n    \"environment\": {\n      \"miniconda_path\": \"/storage/plzen1/home/$LOGNAME/miniconda3/bin\",\n      \"environment_name\": \"mytf\"\n    },\n    \"script_language\": \"bash\",\n    \"python_script\": \"example_mnist.py\"\n  }\n}\n```\n\nThis script runs under the PBS (Portable Batch System) workload manager, utilizing its resource allocation and job management features. It requests a single node with one CPU and one GPU, allocating 10GB of memory and 10GB of local scratch space. The script runs for a maximum of one hour in the \"gpu\" queue. \n\nThe script also leverages a Miniconda environment named \"mytf,\" likely containing the necessary Python packages for running the TensorFlow-based \"example_mnist.py\" script. The script outputs results to a file named \"results.txt\" and then copies this file to the user's home directory. \n"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 624,
        "candidates_token_count": 312,
        "total_token_count": 936,
        "cached_content_token_count": 0
    }
}