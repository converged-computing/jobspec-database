{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "SLURM\n\n```json\n{\n  \"application\": \"SLURM\",\n  \"details\": {\n    \"job_name\": \"R2D2\",\n    \"output\": \"%x-%j.out\",\n    \"partition\": \"gpu_partition\",\n    \"nodes\": 2,\n    \"gres\": \"gpu:4\",\n    \"exclusive\": true,\n    \"time\": \"1-00:00:00\",\n    \"environment\": {\n      \"python\": \"module load python\",\n      \"anaconda\": \"source $HOME/anaconda3/bin/activate pytorch_env\"\n    },\n    \"command\": \"m2m.py train --train-in-patterns \\\"train/R0-*.npy,train/R1-*.npy\\\" --train-tgt-patterns \\\"train/D0-*.npy,train/D1-*.npy\\\" --val-in-patterns \\\"val/R0-*.npy,val/R1-*.npy\\\" --val-tgt-patterns \\\"val/D0-*.npy,val/D1-*.npy\\\" --in-norms RnD.R0,RnD.R1 --tgt-norms RnD.D0,RnD.D1 --model model.Net --callback-at . --lr 1e-4 --batch-size 1 --epochs 1024 --seed $RANDOM\",\n    \"data\": {\n      \"input\": \"{train,val,test}/R{0,1}-*.npy\",\n      \"target\": \"{train,val,test}/D{0,1}-*.npy\",\n      \"normalization\": \"RnD.py\",\n      \"examples\": \"map2map/data/norms/*.py\"\n    },\n    \"model\": {\n      \"name\": \"Net\",\n      \"path\": \"./model.py\",\n      \"examples\": \"map2map/models/*.py\"\n    },\n    \"training\": {\n      \"learning_rate\": \"1e-4\",\n      \"batch_size\": 1,\n      \"epochs\": 1024\n    }\n  }\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 543,
        "candidates_token_count": 480,
        "total_token_count": 1023,
        "cached_content_token_count": 0
    }
}