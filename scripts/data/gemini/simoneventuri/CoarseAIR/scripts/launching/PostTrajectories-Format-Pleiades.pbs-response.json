{
    "candidates": [
        {
            "content": {
                "parts": [
                    {
                        "text": "```json\n{\n  \"application\": \"CoarseAIR\",\n  \"details\": {\n    \"software\": \"CoarseAIR\",\n    \"resource_requirements\": {\n      \"nodes\": \"NNode\",\n      \"processors\": \"NProc\",\n      \"walltime\": \"walltime\",\n      \"queue\": \"q\"\n    },\n    \"script_parameters\": {\n      \"NNode\": \"Number of nodes\",\n      \"ParNodes\": \"Number of parallel nodes\",\n      \"NProc\": \"Number of processors\",\n      \"SlncFlg\": \"Silence flag\",\n      \"MergeAllFlg\": \"Merge all flag\",\n      \"RmTrajFlg\": \"Remove trajectory flag\",\n      \"BinaryTrajFlg\": \"Binary trajectory flag\",\n      \"MinProcessInNode\": \"Minimum number of processes in a node\",\n      \"MaxProcessInNode\": \"Maximum number of processes in a node\",\n      \"Tran\": \"Transition time\",\n      \"Tint\": \"Integration time\",\n      \"iNode\": \"Node index\"\n    },\n    \"script_functions\": {\n      \"SetData\": \"Sets up directories and variables for CoarseAIR\",\n      \"PrintParameters\": \"Prints the parameters used in the script\",\n      \"LoadReadBashInput\": \"Reads input parameters from a Bash script\",\n      \"LoadComputeRates\": \"Computes rates using CoarseAIR\"\n    },\n    \"input_file\": \"CoarseAIR.inp\",\n    \"output_dir\": \"Test\",\n    \"input_dir\": \"input\"\n  }\n}\n```"
                    }
                ],
                "role": "model"
            },
            "finish_reason": 1,
            "index": 0,
            "safety_ratings": [
                {
                    "category": 9,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 8,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 7,
                    "probability": 1,
                    "blocked": false
                },
                {
                    "category": 10,
                    "probability": 1,
                    "blocked": false
                }
            ],
            "token_count": 0,
            "grounding_attributions": []
        }
    ],
    "usage_metadata": {
        "prompt_token_count": 1834,
        "candidates_token_count": 345,
        "total_token_count": 2179,
        "cached_content_token_count": 0
    }
}