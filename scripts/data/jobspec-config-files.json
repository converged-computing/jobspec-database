{
    "ZIYU-DEEP/reprover-test": {
        "reprover-test/2gpu.sh": [
            "generator/main.py",
            "generator/confs/cli_lean4_random_goal_driven_tactic_ckpt_resume_2gpu.yaml"
        ]
    },
    "jsbaan/DPAC-DialogueGAN": {
        "DPAC-DialogueGAN/myscript.sh": [
            "main.py"
        ],
        "DPAC-DialogueGAN/runscripts/job.sh": [
            "main.py"
        ]
    },
    "lubiluk/cembra5": {
        "cembra5/evolve_neat.sh": [
            "evolve_neat.py"
        ],
        "cembra5/evolve_cma.sh": [
            "evolve_cma.py"
        ],
        "cembra5/custom.sh": [
            "custom.py"
        ]
    },
    "Lingy12/my_seaeval": {
        "my_seaeval/convert_lora_and_evaluate.sh": [
            "convert_lora.py",
            "zero_to_fp32.py",
            "scripts/eval.sh"
        ],
        "my_seaeval/jobspec-cfg/zero_to_fp32.py": [
            "zero_to_fp32.py"
        ],
        "my_seaeval/jobspec-cfg/scripts/eval.sh": [
            "src/evaluate.py"
        ],
        "my_seaeval/scripts/convert_and_evaluate.sh": [
            "zero_to_fp32.py",
            "scripts/eval.sh"
        ]
    },
    "ifnspaml/revt-domain-generalization": {
        "revt-domain-generalization/slurm_script_runs/benchmark/SAMSAW%2Br50.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/50/SAMSAWR50.b5.512x512.gta2cs.40k.batch2.py"
        ],
        "revt-domain-generalization/slurm_script_runs/benchmark/WildNet%2Br101.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/101/WildNetR101.b5.512x512.gta2cs.40k.batch2.py"
        ],
        "revt-domain-generalization/slurm_script_runs/benchmark/dlv3%2Br101.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/101/deeplabv3plus_r101.b5.512x512.gta2cs.40k.batch2.py"
        ],
        "revt-domain-generalization/slurm_script_runs/benchmark/Robustnet%2Br101.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/101/RobustNetR101.b5.512x512.gta2cs.40k.batch2.py"
        ],
        "revt-domain-generalization/slurm_script_runs/benchmark/fcn_r50_d8.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/50/fcn_r50-d8_512x1024_40k_cityscapes.py"
        ],
        "revt-domain-generalization/slurm_script_runs/benchmark/dlv3%2Br50.sh": [
            "./tools/benchmark.py",
            "local_configs/ResNet/50/deeplabv3plus_r50.b5.512x512.gta2cs.40k.batch2.py"
        ]
    },
    "IntelCompH2020/sciroshot": {
        "sciroshot/run_mag_wiki.sh": [
            "./run_glue.py"
        ]
    },
    "jbisits/CabbelingExperiments": {
        "CabbelingExperiments/stable.sh": [
            "stable_gpu_salinitynoise.jl"
        ],
        "CabbelingExperiments/isothermal.sh": [
            "isothermal_gpu_salinitynoise.jl"
        ],
        "CabbelingExperiments/animation.sh": [
            "animate_density.jl"
        ],
        "CabbelingExperiments/cabbeling.sh": [
            "cabbeling_gpu_salinitynoise.jl"
        ]
    },
    "zygolife/Entomophthorales_Kasson": {
        "Entomophthorales_Kasson/pipeline/metashot-MAG.sh": [
            "./nextflow",
            "metashot-MAG.cfg"
        ]
    },
    "zygolife/DDD": {
        "DDD/pipeline/autometa/02_make_taxonomy_table.sh": [
            "pipeline/autometa/01_make_cov.sh"
        ]
    },
    "002311-A/csci-467-project": {
        "csci-467-project/bert_baseline.job": [
            "bert_baseline_lime_args.py"
        ]
    },
    "ayushsaklani/llm-recipes": {
        "llm-recipes/train_job.sh": [
            "scripts/train.py",
            "models/mistral-7b-dolly-5k-rag-split/mistral-7b-dolly-rag.yml"
        ]
    },
    "laurenflynn/thesis-work": {
        "thesis-work/jobarray400.sbatch": [
            "src/2_slurm_with_loops.R"
        ],
        "thesis-work/jobFamGeneration.sbatch": [
            "src/1_generate_families_separate_dfs.R"
        ]
    },
    "wcukier/Phaethon_Meteoroids": {
        "Phaethon_Meteoroids/novel.slurm": [
            "main.py"
        ],
        "Phaethon_Meteoroids/distr.slurm": [
            "main.py"
        ],
        "Phaethon_Meteoroids/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "GregorySchwing/WolfWater": {
        "WolfWater/headless.sh": [
            "nextflow.config"
        ]
    },
    "ddrous/ncflow": {
        "ncflow/jobspec-cfg/scripts/jade.sh": [
            "scripts/jade.sh"
        ],
        "ncflow/scripts/jade.sh": [
            "scripts/jade.sh"
        ],
        "nodepint/jobspec-cfg/scripts/jade.sh": [
            "scripts/jade.sh"
        ],
        "nodepint/scripts/jade.sh": [
            "scripts/jade.sh"
        ]
    },
    "ddrous/nodepint": {
        "ncflow/jobspec-cfg/scripts/jade.sh": [
            "scripts/jade.sh",
            "./scripts/jax_test.py"
        ],
        "ncflow/scripts/jade.sh": [
            "scripts/jade.sh",
            "./scripts/jax_test.py"
        ],
        "nodepint/jobspec-cfg/scripts/jade.sh": [
            "scripts/jade.sh",
            "./scripts/jax_test.py"
        ],
        "nodepint/scripts/jade.sh": [
            "scripts/jade.sh",
            "./scripts/jax_test.py"
        ]
    },
    "ygrepo/learned-inverted-indexes": {
        "learned-inverted-indexes/scripts/run_shallow_network.s": [
            "src/shallow_network_train.py"
        ]
    },
    "vborjesson/SVGenT": {
        "SVGenT/GlenX.sh": [
            "SVGenT.py"
        ]
    },
    "vborjesson/GlenX": {
        "GlenX/GlenX.sh": [
            "GlenX.py"
        ]
    },
    "zzhang87/ChestXray": {
        "ChestXray/evaluate_teachers.sh": [
            "evaluate_model.py"
        ],
        "ChestXray/train_teachers.sh": [
            "train_one_teacher.py"
        ]
    },
    "dennismyself/Visual-Question-Answering-VQA-with-few-shot-in-context-learning-": {
        "Visual-Question-Answering-VQA-with-few-shot-in-context-learning-/scripts%20copy/run_ex4.sh": [
            "scripts/activate_shared_env.sh",
            "src/main.py",
            "configs/vqa2/few_shot_vqa_hotpotqa.jsonnet"
        ],
        "Visual-Question-Answering-VQA-with-few-shot-in-context-learning-/scripts/run_ex4.sh": [
            "scripts/activate_shared_env.sh",
            "src/main.py",
            "configs/vqa2/few_shot_vqa_hotpotqa.jsonnet"
        ],
        "Visual-Question-Answering-VQA-with-few-shot-in-context-learning-/scripts/run_ex3.sh": [
            "scripts/activate_shared_env.sh",
            "src/main.py",
            "configs/vqa2/few_shot_vqa_hotpotqa.jsonnet"
        ]
    },
    "Shreyder93/openneuro_preproc": {
        "openneuro_preproc/code/01_fmriprep_func_scc.sh": [
            "notebooks/00_setting_up_envs.md"
        ]
    },
    "NorwegianSeismicArray/ML-for-building-typologies": {
        "ML-for-building-typologies/runscript.sh": [
            "cv_model_selection.py"
        ]
    },
    "CyclopsRay/PlanB": {
        "PlanB/run_main.sh": [
            "./main.py"
        ]
    },
    "CyclopsRay/Traffree": {
        "Traffree/submit.sh": [
            "preprocess.py",
            "create_task.py"
        ]
    },
    "rhoposit/multilingual_VQVAE": {
        "multilingual_VQVAE/run_slurm.sh": [
            "train.py"
        ],
        "icassp2021/run_slurm.sh": [
            "train.py"
        ]
    },
    "rhoposit/icassp2021": {
        "multilingual_VQVAE/run_slurm.sh": [
            "train.py"
        ],
        "icassp2021/run_slurm.sh": [
            "train.py"
        ]
    },
    "thad75/Template-Transformer-HYDRA-Lightning": {
        "Template-Transformer-HYDRA-Lightning/train.slurm": [
            "my_app.py"
        ]
    },
    "benjamin3344/DGP-SPR": {
        "DGP-SPR/example_scripts/lsgm_spr_10076_continue_beta1.sh": [
            "train_lsgm.py"
        ],
        "DGP-SPR/example_scripts/lsgm_spr_three_oval_beta0.1.sh": [
            "train_lsgm.py"
        ],
        "DGP-SPR/example_scripts/vamp_spr_10180_beta0.1.sh": [
            "train_vampprior.py"
        ],
        "DGP-SPR/example_scripts/exem_spr_CCMV_beta0.1.sh": [
            "train_exemplar.py"
        ]
    },
    "craiglagegit/Poisson_CCD22": {
        "Poisson_CCD22/pythonmpi.sl": [
            "Run_BF_Multi.py"
        ],
        "Poisson_CCD22/jobspec-cfg/Run_BF_Multi.py": [
            "data/bfrun1/bf0.cfg",
            "AreaPlot_Corr.py",
            "ChargeDistribution_XYZDist_N.py"
        ]
    },
    "xzackli/gp_lens": {
        "gp_lens/scripts/Peaks_8.sh": [
            "run_gp.py"
        ],
        "gp_lens/scripts/Peaks_9.sh": [
            "run_gp.py"
        ]
    },
    "mahayat/ssl-sky-surveys": {
        "ssl-sky-surveys/slurm_scripts/submit_multinode.slr": [
            "train.py"
        ]
    },
    "animesh/spritz_nf": {
        "spritz_nf/scratch.slurm": [
            "samples.csv",
            "main.nf",
            "scratch.slurm",
            "nfSLURMLOG"
        ],
        "spritz_nf/jobspec-cfg/scratch.slurm": [
            "samples.csv",
            "main.nf",
            "scratch.slurm",
            "nfSLURMLOG"
        ]
    },
    "averyma/adversarial-spheres": {
        "adversarial-spheres/start.sh": [
            "main.py"
        ]
    },
    "epfl-radio-astro/LiSA": {
        "LiSA/pipelines/run_SDC2_full_pipeline.sbatch": [
            "pipelines/pipeline.py",
            "pipelines/SDC2_full.config"
        ]
    },
    "epfl-radio-astro/pypeline": {
        "pypeline/jobspec-cfg/jenkins/slurm_lofar_bootes_nufft3.sh": [
            "./jenkins/slurm_lofar_bootes_nufft3.sh",
            "./examples/simulation/lofar_bootes_nufft3.py"
        ],
        "pypeline/jobspec-cfg/jenkins/slurm_lofar_bootes_ss.sh": [
            "./jenkins/slurm_lofar_bootes_ss.sh"
        ],
        "pypeline/jenkins/slurm_lofar_bootes_nufft3.sh": [
            "./jenkins/slurm_lofar_bootes_nufft3.sh",
            "./examples/simulation/lofar_bootes_nufft3.py"
        ],
        "pypeline/jenkins/slurm_lofar_bootes_ss.sh": [
            "./jenkins/slurm_lofar_bootes_ss.sh"
        ]
    },
    "sufyazi/tfbs-variant-calling-nf": {
        "tfbs-variant-calling-nf/run-cluster-submit-remaind-rerun-trunc.pbs": [
            "main.nf",
            "nextflow_cluster.config"
        ],
        "tfbs-variant-calling-nf/run-cluster-submit-remaind-rerun-longjob.pbs": [
            "main.nf",
            "nextflow_cluster.config"
        ],
        "tfbs-variant-calling-nf/run-cluster-submit-heme.pbs": [
            "main.nf",
            "nextflow_cluster.config"
        ],
        "tfbs-variant-calling-nf/run-cluster-submit-remaind.pbs": [
            "main.nf",
            "nextflow_cluster.config"
        ],
        "tfbs-variant-calling-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "casarotti/GEOCUBIT--experimental": {
        "GEOCUBIT--experimental/jobspec-cfg/GEOCUBIT.py": [
            "GEOCUBIT.py"
        ],
        "GEOCUBIT--experimental/utility/jq_single.sh": [
            "GEOCUBIT.py"
        ]
    },
    "VibhuJawa/vqa-2018": {
        "vqa-2018/marcc_custom_file.sh": [
            "extract_image_features.py"
        ],
        "vqa-2018/interim.sh": [
            "extract_annotations_interim.py",
            "extract_annotations_processed.py"
        ]
    },
    "brmprnk/jointomicscomp": {
        "jointomicscomp/mi.sh": [
            "src/CGAE/kldivergence.py",
            "src/CVAE/kldivergence.py",
            "src/PoE/kldivergence_parallel.py",
            "src/MoE/kldivergence.py"
        ],
        "jointomicscomp/jobspec-cfg/src/MOFA2/downstream.sh": [
            "src/MOFA2/downstream.py"
        ],
        "jointomicscomp/src/MOFA2/mofa_tcga.sh": [
            "./src/MOFA2/downstream.sh"
        ],
        "jointomicscomp/src/MOFA2/downstream.sh": [
            "src/MOFA2/downstream.py"
        ]
    },
    "romxero/spack_cz_tester": {
        "spack_cz_tester/install.sh": [
            "defaults/modules.yaml",
            "defaults/packages.yaml"
        ],
        "submission_scripts/spack_build_slurm.sh": [
            "./cz_spack.yml"
        ]
    },
    "romxero/submission_scripts": {
        "submission_scripts/relion_build.sh": [
            "relion_build.sh"
        ],
        "submission_scripts/jobspec-cfg/relion_build.sh": [
            "relion_build.sh"
        ]
    },
    "kodmas/APE_CoT_Llama": {
        "APE_CoT_Llama/slurm/slurm.sh": [
            "experiments/run_instruction_induction.py"
        ]
    },
    "BraSDon/shuffle-variations": {
        "shuffle-variations/slurm/run-all.sh": [
            "src/main.py"
        ]
    },
    "rainavyas/attack-comparative-assessment": {
        "attack-comparative-assessment/submit_init.sh": [
            "./submit_init.sh"
        ],
        "attack-comparative-assessment/submit_init_array.sh": [
            "./submit_init_array.sh"
        ],
        "attack-comparative-assessment/jobspec-cfg/submit_init.sh": [
            "./submit_init.sh"
        ],
        "attack-comparative-assessment/jobspec-cfg/submit_init_array.sh": [
            "./submit_init_array.sh"
        ]
    },
    "Lzy17/quantum-poset": {
        "quantum-poset/gpu.sh": [
            "spectrum.py"
        ],
        "quantum-poset/jobspec-cfg/spectrum.py": [
            "out"
        ]
    },
    "Lzy17/ganimorph": {
        "ganimorph/start_single.sh": [
            "main.py"
        ],
        "ganimorph/begin.sh": [
            "main.py"
        ]
    },
    "parisveltsos/shorts": {
        "shorts/kmc.sh": [
            "kmc.sh"
        ],
        "shorts/jobspec-cfg/kmc.sh": [
            "kmc.sh"
        ]
    },
    "YangZhou08/Deep_Quantized_Recommendation_Model_DQRM": {
        "Deep_Quantized_Recommendation_Model_DQRM/bash_scripts/Terabytes/2022_7_7_running_script_one.sh": [
            "dlrm_s_pytorch.py"
        ]
    },
    "maoth/revisit_adv_rec": {
        "revisit_adv_rec/dl.sh": [
            "generate_attack.py"
        ]
    },
    "JayRGopal/ViewFool_": {
        "ViewFool_/testing_scripts/viewfool-attack-co3d-hotdog.sh": [
            "NeRF/ViewFool.py"
        ],
        "ViewFool_/testing_scripts/viewfool-attack-hotdog.sh": [
            "NeRF/ViewFool.py"
        ],
        "ViewFool_/testing_scripts/viewfool-attack.sh": [
            "NeRF/ViewFool.py"
        ]
    },
    "mchozhang/TwitterDataProcessing": {
        "TwitterDataProcessing/node_1_core_8.slurm": [
            "main.py"
        ]
    },
    "PubFork/TensorComprehensions": {
        "TensorComprehensions/jobspec-cfg/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ],
        "TensorComprehensions/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ]
    },
    "jestes15/cpe613_reduction": {
        "cpe613_reduction/submission.slurm": [
            "main"
        ]
    },
    "WardTec/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "marcodeltutto/VertexID": {
        "VertexID/run-vertexID.qsub": [
            "bin/exec.py"
        ]
    },
    "DavidHuji/clouds_segmentation": {
        "clouds_segmentation/power_runner.sh": [
            "main.py"
        ]
    },
    "NeuroanatomyAndConnectivity/PkReliability": {
        "PkReliability/sendPk2cort.sh": [
            "peaks2cortex.py"
        ],
        "PkReliability/CalcDistsSlurm.sh": [
            "CalcGrad2CortDist.py"
        ],
        "PkReliability/send_jobCorrSLURM.sh": [
            "GradDistCorrFullHCP.py"
        ],
        "PkReliability/send_Ablation.sh": [
            "lin_regAblation.py"
        ],
        "PkReliability/sendWSInd.sh": [
            "IndividualWatershed.py"
        ]
    },
    "nleroux3/MuSA": {
        "MuSA/run_slurm.sh": [
            "clean.py",
            "main.py"
        ]
    },
    "guillefix/nn-pacbayes": {
        "nn-pacbayes/scripts/old2/batch_arc.sh": [
            "./meta_script"
        ],
        "nn-pacbayes/scripts/old2/batch.sh": [
            "./meta_script"
        ]
    },
    "JSALT2022CodeSwitchingASR/speechCollage": {
        "speechCollage/sbatch_bigram.sh": [
            "src/generate_bigram.py"
        ],
        "speechCollage/sbatch_unigram.sh": [
            "src/generate_unigram.py"
        ],
        "speechCollage/sbatch_bigram_norm.sh": [
            "src/generate_bigram_norm.py"
        ]
    },
    "Clay-foundation/model": {
        "model/train_clay.sh": [
            "trainer.py",
            "configs/config.yaml"
        ],
        "model/jobspec-cfg/trainer.py": [
            "trainer.py"
        ],
        "model/jobspec-cfg/configs/config.yaml": [
            "configs/metadata.yaml"
        ]
    },
    "suswei/BNN_via_SLT": {
        "BNN_via_SLT/slurmsweep_cpu.sh": [
            "experiments.py"
        ],
        "BNN_via_SLT/slurmsweep.sh": [
            "experiments.py"
        ],
        "BNN_via_SLT/jobspec-cfg/experiments.py": [
            "main.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/paretoMTL_MINE.py": [
            "main.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/regularize_MMD.py": [
            "main.py"
        ]
    },
    "suswei/RLCT": {
        "BNN_via_SLT/jobspec-cfg/experiments.py": [
            "main.py"
        ],
        "RLCT/pbs_sweep.sh": [
            "sweep.py"
        ],
        "RLCT/jobspec-cfg/sweep.py": [
            "lastlayerbayesian.py"
        ],
        "RLCT/jobspec-cfg/main.py": [
            "dataset_factory.py",
            "models.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/paretoMTL_MINE.py": [
            "main.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/regularize_MMD.py": [
            "main.py"
        ]
    },
    "suswei/single-cell-rna-seq": {
        "BNN_via_SLT/jobspec-cfg/experiments.py": [
            "main.py"
        ],
        "single-cell-rna-seq/regularize_MMD.sh": [
            "regularize_MMD.py"
        ],
        "single-cell-rna-seq/paretoMTL_MINE.sh": [
            "paretoMTL_MINE.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/paretoMTL_MINE.py": [
            "main.py"
        ],
        "single-cell-rna-seq/jobspec-cfg/regularize_MMD.py": [
            "main.py"
        ]
    },
    "kenoharada/SQUID-tutorial": {
        "SQUID-tutorial/job.sh": [
            "torch_test.py"
        ]
    },
    "ncoop57/contracode": {
        "contracode/scripts/slurm/pretrain_hybrid.sh": [
            "representjs/pretrain_distributed.py"
        ]
    },
    "khalidsaifullaah/distillation": {
        "distillation/scripts/cml_array_jobs_7B.sh": [
            "train.py"
        ]
    },
    "M23CSA017/DL_Assignment_4": {
        "DL_Assignment_4/run_cGAN.sh": [
            "cGANS.py",
            "cGAN_run_wcgan_aux.txt"
        ]
    },
    "mustass/llm_sentiment_analysis": {
        "llm_sentiment_analysis/train_fullTrain128.sh": [
            "./scripts/train_sa.py"
        ],
        "llm_sentiment_analysis/train_fullTrain128balanced.sh": [
            "./scripts/train_sa.py"
        ]
    },
    "mustass/computer_vision": {
        "computer_vision/bash/train_hpc.sh": [
            "scripts/train.py"
        ]
    },
    "roybens/DL4neurons2": {
        "DL4neurons2/sbatch.sh": [
            "run.py"
        ],
        "DL4neurons2/BBP_sbatch2.sh": [
            "BBP_sbatch2.sh",
            "run.py"
        ],
        "DL4neurons2/old/BBP_sbatch3.sh": [
            "./shifter_env.sh",
            "run.py"
        ],
        "DL4neurons2/jobspec-cfg/BBP_sbatch2.sh": [
            "BBP_sbatch2.sh",
            "run.py"
        ]
    },
    "Mawiszus/TOAD-GAN": {
        "TOAD-GAN/main.sh": [
            "main.py",
            "main_tile_pattern.py",
            "main_level_classification.py"
        ]
    },
    "clairemerot/angsd_pipeline": {
        "angsd_pipeline/01_scripts/07_fst_by_group.sh": [
            "01_scripts/01_config.sh",
            "01_scripts/Rscripts/subset_random_Nind.r",
            "01_scripts/Rscripts/sum_sites_2dsfs.r"
        ],
        "angsd_pipeline/01_scripts/03_saf_maf_gl_all.sh": [
            "01_scripts/01_config.sh"
        ]
    },
    "Mi-Al/fluxion": {
        "fluxion/fluxion.sh": [
            "lib/installer/InstallerUtils.sh",
            "lib/InterfaceUtils.sh",
            "lib/SandboxUtils.sh",
            "lib/FormatUtils.sh",
            "lib/ColorUtils.sh",
            "lib/IOUtils.sh",
            "lib/HashUtils.sh",
            "lib/Help.sh"
        ]
    },
    "ponderbb/multitask-mayhem": {
        "multitask-mayhem/configs/hpc_jobscripts/single_job.sh": [
            "src/pipeline/train_model.py",
            "configs/model-zoo/frcnn-hybrid.yaml",
            "configs/hpc_jobscripts/single_job.sh"
        ],
        "multitask-mayhem/configs/hpc_jobscripts/overnight_batch.sh": [
            "src/pipeline/train_model.py",
            "configs/model-zoo/deeplabv3.yaml",
            "configs/model-zoo/ssdlite.yaml",
            "configs/model-zoo/frcnn.yaml",
            "configs/model-zoo/frcnn-hybrid.yaml",
            "configs/model-zoo/ssdlite-hybrid.yaml",
            "configs/hpc_jobscripts/overnight_batch.sh"
        ],
        "multitask-mayhem/jobspec-cfg/configs/hpc_jobscripts/single_job.sh": [
            "src/pipeline/train_model.py",
            "configs/model-zoo/frcnn-hybrid.yaml",
            "configs/hpc_jobscripts/single_job.sh"
        ],
        "multitask-mayhem/jobspec-cfg/configs/hpc_jobscripts/overnight_batch.sh": [
            "src/pipeline/train_model.py",
            "configs/model-zoo/deeplabv3.yaml",
            "configs/model-zoo/ssdlite.yaml",
            "configs/model-zoo/frcnn.yaml",
            "configs/model-zoo/frcnn-hybrid.yaml",
            "configs/model-zoo/ssdlite-hybrid.yaml",
            "configs/hpc_jobscripts/overnight_batch.sh"
        ]
    },
    "uw-swag/jit-bugpred": {
        "jit-bugpred/gum.sh": [
            "src/gumtree.py"
        ]
    },
    "gabeorlanski/bimodal-code-generation": {
        "bimodal-code-generation/parse_so_dump.sbatch": [
            "scripts/parse_so_data.py"
        ],
        "bimodal-code-generation/single_node.sbatch": [
            "train.py",
            "data/sample_tensorized_cfg.yaml"
        ],
        "bimodal-code-generation/consolidate.sbatch": [
            "scripts/parse_so_data.py"
        ],
        "bimodal-code-generation/train_multi_gpu.sbatch": [
            "train.py"
        ],
        "bimodal-code-generation/parse_data.sbatch": [
            "scripts/parse_so_data.py"
        ],
        "bimodal-code-generation/train_single_gpu.sbatch": [
            "scripts/prepare_train_environment.py",
            "train.py"
        ],
        "bimodal-code-generation/jobspec-cfg/data/sample_tensorized_cfg.yaml": [
            "templates/so_prompts.yaml"
        ]
    },
    "michaelkoelle/python-template": {
        "python-template/scripts/job.sh": [
            "requirements.txt",
            "src/main.py"
        ]
    },
    "glbreeze/neural_collapse": {
        "neural_collapse/train0.sh": [
            "main.py"
        ],
        "neural_collapse/train.sh": [
            "main.py"
        ],
        "neural_collapse/train2.sh": [
            "main.py"
        ],
        "neural_collapse/train1.sh": [
            "main.py"
        ]
    },
    "nikhilweee/contrastive-mae": {
        "contrastive-mae/submit_burst.sh": [
            "main_pretrain.py",
            "main_finetune.py"
        ],
        "contrastive-mae/submit.sh": [
            "main_pretrain.py",
            "main_finetune.py"
        ],
        "contrastive-mae/jobspec-cfg/main_finetune.py": [
            "LICENSE"
        ],
        "contrastive-mae/jobspec-cfg/main_pretrain.py": [
            "LICENSE"
        ]
    },
    "jukobo/JK_bachelor": {
        "JK_bachelor/jk_job.sh": [
            "OutlierDetection/training_conv.py"
        ],
        "JK_bachelor/seg_job.sh": [
            "Spinetools/VerSe_unpacking_spinetools.py",
            "VertebraeSegmentation/Verse/Predict_mask_titans.py"
        ]
    },
    "edwardbirdlab/BALROG-MON": {
        "BALROG-MON/configs/ceres/balrog.template.slurm": [
            "configs/ceres/ceres.cfg"
        ]
    },
    "NIH-CARD/ProtPipe": {
        "ProtPipe/src/run-diann.sh": [
            "config.txt"
        ]
    },
    "JoseAgustin/Emiss_mexico_2014": {
        "Emiss_mexico_2014/genera_mozart.sh": [
            "genera_mozart.sh"
        ],
        "Emiss_mexico_2014/jobspec-cfg/genera_mozart.sh": [
            "genera_mozart.sh"
        ]
    },
    "schmrlng/set_transformer": {
        "set_transformer/submit.sh": [
            "main.py"
        ]
    },
    "Karaniare/Optimized_GATK4_pipeline": {
        "Optimized_GATK4_pipeline/Gather_and_Filter_VCFs.sh": [
            "Gather_and_Filter_VCFs.sh"
        ],
        "Optimized_GATK4_pipeline/jobspec-cfg/Gather_and_Filter_VCFs.sh": [
            "Gather_and_Filter_VCFs.sh"
        ]
    },
    "ecreinisch/bin_htcondor": {
        "bin_htcondor/pair2e.sh": [
            "pair2e.sh",
            "run_pair_gmtsarv60.sh",
            "p2p_processingKF.csh"
        ],
        "bin_htcondor/jobspec-cfg/raw2prmslc_S1A_htc.sh": [
            "run_pair.sh",
            "setup.sh"
        ],
        "bin_htcondor/jobspec-cfg/pair2e.sh": [
            "pair2e.sh",
            "run_pair_gmtsarv60.sh",
            "p2p_processingKF.csh"
        ],
        "bin_htcondor/jobspec-cfg/run_pair_DAG_gmtsarv60.sh": [
            "run_pair_gmtsarv60.sh",
            "get_site_dims.sh",
            "pair2e.sh",
            "prepDEMforCondorJob.sh",
            "setup_gmtsarv54.sh",
            "run_pair.sh",
            "./run_pair_gmtsarv60.sh"
        ],
        "bin_htcondor/jobspec-cfg/run_pair_gmtsarv60.sh": [
            "run_pair_gmtsarv60.sh",
            "pair2e.sh",
            "run_pair_DAG_gmtsarv60.sh",
            "setup_gmtsarv60.sh",
            "raw2prmslc_S1A_htc.sh"
        ],
        "bin_htcondor/jobspec-cfg/setup_gmtsarv60.sh": [
            "setup_gmtsarv60.sh",
            "setup.sh"
        ]
    },
    "yannmclatchie/model-selection-uncertainty": {
        "model-selection-uncertainty/triton/many_models_run.sh": [
            "./R/many-irrelevant/fit_many_models.R"
        ],
        "model-selection-uncertainty/triton/joint_pred_run.sh": [
            "./R/joint-predictive/joint-predictive-sample-beta.R"
        ],
        "model-selection-uncertainty/triton/forward_run.sh": [
            "./R/forward-search/experiment.R"
        ],
        "model-selection-uncertainty/triton/ionosphere.sh": [
            "./R/real-world/ionosphere.R"
        ],
        "model-selection-uncertainty/triton/colon.sh": [
            "./R/real-world/colon.R"
        ],
        "model-selection-uncertainty/triton/all_irrelevant_run.sh": [
            "./R/many-irrelevant/high_risk_experiment.R"
        ],
        "model-selection-uncertainty/triton/heart.sh": [
            "./R/real-world/sonar.R",
            "./R/real-world/heart.R"
        ]
    },
    "iamlll/DMC-cluster": {
        "DMC-cluster/jobscript.sh": [
            "generateparams.py",
            "jobscript.sh",
            "jobarray.py"
        ],
        "DMC-cluster/jobspec-cfg/jobscript.sh": [
            "generateparams.py",
            "jobscript.sh",
            "jobarray.py"
        ],
        "DMC-cluster/jobspec-cfg/jobarray.py": [
            "generateparams.py",
            "jobarray.py"
        ],
        "DMC-cluster/jobspec-cfg/generateparams.py": [
            "generateparams.py"
        ]
    },
    "coltonrusch/GeneFusion": {
        "GeneFusion/run.sh": [
            "src/train.py"
        ]
    },
    "johanneskruse/LUKE_thesis": {
        "LUKE_thesis/jobspec-cfg/luke_hpc/experiment_setup_file.py": [
            "examples/cli.py"
        ],
        "LUKE_thesis/luke_hpc/jobscript_luke.sh": [
            "experiments",
            "luke_hpc/experiment_setup_file.py"
        ]
    },
    "KhadgaA/Speaker-verification-and-speration": {
        "Speaker-verification-and-speration/run2.sh": [
            "eval_model.py",
            "hubert_large_full.txt"
        ]
    },
    "JayRothenberger/RepresentationLearning": {
        "RepresentationLearning/torchrun.sh": [
            "mp.py"
        ]
    },
    "zhcui/fit-u-derivative": {
        "fit-u-derivative/block.cmd": [
            "./hub2d.ti.py"
        ]
    },
    "dungdinhanh/selfsup-guidance": {
        "selfsup-guidance/install_requirements_nci.sh": [
            "requirements.txt"
        ]
    },
    "ChengChen2020/YCB_demo": {
        "YCB_demo/hpc.sh": [
            "requirements.txt",
            "./experiments/scripts/ycb_video_test.sh"
        ],
        "YCB_demo/jobspec-cfg/experiments/scripts/ycb_video_test.sh": [
            "./tools/test_net.py"
        ]
    },
    "chrisemezue/jax-dag-gflownet": {
        "jax-dag-gflownet/get_all_orientations_dag.sh": [
            "get_all_orientations_dag.py"
        ],
        "jax-dag-gflownet/get_cpdag.sh": [
            "get_cpdag.py"
        ],
        "jax-dag-gflownet/jobspec-cfg/job_ci.sh": [
            "causal_inference_special_cases.py"
        ],
        "jax-dag-gflownet/jobspec-cfg/run.sh": [
            "job_ci.sh"
        ],
        "crafter-rl-project/run_crf.sh": [
            "run.sh"
        ],
        "crafter-rl-project/run.sh": [
            "run.sh"
        ],
        "crafter-rl-project/jobspec-cfg/run.sh": [
            "run.sh"
        ]
    },
    "chrisemezue/crafter-rl-project": {
        "jax-dag-gflownet/job.sh": [
            "main.py"
        ],
        "crafter-rl-project/run_crf.sh": [
            "main.py",
            "run.sh"
        ],
        "crafter-rl-project/run.sh": [
            "main.py",
            "run.sh"
        ],
        "crafter-rl-project/jobspec-cfg/run.sh": [
            "main.py",
            "run.sh"
        ]
    },
    "cswritlarge/simforager": {
        "simforager/slurm_hopper.sh": [
            "simforager_null.config"
        ]
    },
    "honglu2875/_diff_model": {
        "_diff_model/multinode.sbatch": [
            "requirements.txt",
            "run_clm_diff.py",
            "config_multinode.json"
        ]
    },
    "MaevaTecher/VarGeSO-100K": {
        "VarGeSO-100K/snakemake.slurm": [
            "cluster.json"
        ],
        "varroa-host-jump/snakemake.slurm": [
            "cluster.json"
        ]
    },
    "MaevaTecher/varroa-host-jump": {
        "VarGeSO-100K/snakemake.slurm": [
            "cluster.json"
        ],
        "varroa-host-jump/snakemake.slurm": [
            "cluster.json"
        ]
    },
    "pesieber/CTSM": {
        "CTSM/compile_cclm2_esmf.sh": [
            "transfer_clm_inputdata.sh"
        ],
        "CTSM/compile_cclm2.sh": [
            "transfer_clm_inputdata.sh"
        ],
        "CTSM/compile_cclm2_0.1_fb.sh": [
            "transfer_clm_inputdata.sh"
        ],
        "CTSM/compile_cclm2_euler.sh": [
            "transfer_clm_inputdata.sh"
        ],
        "CTSM/compile_clm_EUR11.sh": [
            "transfer_clm_inputdata.sh"
        ]
    },
    "sehyun03/MulActSeg": {
        "MulActSeg/script/paper_experiment_final/figure4/figure4(b)-ResNet101/VOC_Mul%2BRandom.sh": [
            "train_AL_voc.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(b)-ResNet101/VOC_Mul%2BClassBal.sh": [
            "train_AL_voc.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(a)%20-ResNet101/Cityscapes_Mul%2BRandom.sh": [
            "train_AL.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(a)%20-ResNet101/Cityscapes_Stage2_Mul%2BPixBal.sh": [
            "eval_AL.py",
            "train_stage2_AL.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(a)%20-ResNet101/Cityscapes_Mul%2BBvSB.sh": [
            "train_AL.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(b)-ResNet50/VOC_Mul%2BPixBal.sh": [
            "train_AL_voc.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(b)-ResNet50/VOC_Stage2_Mul%2BBvSB.sh": [
            "eval_AL_voc.py",
            "train_stage2_AL_voc.py"
        ],
        "MulActSeg/script/paper_experiment_final/figure4/figure4(b)-ResNet50/VOC_Mul%2BBvSB.sh": [
            "train_AL_voc.py"
        ]
    },
    "ppriyank/Video-Person-Re-ID-Fantastic-Techniques-and-Where-to-Find-Them": {
        "Video-Person-Re-ID-Fantastic-Techniques-and-Where-to-Find-Them/sample.sh": [
            "hyper_supervise_validation.py",
            "config_trainer.py",
            "bagoftricks.py"
        ],
        "Video-Person-Re-ID-Fantastic-Techniques-and-Where-to-Find-Them/jobspec-cfg/bagoftricks.py": [
            "bagoftricks.py"
        ],
        "Video-Person-Re-ID-Fantastic-Techniques-and-Where-to-Find-Them/jobspec-cfg/config_trainer.py": [
            "config_trainer.py"
        ]
    },
    "brian7685/Multimodal-Clustering-Network": {
        "Multimodal-Clustering-Network/eval_avlnet.sh": [
            "gen_loader.py",
            "eval.py",
            "train_tri_kmeans.py",
            "train_tri_cos_mil.py",
            "local_eval.py",
            "train_tri_c.py"
        ],
        "Multimodal-Clustering-Network/train_avlnet.sh": [
            "train_tri_kmeans.py",
            "train_tri_cos_mil.py"
        ]
    },
    "AronDJacobsen/np-with-vae": {
        "np-with-vae/submit.sh": [
            "main.py"
        ]
    },
    "JackLonergan97/normalizing_flows": {
        "normalizing_flows/inference.sh": [
            "subhalos_inference.py",
            "error_message"
        ]
    },
    "chaitanyamalaviya/lang-reps": {
        "lang-reps/runeval.sh": [
            "trainer.py"
        ],
        "lang-reps/run.sh": [
            "trainer.py"
        ]
    },
    "AndreaValentini025/ImageClustering": {
        "ImageClustering/script.sh": [
            "face_extraction.py"
        ]
    },
    "woozzzy/ICL-with-context-distillation-on-llama-3": {
        "ICL-with-context-distillation-on-llama-3/run.sh": [
            "run.sh",
            "main.py"
        ],
        "ICL-with-context-distillation-on-llama-3/jobspec-cfg/run.sh": [
            "run.sh",
            "main.py"
        ]
    },
    "tcarta/DLP": {
        "DLP/DRRN_GTL4.slurm": [
            "dlp/main.py"
        ],
        "DLP/DRRN_GTL.slurm": [
            "dlp/main.py"
        ],
        "DLP/PPO_GTL4.slurm": [
            "scripts/train_ppo_baseline.sh"
        ],
        "DLP/PPO_GTL_a12.slurm": [
            "scripts/train_ppo_baseline.sh"
        ],
        "DLP/DRRN_GTL_a9.slurm": [
            "dlp/main.py"
        ],
        "DLP/PPO_GTRB.slurm": [
            "scripts/train_ppo_baseline.sh"
        ],
        "DLP/PPO_GTL.slurm": [
            "scripts/train_ppo_baseline.sh"
        ],
        "DLP/DRRN_GTL16.slurm": [
            "dlp/main.py"
        ],
        "DLP/jobspec-cfg/scripts/train_ppo_baseline.sh": [
            "babyai/scripts/train_rl.py"
        ]
    },
    "dblincoe/csds-438-super-resolution": {
        "csds-438-super-resolution/slurm/train_srresnet.slurm": [
            "train.py"
        ]
    },
    "ucbtrans/curb-monitor": {
        "curb-monitor/savio_jobs/bdd100k/production_job_gpu.sh": [
            "./training/bdd100k/train.py"
        ]
    },
    "underworldcode/scaling_scripts": {
        "scaling_scripts/setonix_baremetal_go.sh": [
            "timed_model.py"
        ]
    },
    "kamclar/trfada_app": {
        "trfada_app/app.sh": [
            "webapp.py"
        ]
    },
    "fournierlouis/learned_delayed_optim": {
        "learned_delayed_optim/src/meta_train_mlp.slurm": [
            "src/main.py",
            "config/meta_train/meta_train_delay_mlp_image-mlp-fmst_schedule_3e-3_10000_d3.py"
        ],
        "learned_delayed_optim/src/meta_train_adafac.slurm": [
            "src/main.py",
            "config/meta_train/meta_train_delay_adafac32_image-mlp-fmst_schedule_3e-3_10000_d3.py"
        ],
        "learned_delayed_optim/src/meta_train_mlp_morefeat.slurm": [
            "src/main.py",
            "config/meta_train/meta_train_delay_mlp_image-mlp-fmst_schedule_3e-3_10000_d3.py"
        ],
        "learned_delayed_optim/src/meta_train_mlp_nodelay.slurm": [
            "src/main.py",
            "config/meta_train/meta_train_mlp_image-mlp-fmst_schedule_3e-3_10000_d3.py"
        ]
    },
    "WalshKieran/katana-rnaseq-start": {
        "katana-rnaseq-start/run.pbs": [
            "nf-params.json"
        ]
    },
    "morteza/kaggle-trends": {
        "kaggle-trends/jobs/all_on_gpu.sh": [
            "environment.yml"
        ]
    },
    "guyleonard/orthagogue": {
        "orthagogue/benchmark_code/job_valgrind_single.sh": [
            "scripts_shell/pre-installation.pl",
            "empirical_tests/goodProteins.blast"
        ],
        "orthagogue/benchmark_code/tbb_1.9gb.sh": [
            "./orthAgogue"
        ],
        "orthagogue/benchmark_code/mpi_1.9gb.sh": [
            "./orthAgogue"
        ],
        "orthagogue/jobspec-cfg/scripts_shell/pre-installation.pl": [
            "orthAgogue"
        ]
    },
    "AlexanderNeuwirth/DiscoveryWorldPongAIExhibit": {
        "DiscoveryWorldPongAIExhibit/run.sh": [
            "requirements.txt",
            "reinforcement.py"
        ]
    },
    "rayhe88/pyCosito": {
        "pyCosito/submit.sh": [
            "run.py"
        ]
    },
    "IhabBendidi/original_solo": {
        "original_solo/scheduler.sh": [
            "batch_script.slurm"
        ],
        "original_solo/jobspec-cfg/batch_script.slurm": [
            "bash_files/cifar10/barlow_twins.sh"
        ],
        "original_solo/jobspec-cfg/bash_files/cifar10/barlow_twins.sh": [
            "main_pretrain.py",
            "main_linear.py"
        ]
    },
    "muszyna25/ppe_icon_model": {
        "ppe_icon_model/run/exp.nwptest_R02B06N07.run": [
            "doc/Namelist_overview.pdf"
        ],
        "ppe_icon_model/run/checksuite.rcnl.dwd.de/exp.run_ICON_07_R02B04N06M_restarttest.run": [
            "doc/Namelist_overview.pdf"
        ],
        "ppe_icon_model/run/checksuite.rcnl.dwd.de/exp.run_ICON_06_R02B06N07_UPATMO_ifsinit_restarttest.run": [
            "doc/Namelist_overview.pdf"
        ],
        "ppe_icon_model/run/checksuite.xce.dwd.de/exp.run_ICON_07_R02B04N06M_restarttest.run": [
            "doc/Namelist_overview.pdf"
        ],
        "ppe_icon_model/run/checksuite.xce.dwd.de/exp.run_ICON_04_R02B06N08_ifsinit_restarttest.run": [
            "doc/Namelist_overview.pdf"
        ],
        "ppe_icon_model/run/checksuite.xce.dwd.de/exp.run_ICON_06_R02B06N07_UPATMO_ifsinit_restarttest.run": [
            "doc/Namelist_overview.pdf"
        ]
    },
    "jack-willturner/deep-compression": {
        "deep-compression/scripts/train_wrns.sh": [
            "train.py"
        ],
        "deep-compression/scripts/prune_baselines_l1.sh": [
            "prune.py"
        ]
    },
    "jack-willturner/batchnorm-pruning": {
        "batchnorm-pruning/bash/train_resnet.slurm": [
            "train_resnet.py"
        ]
    },
    "bgswaroop/scd-images": {
        "image-net-sota/jobscript.sh": [
            "run_flow.py"
        ]
    },
    "bgswaroop/image-net-sota": {
        "image-net-sota/jobscript.sh": [
            "run_flow.py"
        ]
    },
    "sergey-serebryakov/mlperf-training-v0.6": {
        "mlperf-training-v0.6/run.sub": [
            "run_and_time.sh",
            "run.sub",
            "./run_and_time.sh"
        ],
        "mlperf-training-v0.6/jobspec-cfg/run.sub": [
            "run_and_time.sh",
            "run.sub",
            "./run_and_time.sh"
        ],
        "mlperf-training-v0.6/jobspec-cfg/run_and_time.sh": [
            "run_and_time.sh",
            "config_DGX1.sh",
            "train_imagenet.py"
        ]
    },
    "kuleshov-group/caduceus": {
        "caduceus/jobspec-cfg/setup_env.sh": [
            "setup_env.sh"
        ],
        "caduceus/slurm_scripts/run_nucleotide_transformer.sh": [
            "setup_env.sh"
        ],
        "caduceus/slurm_scripts/dump_vep_embeddings.sh": [
            "setup_env.sh",
            "vep_embeddings.py"
        ],
        "caduceus/slurm_scripts/run_genomics_benchmark_cnn.sh": [
            "setup_env.sh"
        ],
        "caduceus/slurm_scripts/run_genomics_benchmark.sh": [
            "setup_env.sh"
        ]
    },
    "trainsn/yeast_simulation": {
        "yeast_simulation/train_NF.sh": [
            "train_NF.py"
        ]
    },
    "mfurla/NanOlympicsMod": {
        "NanOlympicsMod/jobspec-cfg/pipeline.nf": [
            "pipeline.conf",
            "pipeline.nf"
        ],
        "NanOlympicsMod/Scripts/nextflowRun.sh": [
            "pipeline.conf",
            "pipeline.nf"
        ]
    },
    "ManojMiddepogu/Mean_Shift_Diffusion": {
        "Mean_Shift_Diffusion/baseline_cifar_job.slurm": [
            "scripts/image_train.py"
        ]
    },
    "mggg/submission-analysis": {
        "submission-analysis/maps.slurm": [
            "maps_and_lookups.py"
        ]
    },
    "valay-shah/MLH_Fall22": {
        "MLH_Fall22/slurm/finetune_both_mura.sbatch": [
            "experiment.py"
        ]
    },
    "Wan-ZL/Foureye-2-simulation": {
        "Foureye-2-simulation/jobScript.sh": [
            "main.py"
        ]
    },
    "IUCompPath/gandlf_experiments_template_slurm": {
        "gandlf_experiments_template_slurm/runner.sh": [
            "data.csv"
        ]
    },
    "linmin-123456/nmr": {
        "nmr/gpu.lsf": [
            "gpu.py"
        ]
    },
    "rootsnquery/tedesco-project": {
        "tedesco-project/model.sh": [
            "model.py"
        ]
    },
    "NeilDG/Synth-3DLocalization": {
        "Synth-3DLocalization/script_gpu_2.slurm": [
            "train_main-iid.py"
        ],
        "Synth-3DLocalization/script_gpu_1.slurm": [
            "train_main-iid.py"
        ],
        "SynExperimentZoo/script_1.slurm": [
            "train_img2img_main.py"
        ],
        "SynExperimentZoo/script_2.slurm": [
            "train_img2img_main.py"
        ]
    },
    "NeilDG/SynthShadowRemoval": {
        "SynExperimentZoo/script_1.slurm": [
            "train_img2img_main.py"
        ],
        "SynExperimentZoo/script_2.slurm": [
            "train_img2img_main.py"
        ],
        "SynthShadowRemoval/script_3.slurm": [
            "shadow_train_main.py"
        ]
    },
    "McCarthyEB/DJW_EBMC": {
        "DJW_EBMC/Pd_nps/opt_oxy.sh": [
            "POSCAR"
        ],
        "DJW_EBMC/Pd_nps/opt.sh": [
            "POSCAR"
        ]
    },
    "lsickert/seq2seq-slr": {
        "seq2seq-slr/train_classifier.sh": [
            "main.py"
        ],
        "seq2seq-slr/eval_generator.sh": [
            "main.py"
        ],
        "seq2seq-slr/train_generator.sh": [
            "main.py"
        ],
        "rude-nmt/fine_tune.sh": [
            "main.py"
        ],
        "rude-nmt/label_data.sh": [
            "main.py"
        ],
        "rude-nmt/attribute_data.sh": [
            "main.py"
        ]
    },
    "lsickert/rude-nmt": {
        "seq2seq-slr/train_classifier.sh": [
            "main.py"
        ],
        "seq2seq-slr/eval_generator.sh": [
            "main.py"
        ],
        "seq2seq-slr/train_generator.sh": [
            "main.py"
        ],
        "rude-nmt/fine_tune.sh": [
            "main.py"
        ],
        "rude-nmt/get_scores.sh": [
            "get_scores_helper.py"
        ],
        "rude-nmt/label_data.sh": [
            "main.py"
        ],
        "rude-nmt/attribute_data.sh": [
            "main.py"
        ]
    },
    "joshbruegger/SWORD-SIMP": {
        "SWORD-SIMP/analyze_crop.sh": [
            "analyze_crops.py"
        ]
    },
    "UcarLab/ATAC-seq": {
        "ATAC-seq/make_atac_seq_shifted_bam_5_bamtobed.sh": [
            "make_atac_seq_shifted_bam_5_bamtobed.sh"
        ],
        "ATAC-seq/jobspec-cfg/make_atac_seq_shifted_bam_5_bamtobed.sh": [
            "make_atac_seq_shifted_bam_5_bamtobed.sh"
        ]
    },
    "UcarLab/GREGORHelper": {
        "GREGORHelper/ConfigureGREGOR.sh": [
            "ConfigureGREGOR.sh"
        ],
        "GREGORHelper/jobspec-cfg/ConfigureGREGOR.sh": [
            "ConfigureGREGOR.sh"
        ]
    },
    "Snitkin-Lab-Umich/ariba_snakemake": {
        "ariba_snakemake/ariba.sbat": [
            "snakefile"
        ],
        "sample_snakemake/sample.sbat": [
            "snakefile"
        ]
    },
    "Snitkin-Lab-Umich/sample_snakemake": {
        "ariba_snakemake/ariba.sbat": [
            "snakefile"
        ],
        "sample_snakemake/sample.sbat": [
            "snakefile"
        ]
    },
    "PimiYvan/cd_fss": {
        "cd_fss/dataset.sh": [
            ".kaggle/kaggle.json",
            "test.py",
            "train.py"
        ]
    },
    "ChengKang520/Q-Controllable-DLM": {
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed80_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed80_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed44_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed04_e2e_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ROCstory_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ternary_e2e_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_original_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed04_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed08_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_bnn_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_bnn_e2e_InA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_bnn_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py",
            "metrics_json.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ternary_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed04_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed08_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed88_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_WikiText103.batch": [
            "improved-diffusion/scripts/run_train.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_bnn_e2e_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_original_e2e_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ternary_ROCstory_.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed40_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_ROCStories.batch": [
            "improved-diffusion/scripts/run_train.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed44_ROCstory.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed08_e2e_LoRA.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed88_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/batch_file/DiffLM_Quantized_fixed40_e2e.batch": [
            "improved-diffusion/scripts/run_train.py",
            "improved-diffusion/scripts/batch_decode.py",
            "train_run.py",
            "improved-diffusion/scripts/infill.py"
        ],
        "Q-Controllable-DLM/jobspec-cfg/train_run.py": [
            "transformers/examples/pytorch/language-modeling/run_clm.py"
        ],
        "Q-Controllable-DLM/jobspec-cfg/improved-diffusion/scripts/run_train.py": [
            "improved-diffusion/scripts/train.py"
        ],
        "Q-Controllable-DLM/jobspec-cfg/improved-diffusion/scripts/batch_decode.py": [
            "improved-diffusion/scripts/ppl_under_ar.py"
        ]
    },
    "svenvanc/BSc-AutoML4SeaIce": {
        "BSc-AutoML4SeaIce/jobspec-cfg/calculate_avg.py": [
            "init.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Experiments/kerasTuner-20-chief.slurm": [
            "kerasTuner-20-a.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Experiments/kerasTuner-20-worker.slurm": [
            "kerasTuner-20-a.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Experiments/calculate_avg.slurm": [
            "calculate_avg.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Preprocessing/convert_to_npy.slurm": [
            "convertDataToNpy.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Statistics/stats.slurm": [
            "stats.py"
        ],
        "BSc-AutoML4SeaIce/slurm_scripts/Statistics/kerasTuner-20-get-results.slurm": [
            "kerasTuner-20-get-results.py"
        ]
    },
    "johnczontos/instrument_classification_with_pytorch": {
        "instrument_classification_with_pytorch/job.sh": [
            "logs/run_model.out",
            "logs/run_model.err",
            "run_model.py"
        ],
        "instrument_classification_with_pytorch/jobspec-cfg/run_model.py": [
            "run_model.py"
        ],
        "instrument_classification_with_pytorch/utils/run_model_job.sh": [
            "logs/run_model.out",
            "logs/run_model.err",
            "run_model.py"
        ]
    },
    "oi-deepscribe/deepscribe": {
        "deepscribe/scripts/analysis/analysis_4_resnet_blank_augment.sh": [
            "data/model_defs/resnet50_blank_augment.json"
        ],
        "deepscribe/scripts/analysis/analysis_4_resnet_blank.sh": [
            "data/model_defs/resnet50_blank.json"
        ],
        "deepscribe/scripts/analysis/analysis_4_resnet_transfer.sh": [
            "data/model_defs/resnet50.json"
        ],
        "deepscribe/scripts/analysis/analysis_4_resnet_blank_reweight.sh": [
            "data/model_defs/resnet50_blank_reweight.json"
        ]
    },
    "mrkulk/hierarchical-deep-RL": {
        "hierarchical-deep-RL/run.slurm": [
            "./run_exp.sh"
        ],
        "hierarchical-deep-RL/jobspec-cfg/run_exp.sh": [
            "./run_gpu"
        ]
    },
    "barthelemymp/TULIP-TCR": {
        "TULIP-TCR/run_finetune.sh": [
            "finetuning.py",
            "configs/shallow.config.json"
        ]
    },
    "soulj/SkeletalVis-SingleCell": {
        "SkeletalVis-SingleCell/runPipeline.sh": [
            "main.nf"
        ]
    },
    "yileitu/Thesis_Tyl": {
        "Thesis_Tyl/run_toy.sh": [
            "toy_test.py"
        ]
    },
    "Framartin/transferable-bnn-adv-ex": {
        "transferable-bnn-adv-ex/jobspec-cfg/scripts/imagenet/run_attack_dnn__multiple_archs.sh": [
            "scripts/imagenet/run_attack_dnn__multiple_archs.sh"
        ],
        "transferable-bnn-adv-ex/jobspec-cfg/scripts/imagenet/run_attack_csgld_pgd__multiple_archs.sh": [
            "scripts/imagenet/run_attack_csgld_pgd__multiple_archs.sh"
        ],
        "transferable-bnn-adv-ex/scripts/imagenet/run_attack_dnn__multiple_archs.sh": [
            "scripts/imagenet/run_attack_dnn__multiple_archs.sh"
        ],
        "transferable-bnn-adv-ex/scripts/imagenet/run_attack_csgld_pgd__multiple_archs.sh": [
            "scripts/imagenet/run_attack_csgld_pgd__multiple_archs.sh"
        ],
        "transferable-bnn-adv-ex/scripts/cifar10/run_train_dnn.sh": [
            "train.py"
        ]
    },
    "matthiasbe/block_srht": {
        "block_srht/scripts/cluster/slurm.sh": [
            "scripts/nystrom.jl"
        ]
    },
    "Holstrup/PlaceRecognition": {
        "PlaceRecognition/test.sh": [
            "requirements.txt"
        ],
        "PlaceRecognition/run.sh": [
            "requirements.txt",
            "cirtorch/networks/localcorrelationnet.py",
            "cirtorch/networks/correlationnet.py"
        ]
    },
    "JAKLIZ-FIT/KNN-xraurp00": {
        "KNN-xraurp00/train.sh": [
            "trocr_train.py"
        ]
    },
    "NilsBochow/lama_reconstruction": {
        "lama_reconstruction/submit_hadcrut_eval.sh": [
            "bin/predict.py",
            "bin/evaluate_predicts.py"
        ],
        "lama_reconstruction/submit_pic_generation.sh": [
            "bin/gen_mask_dataset.py"
        ],
        "lama_reconstruction/jobspec-cfg/bin/predict.py": [
            "./bin/predict.py"
        ]
    },
    "kunal25k/Object-Detection-using-Self-Supervised-Learning": {
        "Object-Detection-using-Self-Supervised-Learning/demo2.slurm": [
            "demo.py"
        ]
    },
    "Chrissi2802/WISDM---Biometric-time-series-data-classification": {
        "WISDM---Biometric-time-series-data-classification/Job.sh": [
            "Job.sh",
            "train_tf.py"
        ],
        "WISDM---Biometric-time-series-data-classification/jobspec-cfg/train_tf.py": [
            "train_tf.py"
        ],
        "WISDM---Biometric-time-series-data-classification/jobspec-cfg/Job.sh": [
            "Job.sh",
            "train_tf.py"
        ]
    },
    "florianstijven/-colorectal-surrogacy-analysis": {
        "-colorectal-surrogacy-analysis/colorectal-sensitivity-analysis-relaxed.slurm": [
            "colorectal-sensitivity-analysis-relaxed.R"
        ]
    },
    "baleato/atcs-project": {
        "atcs-project/job_prototype.sh": [
            "requirements.txt",
            "train_prototype.py"
        ],
        "atcs-project/job_save.sh": [
            "requirements.txt",
            "train.py"
        ],
        "atcs-project/k_shot_testing_job.sh": [
            "requirements.txt",
            "k_shot_testing.py"
        ],
        "atcs-project/job.sh": [
            "requirements.txt",
            "meta_train.py"
        ]
    },
    "rmcd-mscb/docker-images": {
        "docker-images/run.sl": [
            "run.sl",
            "run",
            "./nhm.env",
            "docker-compose.yml"
        ],
        "docker-images/jobspec-cfg/docker-compose.yml": [
            "nhm.env"
        ],
        "docker-images/jobspec-cfg/nhm.env": [
            "nhm.env",
            "run"
        ],
        "docker-images/jobspec-cfg/run.sl": [
            "run.sl",
            "run",
            "./nhm.env",
            "docker-compose.yml"
        ]
    },
    "hannorein/python_cluster_tools": {
        "python_cluster_tools/mpi_execute.bash": [
            "run_queue.python"
        ]
    },
    "ai4ce/EgoPAT3Dv2": {
        "EgoPAT3Dv2/train.SBATCH": [
            "train_DDP.py"
        ],
        "Occ4cast/baselines/run_eval_slurm.sh": [
            "eval.py"
        ]
    },
    "vitamys/nlp": {
        "nlp/run_gpu.sh": [
            "project_split_rows_with_pp.py"
        ]
    },
    "AdaptiveComputationLab/simcov": {
        "simcov/slurm_hopper.sh": [
            "covid_default.config"
        ]
    },
    "sebastian-steiner/STREAM.jl": {
        "STREAM.jl/c.job": [
            "c.err",
            "stream",
            "stream.c",
            "./stream"
        ],
        "STREAM.jl/jobspec-cfg/stream.c": [
            "stream.c",
            "stream"
        ]
    },
    "NYU-CDS-Capstone-Project/MPM": {
        "MPM/sub_hpc_job_toy_model.sh": [
            "toy_model.py"
        ]
    },
    "ghzhang0/Boulder_2019": {
        "Boulder_2019/nn.sh": [
            "nn_sgd.py"
        ],
        "Boulder_2019/jobspec-cfg/nn_sgd.py": [
            "nn.py"
        ]
    },
    "trymgrande/IT3915-master-preparatory-project": {
        "IT3915-master-preparatory-project/job.slurm": [
            "requirements.txt",
            "torch_test.py",
            "augmentation.py"
        ]
    },
    "robotopia/MWA-Galactic-Plane-Monitoring": {
        "MWA-Galactic-Plane-Monitoring/bin/obs_giantsquid.sh": [
            "doc/images/giantsquid.png"
        ]
    },
    "MoritzLaurer/zeroshot-classifier": {
        "zeroshot-classifier/v1_human_data/job_run.bash": [
            "requirements.txt"
        ],
        "less-annotating-with-bert-nli/batch-scripts/batch-data-all-cpu-3.bash": [
            "requirements.txt"
        ],
        "less-annotating-with-bert-nli/batch-scripts/batch-data-all-cpu-1.bash": [
            "requirements.txt"
        ]
    },
    "MoritzLaurer/less-annotating-with-bert-nli": {
        "zeroshot-classifier/v1_human_data/job_run.bash": [
            "requirements.txt"
        ],
        "less-annotating-with-bert-nli/batch-scripts/batch-data-all-cpu-3.bash": [
            "requirements.txt",
            "analysis-classical-hyperparams.py",
            "analysis-classical-run.py"
        ],
        "less-annotating-with-bert-nli/batch-scripts/batch-data-all-cpu-1.bash": [
            "requirements.txt",
            "analysis-classical-hyperparams.py",
            "analysis-classical-run.py"
        ]
    },
    "byb121/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "bakajstep/KNN_Project2024": {
        "KNN_Project2024/metacetrum_scripts/ner_eval_new.sh": [
            "requirements.txt",
            "cnec2_ner_trainer.py",
            "eval_ner_model.py"
        ],
        "KNN_Project2024/metacetrum_scripts/ner_inference_new.sh": [
            "requirements.txt",
            "cnec2_ner_trainer.py",
            "inference_new_model.py"
        ],
        "KNN_Project2024/metacetrum_scripts/ner_interference_chot_new.sh": [
            "requirements.txt",
            "cnec2_ner_trainer.py",
            "chain_of_trust_eval.py"
        ],
        "KNN_Project2024/metacetrum_scripts/ner_train.sh": [
            "requirements.txt",
            "cnec2_ner_trainer.py"
        ]
    },
    "evanberkowitz/metaq": {
        "metaq/x/run.pbs.sh": [
            "x/launch.sh"
        ],
        "metaq/x/run.slurm.sh": [
            "x/launch.sh"
        ]
    },
    "computationallab/lammps_demo": {
        "lammps_demo/run_hpc.sh": [
            "melt.in"
        ]
    },
    "cjf12harry/ParRay": {
        "ParRay/scripts/batch_script.slurm": [
            "./scripts/sing_shell.sh"
        ],
        "ParRay/scripts/batch_script_full.slurm": [
            "./scripts/sing_shell.sh"
        ],
        "ParRay/scripts/batch_script_light.slurm": [
            "./scripts/sing_shell.sh"
        ]
    },
    "Prajwal-Prathiksh/ddp-thesis": {
        "ddp-thesis/hpc_regular_1.txt": [
            "code/taylor_green.py"
        ],
        "ddp-thesis/hpc_small.txt": [
            "code/taylor_green.py"
        ]
    },
    "oist/mucrosquamatus-expression": {
        "mucrosquamatus-expression/snake.sh": [
            "cluster.json"
        ]
    },
    "mstoelzle/solving-occlusion": {
        "solving-occlusion/main.sbatch": [
            "main.py"
        ]
    },
    "cmougan/MonitoringUncertainty": {
        "MonitoringUncertainty/bsynthetic.slurm": [
            "syntheticMonitoring.py"
        ]
    },
    "etiennedreyer/el_classifier": {
        "el_classifier/sbatch.sh": [
            "classifier.sh",
            "presampler.sh"
        ],
        "el_classifier/jobspec-cfg/classifier.sh": [
            "classifier.py"
        ],
        "el_classifier/jobspec-cfg/presampler.sh": [
            "presampler.py"
        ]
    },
    "biobenkj/WGBS_Biscuit_Snakemake": {
        "WGBS_Biscuit_Snakemake/bin/run_snakemake_workflow.slurm": [
            "config/config.yaml"
        ],
        "WGBS_Biscuit_Snakemake/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv"
        ]
    },
    "mark-selyaeff/pytorch-image-models": {
        "pytorch-image-models/job_resnet.sh": [
            "train.py"
        ],
        "pytorch-image-models/job_resnet_inverted.sh": [
            "train.py"
        ],
        "pytorch-image-models/job.sh": [
            "./distributed_train.sh"
        ],
        "pytorch-image-models/jobspec-cfg/distributed_train.sh": [
            "train.py"
        ]
    },
    "ilyasakin/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "AnonymousMetaLearn/Towards-benchmarking-and-dissecting-one-shot-neural-architecture-search": {
        "Towards-benchmarking-and-dissecting-one-shot-neural-architecture-search/cluster_scripts/start-hb.sh": [
            "optimizers/hyperband/run_hyperband.py"
        ]
    },
    "avidkenil/NLP_Project": {
        "NLP_Project/main.s": [
            "main.py"
        ]
    },
    "MatthieuSarkis/Improving-critical-exponents_pytorch": {
        "Improving-critical-exponents_pytorch/bash_scripts/progan_slurm_64.sh": [
            "src/progan/main.py"
        ],
        "Improving-critical-exponents_pytorch/bash_scripts/training_diffusion.sh": [
            "src/denoising-diffusion-pytorch/train.py"
        ],
        "Improving-critical-exponents_pytorch/bash_scripts/progan_slurm_8.sh": [
            "src/progan/main.py"
        ],
        "Improving-critical-exponents_pytorch/bash_scripts/factory_diffusion.sh": [
            "src/denoising-diffusion-pytorch/sample.py"
        ]
    },
    "andnp/rl-control-template": {
        "rl-control-template/scripts/local_node_venv.sh": [
            "requirements.txt"
        ]
    },
    "JoeyOhman/Megatron-LM": {
        "Megatron-LM/sbatch_run.sh": [
            "sbatch_run.sh"
        ],
        "Megatron-LM/sbatch_preprocess.sh": [
            "sbatch_run.sh"
        ],
        "Megatron-LM/jobspec-cfg/sbatch_run.sh": [
            "sbatch_run.sh"
        ]
    },
    "heyuntian/CSE5249SP24": {
        "CSE5249SP24/grid_search.sh": [
            "main.py"
        ]
    },
    "UIUC-ChenLab/PandoGen": {
        "PandoGen/end_to_end_flow/quark_init.sh": [
            "LICENSE.txt"
        ],
        "PandoGen/end_to_end_flow/train_competition.sh": [
            "LICENSE.txt"
        ],
        "PandoGen/end_to_end_flow/finetune.sh": [
            "LICENSE.txt"
        ]
    },
    "rikenbit/lrbase-workflow": {
        "lrbase-workflow/src/preprocess_swissprot.sh": [
            "src/preprocess_swissprot.jl"
        ]
    },
    "DiegoCorrea/masters-dissertation": {
        "masters-dissertation/delivery_job.srm": [
            "recommenders.py"
        ]
    },
    "sorenhartmann/mlops_project": {
        "mlops_project/batch_scripts/hparam_search.sh": [
            "src/models/search_hparams.py"
        ]
    },
    "xenos-code/nox_inversion": {
        "nox_inversion/inversion.submit": [
            "./link.sh"
        ]
    },
    "UlrikeScherer/fishtoolbox": {
        "fishtoolbox/scripts/hpc-berman.sh": [
            "hpc_berman.py"
        ]
    },
    "tvhahn/Tool-Wear-Files": {
        "Tool-Wear-Files/split_data.sh": [
            "create_split_data.py"
        ]
    },
    "tvhahn/Milling-Files": {
        "Milling-Files/bash_encoder_predict_array.sh": [
            "encoder_predict.py"
        ]
    },
    "nickubels/DeepLearningTextGeneration": {
        "DeepLearningTextGeneration/batch.sh": [
            "main.py"
        ]
    },
    "sidjana/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "franjurinec/hpc-dataset-cd": {
        "hpc-dataset-cd/slurm.sh": [
            "workflow.py"
        ]
    },
    "yya007-zz/BodySegmentation": {
        "BodySegmentation/material/run.slurm": [
            "run.py"
        ],
        "BodySegmentation/material/run2.slurm": [
            "run.py"
        ]
    },
    "asfistonlavie/TEFLoN2": {
        "TEFLoN2/submitifb.sh": [
            "Snakefile"
        ]
    },
    "davidunga/ml-2024": {
        "ml-2024/run01.sh": [
            "hyperparam_tuning.py"
        ]
    },
    "grealesguti/SCINTILLATION_COMSOL": {
        "SCINTILLATION_COMSOL/submission.sh": [
            "scomsoltest.sh"
        ]
    },
    "dshimaoka/xspecies_blind_classify": {
        "xspecies_blind_classify/script_NMclassification.sh": [
            "awake_unconscious_NMclassification_channels.m"
        ]
    },
    "dshimaoka/encoding": {
        "encoding/obs/script_summary.sh": [
            "summaryAcrossPix.m"
        ],
        "encoding/obs/script_makeStimDataBase.sh": [
            "makeStimDataBase.m"
        ],
        "encoding/jobspec-cfg/makeStimDataBase.m": [
            "wrapper_encoding.m"
        ]
    },
    "jordiae/simpaux-release": {
        "simpaux-release/slurm_submit.sh": [
            "train.py"
        ]
    },
    "aurora-multiphysics/apollo": {
        "apollo/scripts/build-apollo-csd3-sapphire.sh": [
            "./run_tests"
        ]
    },
    "andersthuesen/ChromaAI": {
        "ChromaAI/jobscripts/jobscript_train_wide_unet_gan.sh": [
            "chroma.py"
        ],
        "ChromaAI/jobscripts/jobscript_train_wide_unet.sh": [
            "chroma.py"
        ],
        "DTU-02456-Deep-Learning/jobscript.sh": [
            "./train.py"
        ]
    },
    "andersthuesen/DTU-02456-Deep-Learning": {
        "DTU-02456-Deep-Learning/jobscript.sh": [
            "./train.py"
        ]
    },
    "andersthuesen/DTU-Course-Project-02466": {
        "DTU-Course-Project-02466/test.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/25_75.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/50_0.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/0_100.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/75_0.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/25_0.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/75_25.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/50_50.sh": [
            "./src/train.py"
        ],
        "DTU-Course-Project-02466/jobs/100_0.sh": [
            "./src/train.py"
        ]
    },
    "peterdfields/cs-nf-pipelines": {
        "cs-nf-pipelines/run.sh": [
            "main.nf"
        ]
    },
    "BBrowns/NLP-Final_Project": {
        "NLP-Final_Project/bash_scripts/evaluate.sh": [
            "evaluate.py"
        ],
        "NLP-Final_Project/bash_scripts/run_all.sh": [
            "t5_trainer.py"
        ]
    },
    "alvitawa/UnsupervisedMasking": {
        "UnsupervisedMasking/jobs/old_jobs/submasked/resnet_sizes_submasked.job": [
            "main.py"
        ],
        "UnsupervisedMasking/jobs/old_jobs/submasked/timm_submasked.job": [
            "main.py"
        ],
        "UnsupervisedMasking/jobs/old_jobs/uncategorized/swav.job": [
            "main.py"
        ]
    },
    "alvitawa/fomo": {
        "UnsupervisedMasking/jobs/old_jobs/submasked/resnet_sizes_submasked.job": [
            "load.sh"
        ],
        "UnsupervisedMasking/jobs/old_jobs/submasked/timm_submasked.job": [
            "load.sh"
        ],
        "UnsupervisedMasking/jobs/old_jobs/uncategorized/swav.job": [
            "load.sh"
        ],
        "fomo/gridimnet.sh": [
            "load.sh"
        ],
        "fomo/grid.sh": [
            "load.sh"
        ]
    },
    "zhangjue1993/Self-paced-Residual-Aggregated-Network-SP-RAN": {
        "Self-paced-Residual-Aggregated-Network-SP-RAN/job.sh": [
            "train.py",
            "train_aux_sp_lc_1.py"
        ],
        "Self-paced-Residual-Aggregated-Network-SP-RAN/jobspec-cfg/train.py": [
            "generate_data_list.py"
        ],
        "Self-paced-Residual-Aggregated-Network-SP-RAN/jobspec-cfg/train_aux_sp_lc_1.py": [
            "generate_data_list.py"
        ]
    },
    "shansiliu95/PointCloudGeneration": {
        "PointCloudGeneration/ours.sh": [
            "./langevin_dynamics.py"
        ]
    },
    "Yatish0833/multiomics-synergies": {
        "multiomics-synergies/batch_array.sh": [
            "data_prep-parallel.py"
        ]
    },
    "ARCCA/pytorch-gpu-benchmark-synthetic": {
        "pytorch-gpu-benchmark-synthetic/job-scripts-isambard/submit_p100.sh": [
            "benchmark_models.py"
        ],
        "pytorch-gpu-benchmark-synthetic/job-scripts-isambard/submit_a100.sh": [
            "benchmark_models.py"
        ],
        "pytorch-gpu-benchmark-synthetic/job-scripts-isambard/submit_v100.sh": [
            "benchmark_models.py"
        ]
    },
    "elsa-lab/MVATeam1": {
        "MVATeam1/tools/slurm_sahi_parallel.sh": [
            "tools/sahi_evaluation_slurm.py",
            "configs/mva2023_baseline/centernet_resnet18_140e_coco_finetune.py"
        ]
    },
    "mabarnes/moment_kinetics": {
        "moment_kinetics/machines/generic-batch-template/jobscript-restart.template": [
            "run_moment_kinetics.jl"
        ],
        "moment_kinetics/machines/archer/jobscript-precompile-no-run.template": [
            "precompile-no-run.jl"
        ],
        "moment_kinetics/machines/archer/jobscript-postprocess.template": [
            "run_makie_post_processing.jl"
        ],
        "moment_kinetics/machines/marconi/jobscript-precompile.template": [
            "precompile.jl"
        ],
        "moment_kinetics/machines/marconi/jobscript-run.template": [
            "run_moment_kinetics.jl"
        ]
    },
    "micbia/SegU-Net": {
        "SegU-Net/predsegunet.daint": [
            "pred_segUNet.py"
        ],
        "SegU-Net/segunet.daint": [
            "opt_talos.py",
            "segUNet.py"
        ],
        "SegU-Net/depr/segunet.jade2": [
            "opt_talos.py",
            "segUNet.py"
        ],
        "SegU-Net/jobspec-cfg/segUNet.py": [
            "utils_plot/postpros_plot.py"
        ]
    },
    "micbia/EoRNN": {
        "EoRNN/eornn.sh": [
            "TrainingEoRNN.py"
        ]
    },
    "micbia/mirto": {
        "mirto/ms_skalow.daint.sh": [
            "karabo_ms_skalow.py"
        ],
        "mirto/create_mockobs.sh": [
            "karabo_ms_skalow.py"
        ]
    },
    "erccarls/hyades_scripts": {
        "hyades_scripts/rungalprop_jobarray.sh": [
            "RunAnalysis_P8.py"
        ]
    },
    "tobias-liaudat/wf-psf": {
        "wf-psf/method-comparison/jobs/rca_data_gen_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-RCA.py"
        ],
        "wf-psf/method-comparison/jobs/psfex_run_candide.sh": [
            "./method-comparison/scripts/psfex_script.py"
        ],
        "wf-psf/method-comparison/jobs/mccd_data_gen_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-MCCD.py"
        ],
        "wf-psf/method-comparison/jobs/psfex_SR_run_d2_candide.sh": [
            "./method-comparison/scripts/psfex_script_SR.py"
        ],
        "wf-psf/method-comparison/jobs/psfex_data_gen_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-PSFEx.py"
        ],
        "wf-psf/method-comparison/jobs/psfex_run_d4_candide.sh": [
            "./method-comparison/scripts/psfex_script.py"
        ],
        "wf-psf/method-comparison/jobs/mccd_data_gen_shifts_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-MCCD.py"
        ],
        "wf-psf/method-comparison/jobs/psfex_data_gen_shifts_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-PSFEx.py"
        ],
        "wf-psf/method-comparison/jobs/rca_data_gen_shifts_candide.sh": [
            "./method-comparison/scripts/dataset-conversion-RCA-intrapixshifts.py"
        ]
    },
    "jayleicn/singularity": {
        "singularity/scripts/train_vqa.sh": [
            "tasks/vqa.py"
        ],
        "singularity/scripts/eval_vqa.sh": [
            "tasks/vqa.py"
        ],
        "singularity/scripts/pretrain.sh": [
            "tasks/pretrain.py"
        ]
    },
    "HanxunH/SCELoss-Reproduce": {
        "SCELoss-Reproduce/slurm/ce_loss0.2.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/sce_loss0.6.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/ce_loss0.8.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/sce_loss0.0.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/ce_loss0.0.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/ce_loss0.6.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/sce_loss0.8.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/sce_loss0.2.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/ce_loss0.4.slurm": [
            "train.py"
        ],
        "SCELoss-Reproduce/slurm/sce_loss0.4.slurm": [
            "train.py"
        ]
    },
    "HanxunH/MDAttack": {
        "MDAttack/scripts/attack.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/MNIST.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/CIFAR10.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/WebVisionMini.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/CIFAR100.slurm": [
            "main.py"
        ]
    },
    "HanxunH/COMP90051-2019S2-Project1": {
        "COMP90051-2019S2-Project1/script/train_sentence_transformer.slurm": [
            "train_sentence_transformers.py"
        ]
    },
    "HanxunH/Active-Passive-Losses": {
        "MDAttack/scripts/attack.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/MNIST.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/CIFAR10.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/WebVisionMini.slurm": [
            "main.py"
        ],
        "Active-Passive-Losses/script/CIFAR100.slurm": [
            "main.py"
        ]
    },
    "mmazab/LifeQA": {
        "LifeQA/scripts/flux/extract_features.pbs": [
            "feature_extraction/extract_features.py"
        ]
    },
    "universome/class-norm": {
        "class-norm/slurm/slurm_firelab_job.sh": [
            "configs/zsl.yml"
        ]
    },
    "blutjens/eie-earth-public": {
        "eie-earth-public/sandbox/Pix2pixHD/Train_conditional_binary_scratch_spectral_lpips.sh": [
            "src/models/Pix2pixHD/train.py"
        ]
    },
    "TheLemonPig/OpAL": {
        "OpAL/main.sh": [
            "main_slurm.py"
        ]
    },
    "LuxImagingAI/MONAI-BRATS": {
        "MONAI-BRATS/brats_train_hpc.sh": [
            "brats_train.py"
        ]
    },
    "andthum/hpc_submit_scripts": {
        "hpc_submit_scripts/analysis/lintf2_ether/gmx/rdf_slab-z_OE.sh": [
            "AUTHORS.rst"
        ],
        "hpc_submit_scripts/simulation/gmx/gmx_mdrun.sh": [
            "AUTHORS.rst"
        ]
    },
    "LTTM/SDR": {
        "SDR/script_19_1_step0.slurm": [
            "run.py"
        ],
        "SDR/script_19_1_step1.slurm": [
            "run.py"
        ]
    },
    "morenes/dcra": {
        "dcra/exp/run.sh": [
            "src/main.cpp"
        ]
    },
    "ranebhushan/cs525_project": {
        "cs525_project/run.sh": [
            "src/main.py"
        ]
    },
    "Dranoxgithub/propaganda-nlp-new": {
        "propaganda-nlp-new/long-quick.sh": [
            "run_chunk.py"
        ],
        "propaganda-nlp-new/hier1.sh": [
            "run_chunk.py"
        ],
        "propaganda-nlp-new/hier.sh": [
            "run_chunk.py"
        ],
        "propaganda-nlp-new/fix_crf.sh": [
            "run_chunk.py"
        ],
        "propaganda-nlp-new/train_chunk.sh": [
            "run_chunk.py"
        ],
        "propaganda-nlp-new/nofix_crf.sh": [
            "run_chunk.py"
        ]
    },
    "StianHanssen/OptiNet": {
        "OptiNet/scripts/eval.slurm": [
            "evaluation.py"
        ],
        "OptiNet/scripts/job.slurm": [
            "main.py"
        ]
    },
    "LWprogramming/audiolm-pytorch-training": {
        "audiolm-pytorch-training/sbatch_job.sh": [
            "sbatch_job.sh",
            "audiolm_pytorch_demo_laion.py"
        ],
        "audiolm-pytorch-training/jobspec-cfg/sbatch_job.sh": [
            "sbatch_job.sh",
            "audiolm_pytorch_demo_laion.py"
        ],
        "audiolm-pytorch-training/jobspec-cfg/audiolm_pytorch_demo_laion.py": [
            "audiolm_pytorch_demo_laion.py"
        ]
    },
    "umd-huang-lab/SWIFT": {
        "SWIFT/Scripts/8-Ring-IID-Scripts/swift-iid-2.sh": [
            "Train.py"
        ],
        "SWIFT/Scripts/8-Ring-IID-Scripts/pdsgdiid.sh": [
            "Train.py"
        ]
    },
    "CERC-AAI/Robin": {
        "Robin/scripts/v1_5/pretrain_multinodes.sh": [
            "./scripts/zero2.json"
        ]
    },
    "zxgx/GPT-example": {
        "GPT-example/run.sbatch": [
            "main.py"
        ]
    },
    "qinqian/rms_analysis": {
        "rms_analysis/run.sh": [
            "identify_doublet.py",
            "recluster_velocity_excludingblood.R",
            "seurat_pipeline.R",
            "intersect_seurat_velocity_toloom.R",
            "generate_v6_degenes.R",
            "annotate_celltypes.R",
            "gsea_pipeline.R",
            "velocity_pipeline.R",
            "velocity_pipeline.py",
            "scanpy_velocity_stream.ipynb",
            "velocity_pipeline_dynamical_latentime.py",
            "seurat_sara_pipeline.R",
            "generate_v4_degenes.R",
            "Fig1_integration_recluster_individual_tumor.R",
            "velocity_pipeline_steady.py",
            "Snakefile.10x"
        ]
    },
    "filippobistaffa/llm-skill-extractor": {
        "llm-skill-extractor/label-gemma.sh": [
            "label.py"
        ],
        "llm-skill-extractor/map.sh": [
            "map.py"
        ],
        "llm-skill-extractor/label-vicuna.sh": [
            "label.py"
        ],
        "llm-skill-extractor/label-mixtral.sh": [
            "label.py"
        ],
        "phd-day-parallelization/cluster-parallel/description-mixtral-gpu.sh": [
            "description.py"
        ],
        "phd-day-parallelization/cluster-parallel/description-mixtral.sh": [
            "description.py"
        ],
        "phd-day-parallelization/cluster-parallel/description-vicuna-gpu.sh": [
            "description.py"
        ]
    },
    "erdc/air-water-vv": {
        "proteus-mprans/jobspec-cfg/setup.py": [
            "__init__.py"
        ]
    },
    "erdc/proteus": {
        "proteus/dev_env_mike.sh": [
            "setup.py"
        ],
        "proteus/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "proteus-mprans/jobspec-cfg/setup.py": [
            "setup.py"
        ]
    },
    "erdc/proteus-mprans": {
        "proteus/dev_env_mike.sh": [
            "setup.py"
        ],
        "proteus/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "proteus-mprans/jobspec-cfg/setup.py": [
            "setup.py"
        ]
    },
    "sailfish009/JuliaChem.jl": {
        "JuliaChem.jl/example_inputs/ARPA-E/6-311/fig1c.sh": [
            "example_scripts/minimal-rhf-benchmark.jl",
            "example_inputs/ARPA-E/6-311/fig1c.json"
        ],
        "JuliaChem.jl/example_inputs/ARPA-E/6-311/fig1b.sh": [
            "example_scripts/minimal-rhf-benchmark.jl",
            "example_inputs/ARPA-E/6-311/fig1b.json"
        ],
        "JuliaChem.jl/example_inputs/ARPA-E/6-311/fig1h.sh": [
            "example_scripts/minimal-rhf-benchmark.jl",
            "example_inputs/ARPA-E/6-311/fig1h.json"
        ]
    },
    "sailfish009/SARS-CoV-2": {
        "SARS-CoV-2/scripts/extract_genes.sh": [
            "python/get-raw-duplicates.py",
            "python/remove-seq.py",
            "python/merge-duplicates.py",
            "python/fix-duplicates.py",
            "python/update-fasta-duplicates.py",
            "data/comparative-annotation.json",
            "data/ctl/epitopes.json",
            "data/evo_annotation.json",
            "data/mafs.csv",
            "data/evo_freqs.csv",
            "scripts/reroot-on-oldest.bf"
        ]
    },
    "petriiick/PM2.5-prediction-with-Satellite-images": {
        "PM2.5-prediction-with-Satellite-images/run_image_preprocessing.sh": [
            "Image_Preprocessing_1.py"
        ]
    },
    "marco-oliva/telseq": {
        "telseq/run.sh": [
            "config/cluster.json"
        ]
    },
    "siddpatny/movie-poster-generator": {
        "movie-poster-generator/cvstart.s": [
            "cvProject.py"
        ],
        "Piano-Transcription-on-Cloud/launch_gpu.s": [
            "train.py"
        ]
    },
    "siddpatny/Piano-Transcription-on-Cloud": {
        "Piano-Transcription-on-Cloud/launch_transcribe.s": [
            "transcribe.py"
        ],
        "Piano-Transcription-on-Cloud/launch_gpu.s": [
            "train.py"
        ],
        "Piano-Transcription-on-Cloud/launch_evaluate.s": [
            "evaluate.py"
        ]
    },
    "PennChopMicrobiomeProgram/16S_QIIME2": {
        "16S_QIIME2/run_snakemake.bash": [
            "./config.yaml",
            "config.yaml"
        ]
    },
    "AdamOCamilli/AlphafoldScripts": {
        "AlphafoldScripts/runaf2.sh": [
            "runaf2.sh"
        ],
        "AlphafoldScripts/jobspec-cfg/runaf2.sh": [
            "runaf2.sh"
        ]
    },
    "HPI-Information-Systems/AutoTSAD": {
        "AutoTSAD/slurm-run.sh": [
            "autotsad-exp-config.yaml"
        ]
    },
    "tud-zih-ki/minimalDDP": {
        "minimalDDP/MultiProcPerGPU_DPP.sh": [
            "MultiProcPerGPU_DPPMPI.py"
        ],
        "minimalDDP/jobspec-cfg/MultiProcPerGPU_DPPMPI.py": [
            "slurmTorch.py"
        ]
    },
    "orjanic/gym_quad": {
        "gym_quad/job_cpu.slurm": [
            "train3d.py",
            "run3d.py"
        ],
        "gym_quad/job_gpu.slurm": [
            "train3d.py"
        ]
    },
    "drewnutt/DDG": {
        "DDG/comp_row.slurm": [
            "cri_bindb_old.txt"
        ]
    },
    "12yuens2/cmlsga-jmetalpy": {
        "cmlsga-jmetalpy/smac.slurm": [
            "src/tuning.py"
        ]
    },
    "FormingWorlds/PROTEUS": {
        "PROTEUS/tools/SlurmSubmit.sh": [
            "PROTEUS.env",
            "tools/GridPROTEUS.py"
        ]
    },
    "Samuel-CHLam/rnn_ergodicity": {
        "rnn_ergodicity/Script.sh": [
            "main.py"
        ]
    },
    "goshng/RNASeq-Analysis": {
        "RNASeq-Analysis/sh/batch.sh": [
            "pl/bwa-summary.pl",
            "pl/samtools-pileup.pl",
            "pl/de-count.pl",
            "pl/feature-genome.pl",
            "pl/transcript-parsernaseq.pl",
            "pl/bwa-pos2wig.pl",
            "pl/extract-msa.pl",
            "pl/geneontology.pl",
            "R/mannwhitney.R",
            "pl/rnaplex.pl"
        ],
        "RNASeq-Analysis/sh/batch2.sh": [
            "pl/prinseq-lite.pl",
            "pl/bwa-summary.pl",
            "run",
            "pl/feature-genome.pl",
            "pl/transcript-parsernaseq.pl",
            "pl/bwa-pos2wig.pl",
            "pl/extract-msa.pl",
            "pl/geneontology.pl",
            "R/mannwhitney.R",
            "pl/rnaplex.pl"
        ],
        "RNASeq-Analysis/sh/batch3.sh": [
            "pl/prinseq-lite.pl"
        ],
        "RNASeq-Analysis/jobspec-cfg/pl/feature-genome.pl": [
            "pl/feature-genome.pl"
        ],
        "RNASeq-Analysis/jobspec-cfg/pl/transcript-parsernaseq.pl": [
            "pl/transcript-parsernaseq.pl",
            "pl/transcript-genecoverage.pl"
        ],
        "RNASeq-Analysis/jobspec-cfg/pl/bwa-pos2wig.pl": [
            "pl/bwa-pos2wig.pl"
        ],
        "RNASeq-Analysis/jobspec-cfg/pl/bwa-summary.pl": [
            "pl/bwa-summary.pl"
        ],
        "Mauve-Analysis/sh/probability-recombination.sh": [
            "conf/README"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/recombination-intensity1-genes.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/recombination-intensity1-map.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/extractClonalOriginParameter9.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/count-observed-recedge.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/splitCOXMLPerIteration.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/R/mannwhitney.R": [
            "R/mannwhitney.R"
        ]
    },
    "goshng/Mauve-Analysis": {
        "RNASeq-Analysis/sh/batch.sh": [
            "cac/sim/batch_task_gui.sh",
            "R/mannwhitney.R"
        ],
        "RNASeq-Analysis/sh/batch2.sh": [
            "run",
            "R/mannwhitney.R"
        ],
        "Mauve-Analysis/sh/recombination-count.sh": [
            "pl/count-observed-recedge.pl",
            "cac/sim/batch_task_gui.sh",
            "cac/sim/run2.sh"
        ],
        "Mauve-Analysis/sh/probability-recombination.sh": [
            "conf/README",
            "pl/convert-gff-ingene.pl",
            "pl/locate-gene-in-block.pl",
            "pl/recombination-intensity1-map.pl",
            "pl/ri-virulence.pl",
            "pl/recombination-intensity1-probability.pl",
            "test/recombprob/batch.sh",
            "pl/probability-recedge-gene.pl",
            "R/gene-list.R",
            "cac/sim/batch_task_gui.sh",
            "cac/sim/run2.sh"
        ],
        "Mauve-Analysis/sh/batch.sh": [
            "species/cornell5",
            "pl/blocksplit2fasta.pl",
            "pl/getClonalTree.pl",
            "pl/report-clonalorigin-job.pl",
            "pl/computeMedians.pl",
            "pl/scatter-plot-parameter.pl",
            "pl/count-observed-recedge.pl",
            "pl/recombination-intensity1-map.pl",
            "pl/recombination-intensity1-probability.pl",
            "pl/convert-gff-ingene.pl",
            "pl/locate-gene-in-block.pl",
            "pl/recombination-intensity1-genes.pl",
            "pl/probability-recedge-gene.pl",
            "pl/splitCOXMLPerIteration.pl",
            "pl/get-block-length.pl",
            "pl/map-tree-topology.pl",
            "pl/extractClonalOriginParameter9.pl",
            "pl/blocksplit.pl"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/recombination-intensity1-genes.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/recombination-intensity1-map.pl": [
            "run",
            "pl/recombination-intensity1-map.pl"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/extractClonalOriginParameter9.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/scatter-plot-parameter.pl": [
            "pl/scatter-plot-parameter.pl"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/probability-recedge-gene.pl": [
            "pl/probability-recedge-gene.pl"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/count-observed-recedge.pl": [
            "pl/count-observed-recedge.pl",
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/recombination-intensity1-probability.pl": [
            "pl/recombination-intensity1-probability.pl"
        ],
        "Mauve-Analysis/jobspec-cfg/pl/splitCOXMLPerIteration.pl": [
            "run"
        ],
        "Mauve-Analysis/jobspec-cfg/R/mannwhitney.R": [
            "R/mannwhitney.R"
        ],
        "Mauve-Analysis/jobspec-cfg/test/recombprob/batch.sh": [
            "pl/recombination-intensity1-probability.pl"
        ]
    },
    "farakiko/particleflow": {
        "particleflow/scripts/tallinn/a100/pytorch.sh": [
            "mlpf/pyg_pipeline.py",
            "parameters/pytorch/pyg-cms.yaml"
        ],
        "particleflow/scripts/flatiron/pipeline_train_multi_node.slurm": [
            "mlpf/pipeline.py"
        ]
    },
    "lukeconibear/distributed_deep_learning": {
        "distributed_deep_learning/ray_train_on_bede.slurm": [
            "test_if_gpu_available_tf.py",
            "test_if_gpu_available_pytorch.py",
            "tensorflow_mnist_example.py"
        ]
    },
    "brainfo/snRNAsnake": {
        "snRNAsnake/send_snake_jobs.sh": [
            "Snakefile",
            "cluster.yaml"
        ]
    },
    "Delphboy/superpixel-features": {
        "superpixel-features/submit_whole.sh": [
            "main.py",
            "merge_and_clean.py"
        ],
        "superpixel-features/submit_super.sh": [
            "main.py",
            "merge_and_clean.py"
        ]
    },
    "pleoni/game-of-life": {
        "game-of-life/plot/old/life_hpc.sh": [
            "life_hpc.c"
        ]
    },
    "wassermanlab/Variant_catalogue_pipeline": {
        "Variant_catalogue_pipeline/Variant_Catalogue_v1.sh": [
            "main.nf"
        ]
    },
    "luciat-92/Multiomic_VAE": {
        "Multiomic_VAE/scripts/eval_ae_gan.sbatch": [
            "experiments/plot_umap_results_run.R"
        ],
        "Multiomic_VAE/scripts/eval_mvae_gan_beta0005.sbatch": [
            "experiments/plot_umap_results_run.R",
            "experiments/plot_corr_encoded_space.R"
        ],
        "Multiomic_VAE/scripts/train_ae_gan.sbatch": [
            "train/training.py"
        ]
    },
    "JusperLee/CTCNet": {
        "CTCNet/submit.sh": [
            "eval.py",
            "submit.sh"
        ],
        "CTCNet/jobspec-cfg/submit.sh": [
            "eval.py",
            "submit.sh"
        ]
    },
    "Averyyy/PyTorch-Anime2Real": {
        "PyTorch-Anime2Real/train.SBATCH": [
            "train.py"
        ]
    },
    "afcarl/CharPOS": {
        "CharPOS/run.sh": [
            "pos_tag.py"
        ],
        "CharPOS/run_c1.sh": [
            "pos_tag.py"
        ]
    },
    "cvg/LabelMaker": {
        "LabelMaker/jobspec-cfg/scripts/replica_pipeline.sh": [
            "scripts/replica2labelmaker.py",
            "models/mask3d_inst.py",
            "models/omnidata_normal.py",
            "models/omnidata_depth.py",
            "models/hha_depth.py",
            "models/internimage.py",
            "models/grounded_sam.py",
            "models/ovseg.py",
            "labelmaker/consensus.py",
            "labelmaker/lifting_3d/lifting_points.py",
            "labelmaker/lifting_3d/lifting.sh",
            "models/cmx.py"
        ],
        "LabelMaker/scripts/replica_singularity_slurm.sh": [
            "./scripts/replica_pipeline.sh"
        ]
    },
    "nmasto/refuge_connectivity": {
        "refuge_connectivity/multistate.sh": [
            "./scripts/Analyses_Mallard_MultistateModel.R"
        ]
    },
    "abhineet123/ipsc_vita": {
        "ipsc_vita/cmd/vita-ipsc-ext_reorg_roi_g2_0_37_ytvis_swin.sh": [
            "train_net_vita.py"
        ]
    },
    "abhineet123/ipsc_vnext": {
        "ipsc_vnext/cmd/ipsc-all_frames_roi_g2_0_37_ytvis_swinL.sh": [
            "projects/IDOL/train_net.py"
        ],
        "ipsc_vnext/cmd/ipsc-ext_reorg_roi_g2_0_37_ytvis_swinL.sh": [
            "projects/IDOL/train_net.py"
        ]
    },
    "schaferd/Modular_DSCA_TF_Prediction": {
        "Modular_DSCA_TF_Prediction/train.sh": [
            "params.sh"
        ],
        "Modular_DSCA_TF_Prediction/eval_saved_models/eval.sh": [
            "params.sh"
        ]
    },
    "laihuiyuan/pre-trained-formality-transfer": {
        "pre-trained-formality-transfer/pg.sh": [
            "train.py",
            "infer.py",
            "classifier/test.py",
            "utils/tokenizer.py",
            "utils/multi-bleu.perl",
            "utils/cal_bleurt.py"
        ]
    },
    "meyersbs/mitre-attack-mapper": {
        "mitre-attack-mapper/rc_slurm.sh": [
            "./main.py",
            "./data/CPTC2018.csv"
        ],
        "developer-apologies/rc_slurm.sh": [
            "main.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm12.sh": [
            "main.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm2.sh": [
            "main.py",
            "./main.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm3.sh": [
            "main.py"
        ]
    },
    "meyersbs/developer-apologies": {
        "mitre-attack-mapper/rc_slurm.sh": [
            "./main.py"
        ],
        "developer-apologies/rc_slurm.sh": [
            "main.py",
            "tests.py",
            "scripts/prepare_data_for_zenodo.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm12.sh": [
            "main.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm7.sh": [
            "scripts/count_apologies.py"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm2.sh": [
            "main.py",
            "tests.py",
            "./main.py",
            "repo_lists/repos_850stars_2021_09_07_09-03-45.txt"
        ],
        "developer-apologies/old_slurm_scripts/rc_slurm3.sh": [
            "main.py"
        ]
    },
    "andrewdmeier/slurm_mnist": {
        "slurm_mnist/mnist.cmd": [
            "mnist_classify.py"
        ]
    },
    "sam-widmayer/MUGA_reference_data": {
        "MUGA_reference_data/code/GigaMUGA_Infer_Genotypes_submit.sh": [
            "code/GigaMUGA_Infer_Genotypes_submit.sh",
            "code/GigaMUGA_Infer_Genotypes.R"
        ],
        "MUGA_reference_data/code/GigaMUGA_ConsensusGenos_submit.sh": [
            "code/GigaMUGA_ConsensusGenos_submit.sh",
            "code/GigaMUGA_ConsensusGenos.R"
        ],
        "MUGA_reference_data/code/GigaMUGA_FounderDendGenos_submit.sh": [
            "code/GigaMUGA_FounderDendGenos_submit.sh",
            "code/GigaMUGA_FounderDendGenos.R"
        ],
        "MUGA_reference_data/jobspec-cfg/code/GigaMUGA_Infer_Genotypes_submit.sh": [
            "code/GigaMUGA_Infer_Genotypes_submit.sh",
            "code/GigaMUGA_Infer_Genotypes.R"
        ],
        "MUGA_reference_data/jobspec-cfg/code/GigaMUGA_ConsensusGenos_submit.sh": [
            "code/GigaMUGA_ConsensusGenos_submit.sh",
            "code/GigaMUGA_ConsensusGenos.R"
        ],
        "MUGA_reference_data/jobspec-cfg/code/GigaMUGA_FounderDendGenos_submit.sh": [
            "code/GigaMUGA_FounderDendGenos_submit.sh",
            "code/GigaMUGA_FounderDendGenos.R"
        ]
    },
    "weiya711/sam": {
        "sam/jobspec-cfg/scripts/get_data/download_suitesparse.sh": [
            "./scripts/get_data/download_suitesparse.sh"
        ],
        "sam/scripts/get_data/download_suitesparse.sh": [
            "./scripts/get_data/download_suitesparse.sh"
        ]
    },
    "davidmurray/cycling-network-design": {
        "cycling-network-design/examples/slurm_script.sh": [
            "code/genetic_algorithm.py"
        ]
    },
    "damonbayer/covid_SEIHR_county": {
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/5a_calcat.sh": [
            "scripts/format_results_for_calcat.R"
        ],
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/5b_figures.sh": [
            "scripts/make_figures.R"
        ],
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/4_tidy_pp_gq.sh": [
            "scripts/tidy_posterior_predictive_and_generated_quantities.R",
            "slurm_submissions/5a_calcat.sh",
            "slurm_submissions/5b_figures.sh"
        ],
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/3_gen_pp_gq.sh": [
            "slurm_submissions/4_tidy_pp_gq.sh",
            "scripts/generate_posterior_predictive_and_generated_quantities.jl"
        ],
        "covid_SEIHR_county/slurm_submissions/2_fit_model.sh": [
            "slurm_submissions/3_gen_pp_gq.sh",
            "scripts/fit_model.jl"
        ],
        "covid_SEIHR_county/slurm_submissions/4_tidy_pp_gq.sh": [
            "scripts/tidy_posterior_predictive_and_generated_quantities.R",
            "slurm_submissions/5a_calcat.sh",
            "slurm_submissions/5b_figures.sh"
        ],
        "covid_SEIHR_county/slurm_submissions/3_gen_pp_gq.sh": [
            "slurm_submissions/4_tidy_pp_gq.sh",
            "scripts/generate_posterior_predictive_and_generated_quantities.jl"
        ],
        "semi_parametric_COVID_19_OC_model/slurm_submissions/fit_models.sh": [
            "scripts/fit_model.jl"
        ]
    },
    "damonbayer/semi_parametric_COVID_19_OC_model": {
        "covid_SEIHR_county/slurm_submissions/2_fit_model.sh": [
            "scripts/fit_model.jl"
        ],
        "semi_parametric_COVID_19_OC_model/slurm_submissions/fit_models.sh": [
            "scripts/fit_model.jl"
        ]
    },
    "vshanka23/dgrp_gwas_final": {
        "dgrp_gwas_final/snakemake_submitter.sh": [
            "Snakefile",
            "config.yaml",
            "Snakefile_GCTA"
        ]
    },
    "TimothyZG/wliura2024": {
        "wliura2024/recipe/train/resnets_gtsrb.sh": [
            "recipe/train/train_resnet.py"
        ]
    },
    "jpflores-13/bagPipes": {
        "bagPipes/RNApipe.sh": [
            "config/requirements.txt",
            "workflows/RNApipeCore.snakefile",
            "./workflows/utils/status.py",
            "workflows/mergeSignal.snakefile"
        ],
        "bagPipes/jobspec-cfg/workflows/RNApipeCore.snakefile": [
            "workflows/utils/txImporter.R"
        ]
    },
    "FGRCL/ML-BP-Estimation": {
        "ML-BP-Estimation/sweep-gpu.sh": [
            "requirements.txt"
        ],
        "ML-BP-Estimation/sweep.sh": [
            "requirements.txt"
        ]
    },
    "ThomasBrazier/ldhat-snakemake-pipeline": {
        "ldhat-snakemake-pipeline/bash.sh": [
            "workflow/Snakefile"
        ]
    },
    "SasoPavlic/NiaNetCAE": {
        "NiaNetCAE/slurm_scripts/nianetcae.sh": [
            "main.py"
        ]
    },
    "WalterNadalin/ParallelFFT": {
        "ParallelFFT/scripts/batch.sh": [
            "data/times.dat"
        ]
    },
    "HSE-LAMBDA/ai4material_design": {
        "ai4material_design/scripts/ASPIRE-1/run_experiments_nscc.pbs": [
            "run_experiments.py"
        ]
    },
    "HSIYJND/DeepForest": {
        "DeepForest/HPC/submit_retraining.sh": [
            "train.py"
        ],
        "DeepForest/HPC/submit_training.sh": [
            "train.py"
        ],
        "DeepForest/HPC/submit_predict.sh": [
            "predict.py"
        ],
        "DeepForest/HPC/submit_eval.sh": [
            "eval.py"
        ]
    },
    "HassounLab/ELP": {
        "ELP/run_viz.sh": [
            "run-exp.py"
        ],
        "ELP/run_rc.sh": [
            "run-exp.py"
        ],
        "ELP/run_pr.sh": [
            "run-exp.py"
        ],
        "ELP/run_rr.sh": [
            "run-exp.py"
        ]
    },
    "marcjwilliams1/dnds-clonesize": {
        "dnds-clonesize/launch_job_lsf.sh": [
            "cluster_lsf.yaml"
        ]
    },
    "egilron/elsa-introduction": {
        "elsa-introduction/elsa_fox.slurm": [
            "requirements.txt",
            "sq_label_elsa.py"
        ]
    },
    "emaliemcmahon/FS_analysis": {
        "FS_analysis/run_04_preproc.sh": [
            "sessdir"
        ]
    },
    "hebrewsnabla/lsfman": {
        "lsfman/qorca.sh": [
            "qorca.sh"
        ],
        "lsfman/jobspec-cfg/qorca.sh": [
            "qorca.sh"
        ]
    },
    "alexthiery/10x_neural_plate_border": {
        "10x_neural_plate_border/run_scripts/run_seurat_crick.sh": [
            "./NF-downstream_analysis/samplesheet.csv"
        ],
        "10x_neural_plate_border/run_scripts/NF-scRNAseq_alignment_crick.sh": [
            "./NF-scRNAseq_alignment/main.nf",
            "./NF-scRNAseq_alignment/crick_samplesheet.csv"
        ],
        "10x_neural_plate_border/run_scripts/NF-downstream_analysis_crick.sh": [
            "./NF-downstream_analysis/main.nf",
            "./NF-downstream_analysis/samplesheet.csv"
        ]
    },
    "DanielSc4/RewardLM": {
        "RewardLM/scripts_hpc/interpret_scripts/falcon_int_FT.sh": [
            "configs/falcon7B.yaml",
            "interpretability/interp_configs/i_debug_prod.yaml",
            "configs/falcon7b-FT.yaml",
            "configs/falcon7b-RL.yaml"
        ],
        "RewardLM/scripts_hpc/interpret_scripts/red_int_PT.sh": [
            "configs/RedPajama-INCITE-Chat-3B-v1.yaml",
            "interpretability/interp_configs/i_debug_prod.yaml",
            "configs/RedPajama-INCITE-Chat-3B-LoRA-FT.yaml",
            "configs/RedPajama-INCITE-Chat-3B-LoRA-RL.yaml"
        ]
    },
    "nikhilmsreedhar/brainTumorSegmentation": {
        "brainTumorSegmentation/brainSeg.slurm": [
            "train.py"
        ],
        "brainTumorSegmentation/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "coreyker/dnn-mgr": {
        "dnn-mgr/lmd/lmd_prep.sh": [
            "prepare_dataset.py"
        ]
    },
    "bedapub/sapiens": {
        "sapiens/resources/example_job.bsub": [
            "sapiens/train.py"
        ]
    },
    "darkreactions/platipus": {
        "platipus/mpi_run.sh": [
            "run_mpi.py"
        ],
        "platipus/maverick.sh": [
            "run_mpi.py"
        ]
    },
    "MJ10/mogfn-al": {
        "mogfn-al/job-cc.sh": [
            "requirements-cc.txt",
            "scripts/black_box_opt.py"
        ]
    },
    "cederican/diffusion_autoenc": {
        "diffusion_autoenc/run_mri.sh": [
            "test_manipulate.py"
        ]
    },
    "Anophel/image_similarity_study": {
        "image_similarity_study/jobspec-cfg/feature-extractor/scripts/run_extractor_singularity.sh": [
            "feature-extractor/extract_images.py"
        ],
        "image_similarity_study/feature-extractor/scripts/run_extractor_imagelist.sh": [
            "./feature-extractor/scripts/run_extractor_singularity.sh"
        ],
        "feature-extractor/scripts/run_extractor_imagelist.sh": [
            "./feature-extractor/scripts/run_extractor_singularity.sh"
        ]
    },
    "p-hss/weather-gan": {
        "weather-gan/jobs/train.sh": [
            "main.py"
        ]
    },
    "ClemsonGIS/PhotoScan_Scripts": {
        "PhotoScan_Scripts/procNodeArray.sub": [
            "procNodeArray.sub",
            "initProcNode.sh",
            "./initProcNode.sh"
        ],
        "PhotoScan_Scripts/jobspec-cfg/procNodeArray.sub": [
            "procNodeArray.sub",
            "initProcNode.sh",
            "./initProcNode.sh"
        ],
        "PhotoScan_Scripts/jobspec-cfg/initProcNode.sh": [
            "initProcNode.sh"
        ]
    },
    "metavannier/scRNAseq_analysis_workflow": {
        "scRNAseq_analysis_workflow/run_slurm.sh": [
            "Snakefile"
        ]
    },
    "sunbeam-labs/sbx_genome_assembly": {
        "sbx_genome_assembly/run_example.sh": [
            "./cluster.json"
        ]
    },
    "MLRichter/ld_experimental": {
        "ld_experimental/generate_dataset.sh": [
            "wiring_coco_inference.py"
        ]
    },
    "kylelare/Lamina-Chromatin-Model": {
        "Lamina-Chromatin-Model/dirmakr.sh": [
            "seq_C21.txt",
            "wall.py"
        ]
    },
    "FrancisCrickInstitute/Spatial-PHLEX": {
        "Spatial-PHLEX/run_Spatial-PHLEX.sh": [
            "./main.nf"
        ]
    },
    "pvrancx/DQN-tensorflow": {
        "DQN-tensorflow/hydra_job.sh": [
            "main.py"
        ]
    },
    "lygeng0427/trafficFlowVis": {
        "trafficFlowVis/scripts/script.sh": [
            "main.py"
        ],
        "trafficFlowVis/scripts/script_no_gpu.sh": [
            "main.py"
        ]
    },
    "dealexce/STEVE-1-Memory": {
        "STEVE-1-Memory/run_agent/1_gen_paper_videos.sh": [
            "steve1/run_agent/run_agent.py"
        ]
    },
    "galchenm/data_processing_pipeline": {
        "data_processing_pipeline/partial-to-change.bash": [
            "many_plots-upt-v2.py",
            "avr-peakogram-stream",
            "orientation-v2.py"
        ],
        "data_processing_pipeline/jobspec-cfg/many_plots-upt-v2.py": [
            "many_plots-upt-v2.py"
        ]
    },
    "STEllAR-GROUP/hpxMP": {
        "OctotigerSC19/slurm-octotiger.sh": [
            "LICENSE_1_0.txt"
        ]
    },
    "kumarkrishna/fastssl": {
        "fastssl/sbatch_sh_files/cc_run_fastssl_design_hparam_sweep.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/resnet50_barlow_sweep.sh": [
            "scripts/train_model_widthVary.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/resnet50_width_barlow.sh": [
            "scripts/train_model_widthVary.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_fastssl_imagenet.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_fastssl_imagenet_pytorch_hparam_sweep.sh": [
            "configs/cc_barlow_twins.yaml"
        ],
        "fastssl/sbatch_sh_files/resnet18_width_barlow.sh": [
            "scripts/train_model_widthVary.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_stl10_fastssl_design_hparam_sweep.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_fastssl_opt_hparam_sweep.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_fastssl.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/simclr_fastssl_hparam_sweep_resnet50.sh": [
            "scripts/train_model.py",
            "configs/cc_SimCLR.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/cc_run_stl10_fastssl_opt_hparam_sweep.sh": [
            "scripts/train_model.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/simclr_track_alpha_fastssl_design_hparams_sweep.sh": [
            "scripts/train_model.py",
            "configs/cc_SimCLR.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/verify_simclr.sh": [
            "scripts/train_model.py",
            "configs/cc_SimCLR.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/verify_vicreg.sh": [
            "scripts/train_model.py",
            "configs/cc_VICReg.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/final_exps/VICReg_lambda_pdim_res.sh": [
            "scripts/train_model.py",
            "configs/cc_VICReg.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/multiPatch/multiPatch_barlowTwins_fracTrain_results.sh": [
            "scripts/train_model_multiPatch.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/multiPatch/multiPatch_vicreg_fracTrain_results.sh": [
            "scripts/train_model_multiPatch.py",
            "configs/cc_VICReg.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/multiPatch/multiPatch_barlowTwins_sweep.sh": [
            "scripts/train_model_multiPatch.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/multiPatch/multiPatch_vicreg_sweep.sh": [
            "scripts/train_model_multiPatch.py",
            "configs/cc_VICReg.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/sbatch_sh_files/multiPatch/multiPatch_barlowTwins_fracTrain_stl10_results.sh": [
            "scripts/train_model_multiPatch.py",
            "configs/cc_barlow_twins.yaml",
            "configs/cc_precache.yaml",
            "configs/cc_classifier.yaml"
        ],
        "fastssl/jobspec-cfg/scripts/train_model.py": [
            "configs/barlow_twins.yaml",
            "configs/cc_barlow_twins.yaml"
        ],
        "fastssl/jobspec-cfg/scripts/train_model_widthVary.py": [
            "configs/barlow_twins.yaml",
            "configs/cc_barlow_twins.yaml"
        ],
        "fastssl/jobspec-cfg/scripts/train_model_multiPatch.py": [
            "configs/barlow_twins.yaml",
            "configs/cc_barlow_twins.yaml"
        ]
    },
    "Anirudh257/strm": {
        "strm/scripts/run_strm_ucf.sh": [
            "run.py"
        ],
        "strm/scripts/run_strm_hmdb.sh": [
            "run.py"
        ]
    },
    "gaarutyunov/graph-coder": {
        "graph-coder/scripts/train_pp.sbatch": [
            "./scripts/prepare.sh"
        ]
    },
    "UMBCvision/ISD": {
        "ISD/run_isd.sh": [
            "train_isd_r18.py",
            "train_isd.py"
        ],
        "ISD/run_isd_plus.sh": [
            "train_isd_plus.py"
        ],
        "ISD/run_isd_knn.sh": [
            "eval_knn.py"
        ]
    },
    "alexholdenmiller/bagel": {
        "bagel/train.sh": [
            "main.py"
        ]
    },
    "Reevest29/DepressionDetection": {
        "DepressionDetection/my.job": [
            "train.py"
        ]
    },
    "fracogno/UNet-ResWDCGAN": {
        "UNet-ResWDCGAN/slurm.sh": [
            "trainResWDCGAN.py",
            "trainUNetGAN.py",
            "generate.py"
        ]
    },
    "KostiukIvan/PolyGen": {
        "PolyGen/run.sh": [
            "experiments/main.py"
        ]
    },
    "bthtsang/DeepClassifierNoveltyDetection": {
        "DeepClassifierNoveltyDetection/train_joint.slurm": [
            "survey_rnngmm_classifier.py",
            "classify_noveltydetect.py"
        ]
    },
    "pedroandreou/Cypriot-LLM": {
        "Cypriot-LLM/job.sub": [
            "requirements.txt"
        ]
    },
    "Jbwasse2/DenseFusion": {
        "DenseFusion/py_script.pbs": [
            "py_gpu_script.out",
            "./experiments/scripts/eval_linemod.sh"
        ],
        "DenseFusion/jobspec-cfg/py_gpu_script.out": [
            "./tools/train.py",
            "./tools/eval_linemod.py",
            "trained_checkpoints/linemod/pose_refine_model_493_0.006761023565178073.pth"
        ],
        "DenseFusion/jobspec-cfg/experiments/scripts/eval_linemod.sh": [
            "./tools/eval_linemod.py"
        ]
    },
    "apurvagyan/mini-rna-splice": {
        "mini-rna-splice/load.sh": [
            "load_batch.py"
        ],
        "mini-rna-splice/fold2array.sh": [
            "fold2array_batch.py"
        ],
        "mini-rna-splice/rna_job.sh": [
            "process_rna_seq.py"
        ]
    },
    "augmented-pokoban/pokoban-agent": {
        "pokoban-agent/submit_policy.sh": [
            "main_policy.py"
        ],
        "pokoban-agent/submit_encoder.sh": [
            "main_encoder.py"
        ],
        "pokoban-agent/submit_policy_gpu.sh": [
            "main_policy.py"
        ],
        "pokoban-agent/submit_data_generator.sh": [
            "main_autoenc_data.py"
        ]
    },
    "5l1v3r1/ArtsyML": {
        "ArtsyML/run_job.sh": [
            "video_stream_benchmark_parallel.py"
        ]
    },
    "5l1v3r1/nmt": {
        "nmt/nmt.pbs": [
            "nmt.pbs"
        ],
        "nmt/jobspec-cfg/nmt.pbs": [
            "nmt.pbs"
        ]
    },
    "5l1v3r1/LDDL": {
        "LDDL/jobspec-cfg/examples/local_example.sh": [
            "docker/build.sh",
            "docker/interactive.sh",
            "benchmarks/torch_train.py"
        ],
        "LDDL/examples/slurm_example.sub": [
            "docker/build.sh",
            "examples/local_example.sh",
            "benchmarks/torch_train.py"
        ]
    },
    "madratman/deeprl_hw2_src": {
        "deeprl_hw2_src/slurm_scripts/single_scripts/double_dqn_brekout.sh": [
            "dqn_atari.py"
        ],
        "deeprl_hw2_src/slurm_scripts/single_scripts/vanilla_dqn_enduro.sh": [
            "dqn_atari.py"
        ]
    },
    "nexo-erlangen/UVWireRecon": {
        "UVWireRecon/submit_run_cnn.sh": [
            "wrapper.sh"
        ],
        "MCDataDiscriminator/submit_run_cnn.sh": [
            "wrapper.sh"
        ]
    },
    "nexo-erlangen/MCDataDiscriminator": {
        "UVWireRecon/submit_run_cnn.sh": [
            "wrapper.sh"
        ],
        "MCDataDiscriminator/submit_run_cnn.sh": [
            "wrapper.sh"
        ]
    },
    "Noahs-ARK/soft_patterns": {
        "soft_patterns/jobspec-cfg/baselines/cnn.py": [
            "./baselines/cnn.py",
            "soft_patterns.py"
        ],
        "soft_patterns/jobspec-cfg/baselines/lstm.py": [
            "./baselines/lstm.py",
            "soft_patterns.py"
        ],
        "soft_patterns/scripts/run_code.sh": [
            "soft_patterns.py"
        ],
        "soft_patterns/scripts/run_cnn_grid.sh": [
            "baselines/cnn.py"
        ],
        "soft_patterns/scripts/run_lstm_grid.sh": [
            "baselines/lstm.py"
        ]
    },
    "zekailin00/Raytune-CellSpike": {
        "Raytune-CellSpike/submit-ray-cpu.sh": [
            "./train_RayTune.py"
        ],
        "Raytune-CellSpike/submit-ray-cluster.sh": [
            "start-head.sh",
            "start-worker.sh",
            "./train_RayTune.py",
            "submit-ray-cluster.sh",
            "train_RayTune.py"
        ],
        "Raytune-CellSpike/jobspec-cfg/submit-ray-cluster.sh": [
            "start-head.sh",
            "start-worker.sh",
            "./train_RayTune.py",
            "submit-ray-cluster.sh",
            "train_RayTune.py"
        ]
    },
    "UIUC-CS547-2021sp-Group36/project": {
        "project/bw/debug_run.bash": [
            "./src/Trainer.py"
        ],
        "project/bw/train_run.bash": [
            "src/train_main.py"
        ],
        "project/final_runs/train_run.rescale_resnet101.bash": [
            "src/train_main.py"
        ],
        "project/final_runs/train_run.paper_resnet50.bash": [
            "src/train_main.py"
        ],
        "project/final_runs/train_run.ThreeEmbModel_resnet50.bash": [
            "src/train_main.py"
        ],
        "project/final_runs/train_run.OneEmbModel_resnet50.bash": [
            "src/train_main.py"
        ]
    },
    "CEGRcode/2022-Mittal_SAGA": {
        "2022-Mittal_SAGA/03_Bulk_Processing/job/bulk_geo_tracks.pbs": [
            "data/sacCer3.chrom.sizes"
        ]
    },
    "henrique/FourCastNet": {
        "FourCastNet/submit_batch.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ]
    },
    "evanrussek/Memory_Models": {
        "Memory_Models/julia_cpu.slurm": [
            "tanoue_param_search.jl"
        ]
    },
    "negin513/distributed-pytorch-hpc": {
        "distributed-pytorch-hpc/torchrun_pbs_0919_mpi_4.sh": [
            "main.py"
        ],
        "distributed-pytorch-hpc/torchrun_pbs_0919_mpi_3.sh": [
            "main.py"
        ]
    },
    "alantanlc/ce7455-project": {
        "ce7455-project/submit.pbs": [
            "./scripts/run_experiment_t5.py"
        ]
    },
    "TranslatorIIPrototypes/scigraph_cord": {
        "scigraph_cord/coocr.sh": [
            "co_occur.py"
        ]
    },
    "buzgalbraith/MNIST_Example_code": {
        "MNIST_Example_code/cnn_validate.sbatch": [
            "./cnn_validate.py"
        ]
    },
    "wu-kan/multicore-hw2": {
        "multicore-hw2/RUNME.sh": [
            "sources/build/main"
        ]
    },
    "poojaruhal/CodeRef": {
        "CodeRef/scluster-codet5-sbatch.sh": [
            "requirements.txt",
            "./sh/pre-train.sh"
        ],
        "CodeRef/jobspec-cfg/sh/pre-train.sh": [
            "src/pre_train.py"
        ]
    },
    "vwxyzjn/summarize_from_feedback_details": {
        "summarize_from_feedback_details/benchmark.sbatch": [
            "deepspeed.yaml",
            "summarize_from_feedback_details/sft.py",
            "summarize_from_feedback_details/reward.py"
        ],
        "summarize_from_feedback_details/sbatches/sft.sbatch": [
            "deepspeed.yaml",
            "summarize_from_feedback_details/sft.py"
        ]
    },
    "benoitcoulombelab/pairs": {
        "pairs/pairs.sh": [
            "pairs.nf",
            "alliancecan.config"
        ]
    },
    "rd804/particle_transformer": {
        "particle_transformer/top_tagging.sh": [
            "top_tagging.py"
        ]
    },
    "jayzuccarelli/Connoisseur": {
        "Connoisseur/main.sh": [
            "main.py"
        ]
    },
    "pfizer-opensource/transform-molecules": {
        "transform-molecules/slurm_scripts/new_smirks.sh": [
            "./scripts/new_smirks.py",
            "./scripts/parsing_pairs.py"
        ]
    },
    "CowKeyMan/SBWT-Search": {
        "SBWT-Search/jobspec-cfg/scripts/benchmark/color_search_d20.sh": [
            "./scripts/benchmark/index_search_d20.sh",
            "scripts/build/release.sh"
        ],
        "SBWT-Search/jobspec-cfg/scripts/benchmark/index_search_d20.sh": [
            "./scripts/benchmark/index_search_d20.sh",
            "scripts/build/release.sh"
        ],
        "SBWT-Search/jobspec-cfg/scripts/benchmark/color_search_d1.sh": [
            "./scripts/benchmark/index_search_d1.sh",
            "scripts/build/release.sh"
        ],
        "SBWT-Search/jobspec-cfg/scripts/build/release.sh": [
            "./scripts/build/release.sh"
        ],
        "SBWT-Search/scripts/sbatch/lumi_benchmark_colors_search_d1.sbatch": [
            "./scripts/build/release.sh",
            "scripts/benchmark/color_search_d1.sh"
        ],
        "SBWT-Search/scripts/sbatch/lumi_benchmark_index_search_d20.sbatch": [
            "./scripts/build/release.sh",
            "scripts/benchmark/index_search_d20.sh"
        ],
        "SBWT-Search/scripts/sbatch/lumi_benchmark_colors_search_d20.sbatch": [
            "./scripts/build/release.sh",
            "scripts/benchmark/color_search_d20.sh"
        ]
    },
    "CowKeyMan/kseqpp_REad": {
        "kseqpp_REad/scripts/benchmark.sbatch": [
            "scripts/build.sh"
        ]
    },
    "CHPC-UofU/Singularity-tensorflow": {
        "Singularity-tensorflow/run_tensorflow_gpu.slr": [
            "helloworld.py"
        ]
    },
    "ZhengLiangliang1996/DeepRL-for-Financial-Stock-Trading": {
        "DeepRL-for-Financial-Stock-Trading/vsc_stimu3_brnn.pbs": [
            "./run.sh"
        ],
        "DeepRL-for-Financial-Stock-Trading/jobspec-cfg/run.sh": [
            "stock_dqn_main.py",
            "stock_ddpg_main.py"
        ]
    },
    "guillermo-jimenez/DelineatorSwitchAndCompose": {
        "DelineatorSwitchAndCompose/hpc_real.sh": [
            "train_real.py"
        ],
        "DelineatorSwitchAndCompose/hpc_synth.sh": [
            "train_synth.py"
        ],
        "DelineatorSwitchAndCompose/hpc_multi_dice_only.sh": [
            "train_multi.py"
        ],
        "DelineatorSwitchAndCompose/hpc_F1.sh": [
            "train_multi.py"
        ],
        "DelineatorSwitchAndCompose/hpc_bias.sh": [
            "compute_bias.py"
        ],
        "DelineatorSwitchAndCompose/hpc_synth_dice_only.sh": [
            "train_synth.py"
        ],
        "DelineatorSwitchAndCompose/hpc_real_dice_only.sh": [
            "train_real.py"
        ],
        "DelineatorSwitchAndCompose/hpc_multi.sh": [
            "train_multi.py"
        ]
    },
    "dailiuyao/tmp-file": {
        "tmp-file/megatron-node1_2gpus.sh": [
            "rtop.sh",
            "./model/gpt2-vocab.json",
            "./model/gpt2-merges.txt",
            "./model/bert-large-cased-vocab.txt"
        ],
        "tmp-file/PBSsubmit.sh": [
            "megatron.error"
        ]
    },
    "SafeAILab/zkDL": {
        "zkDL/demo.sh": [
            "model.py"
        ]
    },
    "zEuler1027/Reaction": {
        "Reaction/gpu.sh": [
            "train.py"
        ]
    },
    "dice-group/MST5": {
        "MST5/noctua2/noctua2_eval.sh": [
            "noctua2/noctua2_eval.sh",
            "datasets/qald9plus/wikidata/qald_9_plus_test_wikidata.json",
            "eval.sh"
        ],
        "MST5/jobspec-cfg/eval.sh": [
            "code/pred_build_eval_qald.py"
        ],
        "MST5/jobspec-cfg/noctua2/noctua2_eval.sh": [
            "noctua2/noctua2_eval.sh",
            "datasets/qald9plus/wikidata/qald_9_plus_test_wikidata.json",
            "eval.sh"
        ]
    },
    "dice-group/LOLA-Megatron-DeepSpeed": {
        "LOLA-Megatron-DeepSpeed/dist-sample.sh": [
            "pretrain_gpt.py"
        ],
        "LOLA-Megatron-DeepSpeed/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "LOLA-Megatron-DeepSpeed/lola_ws/setup_slurm.sh": [
            "setup.py"
        ]
    },
    "PedroTricossi/VIT-CROSS-ATTENTION-VIT": {
        "VIT-CROSS-ATTENTION-VIT/script.sh": [
            "ex1_main.py"
        ]
    },
    "soltesz-lab/dentate": {
        "dentate/unused/cori_reindex_GC_trees.sh": [
            "./scripts/reindex_trees.py"
        ]
    },
    "OWLmx/ws_ssm4h22": {
        "ws_ssm4h22/scripts/slurm_batch_guildop.sh": [
            "env_activate.sh"
        ]
    },
    "xiaosu-zhu/McQuic": {
        "McQuic/debug.sh": [
            "mcquic/train/__main__.py",
            "configs/a800_16.yaml"
        ]
    },
    "MischaD/chest-distillation": {
        "chest-distillation/submitjob.sh": [
            "scripts/txt2img.py",
            "scripts/calc_ms_ssim.py",
            "submitjob.sh"
        ],
        "chest-distillation/jobspec-cfg/submitjob.sh": [
            "scripts/txt2img.py",
            "scripts/calc_ms_ssim.py",
            "submitjob.sh"
        ]
    },
    "eikekutz/pix2pixHD": {
        "pix2pixHD/gland_inference_individual.sh": [
            "test.py"
        ],
        "pix2pixHD/gland_train.sh": [
            "train.py"
        ],
        "pix2pixHD/drive_train.sh": [
            "train.py"
        ]
    },
    "FelixWodaczek/surface_classify": {
        "surface_classify/array_run.sh": [
            "slurm_classify.py"
        ]
    },
    "tahaeghtesad/MovingTargetDefenseSimulator": {
        "MovingTargetDefenseSimulator/run.qsub.sh": [
            "requirements.txt",
            "Trainer.py"
        ]
    },
    "tahaeghtesad/TennesseeEastmanProcess": {
        "MovingTargetDefenseSimulator/run.qsub.sh": [
            "requirements.txt"
        ],
        "TennesseeEastmanProcess/run.srun.sh": [
            "safety_test.py"
        ]
    },
    "a1247418/diffusion-alignment": {
        "diffusion-alignment/run_all.sh": [
            "main_embed.py",
            "main_align.py",
            "main_probing.py"
        ]
    },
    "TaylorOLaird/compvis2": {
        "compvis2/run.slurm": [
            "cifar10vit16.py"
        ]
    },
    "Xemin0/SRWGAN": {
        "SRWGAN/srwgan_train.sh": [
            "train_SRWGAN.py"
        ]
    },
    "Xemin0/PINNproj": {
        "PINNproj/pinn.sh": [
            "train_PINN.py"
        ]
    },
    "chenke-xie/Dreambooth-Stable-Diffusion": {
        "Dreambooth-Stable-Diffusion/generation.sh": [
            "scripts/stable_txt2img.py"
        ]
    },
    "GabrielPigeon/TRSW-Demog": {
        "TRSW-Demog/arrayJob.sh": [
            "R/4_runModel.R"
        ]
    },
    "DomhnallBoyle/lip2speech-unit": {
        "lip2speech-unit/raven/scripts/testing/asr/lrs3_trainval/large_lrs3vox2_self.sh": [
            "raven/test.py"
        ]
    },
    "swappysh/NewsUnmasked": {
        "NewsUnmasked/gpu_job.slurm": [
            "notebook.py"
        ]
    },
    "PKUterran/HamNet": {
        "HamNet/train_esol.slurm": [
            "train_esol.py"
        ],
        "HamNet/hamnet.slurm": [
            "model_test.py"
        ],
        "HamNet/train_lipop.slurm": [
            "train_lipop.py"
        ]
    },
    "JacobC1921w/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "linusheck/NeuralSDEExploration": {
        "NeuralSDEExploration/old_slurm_scripts/fhn.sh": [
            "notebooks/sde_train.jl"
        ],
        "NeuralSDEExploration/old_slurm_scripts/ou_long.sh": [
            "notebooks/sde_train.jl"
        ],
        "NeuralSDEExploration/old_slurm_scripts/run_plain_gpu.sh": [
            "notebooks/sde_train.jl"
        ],
        "NeuralSDEExploration/old_slurm_scripts/run_plain_less.sh": [
            "notebooks/sde_train.jl"
        ],
        "NeuralSDEExploration/old_slurm_scripts/fhn2.sh": [
            "notebooks/sde_train.jl"
        ],
        "NeuralSDEExploration/old_slurm_scripts/ou2.sh": [
            "notebooks/sde_train.jl"
        ]
    },
    "Regressionist/Semantic-Segmentation-UNet": {
        "Semantic-Segmentation-UNet/job_v0.sh": [
            "train.py"
        ]
    },
    "cefect/SRCNN-flood": {
        "SRCNN-flood/workflows/unix/train_1208.sh": [
            "./README.md",
            "cnnf/train.py"
        ]
    },
    "mfatihaktas/q_sim": {
        "q_sim/mrun.sh": [
            "jscript.sh"
        ],
        "q_sim/jobspec-cfg/run.sh": [
            "simplex_exp.py",
            "mixed_exp.py",
            "randmix_exp.py",
            "randmix_model.py",
            "mixed_models.py",
            "mixed_newmodels.py",
            "multiq_exp.py",
            "mds_exp.py",
            "mds_models.py",
            "procsharing.py",
            "proofs_coding_vs_rep.py",
            "split_red.py",
            "simplex_models.py",
            "codes_stability.py",
            "det_models.py",
            "deneme.py",
            "deprecated.py",
            "arepeat_models.py",
            "arepeat_exp.py",
            "anonimity.py",
            "rvs.py",
            "google_data.py",
            "googledata_job_events.py",
            "fairness_sim.py",
            "fj_heavytail.py",
            "fairness_model.py",
            "tompecs_plots.py",
            "tompecs_exp.py",
            "tcom_plots.py",
            "plot_tcom.py"
        ],
        "deep-scheduler/run.sh": [
            "jscript.sh",
            "./run.sh"
        ],
        "deep-scheduler/mrun.sh": [
            "jscript.sh"
        ],
        "deep-scheduler/w_queues/mrun.sh": [
            "jscript.sh"
        ],
        "deep-scheduler/jobspec-cfg/run.sh": [
            "jscript.sh",
            "./run.sh"
        ]
    },
    "mfatihaktas/deep-scheduler": {
        "q_sim/mrun.sh": [
            "jscript.sh"
        ],
        "q_sim/jobspec-cfg/run.sh": [
            "exp.py",
            "rvs.py"
        ],
        "q_sim/jobspec-cfg/simplex_exp.py": [
            "exp.py"
        ],
        "deep-scheduler/run.sh": [
            "jscript.sh",
            "./run.sh",
            "sim_exp.py",
            "sim_wrelaunch_exp.py",
            "experience_replay.py",
            "eval_wmpi.py",
            "drl_plots.py",
            "rlearning.py",
            "redsmall_plots.py",
            "relaunch_plot.py",
            "redsmall_plots_wDolly.py",
            "modeling.py",
            "model_checking.py",
            "modeling_wDolly.py",
            "numeric_comparison.py"
        ],
        "deep-scheduler/mrun.sh": [
            "jscript.sh"
        ],
        "deep-scheduler/w_queues/mrun.sh": [
            "jscript.sh"
        ],
        "deep-scheduler/jobspec-cfg/rlearning.py": [
            "experience_replay.py"
        ],
        "deep-scheduler/jobspec-cfg/run.sh": [
            "jscript.sh",
            "./run.sh",
            "sim_exp.py",
            "sim_wrelaunch_exp.py",
            "experience_replay.py",
            "eval_wmpi.py",
            "drl_plots.py",
            "rlearning.py",
            "redsmall_plots.py",
            "relaunch_plot.py",
            "redsmall_plots_wDolly.py",
            "modeling.py",
            "model_checking.py",
            "modeling_wDolly.py",
            "numeric_comparison.py"
        ]
    },
    "luoyan407/Harvard-DR": {
        "Harvard-DR/train_dr_fair_cc_cond.sh": [
            "train_dr_fair_cc_cond.py"
        ]
    },
    "AlexisTseng/GRN_heatshock_At": {
        "GRN_heatshock_At/HSPR_slurm.sh": [
            "HSPR_AZ_hpc.py"
        ],
        "GRN_heatshock_At/jobspec-cfg/HSPR_AZ_hpc.py": [
            "HSPR_AZ_hpc.py"
        ]
    },
    "Danqi7/flash-attention-cuda": {
        "flash-attention-cuda/run-flash.sh": [
            "flash_attention",
            "./flash_attention"
        ]
    },
    "niedox/emg_DL_interhardware": {
        "emg_DL_interhardware/train_6ch.run": [
            "emg1.py"
        ]
    },
    "NREL/streamm-tools": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ],
        "K_Road/jobspec-cfg/README.md": [
            "requirements.txt"
        ]
    },
    "NREL/rlmolecule": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/HPC": {
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/BioReactorDesign": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "BioReactorDesign/jobspec-cfg/README.md": [
            "applications/write_stir_tank_mesh.py",
            "applications/write_block_cyl_mesh.py",
            "applications/write_block_rect_mesh.py",
            "applications/write_stl_patch.py",
            "applications/early_prediction.py",
            "applications/compute_conditional_mean.py"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/VirtualEngineering": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "VirtualEngineering/jobspec-cfg/README.md": [
            "environment.yaml"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/buildstockbatch": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/ESIFHPC2": {
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/ESIFHPC3": {
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "NREL/K_Road": {
        "streamm-tools/jobspec-cfg/README.md": [
            "setup.py"
        ],
        "HPC/slurm/multimax.sh": [
            "setup.py"
        ],
        "HPC/languages/julia/demos/scripts/run_demo.sh": [
            "README.md"
        ],
        "HPC/general/Optimized_TF/TFbenchmark.sh": [
            "README.md"
        ],
        "ESIFHPC2/jobspec-cfg/README.md": [
            "README.md"
        ]
    },
    "ospanbatyr/fromage_old": {
        "fromage_old/run.sh": [
            "main.py"
        ]
    },
    "jmbh/ARVAR": {
        "ARVAR/Sim_jobs.sh": [
            "Sim_LISA.R"
        ],
        "ARVAR/jobspec-cfg/Sim_LISA.R": [
            "aux_functions.R"
        ]
    },
    "vital121/finngen-tools": {
        "finngen-tools/run_clm_mahti_gptxl.sh": [
            "pickled_stats.py",
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/run_clm_mahti_gptsmall_custom_singularity.sh": [
            "pickled_stats.py",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/run_clm_mahti_gptlarge.sh": [
            "pickled_stats.py",
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/run_clm_singularity_puhti_deepspeed_preprocessed.sh": [
            "pickled_stats.py",
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/run_clm_mahti_gptmedium.sh": [
            "node_init.sh",
            "node_init_mahti.sh",
            "pickled_stats.py",
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/run_clm_mahti_gptsmall.sh": [
            "pickled_stats.py",
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/deprecated/run_clm_singularity_puhti_deepspeed.sh": [
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/deprecated/run_clm_singularity_mahti_deepspeed.sh": [
            "./deepspeed_singularity.sh",
            "run_clm.py",
            "ds_config.json"
        ],
        "finngen-tools/jobspec-cfg/run_clm.py": [
            "run_clm.py"
        ]
    },
    "ZhaoxiangSimonCai/UsydInnovation2019": {
        "UsydInnovation2019/artemis/torch_train.pbs": [
            "script/train_resnet_reg.py"
        ]
    },
    "weimengmeng1999/Transformers--CLIPSeg": {
        "Transformers--CLIPSeg/jobspec-cfg/examples/pytorch/contrastive-image-text/run_clip.py": [
            "src/transformers/training_args.py"
        ],
        "Transformers--CLIPSeg/scripts/run_psg_jade2.sh": [
            "examples/pytorch/contrastive-image-text/run_clip.py"
        ],
        "Transformers--CLIPSeg/scripts/run_coco_jade2.sh": [
            "examples/pytorch/contrastive-image-text/run_clip.py"
        ]
    },
    "BDI-pathogens/phyloscanner": {
        "phyloscanner/jobspec-cfg/phyloscanner_make_trees.py": [
            "phyloscanner_make_trees.py",
            "tools/CalculateTreeSizeInGenomeWindows.py",
            "phyloscanner_analyse_trees.R"
        ],
        "phyloscanner/jobspec-cfg/phyloscanner_analyse_trees.R": [
            "phyloscanner_make_trees.py"
        ],
        "phyloscanner/ExampleClusterJobScripts/BatchedUseOfMakeTrees.sh": [
            "phyloscanner_make_trees.py",
            "phyloscanner_analyse_trees.R"
        ]
    },
    "jzbjyb/FiD": {
        "FiD/train_reader_bioasq.bsub": [
            "train_reader.py"
        ],
        "FiD/jobspec-cfg/train_reader.py": [
            "LICENSE"
        ]
    },
    "ywchiang0819121/D2STGNN-continual-learning": {
        "D2STGNN-continual-learning/stream.sh": [
            "main_stream.py"
        ]
    },
    "i-machine-think/attention-cd": {
        "attention-cd/train_dutch.job": [
            "main.py"
        ],
        "attention-cd/train.job": [
            "main.py"
        ]
    },
    "ezCGP/ezCGP": {
        "ezCGP/slurm_files/icehammer_simgan.sh": [
            "main.py"
        ],
        "ezCGP/slurm_files/icehammer_simgan_ecg.sh": [
            "main.py"
        ],
        "ezCGP/slurm_files/icehammer_simgan_transform.sh": [
            "main.py"
        ]
    },
    "biplavc/UAV_DQN_AoI_multi_UAV_Age_7": {
        "UAV_DQN_AoI_multi_UAV_Age_7/exp1.sh": [
            "main_tf.py"
        ]
    },
    "ieee8023/xray-generalization": {
        "xray-generalization/run.sh": [
            "train-joe.py",
            "run.sh"
        ],
        "xray-generalization/jobspec-cfg/run.sh": [
            "train-joe.py",
            "run.sh"
        ]
    },
    "tik65536/AutoCausality_withRealcause": {
        "AutoCausality_withRealcause/HPCscript/autoSuper.sh": [
            "autocausality_AutoSuper.py"
        ]
    },
    "yimengli46/bellman-exploration": {
        "bellman-exploration/slurm_scripts/slurm_train_learning_modules.slurm": [
            "train_UNet_input_partial_map.py"
        ]
    },
    "langnico/global-canopy-height-model": {
        "global-canopy-height-model/gchm/preprocess/run_merge_h5_files_per_split.sh": [
            "gchm/preprocess/merge_h5_files_per_split.py"
        ]
    },
    "langnico/GEDI-BDL": {
        "GEDI-BDL/cluster/job_array_regression_crossval_ensemble.sh": [
            "torch_code/train.py"
        ]
    },
    "fhoushmand/bft-library": {
        "bft-library/systemconfig/deploy.sh": [
            "run.sh"
        ]
    },
    "fhoushmand/Hamband": {
        "bft-library/systemconfig/deploy.sh": [
            "run.sh"
        ],
        "Hamband/run.sh": [
            "follower"
        ],
        "Hamband/jobspec-cfg/run.sh": [
            "follower"
        ]
    },
    "joetho786/Respiratory-Sound-Classification-in-Wearable-Devices-Enabled-by-Patient-Specific-Model-Tuning": {
        "Respiratory-Sound-Classification-in-Wearable-Devices-Enabled-by-Patient-Specific-Model-Tuning/run.sh": [
            "requirements.txt",
            "run.py"
        ]
    },
    "MTEL-USC/GNOM": {
        "GNOM/src/slurm/optimize_Nd_BP.sh": [
            "src/Nd_model/setup_and_optimization.jl"
        ]
    },
    "OliverGrainge/VisualLoc": {
        "VisualLoc/jobfiles/resnet50_mixvpr.slurm": [
            "train.py"
        ]
    },
    "amorim-cleison/asl-datasets-gen": {
        "asl-datasets-gen/cluster/tasks/asllvd-skeleton-pos.slurm": [
            "main.py"
        ]
    },
    "MTTVDN/data-centric-meta-learning": {
        "data-centric-meta-learning/slurms/download_data.slurm": [
            "./data/download_data.sh"
        ]
    },
    "jkamalu/adversarial-nmt": {
        "adversarial-nmt/sbatch.sh": [
            "run.py"
        ]
    },
    "nhurleywalker/hpc-course": {
        "hpc-course/hello.sh": [
            "hello.py"
        ]
    },
    "TIGRLab/asl-preprocessing": {
        "asl-preprocessing/code/run_aslprep.sh": [
            "code/filter_aslprep.json"
        ]
    },
    "TIGRLab/SSD_PINT": {
        "SSD_PINT/code/bin/submit_PINTFC_DXeffect_10permutations.sh": [
            "./code/R/running_bootedperm_DXeffects_PINTFC.R"
        ],
        "SSD_PINT/code/bin/submit_SchaeferFC_DXeffect_10permutations.sh": [
            "./code/R/running_bootedperm_DXeffects_SchaeferFC.R"
        ]
    },
    "FluidityProject/buildscripts": {
        "buildscripts/uk/ac/archer/unittest.pbs": [
            "uk/ac/archer/unittest.pbs"
        ],
        "buildscripts/uk/ac/archer/icferst_build.bash": [
            "uk/ac/archer/build.bash"
        ],
        "buildscripts/uk/ac/archer/build.bash": [
            "uk/ac/archer/build.bash"
        ],
        "buildscripts/uk/ac/archer/top_hat.pbs": [
            "uk/ac/archer/top_hat.pbs"
        ],
        "buildscripts/uk/ac/archer/mediumtest.pbs": [
            "uk/ac/archer/mediumtest.pbs"
        ],
        "buildscripts/uk/ac/archer/icferst_compile.bash": [
            "uk/ac/archer/compile.pbs"
        ],
        "buildscripts/jobspec-cfg/uk/ac/archer/unittest.pbs": [
            "uk/ac/archer/unittest.pbs"
        ],
        "buildscripts/jobspec-cfg/uk/ac/archer/build.bash": [
            "uk/ac/archer/build.bash"
        ],
        "buildscripts/jobspec-cfg/uk/ac/archer/top_hat.pbs": [
            "uk/ac/archer/top_hat.pbs"
        ],
        "buildscripts/jobspec-cfg/uk/ac/archer/mediumtest.pbs": [
            "uk/ac/archer/mediumtest.pbs"
        ],
        "buildscripts/jobspec-cfg/uk/ac/archer/compile.pbs": [
            "uk/ac/archer/compile.pbs"
        ]
    },
    "themeda-devs/themeda": {
        "themeda/tmax-persistence.slurm": [
            "scripts/tmax-persistence.py"
        ]
    },
    "jonathan-bravo/TELCoMB": {
        "TELCoMB/run.sh": [
            "LICENSE"
        ]
    },
    "latug0/pybind_mpi": {
        "pybind_mpi/scripts/launch.job": [
            "helloWorld.py"
        ]
    },
    "AniketRavan/CHEM-576-Non-equilibrium-statistical-mechanics": {
        "CHEM-576-Non-equilibrium-statistical-mechanics/1_D_matrix.sh": [
            "1_D_matrix.py"
        ]
    },
    "astrolabsoftware/spark-fits": {
        "spark-fits/run_python_cori.sh": [
            "examples/python/readfits.py"
        ]
    },
    "spyysalo/keras-bert-ner": {
        "keras-bert-ner/slurm/run-dev.sh": [
            "ner.py",
            "conlleval.py"
        ]
    },
    "JohanSamir/gflownet": {
        "gflownet/run_raytune.sh": [
            "raytune.py"
        ]
    },
    "mikmaz/jwst-space-dust-thesis": {
        "jwst-space-dust-thesis/slurm-scripts/make-hmc-script.sh": [
            "posterior_samples.py"
        ]
    },
    "gasteigerjo/roughgen": {
        "roughgen/batch.sh": [
            "./parallel_gen.py",
            "./start_sims.py"
        ]
    },
    "BeeCSI-Microbiome/amrplusplus_v2": {
        "amrplusplus_v2/launch_mpi_slurm.sh": [
            "main_AmrPlusPlus_v2.nf"
        ]
    },
    "xinyuxiao113/optic": {
        "optic/run1.slurm": [
            "./out/test1.out",
            "simulation.py"
        ],
        "optic/run_cnn.slurm": [
            "train_meta_model.py",
            "loading/cnn_step3_0627",
            "loading/cnn_step4_0627",
            "loading/cnn_step5_0627"
        ],
        "optic/run_dense.slurm": [
            "train_meta_model.py",
            "loading/dense_step3",
            "loading/dense_step4",
            "loading/dense_step5"
        ],
        "optic/run2.slurm": [
            "./out/test2.out",
            "simulation.py"
        ]
    },
    "DSL-Lab/HPC_helper": {
        "HPC_helper/scripts/demo_sockeye_pbs.sh": [
            "main.py"
        ],
        "HPC_helper/scripts/demo_sockeye.sh": [
            "main.py"
        ],
        "HPC_helper/scripts/demo_cc.sh": [
            "main.py"
        ],
        "HPC_helper/scripts/demo_vector.sh": [
            "main.py"
        ]
    },
    "NCI-RBL/Dockers": {
        "Dockers/workflows/DTEG/DTEG_RBL.sh": [
            "nextflow.config"
        ],
        "Dockers/workflows/iCLIP_V3/iCLIP_v3.1.0.sh": [
            "nextflow.config"
        ],
        "Dockers/workflows/iCLIP_V3/iCLIP_Transcriptome_v3.1.0.sh": [
            "nextflow.config"
        ],
        "Dockers/workflows/iCLIP_V3/Older_versions/iCLIP_v3.0.1.sh": [
            "nextflow.config"
        ],
        "Dockers/workflows/RiboFootPrint/RiboFootPrint.sh": [
            "nextflow.config"
        ],
        "Dockers/workflows/isomiR/isomiR.sh": [
            "./nextflow.config",
            "nextflow.config"
        ]
    },
    "SwissCakeRowl/Magic123": {
        "Magic123/jobspec-cfg/guidance/sd_utils.py": [
            "guidance/sd_utils.py"
        ],
        "Magic123/scripts/texural_inversion/textural_inversion.sh": [
            "textual-inversion/textual_inversion.py",
            "guidance/sd_utils.py"
        ],
        "Magic123/scripts/magic123/run_both_priors.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_2dprior.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_3dprior.sh": [
            "main.py"
        ]
    },
    "sb43/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "leobix/adaptive_ensemble": {
        "adaptive_ensemble/run_M3F.sh": [
            "src/main.jl"
        ]
    },
    "PardoAlejo/MovieCuts": {
        "MovieCuts/scripts/run_default_a.sh": [
            "src/main.py",
            "cfgs/ResNet18/default.yml"
        ],
        "MovieCuts/scripts/run_default_v.sh": [
            "src/main.py",
            "cfgs/ResNet18/default.yml"
        ],
        "MovieCuts/scripts/run_testing.sh": [
            "src/main.py",
            "cfgs/ResNet18/default.yml"
        ],
        "MovieCuts/scripts/run_default_av.sh": [
            "src/main.py",
            "cfgs/ResNet18/default.yml"
        ]
    },
    "jdblischak/singlecell-qtl": {
        "singlecell-qtl/snakemake.sbatch": [
            "submit-snakemake.sh"
        ],
        "singlecell-qtl/jobspec-cfg/submit-snakemake.sh": [
            "cluster.json"
        ]
    },
    "rachelmoran28/cavefish_2019_pipeline": {
        "cavefish_2019_pipeline/array_remove_indels.sh": [
            "Remove_indels_for_VCFtools.py"
        ]
    },
    "ISUgenomics/common_scripts": {
        "common_scripts/Quiver_01.sh": [
            "sub",
            "walltime"
        ],
        "common_scripts/JobR_condo.sh": [
            "sub",
            "walltime"
        ],
        "common_scripts/JobR.sh": [
            "sub",
            "walltime"
        ]
    },
    "evaldsurtans/keras-rl-flappy-bird": {
        "keras-rl-flappy-bird/hpc_tf.sh": [
            "main.py"
        ]
    },
    "rosalindfranklininstitute/baskerville": {
        "baskerville/example/job.sh": [
            "example/job.py"
        ]
    },
    "xiyuanHou/slurm-dl-job": {
        "slurm-dl-job/MNIST.sh": [
            "requirements.txt",
            "MNIST.py"
        ]
    },
    "pascualgroup/frontiers_var_processing_code": {
        "frontiers_var_processing_code/Mar18.sbatch": [
            "writeSummaryTable.r"
        ]
    },
    "imartinezl/phm-challenge": {
        "phm-challenge/abacus2.sl": [
            "requirements.txt",
            "run.py"
        ]
    },
    "ozturkosu/MiniMD_NT": {
        "MiniMD_NT/job.qsub": [
            "./miniMD_intel"
        ]
    },
    "ozturkosu/sc19-dl-tutorial": {
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_cnn.sh": [
            "train.py"
        ]
    },
    "simonpokorny/MotionFlowFramework": {
        "MotionFlowFramework/motion_supervision/run_train.sh": [
            "motion_supervision/train.py"
        ],
        "MotionFlowFramework/motion_supervision/tools/prior_gen.sh": [
            "motion_supervision/preprocess_data.py"
        ]
    },
    "cehbrecht/climatereconstructionAI": {
        "climatereconstructionAI/start.sh": [
            "train.py",
            "test.py"
        ],
        "climatereconstructionAI/start-100.sh": [
            "test.py"
        ]
    },
    "ahmadatallah/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "janpasek97/stackoverflow-siamese-network": {
        "stackoverflow-siamese-network/network/train.sh": [
            "network/main.py"
        ]
    },
    "ninamiolane/vaetree": {
        "vaetree/ray_slac_run_pipeline.bat": [
            "ray_pipeline.py"
        ],
        "compSPI/src/ray_slac_run_pipeline.bat": [
            "ray_pipeline.py"
        ]
    },
    "CosmoLike/WFIRST_forecasts": {
        "WFIRST_forecasts/run_mpi_WFIRST_3x2pt_sys_pessi_MG.sh": [
            "runWFIRST_3x2pt_allsys_pessi_MG.py"
        ],
        "WFIRST_forecasts/run_mpi_WFIRST_3x2pt_nosys_opti.sh": [
            "runWFIRST_3x2pt_nosys_opti.py"
        ]
    },
    "uiucsn/elasticc_classifier_kostya": {
        "elasticc_classifier_kostya/extract_features.sbatch": [
            "./extract_features.py"
        ],
        "elasticc_classifier_kostya/extract_features_split.sbatch": [
            "./extract_features.py"
        ]
    },
    "steinmanngroup/smi2sdf": {
        "smi2sdf/smi2sdf.sh": [
            "smi2sdf.py"
        ]
    },
    "ndb796/PyTorch-Group-Equivariant-CNN": {
        "PyTorch-Group-Equivariant-CNN/train.sh": [
            "train.py"
        ]
    },
    "integratecology/anteaters": {
        "anteaters/run_anteater_rsf_v1.sh": [
            "anteater_rsfs_1.R"
        ],
        "anteaters/run_anteater_rsfs_day.sh": [
            "anteater_rsfs_day.R"
        ],
        "anteaters/run_anteater_rsf_v3.sh": [
            "anteater_rsfs_3.R"
        ],
        "anteaters/run_anteater_rsf_final.sh": [
            "anteater_rsfs_final.R"
        ],
        "anteaters/run_anteater_rsf_v2.sh": [
            "anteater_rsfs_2.R"
        ],
        "anteaters/run_anteater_speeds.sh": [
            "anteater_speeds.R"
        ]
    },
    "integratecology/rsf_akdes": {
        "rsf_akdes/run_cv_ce_tapir.sh": [
            "cv_ce_tapir.R"
        ]
    },
    "blaz-rupnik/hpc_kmeans_image_compression": {
        "hpc_kmeans_image_compression/sbatch2_openmp.sh": [
            "test_images/lake_4000_2667.png"
        ]
    },
    "lamps24/neural_network_project": {
        "neural_network_project/train_gpu.sh": [
            "train.py"
        ]
    },
    "karthikn72/mlp_final_project": {
        "mlp_final_project/exp_scripts/completed/resnet50_base_224.sh": [
            "train_models.py"
        ]
    },
    "sangminwoo/SVOL": {
        "SVOL/train_quickdraw.sh": [
            "train.py"
        ]
    },
    "bricerauby/IFT-6164-ConditionalGenerationUS": {
        "IFT-6164-ConditionalGenerationUS/script/trainResNetULM.sh": [
            "requirementsCC.txt",
            "trainResNetULM.py"
        ]
    },
    "carlosbrody/superior_colliculus_mutual_inhibition": {
        "superior_colliculus_mutual_inhibition/parse_C32.sh": [
            "./start_farm_spockC32.sh",
            "C32_parse_finished.jl"
        ],
        "superior_colliculus_mutual_inhibition/jobspec-cfg/start_farm_spockC32.sh": [
            "./start_farm_spockC32.sh",
            "spock_C32_start.jl"
        ]
    },
    "lyprince/hierarchical_lfads": {
        "hierarchical_lfads/lfads_synth_data.sh": [
            "generate_synthetic_data.py"
        ]
    },
    "AntonRydahl/multigrid-poisson": {
        "multigrid-poisson/convergence.bsub": [
            "paths/gbar/clang.sh"
        ]
    },
    "AntonRydahl/libcperf": {
        "libcperf/gfx90a.flux": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh",
            "./gpu_builtin.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/sm80.bsub": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh",
            "./gpu_builtin.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/gfx90a_ocml.flux": [
            "install_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh"
        ],
        "libcperf/gfx90a_builtin.flux": [
            "install_libc.sh",
            "./gpu_builtin.sh"
        ],
        "libcperf/gfx906.flux": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh",
            "./gpu_builtin.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/gfx906_ocml.flux": [
            "install_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh"
        ],
        "libcperf/gfx906_host.flux": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh"
        ],
        "libcperf/gfx90a_host.flux": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh"
        ],
        "libcperf/gfx906_libc.flux": [
            "install_libc.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/gfx906_builtin.flux": [
            "install_libc.sh",
            "./gpu_builtin.sh"
        ],
        "libcperf/gfx90a_libc.flux": [
            "install_libc.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/sm70.bsub": [
            "install_libc.sh",
            "./cpu_builtin.sh",
            "./cpu_libc.sh",
            "./gpu_ocml.sh",
            "./gpu_nv.sh",
            "./gpu_builtin.sh",
            "./gpu_libc.sh"
        ],
        "libcperf/jobspec-cfg/gpu_ocml.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ],
        "libcperf/jobspec-cfg/cpu_builtin.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ],
        "libcperf/jobspec-cfg/gpu_builtin.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ],
        "libcperf/jobspec-cfg/gpu_nv.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ],
        "libcperf/jobspec-cfg/gpu_libc.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ],
        "libcperf/jobspec-cfg/cpu_libc.sh": [
            "bashhelpers/get_args.sh",
            "bashhelpers/get_rettype.sh"
        ]
    },
    "Haruhi07/news-tls": {
        "news-tls/run_news_tls.sh": [
            "news_tls_output.log",
            "news_tls_err.log",
            "./experiments/evaluate.py"
        ]
    },
    "Haruhi07/timeline": {
        "timeline/run_rl.sh": [
            "news-tls/experiments/train.py"
        ]
    },
    "Adibvafa/CodonTransformer": {
        "CodonTransformer/slurm/finetune.sh": [
            "finetune.py"
        ],
        "CodonTransformer/jobspec-cfg/finetune.py": [
            "finetune.py"
        ]
    },
    "GeorgeEskandar/USIS-Unsupervised-Semantic-Image-Synthesis": {
        "USIS-Unsupervised-Semantic-Image-Synthesis/usis.sh": [
            "train.py",
            "test.py"
        ]
    },
    "adriaaula/dada2_guidelines": {
        "dada2_guidelines/scripts/preprocessing/01_run-dada2.sh": [
            "scripts/preprocessing/01_dada2-error-output.R"
        ]
    },
    "hahnec/rf-ulm": {
        "rf-ulm/bash_scripts/pala_train.sh": [
            "./train.py"
        ]
    },
    "VChristlein/MostOutOfUNet4GlacierSegmentation": {
        "MostOutOfUNet4GlacierSegmentation/ShellScript.sh": [
            "main.py"
        ]
    },
    "dsorge3/eeg_visual_classification_project": {
        "eeg_visual_classification_project/example.sbatch": [
            "train_derived.py"
        ],
        "eeg_visual_classification_project/TransGan32x32/expCifar.sh": [
            "train_derived.py"
        ]
    },
    "PEASEC/XAI-Attack": {
        "XAI-Attack/jobscripts/mnli_matched_full.sh": [
            "src/main.py",
            "src/adversarial_testing.py",
            "src/adversarial_transfer.py"
        ],
        "XAI-Attack/jobscripts/rte_full.sh": [
            "src/main.py",
            "src/adversarial_testing.py",
            "src/adversarial_transfer.py"
        ]
    },
    "Ruxie189/WSS_POLE": {
        "WSS_POLE/run_CLIMS.sh": [
            "clip_selection.py",
            "voc12/train_aug.txt",
            "voc12/train.txt"
        ]
    },
    "ascelieno/jailbreaker": {
        "jailbreaker/train_job.sh": [
            "train.py"
        ]
    },
    "JANUS-Institute/HallThrusterPEM": {
        "HallThrusterPEM/scripts/pem_v0/gen_data.sh": [
            "scripts/pem_v0/gen_data.py"
        ],
        "HallThrusterPEM/scripts/debug/gen_data.sh": [
            "scripts/debug/gen_data.py"
        ]
    },
    "xpz3/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "phiresky/bayesian-aggregation-for-swarm-reinforcement-learning": {
        "bayesian-aggregation-for-swarm-reinforcement-learning/run-slurm.sh": [
            "./run-simul.sh"
        ]
    },
    "UT-ADL/vista-evaluation": {
        "vista-evaluation/create_trace_slurm.sh": [
            "create_trace.py"
        ]
    },
    "richmondodufisan/FDTR_Simulation": {
        "FDTR_Simulation/Parameter_Sweep_HPC.sh": [
            "FDTR_mesh.py",
            "FDTR_Batch_gmsh.sh",
            "FDTR_Batch_MOOSE.sh"
        ],
        "FDTR_Simulation/jobspec-cfg/FDTR_Batch_gmsh.sh": [
            "FDTR_mesh.py"
        ]
    },
    "victoriapedlar/isizulu-text-generation": {
        "isizulu-text-generation/finetune-transformer.sh": [
            "scripts/finetune_example.py"
        ],
        "isizulu-text-generation/finetune-awd-lstm.sh": [
            "awd_lstm/finetune.py"
        ],
        "isizulu-text-generation/train-transformer.sh": [
            "scripts/train_example.py"
        ],
        "isizulu-text-generation/train-awd-lstm.sh": [
            "awd_lstm/main.py"
        ]
    },
    "arberzela/EfficientNAS": {
        "EfficientNAS/BOHB-CIFAR10.sh": [
            "cifar10_master.py"
        ]
    },
    "RECETOX/raims": {
        "raims/raims-submit-template.sh": [
            "raims_job.py"
        ]
    },
    "mikemhenry/Human-Genome-Model": {
        "Human-Genome-Model/hum_gen.bash": [
            "hum_gen.py"
        ]
    },
    "pritishyuvraj/Voice-Conversion-GAN": {
        "Voice-Conversion-GAN/run_on_gypsum.sh": [
            "train.py"
        ],
        "Voice-Conversion-GAN/jobspec-cfg/train.py": [
            "preprocess_training.py"
        ]
    },
    "theodore-michel/n_cfd": {
        "n_cfd/job.sh": [
            "create_dataset.py",
            "params_IHM.json"
        ]
    },
    "akashlevy/RRAM-DNN-Quantized": {
        "RRAM-DNN-Quantized/script.sh": [
            "inference-char.py",
            "script.sh"
        ],
        "RRAM-DNN-Quantized/jobspec-cfg/script.sh": [
            "inference-char.py",
            "script.sh"
        ]
    },
    "ericcapo/marky-coco": {
        "marky-coco/marky_pe_to_slurm.sh": [
            "workflow/genesearch.sh"
        ],
        "marky-coco/jobspec-cfg/workflow/genesearch.sh": [
            "db/Hg-MATE-Db.v1/Hg-MATE-Db.v1.01142021_ISOCELMAG_HgcA.hmm",
            "db/Hg-MATE-Db.v1/Hg-MATE-Db.v1.ISOCELMAG_HgcA_full.refpkg/Hg-MATE-Db.v1.ISOCELMAG_HgcA_full.stockholm",
            "db/Hg-MATE-Db.v1/Hg-MATE-Db.v1.ISOCELMAG_HgcA_full.refpkg/Hg-MATE-Db.v1.ISOCELMAG_HgcA_full.hmm",
            "db/Hg-MATE-Db.v1/Hg-MATE-Db.v1.01142021_ISOCELMAG_HgcB.hmm",
            "db/merAB_Christakis2021/211026_Christakis_reduced_merA_msa.hmm",
            "db/merAB_Christakis2021/211026_Christakis_reduced_merB_msa.hmm",
            "db/rpoB/TIGR02013.hmm",
            "db/rpoB/TIGR03670.hmm"
        ]
    },
    "masauer2/DEPDIST": {
        "DEPDIST/01-prep_MD.sh": [
            "ions.mdp"
        ],
        "DEPDIST/jobspec-cfg/ions.mdp": [
            "ions.mdp"
        ]
    },
    "mafshar/xray-ensemble": {
        "xray-ensemble/job.sh": [
            "src/main.py"
        ]
    },
    "Ankowa/inz": {
        "inz/jobspec-cfg/scripts/finetune/setup.sh": [
            "requirements.txt"
        ],
        "inz/scripts/finetune/job_def.slurm": [
            "scripts/finetune/setup.sh"
        ]
    },
    "yusx-swapp/SPATL": {
        "SPATL/slurm_fl.sh": [
            "spatl_federated_learning.py"
        ]
    },
    "AidanKelley/fourier-stabilization": {
        "fourier-stabilization/scripts/pdfrate_brendel.sh": [
            "attack.py",
            "attack_data/pdfrate_brendel.json"
        ],
        "fourier-stabilization/scripts_final/hidost_brendel.sh": [
            "attack.py",
            "attack_data_final_real/hidost_brendel.json"
        ]
    },
    "devd-99/nba_downloader": {
        "nba_downloader/job_og.slurm": [
            "download_script.py"
        ]
    },
    "a-ism256/GCN-Disaster-Damage-thesis": {
        "GCN-Disaster-Damage-thesis/ttest_ae.sh": [
            "ttest_ae.py"
        ],
        "GCN-Disaster-Damage-thesis/ttest_gcn.sh": [
            "ttest_gcn.py"
        ],
        "GCN-Disaster-Damage-thesis/train_autoencoder.sh": [
            "train_autoencoder.py"
        ],
        "GCN-Disaster-Damage-thesis/beirut_gcn.sh": [
            "beirut_gcn.py"
        ]
    },
    "YiandLi/EfficientGlobalPointer4KeyExtraction_": {
        "EfficientGlobalPointer4KeyExtraction_/GP_runner.sh": [
            "src/train_CME.py"
        ],
        "EfficientGlobalPointer4KeyExtraction_/ensemble.sh": [
            "err.log",
            "src/ensemble.py"
        ],
        "EfficientGlobalPointer4KeyExtraction_/mlm/pretrain.sh": [
            "err.log"
        ]
    },
    "YiandLi/PrototypeNER_v3": {
        "PrototypeNER_v3/runner.sh": [
            "src/train.py"
        ]
    },
    "NinaHerrmann/muesli4": {
        "muesli4/Archiv/Slurms/slurmAllCPU.sh": [
            "./build.sh"
        ],
        "muesli4/Archiv/Slurms/slurm.sh": [
            "./build.sh"
        ],
        "muesli4/Archiv/Slurms/slurmAllGPU.sh": [
            "./build.sh"
        ]
    },
    "NinaHerrmann/ll_gaussianblur": {
        "muesli4/Archiv/Slurms/slurmAllCPU.sh": [
            "./build.sh"
        ],
        "muesli4/Archiv/Slurms/slurm.sh": [
            "./build.sh"
        ],
        "muesli4/Archiv/Slurms/slurmAllGPU.sh": [
            "./build.sh"
        ],
        "ll_gaussianblur/slurm.sh": [
            "main.cu"
        ]
    },
    "rangeldaroya/segment-water-4band": {
        "segment-water-4band/script_pred_trainseg.sh": [
            "04_predict_trainseg.py"
        ]
    },
    "tusharsangam/TransVisDrone": {
        "TransVisDrone/submit-train.slurm": [
            "train.py",
            "./data/NPS.yaml",
            "./data/hyps/hyp.VisDrone.yaml",
            "./models/yolov5l.yaml",
            "./data/AOT.yaml",
            "./data/hyps/hyp.VisDrone_1.yaml",
            "./models/yolov5l-xl.yaml",
            "./data/hyps/hyp.VisDrone_3.yaml",
            "./models/yolov5s.yaml",
            "./data/BRIAR.yaml"
        ],
        "TransVisDrone/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "bgeltz/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "danieltrpevski/Spillover": {
        "Spillover/eta.sh": [
            "./eta_mpi.py"
        ]
    },
    "opentargets/genetics-v2g-data": {
        "genetics-v2g-data/interval_master.sh": [
            "andersson2014_fantom5.Snakefile",
            "thurman2012_dhscor.Snakefile",
            "javierre2016_pchic.Snakefile"
        ],
        "genetics-v2g-data/jobspec-cfg/thurman2012_dhscor.Snakefile": [
            "scripts/thurman2012_format.py",
            "scripts/liftover_interval.py",
            "scripts/thurman2012_to_parquet.py"
        ],
        "genetics-v2g-data/jobspec-cfg/javierre2016_pchic.Snakefile": [
            "scripts/javierre2016_to_bed.py",
            "scripts/javierre2016_format.py",
            "scripts/liftover_interval.py",
            "scripts/javierre2016_to_parquet.py"
        ],
        "genetics-v2g-data/jobspec-cfg/andersson2014_fantom5.Snakefile": [
            "scripts/andersson2014_format.py",
            "scripts/liftover_interval.py",
            "scripts/andersson2014_to_parquet.py"
        ]
    },
    "syrkis/neuroscope": {
        "neuroscope/jobspec-cfg/main.py": [
            "main.py"
        ],
        "neuroscope/jobs/train.job": [
            "main.py"
        ]
    },
    "syrkis/bridger": {
        "bridger/bridger.job": [
            "./scripts/counts.sh",
            "./scripts/origin.sh"
        ]
    },
    "polyluxus/tools-for-gamess.bash": {
        "tools-for-gamess.bash/gamess.submit.sh": [
            "gamess.submit.sh"
        ],
        "tools-for-gamess.bash/jobspec-cfg/gamess.submit.sh": [
            "gamess.submit.sh"
        ]
    },
    "polyluxus/tools-for-orca.bash": {
        "tools-for-orca.bash/orca.submit.sh": [
            "orca.submit.sh"
        ],
        "tools-for-orca.bash/jobspec-cfg/orca.submit.sh": [
            "orca.submit.sh"
        ]
    },
    "polyluxus/runMultiwfn.bash": {
        "runMultiwfn.bash/runMultiwfn.sh": [
            "runMultiwfn.sh",
            "CHANGES.txt",
            "VERSION",
            "INSTALL.txt"
        ],
        "runMultiwfn.bash/jobspec-cfg/runMultiwfn.sh": [
            "runMultiwfn.sh",
            "CHANGES.txt",
            "VERSION",
            "INSTALL.txt"
        ]
    },
    "dipakmeher/llama_CS798_ResearchProject": {
        "llama_CS798_ResearchProject/run.slurm": [
            "embedding3_bit.py",
            "embedding4.py",
            "embedding2.py",
            "embedding.py",
            "overlapping.py"
        ]
    },
    "LMBradford/salmdetectpipeline": {
        "salmdetectpipeline/SLURM_mockcomm_R2_step3summarize.sh": [
            "snakefile_mockcomm_step3summarize.py",
            "configs/mockcomm_Round2.yaml"
        ],
        "salmdetectpipeline/SLURM_mockcomm_step1_setup.sh": [
            "snakefile_ccmockcomm_step1setup.py",
            "configs/mockcomm_step1_setup.yaml"
        ],
        "salmdetectpipeline/SLURM_mockcomm_R2_analyze.sh": [
            "snakefile_mockcomm_R2_step2analyze.py",
            "configs/mockcomm_Round2.yaml"
        ],
        "salmdetectpipeline/SLURM_mockcomm_R1_analyze.sh": [
            "snakefile_mockcomm_R1_step2analyze.py",
            "configs/mockcomm_Round1.yaml"
        ],
        "salmdetectpipeline/SLURM_mockcomm_R1_step3summarize.sh": [
            "snakefile_mockcomm_step3summarize.py",
            "configs/mockcomm_Round1.yaml"
        ],
        "salmdetectpipeline/SLURM_snakemake_metaphlan.sh": [
            "snakefile_mockcomm_metaphlan.py"
        ]
    },
    "phess2/SpecNorm": {
        "SpecNorm/train_model.sh": [
            "train.py"
        ]
    },
    "Amelioratede/HPML_project_GAN_SRGAN": {
        "HPML_project_GAN_SRGAN/script.sh": [
            "train_time.py"
        ]
    },
    "danielward27/rnpe": {
        "rnpe/jobspec-cfg/scripts/jobs/CS.sh": [
            "scripts/jobs/CS.sh"
        ],
        "rnpe/jobspec-cfg/scripts/jobs/SIR.sh": [
            "scripts/jobs/SIR.sh"
        ],
        "rnpe/scripts/jobs/CS.sh": [
            "scripts/jobs/CS.sh"
        ],
        "rnpe/scripts/jobs/SIR.sh": [
            "scripts/jobs/SIR.sh"
        ]
    },
    "DavidLKing/MED-pytorch": {
        "MED-pytorch/pdms/pt.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/fr.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/ko.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/ja.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/en.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/ru.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/id.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/es.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/ar.pdm": [
            "./main.py"
        ],
        "MED-pytorch/pdms/hi.pdm": [
            "./main.py"
        ]
    },
    "Ailon-Island/Facke": {
        "Facke/shell/benchmark_finetuned_ILVR_lr5e-6.sh": [
            "benchmark.py"
        ],
        "Facke/shell/train.sh": [
            "./train_SimSwap.py"
        ],
        "Facke/shell/benchmark_CVAE.sh": [
            "./benchmark.py"
        ],
        "Facke/shell/train_WO_intra-ID_random_continue.sh": [
            "./train_SimSwap.py"
        ],
        "Facke/shell/train_nFM.sh": [
            "./train_SimSwap.py"
        ],
        "Facke/shell/train_CVAE.sh": [
            "./train_CVAE.py"
        ]
    },
    "TDA-Jyamiti/GRIL": {
        "GRIL/submit_array_job.sh": [
            "main_graph.py"
        ]
    },
    "pcm32/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "NERSC/sc22-dl-tutorial": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_mp.sh": [
            "export_DDP_vars.sh"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py",
            "export_DDP_vars.sh"
        ],
        "nersc-dl-multigpu/submit_batch_shifter.sh": [
            "export_DDP_vars.sh"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "NERSC/hep_cnn_benchmark": {
        "hep_cnn_benchmark/run_scripts/run_cori_haswell.sh": [
            "scripts/hep_classifier_tf_train.py"
        ]
    },
    "NERSC/nersc-tf-tests": {
        "nersc-tf-tests/scripts/tf2_jit.sh": [
            "tests/tf_jit.py"
        ]
    },
    "NERSC/sc23-dl-tutorial": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_mp.sh": [
            "train_mp_graphs.py",
            "export_DDP_vars.sh",
            "train_mp.py"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py",
            "export_DDP_vars.sh"
        ],
        "nersc-dl-multigpu/submit_batch_shifter.sh": [
            "export_DDP_vars.sh"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "NERSC/sc20-dl-tutorial": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "NERSC/nersc-dl-wandb": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_mp.sh": [
            "export_DDP_vars.sh"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py",
            "export_DDP_vars.sh"
        ],
        "nersc-dl-multigpu/submit_batch_shifter.sh": [
            "export_DDP_vars.sh"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "NERSC/nersc-dl-multigpu": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh"
        ],
        "sc23-dl-tutorial/submit_pm_mp.sh": [
            "export_DDP_vars.sh"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "export_DDP_vars.sh"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "export_DDP_vars.sh"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "export_DDP_vars.sh"
        ],
        "nersc-dl-multigpu/submit_batch_shifter.sh": [
            "train_multi_gpu.py",
            "export_DDP_vars.sh"
        ]
    },
    "NERSC/pytorch-examples": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "NERSC/sc19-dl-tutorial": {
        "sc22-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm.sh": [
            "train.py"
        ],
        "sc23-dl-tutorial/submit_pm_dp.sh": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit_multinode.slr": [
            "train.py"
        ],
        "sc20-dl-tutorial/submit.slr": [
            "train.py"
        ],
        "nersc-dl-wandb/submit_batch.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cgpu.sh": [
            "train.py"
        ],
        "pytorch-examples/scripts/train_cori.sh": [
            "train.py"
        ],
        "sc19-dl-tutorial/scripts/cifar_resnet.sh": [
            "train.py"
        ]
    },
    "mithunpaul08/bert_tensorflow": {
        "bert_tensorflow/run_on_hpc_ocelote.sh": [
            "requirements.txt",
            "run_sandeep_code.sh"
        ],
        "bert_tensorflow/jobspec-cfg/run_sandeep_code.sh": [
            "run_classifier_ARC_DETAILED_sandeep.py"
        ],
        "transformers/mithun_scripts/run_on_hpc_ocelote_venv_array.sh": [
            "requirements.txt"
        ]
    },
    "LordXX505/SpindleDetection": {
        "SpindleDetection/data.sh": [
            "get_pre_data_MASS.py"
        ]
    },
    "praveena2j/RJCAforSpeakerVerification": {
        "RJCMA/abaw6_preprocessing/project/abaw5/ABAW6_preprocess.sh": [
            "main.py"
        ]
    },
    "praveena2j/RJCMA": {
        "RJCMA/abaw6_preprocessing/project/abaw5/ABAW6_preprocess.sh": [
            "main.py"
        ]
    },
    "jejjohnson/gps4oi": {
        "gps4oi/scripts/baselines/opt.sh": [
            "scripts/baselines/opt.py"
        ],
        "gps4oi/scripts/baselines/loop_unopt.oar": [
            "scripts/baselines/loop_unopt.py"
        ],
        "gps4oi/scripts/baselines/loop_opt.sh": [
            "scripts/baselines/loop_opt.py"
        ]
    },
    "dayal-kalra/jax": {
        "jax/submit_job.sh": [
            "train_wide_resnet_linear_warmup.py"
        ]
    },
    "namin/llm-verified-with-monte-carlo-tree-search": {
        "llm-verified-with-monte-carlo-tree-search/jobspec-cfg/run_whole.py": [
            "llm.py"
        ],
        "llm-verified-with-monte-carlo-tree-search/sweeps/launch_sweep_exploration.sh": [
            "run_intermediate_expansion.py"
        ],
        "llm-verified-with-monte-carlo-tree-search/sweeps/launch_sweep_reflexion.sh": [
            "run_reflexion.py"
        ],
        "llm-verified-with-monte-carlo-tree-search/sweeps/launch_sweep_whole.sh": [
            "run_whole.py"
        ],
        "llm-verified-with-monte-carlo-tree-search/sweeps/launch_sweep_vmcts.sh": [
            "run_intermediate_expansion.py"
        ],
        "llm-verified-with-monte-carlo-tree-search/sweeps/launch_sweep_temp_david.sh": [
            "run_intermediate_expansion.py"
        ]
    },
    "ampersandmcd/CSE803FinalProject": {
        "CSE803FinalProject/slurm_jobs/train_srresnet.sb": [
            "train.py"
        ]
    },
    "P3tru/ND280Computing": {
        "ND280Computing/scinet_mcp_scripts/sub_header.sh": [
            "setup.sh"
        ]
    },
    "mhrnshrf/ORAM-Simulator": {
        "ORAM-Simulator/bunch.sbatch": [
            "input/4channel.cfg"
        ],
        "ORAM-Simulator/jobspec-cfg/input/4channel.cfg": [
            "4KB"
        ]
    },
    "jojoAxolotl/vq2d_cvpr": {
        "vq2d_cvpr/scripts/faster_evaluation/slurm_eval_array.sh": [
            "evaluate_vq2d.py"
        ]
    },
    "herobd/handwriting_line_generation": {
        "handwriting_line_generation/run_eval.py": [
            "new_eval.py",
            "get_styles.py"
        ]
    },
    "uwyo-mallet/Hybrid-Sorting-Optimization": {
        "Hybrid-Sorting-Optimization/job-singularity.sbatch": [
            "src/jobs.py"
        ]
    },
    "mmterpstra/molgenis-c5-TumorNormal": {
        "molgenis-c5-TumorNormal/scripts/GenerateScripts.sh": [
            "scripts/RemoveDuplicatesCompute.pl"
        ]
    },
    "mabounassif/ift6759-t6-p1": {
        "ift6759-t6-p1/train_on_slurm.sh": [
            "evaluator.py",
            "predictions.txt",
            "data/admin_cfg.json",
            "data/user_cfg.json"
        ]
    },
    "mabounassif/conditional_pixel_cnn_theano": {
        "conditional_pixel_cnn_theano/tools/run_experiment.sh": [
            "tools/test_gpu.py"
        ]
    },
    "briochemc/FastBGCParameterOptimization": {
        "FastBGCParameterOptimization/cluster_scripts/run_Optim_callback_w0_katana.pbs": [
            "src/run_Optim_callback_w0.jl"
        ],
        "FastBGCParameterOptimization/cluster_scripts/run_TimerOutpus_katana_w0.pbs": [
            "src/run_TimerOutputs_w0.jl"
        ],
        "FastBGCParameterOptimization/cluster_scripts/run_TimerOutpus_katana.pbs": [
            "src/run_TimerOutputs.jl"
        ],
        "FastBGCParameterOptimization/cluster_scripts/run_Optim_callback_katana.pbs": [
            "src/run_Optim_callback.jl"
        ]
    },
    "Deepdive543443/Enigma_breaking_RNN_FYP": {
        "Enigma_breaking_RNN_FYP/main.sh": [
            "main.py"
        ],
        "SPAM-of-random-Animefaces/main.sh": [
            "train.py"
        ]
    },
    "Deepdive543443/SPAM-of-random-Animefaces": {
        "Enigma_breaking_RNN_FYP/main.sh": [
            "main.py"
        ],
        "SPAM-of-random-Animefaces/main.sh": [
            "train.py"
        ]
    },
    "pnnl/isicle": {
        "NATIG/RC/make.sh": [
            "setup.py"
        ]
    },
    "pnnl/NWPEsSE": {
        "NWPEsSE/examples/interface_gmx/run_nwpesse.csh": [
            "nwpesse"
        ]
    },
    "pnnl/SLiCE": {
        "SLiCE/hpc/slice.sh": [
            "main.py"
        ]
    },
    "pnnl/ExaGO": {
        "ExaGO/buildsystem/spack/ascent/bsub.sh": [
            "buildsystem/spack/load_spack.sh",
            "buildsystem/spack/configure_modules.sh"
        ],
        "ExaGO/buildsystem/spack/summit/bsub.sh": [
            "buildsystem/spack/load_spack.sh",
            "buildsystem/spack/configure_modules.sh"
        ],
        "ExaGO/buildsystem/spack/newell/sbatch.sh": [
            "buildsystem/spack/load_spack.sh",
            "./buildsystem/spack/configure_modules.sh"
        ]
    },
    "aidan-curtis/firehose": {
        "firehose/sub40x40_final.sh": [
            "cell2fire/rl_experiment_vectorized.py"
        ],
        "firehose/sub20x20_reward.sh": [
            "cell2fire/rl_experiment_vectorized.py"
        ]
    },
    "geoelements/gns": {
        "gns/jobspec-cfg/start_venv.sh": [
            "module.sh",
            "test/test_pytorch.py",
            "test/test_pytorch_cuda_gpu.py",
            "test/test_torch_geometric.py"
        ],
        "gns/slurm_scripts/train.sh": [
            "start_venv.sh"
        ],
        "gns/slurm_scripts/rollout.sh": [
            "start_venv.sh"
        ],
        "gns/slurm_scripts/train_both.sh": [
            "start_venv.sh"
        ]
    },
    "UIC-Liu-Lab/ContinualLM": {
        "ContinualLM/scripts/finetune_das.sh": [
            "finetune.py"
        ]
    },
    "ealonsogzl/MuSA": {
        "MuSA/run_slurm.sh": [
            "main.py"
        ],
        "MuSA/run_PBS.sh": [
            "main.py"
        ]
    },
    "facebookresearch/synsin": {
        "synsin/submit.sh": [
            "./submit_slurm_synsin.sh"
        ],
        "synsin/jobspec-cfg/submit_slurm_synsin.sh": [
            "train.py"
        ],
        "atlas/example_scripts/mmlu/mmlu-full.sh": [
            "train.py"
        ]
    },
    "facebookresearch/nevergrad": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/atlas": {
        "synsin/jobspec-cfg/submit_slurm_synsin.sh": [
            "train.py"
        ],
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "atlas/example_scripts/mmlu/mmlu-full.sh": [
            "train.py"
        ],
        "atlas/example_scripts/mmlu/mmlu-zeroshot.sh": [
            "evaluate.py"
        ],
        "atlas/example_scripts/nq/retrieve_only.sh": [
            "preprocessing/download_corpus.py",
            "preprocessing/download_model.py",
            "evaluate.py"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/cruxeval": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/e3b": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/AudioDec": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE",
            "submit_codecUniv_vctk.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE",
            "submit_vocoder.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE",
            "submit_codec_libritts.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE",
            "submit_autoencoder.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE",
            "submit_denoise.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE",
            "submit_statistic.sh",
            "./parse_options.sh",
            "codecStatistic.py"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE",
            "submit_codec_vctk.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE",
            "submit_codecUniv_vctk.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE",
            "submit_vocoder.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE",
            "submit_codec_libritts.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE",
            "submit_autoencoder.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE",
            "submit_denoise.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecTest.py"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE",
            "submit_statistic.sh",
            "./parse_options.sh",
            "codecStatistic.py"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE",
            "submit_codec_vctk.sh",
            "./parse_options.sh",
            "codecTrain.py",
            "codecStatistic.py",
            "codecTest.py"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/sound-spaces": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "sound-spaces/ss_baselines/av_nav/slurm.sh": [
            "ss_baselines/av_nav/config/audionav/mp3d/train_telephone/audiogoal_depth_ddppo.yaml"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "facebookresearch/AudioMAE": {
        "atlas/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_model.py": [
            "LICENSE"
        ],
        "atlas/jobspec-cfg/preprocessing/download_corpus.py": [
            "LICENSE"
        ],
        "AudioDec/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codecUniv_vctk.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_vocoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_libritts.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_autoencoder.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_denoise.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTrain.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecTest.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/codecStatistic.py": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_statistic.sh": [
            "LICENSE"
        ],
        "AudioDec/jobspec-cfg/submit_codec_vctk.sh": [
            "LICENSE"
        ],
        "AudioMAE/inf_dist.sh": [
            "main_finetune_as.py"
        ],
        "AudioMAE/ft_as.sh": [
            "main_finetune_as.py"
        ],
        "AudioMAE/inf.sh": [
            "main_finetune_as.py"
        ],
        "AudioMAE/jobspec-cfg/main_finetune_as.py": [
            "LICENSE"
        ]
    },
    "BenjaminSchaar/DLC_track_pharynx_egg": {
        "DLC_track_pharynx_egg/track_pharynx_egg_laying_run.sh": [
            "track_pharynx_egg_laying",
            "track_pharynx_egg_laying_cluster_config.yaml"
        ]
    },
    "kaarejoergensen/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing": {
        "CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing/submit.sh": [
            "train.py"
        ]
    },
    "kaarejoergensen/02285_server": {
        "02285_server/submit_benchmark_nn.sh": [
            "./benchmark_NN_server.sh"
        ],
        "02285_server/submit.sh": [
            "./job.sh"
        ],
        "02285_server/jobspec-cfg/job.sh": [
            "src/main/resources/levels/generated/basic/Easy_1/0_Basic_Easy_1.lvl"
        ]
    },
    "ksmetz/bagPipes": {
        "bagPipes/ATACpipe.sh": [
            "config/requirements.txt",
            "workflows/ATACpipeLauncher.snakefile",
            "./workflows/utils/status.py"
        ],
        "bagPipes/RNApipe.sh": [
            "config/requirements.txt",
            "workflows/RNApipeCore.snakefile",
            "./workflows/utils/status.py",
            "workflows/mergeSignal.snakefile"
        ],
        "bagPipes/jobspec-cfg/workflows/RNApipeCore.snakefile": [
            "workflows/utils/txImporter.R"
        ]
    },
    "anicolson/tgt_20": {
        "tgt_20/run.sh": [
            "./config.sh",
            "./paths_demand_vb.sh",
            "./paths_deep_xi.sh",
            "./paths_chime5.sh"
        ]
    },
    "SanaNGU/pet-masakhane-news": {
        "pet-masakhane-news/install.sh": [
            "requirements.txt"
        ]
    },
    "DongyoungLim/THEO_POULA": {
        "THEO_POULA/exp3.sh": [
            "main.py"
        ],
        "THEO_POULA/exp2.sh": [
            "main.py"
        ],
        "THEO_POULA/exp4.sh": [
            "main.py"
        ],
        "THEO_POULA/exp1.sh": [
            "main.py"
        ]
    },
    "AndrewC19/causal_metamorphic_relation_generation": {
        "causal_metamorphic_relation_generation/run_dags.sh": [
            "run.sh",
            "process_seed_results.py"
        ]
    },
    "jinghuazhao/INF": {
        "INF/csd3/ukb.sh": [
            "csd3/ukb.sb"
        ],
        "INF/rsid/mr.sb": [
            "doc/olink.inf.panel.annot.tsv"
        ]
    },
    "jinghuazhao/Caprion": {
        "Caprion/0_utils.sb": [
            "5_pgwas.sb"
        ]
    },
    "jinghuazhao/SomaLogic": {
        "SomaLogic/clump.sb": [
            "doc/high-LD-regions-hg19.txt"
        ]
    },
    "ludvigk/RLExp": {
        "RLExp/scripts/run_experiment.batch": [
            "scripts/run_experiment.jl"
        ]
    },
    "Kaustubh-CH/NeuronTransformer": {
        "NeuronTransformer/batch.sh": [
            "Ntran2.py"
        ]
    },
    "raulorteg/SmileCVAE": {
        "SmileCVAE/run_all.sh": [
            "requirements.txt",
            "cvae.py",
            "training_plots.py",
            "changing_smiles.py",
            "sample_prior.py",
            "sample_across_axis.py"
        ],
        "SmileCVAE/jobspec-cfg/cvae.py": [
            "cvae.py"
        ],
        "SmileCVAE/jobspec-cfg/training_plots.py": [
            "training_plots.py"
        ],
        "SmileCVAE/jobspec-cfg/sample_prior.py": [
            "sample_prior.py"
        ],
        "SmileCVAE/jobspec-cfg/changing_smiles.py": [
            "changing_smiles.py"
        ],
        "SmileCVAE/jobspec-cfg/sample_across_axis.py": [
            "sample_across_axis.py"
        ]
    },
    "zcobell/asgs": {
        "asgs/jobspec-cfg/asgs_main.sh": [
            "platforms.sh",
            "get_atcf.pl",
            "asgs_main.sh",
            "logging.sh",
            "control_file_gen.pl"
        ],
        "asgs/config/asgs_config_cpra_2017_NAM.sh": [
            "asgs_main.sh"
        ],
        "asgs/config/asgs_config_cpra_2017_storm.sh": [
            "asgs_main.sh"
        ]
    },
    "chriswestbrown/chipboard": {
        "chipboard/helloWorldTest.sh": [
            "mpiHelloWorld.py"
        ]
    },
    "RitvikPrabhu/2dnet": {
        "2dnet/job_tinker.sh": [
            "trainers_new_dl.py",
            "trainers.py",
            "ddnet_inference.py"
        ]
    },
    "akshaysubr/TEGAN": {
        "TEGAN/run_TEGAN.sh": [
            "main.py"
        ],
        "TEGAN/run_TEResNet.sh": [
            "main.py"
        ]
    },
    "gabrielwen/MusicClassification": {
        "MusicClassification/pythonrize.pbs": [
            "pythonrize.py"
        ],
        "MusicClassification/data/pythonrize.pbs": [
            "process.sh",
            "pythonrize.py"
        ]
    },
    "Siyuan-Shen/GL_PM25_Mass_SpatialCV": {
        "GL_PM25_Mass_SpatialCV/run_gpu.bsub": [
            "main_1.py"
        ]
    },
    "JoelNiklaus/SwissJudgementPrediction": {
        "LegalDatasets/pretrain/mc4_legal/run_ubelix_job.sh": [
            "run_ubelix_job.sh"
        ],
        "LegalDatasets/pretrain/ejustice/run_ubelix_job.sh": [
            "run_ubelix_job.sh"
        ],
        "SwissJudgementPrediction/run_data_generalization.sh": [
            "run_data_generalization.sh"
        ],
        "SwissJudgementPrediction/run_ubelix_job.sh": [
            "run.sh",
            "run_ubelix_job.sh"
        ],
        "SwissJudgementPrediction/jobspec-cfg/run_data_generalization.sh": [
            "run_data_generalization.sh"
        ],
        "SwissJudgementPrediction/jobspec-cfg/run_ubelix_job.sh": [
            "run.sh",
            "run_ubelix_job.sh"
        ],
        "SwissJudgementPrediction/jobspec-cfg/run.sh": [
            "run_tc.py"
        ]
    },
    "novaTehnika/2023-DynPTOModelDesignStudies": {
        "2023-DynPTOModelDesignStudies/study_parPTO_accumNoDpDt_woPL_wPassiveRV.sh": [
            "study_parPTO_accumNoDpDt_woPL_wPassiveRV.sh"
        ],
        "2023-DynPTOModelDesignStudies/study_parPTO_chargePumpAccum.sh": [
            "study_parPTO_chargePumpAccum.sh"
        ],
        "2023-DynPTOModelDesignStudies/study_parPTO_checkValves.sh": [
            "study_parPTO_checkValves.sh"
        ],
        "2023-DynPTOModelDesignStudies/study_parPTO_accum_woPL_woRV.sh": [
            "study_parPTO_accum_woPL_woRV.sh"
        ],
        "2023-DynPTOModelDesignStudies/jobspec-cfg/study_parPTO_accumNoDpDt_woPL_wPassiveRV.sh": [
            "study_parPTO_accumNoDpDt_woPL_wPassiveRV.sh"
        ],
        "2023-DynPTOModelDesignStudies/jobspec-cfg/study_parPTO_chargePumpAccum.sh": [
            "study_parPTO_chargePumpAccum.sh"
        ],
        "2023-DynPTOModelDesignStudies/jobspec-cfg/study_parPTO_checkValves.sh": [
            "study_parPTO_checkValves.sh"
        ],
        "2023-DynPTOModelDesignStudies/jobspec-cfg/study_parPTO_accum_woPL_woRV.sh": [
            "study_parPTO_accum_woPL_woRV.sh"
        ]
    },
    "globus-labs/SuperBERT": {
        "SuperBERT/jobspec-cfg/scripts/launch_pretraining.sh": [
            "run_pretraining.py"
        ],
        "SuperBERT/scripts/run_pretraining.sbatch": [
            "scripts/launch_pretraining.sh",
            "config/bert_pretraining_phase1_config.json",
            "config/bert_pretraining_phase2_config.json"
        ],
        "SuperBERT/scripts/run_pretraining.cobalt": [
            "./scripts/launch_pretraining.sh"
        ]
    },
    "betterze/StyleSpace": {
        "StyleSpace/bash_script/align_mask.sh": [
            "align_mask.py"
        ]
    },
    "ctu-vras/T-UDA": {
        "T-UDA/script/da_kitti_nuscenes/train_nuscenes_kitti_f2_0_time.sh~": [
            "train_uda.py"
        ],
        "T-UDA/script/da_kitti_nuscenes/val_kitti_nuscenes.sh": [
            "evaluate_uda.py",
            "configs/data_config/da_kitti_nuscenes/uda_kitti_nuscenes.yaml"
        ],
        "T-UDA/script/da_kitti_nuscenes/train_kitti_nuscenes.sh": [
            "train_uda.py",
            "configs/data_config/da_kitti_nuscenes/uda_kitti_nuscenes.yaml"
        ],
        "T-UDA/script/da_kitti_nuscenes/train_kitti_nuscenes_f0_0_time.sh~": [
            "train_uda.py"
        ],
        "T-UDA/script/da_wod_nuscenes/train_nuscenes_wod.sh": [
            "train_uda.py",
            "configs/data_config/da_wod_nuscenes/uda_nuscenes_wod.yaml"
        ],
        "T-UDA/script/da_wod_nuscenes/train_wod_nuscenes.sh": [
            "train_uda.py",
            "configs/data_config/da_wod_nuscenes/uda_wod_nuscenes.yaml"
        ],
        "T-UDA/script/da_wod_nuscenes/val_wod_nuscenes.sh": [
            "evaluate_uda.py",
            "configs/data_config/da_wod_nuscenes/uda_wod_nuscenes.yaml"
        ],
        "T-UDA/script/da_wod_nuscenes/val_nuscenes_wod.sh": [
            "evaluate_uda.py",
            "configs/data_config/da_wod_nuscenes/uda_nuscenes_wod.yaml"
        ],
        "T-UDA/script/da_wod_kitti/val_kitti_wod.sh": [
            "evaluate_uda.py",
            "configs/data_config/da_wod_kitti/uda_kitti_wod.yaml"
        ],
        "T-UDA/script/da_wod_kitti/val_wod_kitti.sh": [
            "evaluate_uda.py",
            "configs/data_config/da_wod_kitti/uda_wod_kitti.yaml"
        ],
        "T-UDA/script/da_wod_kitti/train_wod_kitti.sh": [
            "train_uda.py",
            "configs/data_config/da_wod_kitti/uda_wod_kitti.yaml"
        ]
    },
    "ctu-vras/T-Concord3D": {
        "T-UDA/script/run_train_f0_0_T11_33_s20_p80.sh~": [
            "train.py"
        ],
        "T-UDA/script/run_train_f0_0_s100_wod.sh~": [
            "train.py"
        ],
        "T-UDA/script/setup.sh~": [
            "train.py"
        ],
        "T-UDA/script/run_train_f0_0_T11_33_s20_p80_cp64.sh~": [
            "train.py"
        ],
        "T-UDA/script/run_train_s20.sh~": [
            "train.py"
        ],
        "T-UDA/script/run_train_f_0_0_s20.sh~": [
            "train.py"
        ],
        "T-UDA/script/run_train_f0_0_s20.sh~": [
            "train.py"
        ],
        "T-Concord3D/script/sematickitti/run_infer_T1_1_s20.sh": [
            "test.py"
        ],
        "T-Concord3D/script/sematickitti/run_infer_T3_3_s20.sh": [
            "test.py"
        ],
        "T-Concord3D/script/sematickitti/run_train_S0_0_T11_33_ssl_s20_p80.sh": [
            "train.py"
        ],
        "T-Concord3D/script/sematickitti/run_train_T1_1_s20.sh": [
            "train.py"
        ],
        "T-Concord3D/script/sematickitti/run_train_T2_2_s20.sh": [
            "train.py"
        ],
        "T-Concord3D/script/sematickitti/run_train_T3_3_s20.sh": [
            "train.py"
        ],
        "T-Concord3D/script/sematickitti/run_train_T0_0.sh": [
            "train_tconcord3d.py"
        ],
        "T-Concord3D/script/sematickitti/run_infer_f0_0.sh": [
            "test.py"
        ]
    },
    "xuesongwang/Neural-Process-Family": {
        "Neural-Process-Family/np_job.sh": [
            "requirements.txt",
            "NP_or_ANP_train_newGP_task.py",
            "ConvNP_train.py"
        ],
        "Neural-Process-Family/data/gp_sampler.sh": [
            "requirements.txt"
        ]
    },
    "WHOIGit/HerringRunner": {
        "HerringRunner/process_video.sbatch": [
            "process_video.py"
        ],
        "HerringRunner/process_video_list.sbatch": [
            "process_video.py",
            "afr.json",
            "detect_summary.py",
            "pytorch_classifier/neuston_net.py"
        ],
        "FishDetector/detect.sbatch": [
            "detect.sbatch",
            "process_video.py"
        ],
        "FishDetector/process.sbatch": [
            "process_video.py"
        ],
        "FishDetector/jobspec-cfg/detect.sbatch": [
            "detect.sbatch",
            "process_video.py"
        ]
    },
    "WHOIGit/FishDetector": {
        "HerringRunner/process_video.sbatch": [
            "process_video.py"
        ],
        "HerringRunner/process_video_list.sbatch": [
            "process_video.py"
        ],
        "FishDetector/detect.sbatch": [
            "detect.sbatch",
            "requirements.txt",
            "process_video.py"
        ],
        "FishDetector/process.sbatch": [
            "requirements.txt",
            "process_video.py"
        ],
        "FishDetector/jobspec-cfg/detect.sbatch": [
            "detect.sbatch",
            "requirements.txt",
            "process_video.py"
        ]
    },
    "WHOIGit/tator_scripts": {
        "FishDetector/detect.sbatch": [
            "requirements.txt"
        ],
        "FishDetector/process.sbatch": [
            "requirements.txt"
        ],
        "FishDetector/jobspec-cfg/detect.sbatch": [
            "requirements.txt"
        ]
    },
    "davpoolechem/JuliaChem.jl": {
        "JuliaChem.jl/example_inputs/ARPA-E/6-31/fig1c.sh": [
            "example_scripts/minimal-rhf-benchmark.jl",
            "example_inputs/ARPA-E/6-31/fig1c.json"
        ],
        "JuliaChem.jl/example_inputs/ARPA-E/6-31/fig1f.sh": [
            "example_scripts/minimal-rhf.jl"
        ],
        "JuliaChem.jl/example_inputs/ARPA-E/6-31/fig1g.sh": [
            "example_scripts/minimal-rhf-benchmark.jl",
            "example_inputs/ARPA-E/6-31/fig1g.json"
        ]
    },
    "madscort/BERTerpene": {
        "BERTerpene/queue.pbs": [
            "scripts/esm.py"
        ]
    },
    "jmendozais/lung-nodule-detection": {
        "lung-nodule-detection/jobspec-cfg/lnd.py": [
            "augment.py"
        ],
        "lung-nodule-detection/jobspec-cfg/segment.py": [
            "segment.py"
        ],
        "lung-nodule-detection/scripts/pbs.sh": [
            "segment.py",
            "detect.py",
            "lnd.py"
        ]
    },
    "regulatory-genomics/proATAC": {
        "proATAC/work.sh": [
            "atac_preprocess.config",
            "proATAC.nf"
        ]
    },
    "greydanus/crypto-rnn": {
        "crypto-rnn/pbs/enigma.pbs": [
            "main.py"
        ]
    },
    "myroms/roms": {
        "roms/ROMS/Bin/submit_split_r4dvar.sh": [
            "License_ROMS.md"
        ]
    },
    "monoramasn/speech-recognition": {
        "speech-recognition/French_run.sh": [
            "French.py"
        ],
        "speech-recognition/English-run.sh": [
            "English.py"
        ],
        "speech-recognition/Czech-run.sh": [
            "Czech.py"
        ]
    },
    "pdelamere/Hybrid_3d_buf": {
        "Hybrid_3d_buf/run.slurm": [
            "chinook_setup"
        ]
    },
    "HeliosZhao/Animate124": {
        "Animate124/jobspec-cfg/guidance/sd_utils.py": [
            "guidance/sd_utils.py"
        ],
        "Animate124/scripts/textual_inversion/textual_inversion_sd.sh": [
            "textual-inversion/textual_inversion.py",
            "guidance/sd_utils.py"
        ]
    },
    "paperflight/Hierarchical-Multi-agent-DRL-with-Federated-Learning": {
        "Hierarchical-Multi-agent-DRL-with-Federated-Learning/bash.sh": [
            "global_parameters.py",
            "./rainbow_hac/train.py"
        ]
    },
    "GaiYu0/cfq": {
        "cfq/scripts/run_docker.sh": [
            "scripts/download_cfq.py",
            "cfq/train.py"
        ],
        "cfq/scripts/slurm_wandb_agent.sh": [
            "scripts/download_cfq.py"
        ]
    },
    "APOGEE-DR17-Binaries/VAC-pipeline": {
        "VAC-pipeline/mpi/4-rerun.sh": [
            "hq-config/init.sh"
        ],
        "VAC-pipeline/mpi/1-setup.sh": [
            "hq-config/init.sh"
        ],
        "VAC-pipeline/mpi/2-run.sh": [
            "hq-config/init.sh"
        ],
        "simulated-test/mpi/2-run.sh": [
            "hq-config/init.sh"
        ]
    },
    "APOGEE-DR17-Binaries/simulated-test": {
        "VAC-pipeline/mpi/4-rerun.sh": [
            "hq-config/init.sh"
        ],
        "VAC-pipeline/mpi/1-setup.sh": [
            "hq-config/init.sh"
        ],
        "VAC-pipeline/mpi/2-run.sh": [
            "hq-config/init.sh"
        ],
        "simulated-test/mpi/2-run.sh": [
            "hq-config/init.sh"
        ]
    },
    "ramu13/KFAC-Pytorch": {
        "KFAC-Pytorch/train.sh": [
            "main.py"
        ]
    },
    "wh-forker/GDT": {
        "GDT/scripts/pretrain_gdt_k400.sh": [
            "main_gdt.py"
        ],
        "GDT/scripts/pretrain_stica.sh": [
            "main_stica.py"
        ]
    },
    "lingqiz/optimal-measurement": {
        "optimal-measurement/lnopt_run.sh": [
            "linear.py"
        ]
    },
    "ordabayevy/tapqir-overleaf": {
        "tapqir-overleaf/scripts/kinetic.sbatch": [
            "scripts/kinetic_simulations.py"
        ],
        "tapqir-overleaf/scripts/negative.sbatch": [
            "scripts/cosmos_simulations.py"
        ],
        "tapqir-overleaf/scripts/seed.sbatch": [
            "scripts/cosmos_simulations.py"
        ],
        "tapqir-overleaf/scripts/lamda.sbatch": [
            "scripts/cosmos_simulations.py"
        ],
        "tapqir-overleaf/scripts/height.sbatch": [
            "scripts/cosmos_simulations.py"
        ]
    },
    "tanushreebanerjee/cos429-final-project": {
        "cos429-final-project/job2.sh": [
            "test2.py"
        ]
    },
    "arame/V2_Transformer": {
        "V2_Transformer/main.sh": [
            "main.py"
        ],
        "705_Person_Detection_In_Coco/main.sh": [
            "main.py"
        ]
    },
    "arame/705_Person_Detection_In_Coco": {
        "V2_Transformer/main.sh": [
            "main.py"
        ],
        "705_Person_Detection_In_Coco/main.sh": [
            "main.py"
        ]
    },
    "tristandb8/Deformable-DETR": {
        "Deformable-DETR/runit.txt": [
            "requirements.txt"
        ]
    },
    "tlinjordet/gpu_ux_uis": {
        "gpu_ux_uis/pytorch_mnist.sh": [
            "pytorch_mnist.py"
        ],
        "gpu_ux_uis/pytorch_mnist_array.sh": [
            "pytorch_mnist.py"
        ]
    },
    "Jingnan-Jia/PFT_regression": {
        "PFT_regression/jobspec-cfg/lung_function/scripts/current_script.sh": [
            "lung_function/scripts/current_script.sh"
        ],
        "PFT_regression/lung_function/scripts/script.sh": [
            "lung_function/scripts/current_script.sh"
        ]
    },
    "TangXinyuuu/FL-Lab": {
        "FL-Lab/run.sh": [
            "experiments1.py"
        ]
    },
    "soerenmetje/kind-slurm-integration": {
        "kind-slurm-integration/run-workload.sh": [
            "kind-config-template.yaml"
        ]
    },
    "YichenGong/lung-cancer-detector": {
        "lung-cancer-detector/nyu_hpc/run_price.sh": [
            "run.py"
        ]
    },
    "ianporada/modeling_event_plausibility": {
        "modeling_event_plausibility/jobs/train_conceptmax.sh": [
            "src/train.py"
        ],
        "modeling_event_plausibility/jobs/train_roberta.sh": [
            "src/train.py"
        ]
    },
    "rhythmcao/slu-dual-learning": {
        "slu-dual-learning/slu.sbatch": [
            "./run/run_slu_bert.sh"
        ],
        "slu-dual-learning/nlg.sbatch": [
            "./run/run_nlg.sh"
        ],
        "slu-dual-learning/jobspec-cfg/run/run_slu_bert.sh": [
            "scripts/slu.py"
        ],
        "slu-dual-learning/jobspec-cfg/run/run_nlg.sh": [
            "scripts/nlg.py"
        ]
    },
    "klangenf/QuantMeta": {
        "QuantMeta/hpc_submission/quant_targets_all_linear_regs_hpc_run.sh": [
            "Snakefile-quant_targets_all_linear_regs"
        ],
        "QuantMeta/hpc_submission/downsample_hpc_run.sh": [
            "Snakefile-downsample"
        ],
        "QuantMeta/hpc_submission/quant_targets_hpc_run.sh": [
            "Snakefile-quant_targets"
        ],
        "QuantMeta/hpc_submission/map_standards_hpc_run.sh": [
            "Snakefile-map_standards"
        ],
        "QuantMeta/hpc_submission/failure_standards_hpc_run.sh": [
            "Snakefile-failure_standards"
        ],
        "QuantMeta/hpc_submission/quantmeta_hpc_run.sh": [
            "Snakefile-quantmeta"
        ]
    },
    "HPC-project-717-and-718/BFR": {
        "BFR/bfr_parallel_test.sh": [
            "tests/test_BFR_parallel.c",
            "lib/bfr_structures/bfr_structures.c",
            "lib/kmeans/kmeans.c",
            "src/BFR_parallel.c"
        ]
    },
    "TanguyLevent/RL4Microgrids": {
        "RL4Microgrids/mono_gpu.slurm": [
            "Main_X.py"
        ]
    },
    "LouisLeNezet/nf-core-test-impute": {
        "nf-core-test-impute/launch.sh": [
            "main.nf",
            "nextflow.config"
        ]
    },
    "JJ-Intelligence/Recommender-System": {
        "Recommender-System/run-eval.sh": [
            "src/main.py",
            "datasets/comp3208-train.csv",
            "datasets/comp3208-test.csv"
        ],
        "Recommender-System/run.sh": [
            "src/main.py",
            "datasets/comp3208-train.csv",
            "datasets/comp3208-test.csv"
        ]
    },
    "brinkmanlab/MicrobeDB": {
        "MicrobeDB/process.sh": [
            "schema.sql"
        ],
        "MicrobeDB/update.sh": [
            "README.md",
            "fetch.sh",
            "process.sh",
            "finalize.sh"
        ],
        "MicrobeDB/jobspec-cfg/schema.sql": [
            "fetch.sh"
        ],
        "MicrobeDB/jobspec-cfg/process.sh": [
            "schema.sql"
        ]
    },
    "EBISPOT/OXO": {
        "OXO/oxo-loader/runLoader.sh": [
            "idorg.xml"
        ]
    },
    "EBISPOT/SumStats": {
        "OXO/oxo-loader/runLoader.sh": [
            "requirements.txt"
        ]
    },
    "KenanKhauto/online-gesture-recognition-project": {
        "online-gesture-recognition-project/jobspec-cfg/run/run_3dresnet.py": [
            "./train/train_3dresnet.py"
        ],
        "online-gesture-recognition-project/scripts/jobscript_3dresnet.sh": [
            "./run/run_3dresnet.py"
        ]
    },
    "ManalHamdi/TGRAFT": {
        "TGRAFT/unit_testing.sh": [
            "core/Tests.py"
        ],
        "TGRAFT/train_script.sh": [
            "train.py"
        ]
    },
    "DeterjoSimon/NER_project": {
        "NER_project/run_PICO.sh": [
            "main.py"
        ],
        "NER_project/run_Proto.sh": [
            "requirements.txt",
            "train_demo.py"
        ],
        "NER_project/run_NERD.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "RonanLegin/ICdiffusion": {
        "ICdiffusion/sample.sh": [
            "sample.py"
        ],
        "ICdiffusion/train.sh": [
            "train.py"
        ]
    },
    "Surayez/EmotivDriverDistraction": {
        "EmotivDriverDistraction/scripts/resnet_lstm_jobs.sh": [
            "compare_models.py"
        ],
        "EmotivDriverDistraction/scripts/selfa_resnet_jobs.sh": [
            "compare_models.py"
        ]
    },
    "adamtupper/medical-image-augmentation": {
        "medical-image-augmentation/individual_effects.sh": [
            "cc_requirements.txt",
            "individual_effects.py"
        ],
        "medical-image-augmentation/paired_effects.sh": [
            "cc_requirements.txt",
            "paired_effects.py"
        ],
        "medical-image-augmentation/trivial_augment.sh": [
            "cc_requirements.txt",
            "trivial_augment.py"
        ]
    },
    "bbrockbernd/CNN-CAR": {
        "CNN-CAR/run_desk2df.slurm": [
            "Model2D_DESKTOP_FRAME.py"
        ],
        "CNN-CAR/run_seden2df.slurm": [
            "Model2D_SEDENTARY_FRAME.py"
        ],
        "CNN-CAR/run_job.slurm": [
            "Model2D.py"
        ],
        "CNN-CAR/run_1djob.slurm": [
            "Model1D2S_DESKTOP.py"
        ],
        "CNN-CAR/sedentary_1dframe.slurm": [
            "Model1D2S_SEDENTARY.py"
        ],
        "CNN-CAR/run_seden2ds.slurm": [
            "Model2D_SEDENTARY_SUBJ.py"
        ],
        "CNN-CAR/val_seden2ds.slurm": [
            "VALIDATE_SEDENTARY_SUBJECT.py"
        ],
        "CNN-CAR/reading_1dframe.slurm": [
            "Model1D2S_READING.py"
        ]
    },
    "t0-0/InfiniteBench": {
        "InfiniteBench/InfiniteBench.sh": [
            "src/eval.py"
        ]
    },
    "Tianhang-Cheng/nvdiffrecmc_baseline": {
        "nvdiffrecmc_baseline/bmvs_job.sh": [
            "train.py"
        ],
        "nvdiffrecmc_baseline/jobspec-cfg/train.py": [
            "data/tets/generate_tets.py"
        ]
    },
    "capybaralet/recurrent-batch-normalization": {
        "recurrent-batch-normalization/LOGS/python_vanishing_gradients.py_2016-07-24_13-14-41.736577/submit.sh": [
            "log"
        ]
    },
    "errai34/Mendis": {
        "Mendis/job_train.sh": [
            "job_train.sh",
            "train.py",
            "config.json"
        ],
        "Mendis/jobspec-cfg/job_train.sh": [
            "job_train.sh",
            "train.py",
            "config.json"
        ]
    },
    "msaddler/BinauralLocalizationCNN_tf2": {
        "BinauralLocalizationCNN_tf2/run_model_optimization.sh": [
            "run_model.py"
        ]
    },
    "LSSTDESC/TJPCov": {
        "TJPCov/run_tjpcov_mpi.slurm": [
            "run_tjpcov.py"
        ]
    },
    "jinserk/pytorch-asr": {
        "pytorch-asr/train_las.sh": [
            "train.py"
        ],
        "pytorch-asr/train_deepspeech.sh": [
            "batch_train.py"
        ]
    },
    "NordicESMhub/noresm-sc2021": {
        "noresm-sc2021/run-container-noresm.bash": [
            "run-noresm.bash"
        ],
        "noresm-sc2021/jobspec-cfg/run-noresm.bash": [
            "./run-noresm.bash",
            "run-noresm.bash"
        ]
    },
    "NihanPol/injection_analysis": {
        "injection_analysis/model_3A.sh": [
            "psrlist.txt"
        ],
        "injection_analysis/model_general.sh": [
            "psrlist.txt"
        ],
        "injection_analysis/model_singlepsr_noise.sh": [
            "psrlist.txt",
            "injected_amps.npy"
        ],
        "injection_analysis/final_inject_gwb.sh": [
            "final_inject_gwb.py",
            "injected_amps.npy"
        ]
    },
    "olgarithmics/camil_clustering": {
        "camil_clustering/alma_run_files/gpu_job_colon.sh": [
            "run.py",
            "label_files/camelyon_data.csv",
            "camelyon_csv_files/splits_0.csv",
            "run_simclr.py",
            "label_files/colon_data.csv"
        ],
        "camil_clustering/alma_run_files/gpu_job_sarcoma.sh": [
            "run.py",
            "label_files/multi_lipo.csv"
        ],
        "camil_clustering/alma_run_files/gpu_job_rcc.sh": [
            "run.py",
            "label_files/rcc_data.csv",
            "run_simclr.py"
        ],
        "camil_clustering/alma_run_files/gpu_job_camelyon.sh": [
            "run.py",
            "label_files/camelyon_data.csv",
            "camelyon_csv_files/splits_0.csv",
            "run_simclr.py"
        ],
        "camil_clustering/alma_run_files/gpu_job_camelyon_17.sh": [
            "run.py",
            "label_files/camelyon_17.csv",
            "run_simclr.py"
        ],
        "camil_clustering/alma_run_files/gpu_job_tcga.sh": [
            "run.py",
            "label_files/tcga_data.csv",
            "run_simclr.py"
        ]
    },
    "olgarithmics/GT-2022-histo": {
        "GT-2022-histo/alma_run_files/vis_graphcam.sh": [
            "src/vis_graphcam.py"
        ],
        "GT-2022-histo/alma_run_files/train.sh": [
            "main.py"
        ],
        "GT-2022-histo/alma_run_files/test.sh": [
            "main.py"
        ],
        "GT-2022-histo/alma_run_files/get_graphcam.sh": [
            "main.py"
        ]
    },
    "haqqeez/DLC": {
        "SLURMstuff/DeepLabCut/DLC_concat_traces.sl": [
            "DLC_traces.py"
        ],
        "DLC/DLC_concat_traces.sl": [
            "ParallelDLC.sh",
            "DLC_traces.py"
        ],
        "DLC/DLC_traces.sl": [
            "ParallelDLC.sh",
            "DLC_traces.py"
        ],
        "DLC/jobspec-cfg/ParallelDLC.sh": [
            "DLC_traces.py"
        ],
        "DLC/jobspec-cfg/DLC_traces.py": [
            "ParallelDLC.sh"
        ]
    },
    "ajherman/EqProp": {
        "EqProp/expand.sh": [
            "./main_wrapper.sh"
        ],
        "EqProp/continue.sh": [
            "./main_wrapper.sh"
        ],
        "EqProp/jobspec-cfg/main_wrapper.sh": [
            "main.py"
        ],
        "attention/static_attention/main.sh": [
            "./main_wrapper.sh"
        ],
        "attention/transformers/main.sh": [
            "./main_wrapper.sh",
            "main.py"
        ]
    },
    "WeilabMSU/CLADE-2.0": {
        "CLADE-2.0/scripts/script_vae_train.sub": [
            "src/vae_train.py"
        ]
    },
    "rochanaro/cs834_project": {
        "cs834_project/lemos_job_834.sh": [
            "lemos_kerasnlp_for_slurm_job_training.py"
        ],
        "cs834_project/training_job_submission.sh": [
            "lemos_kerasnlp_for_slurm_job_training.py"
        ],
        "cs834_project/jobspec-cfg/lemos_kerasnlp_for_slurm_job_training.py": [
            "lemos_kerasnlp_for_slurm_job_training.py"
        ]
    },
    "eugeneswalker/exawind-summit": {
        "exawind-summit/run-amrwind-summit.lsf": [
            "inputs/amr-wind.input"
        ]
    },
    "azmigueldario/dada2_snakemake_workflow": {
        "dada2_snakemake_workflow/dada2_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "dada2_sbatch.sh"
        ],
        "dada2_snakemake_workflow/jobspec-cfg/dada2_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "dada2_sbatch.sh"
        ]
    },
    "shekkizh/VISSL_NNK_Benchmark": {
        "VISSL_NNK_Benchmark/run_nnk_benchmark.job": [
            "nnk_benchmark.py"
        ]
    },
    "zpx01/image-sr": {
        "image-sr/main_train_reg.sh": [
            "main_train_regression.py"
        ],
        "image-sr/train.sh": [
            "main_train_psnr.py"
        ],
        "image-sr/main_train_weights.sh": [
            "main_train_weights.py"
        ],
        "image-sr/weight_merging.sh": [
            "weight_merging.py"
        ],
        "image-sr/ttt_train_data.sh": [
            "main_test_time.py",
            "main_test_swinir.py"
        ]
    },
    "AlexanderVoldby/02466Fagprojekt2023": {
        "02466Fagprojekt2023/job.sh": [
            "hpc_lr_test.py"
        ]
    },
    "rainbow979/robodreamer": {
        "robodreamer/run_raw.sh": [
            "train_rtx.py"
        ]
    },
    "Soooda/AFI": {
        "AFI/artemis/train-style.pbs": [
            "ATD12K_train_style.py"
        ],
        "AFI/artemis/train.pbs": [
            "ATD12K_train.py"
        ]
    },
    "natashamjaques/neural_chat": {
        "neural_chat/ParlAI/projects/babi/memnn/memnn_bAbI_1k_task_parameter_sweep.sh": [
            "LICENSE"
        ],
        "neural_chat/ParlAI/projects/babi/memnn/memnn_bAbI_10k_task_parameter_sweep.sh": [
            "LICENSE"
        ]
    },
    "AmirHussein96/pyVAD": {
        "pyVAD/run_vad.sh": [
            "./requirements.txt",
            "src/vad_simple.py"
        ]
    },
    "runame/laplace-refinement": {
        "laplace-refinement/run_scripts/run_cifar100_uq.sh": [
            "uq.py"
        ],
        "laplace-refinement/run_scripts/run_fmnist_uq.sh": [
            "uq.py"
        ]
    },
    "gaperezsa/3DeformRS": {
        "3DeformRS/scripts/AllSqueezingStretchingJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/MissingJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/exampleJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SqueezingStretchingExtensionJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/MainFinalExperiments/FinalAffineNoTransDGCNNPoint%2B%2BJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/MainFinalExperiments/AllScanobjectnnJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/AlphaExperiments/alphaJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/AllexceptRotModelnet40/CurvePointJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/AllexceptRotModelnet40/2DGCNNPoint%2B%2BJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ThirdExperiments/pointnet2Rotations.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ThirdExperiments/dgcnnRotations.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ThirdExperiments/curvenetRotations.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ThirdExperiments/expandedRotationsJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ThirdExperiments/pointnetRotations.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/XZRotations/XZjob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/twisting2o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/ablation2o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/ablation1o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/ablation4o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/gaussian4o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/affine1o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/squeeze1o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/affine3o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/squeeze2o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/twisting4o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/affine4o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/twisting1o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/squeeze3o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/translationMissing.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/twisting3o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/gaussian3o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/squeeze4o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/ablation3o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/gaussian2o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/affine2o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/FirstExperiments/gaussian1o4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ZRotations/Zjob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallGaussianJob2.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallAffineJob4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallAffineJob1.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallGaussianJob3.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallGaussianJob4.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallAffineJob3.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/shearingMissingJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallAffineJob2.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/smallGaussianJob1.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/SecondExperiments/taperingMissingJob.sh": [
            "Certify.py"
        ],
        "3DeformRS/scripts/ExtensionExperiments/ExtensionExperimentsJob.sh": [
            "Certify.py"
        ]
    },
    "3J826/VBG": {
        "VBG/bs_pc_script.sh": [
            "main.py"
        ],
        "VBG/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "monnieka/lm-watermarking-ELLIS23": {
        "lm-watermarking-ELLIS23/run.sh": [
            "demo_watermark.py"
        ]
    },
    "alrojo/CB513": {
        "CB513/my_script.sh": [
            "train.py"
        ],
        "CB513/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "uwsbel/mitsuba_framework": {
        "sbel-reproducibility/2022/M113_SPH_Terrain/withChronoDriver/M113_Large_Rock_24/script/chrono_FSI.sh": [
            "CMakeLists.txt"
        ],
        "sbel-reproducibility/2022/M113_SPH_Terrain/withPushingForce/Flat_terrain_without_rocks/M113_05/script/chrono_FSI.sh": [
            "CMakeLists.txt"
        ],
        "sbel-reproducibility/2022/NASA-Project-Sims/2022-03/01_VIPER_Rocks/Rover_small_rock_earth_31/script/chrono_FSI.sh": [
            "CMakeLists.txt"
        ],
        "sbel-reproducibility/2022/NASA-Project-Sims/2022-03/01_VIPER_Rocks/Rover_large_rock_earth_32/script/chrono_FSI.sh": [
            "CMakeLists.txt"
        ],
        "sbel-reproducibility/2022/NASA-Project-Sims/2022-03/02_VIPER_Crater/Moon_VIPER_Crater_Edge_Earth_Gravity_43/script/chrono_FSI.sh": [
            "CMakeLists.txt"
        ],
        "mitsuba_framework/jobspec-cfg/CMakeLists.txt": [
            "MitsubaGenerator.cpp",
            "sph_trianglemesh.cpp",
            "MitsubaGenerator.h",
            "sph_trianglemesh.h"
        ]
    },
    "XuewenWangUGA/GMATA": {
        "GMATA/run_gmata_SSRmask.sh": [
            "gmata.pl",
            "default_cfg2.2.txt"
        ],
        "GMATA/jobspec-cfg/gmata.pl": [
            "gmat.pl",
            "gmata.pl",
            "default_cfg.txt",
            "ssrfig.pl",
            "ssr2gff.pl",
            "ssr2gff3.pl",
            "doprimer_smt.pl",
            "elctPCR.pl",
            "mk2gff3.pl"
        ],
        "GMATA/jobspec-cfg/default_cfg2.2.txt": [
            "gmat.pl"
        ]
    },
    "ebi-gene-expression-group/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "iremddemir/Detic": {
        "Detic/kuacc_gpu_submit.sh": [
            "generate_masks.py"
        ]
    },
    "JGCRI/eiafcst": {
        "eiafcst/launch.sh": [
            "launch.sh",
            "eiafcst/models/hpar_opt.py"
        ],
        "eiafcst/jobspec-cfg/launch.sh": [
            "launch.sh",
            "eiafcst/models/hpar_opt.py"
        ],
        "eiafcst/eiafcst/models/mktbl.zsh": [
            "launch.sh"
        ]
    },
    "HeRCLab/dropbear_lstm": {
        "dropbear_lstm/hyperion/run-mlp.sbatch": [
            "dbtool.py"
        ]
    },
    "HealthML/neurocor": {
        "neurocor/run_cluster.sh": [
            "workflow/Snakefile",
            "config/config.yaml"
        ],
        "faatpipe/run_cluster.sh": [
            "./install.sh"
        ]
    },
    "HealthML/faatpipe": {
        "faatpipe/run_cluster.sh": [
            "./install.sh",
            "Snakefile",
            "conf/config.yaml"
        ],
        "faatpipe/jobspec-cfg/install.sh": [
            "env/snakemake.yml",
            "data/regions/HG001_GRCh38_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-10X-SOLID_CHROM1-X_v.3.3.2_highconf_nosomaticdel_noCENorHET7.rm_chr.bed.gz",
            "data/regions/xgen_plus_spikein.b38.bed.gz"
        ]
    },
    "cherifpy/MinutiaesExtraction_GA": {
        "MinutiaesExtraction_GA/script.sh": [
            "main.py"
        ]
    },
    "JonasKlotz/noiserobust_MLC": {
        "noiserobust_MLC/cluster_instructions/resnet_asl.sh": [
            "src/main.py"
        ]
    },
    "lac-dcc/bennu": {
        "bennu/scripts/job/run_resnet18_a64fx_ansor.job": [
            "benchmarks/models_onnx.py",
            "results/a64fx_resnet18_10k.json",
            "models/resnet18.onnx"
        ],
        "bennu/scripts/job/run_resnet_all_a64fx_ansor.job": [
            "benchmarks/models_onnx.py",
            "results/a64fx_resnet34_10k.json"
        ]
    },
    "MeganTran6023/VanDerVaartLab.MT": {
        "VanDerVaartLab.MT/eq.sh": [
            "eq.sh"
        ],
        "VanDerVaartLab.MT/jobspec-cfg/eq.sh": [
            "eq.sh"
        ]
    },
    "Cinofix/sponge_poisoning_energy_latency_attack": {
        "sponge_poisoning_energy_latency_attack/slurm/run_l2.slurm": [
            "sponger.py"
        ],
        "sponge_poisoning_energy_latency_attack/slurm/CIFAR10/run_resnet.slurm": [
            "sponger.py"
        ],
        "sponge_poisoning_energy_latency_attack/slurm/GTSRB/run_resnet.slurm": [
            "sponger.py"
        ]
    },
    "psandovalsegura/pytorch-gd-uap": {
        "pytorch-gd-uap/batch.sh": [
            "train.py"
        ]
    },
    "pughlab/swgs": {
        "swgs/scheduler.sh": [
            "slurm/cluster.json"
        ]
    },
    "Stanford-NavLab/doppler_prn": {
        "doppler_prn/slurm_scripts/lunar_pnt.sh": [
            "run.py"
        ],
        "doppler_prn/slurm_scripts/old/compute_objectives.sh": [
            "compute_objectives.py"
        ],
        "doppler_prn/slurm_scripts/old/gps_100.sh": [
            "run.py"
        ],
        "doppler_prn/slurm_scripts/old/gps_1000.sh": [
            "run.py"
        ],
        "doppler_prn/slurm_scripts/old/leo_10k_10.sh": [
            "run.py"
        ],
        "doppler_prn/slurm_scripts/old/gpsl5_100.sh": [
            "run.py"
        ],
        "doppler_prn/slurm_scripts/old/gpsl5_10.sh": [
            "run.py"
        ]
    },
    "ml-jku/L2M": {
        "L2M/scripts/slurm_multinode.sh": [
            "main.py"
        ],
        "L2M/scripts/pbs_multigpu.sh": [
            "main.py"
        ],
        "L2M/scripts/pbs_multinode.sh": [
            "main.py"
        ]
    },
    "izzikampono/Thesis": {
        "Thesis/job.sh": [
            "requirements.txt"
        ],
        "Thesis/jobspec-cfg/experiment_server.py": [
            "experiment_server.py"
        ],
        "Thesis/jobs/job.sh": [
            "experiment_server.py"
        ]
    },
    "Wehzie/master-thesis": {
        "master-thesis/scripts/peregrine_job.sh": [
            "src/main.py"
        ],
        "master-thesis/scripts/peregrine_job_test.sh": [
            "src/main.py"
        ]
    },
    "VLucet/landchange-connectivity-monteregie": {
        "landchange-connectivity-monteregie/landcon.sh": [
            "landcon.sh",
            "scripts/1.1_prep_land_use_and_mun.R",
            "scripts/1.2_prep_census_data.R",
            "scripts/1.3_prep_env_vars.R",
            "scripts/1.4_reclass_land_use.R",
            "scripts/1.5_prep_landis.R",
            "scripts/1.6_prep_neighbors.R",
            "scripts/2.1_prep_stsim_stratums.R",
            "scripts/2.2_prep_stsim_transition_targets.R",
            "scripts/2.3_prep_stsim_transition_size_distribution.R",
            "scripts/2.4_prep_stsim_spatial_multipliers.R",
            "scripts/2.5_prep_stsim_datasheets.R",
            "scripts/2.6_prep_trans_vals_data.R",
            "scripts/3.1_model_prep_data.R",
            "scripts/3.2_fit_and_predict.R",
            "scripts/4.1_run_stsim.R",
            "scripts/4.2_validate_stsim_results.R",
            "scripts/5.1_reclassify_into_resistance.R",
            "scripts/6.1_prep_circuitscape_inputs.R",
            "scripts/6.2_run_circuitscape.jl",
            "scripts/7.1_post_process_results.R",
            "scripts/8.1_SURF_analysis.py",
            "scripts/8.2_process_SURF_output.R"
        ],
        "landchange-connectivity-monteregie/jobspec-cfg/landcon.sh": [
            "landcon.sh",
            "scripts/1.1_prep_land_use_and_mun.R",
            "scripts/1.2_prep_census_data.R",
            "scripts/1.3_prep_env_vars.R",
            "scripts/1.4_reclass_land_use.R",
            "scripts/1.5_prep_landis.R",
            "scripts/1.6_prep_neighbors.R",
            "scripts/2.1_prep_stsim_stratums.R",
            "scripts/2.2_prep_stsim_transition_targets.R",
            "scripts/2.3_prep_stsim_transition_size_distribution.R",
            "scripts/2.4_prep_stsim_spatial_multipliers.R",
            "scripts/2.5_prep_stsim_datasheets.R",
            "scripts/2.6_prep_trans_vals_data.R",
            "scripts/3.1_model_prep_data.R",
            "scripts/3.2_fit_and_predict.R",
            "scripts/4.1_run_stsim.R",
            "scripts/4.2_validate_stsim_results.R",
            "scripts/5.1_reclassify_into_resistance.R",
            "scripts/6.1_prep_circuitscape_inputs.R",
            "scripts/6.2_run_circuitscape.jl",
            "scripts/7.1_post_process_results.R",
            "scripts/8.1_SURF_analysis.py",
            "scripts/8.2_process_SURF_output.R"
        ]
    },
    "XiaoTailong/QDGP_GI_ImageTasks": {
        "QDGP_GI_ImageTasks/qdgp.sh": [
            "QDGP_untrain_no_quantum_train_001.py"
        ],
        "QDGP_GI_ImageTasks/dgp.sh": [
            "DGP_untrain.py"
        ]
    },
    "CMSTrackerDPG/SiPixelTools-PixelHistoMaker": {
        "SiPixelTools-PixelHistoMaker/slurm/slurm_template.sh": [
            "input/Badroc_List.root"
        ]
    },
    "naumenko-sa/cre": {
        "cre/bcbio.array.pbs": [
            "bcbio.array.pbs"
        ],
        "cre/jobspec-cfg/bcbio.array.pbs": [
            "bcbio.array.pbs"
        ]
    },
    "naumenko-sa/crg": {
        "crg/crg.sv.prioritize.sh": [
            "crg.vcf2tsv.py",
            "crg.sv.parse.py"
        ]
    },
    "elsa-k-donovan/cedar-stylegan-master": {
        "cedar-stylegan-master/gan.sh": [
            "train.py"
        ]
    },
    "ngastellu/ArpackMAC": {
        "ArpackMAC/submit_ARPACK_MAC_temp_array.sh": [
            "run_QuickArpackBigMAC_MD_multiframes.jl"
        ]
    },
    "atlas-calo-ml/GraphNets4Pions_LLNL": {
        "GraphNets4Pions_LLNL/submit_array.sh": [
            "train_block_multiOut_crossval.py"
        ],
        "GraphNets4Pions_LLNL/submit_array_nearest.sh": [
            "train_nearest_concat_crossvall.py"
        ]
    },
    "ekinakyurek/lexsym": {
        "lexsym/scripts/clevr_vqvae.sh": [
            "vae_train.py"
        ],
        "lexsym/scripts/clevr_vqa.sh": [
            "vqa_train.py"
        ]
    },
    "BorealisAI/noise_flow": {
        "noise_flow/job_noise_flow.sh": [
            "train_noise_flow.py"
        ],
        "noise_flow/job_dncnn.sh": [
            "train_dncnn_noiseflow.py",
            "test_dncnn_noiseflow.py"
        ],
        "noise_flow/jobspec-cfg/train_dncnn_noiseflow.py": [
            "LICENSE"
        ],
        "noise_flow/jobspec-cfg/test_dncnn_noiseflow.py": [
            "LICENSE"
        ],
        "ssl-for-timeseries/scripts/submit_job_uea.sh": [
            "LICENSE"
        ],
        "ssl-for-timeseries/scripts/submit_job_kpi.sh": [
            "LICENSE"
        ]
    },
    "BorealisAI/ssl-for-timeseries": {
        "noise_flow/jobspec-cfg/train_dncnn_noiseflow.py": [
            "LICENSE"
        ],
        "noise_flow/jobspec-cfg/test_dncnn_noiseflow.py": [
            "LICENSE"
        ],
        "ssl-for-timeseries/scripts/submit_job_uea.sh": [
            "LICENSE"
        ],
        "ssl-for-timeseries/scripts/submit_job_kpi.sh": [
            "LICENSE"
        ]
    },
    "vaibhavs2854/ActiveLearningShapes": {
        "ActiveLearningShapes/experimentAL.sh": [
            "experiment.py"
        ]
    },
    "spundhir/ChIP-seq": {
        "ChIP-seq/jobspec-cfg/validateBlockbuster.pl": [
            "validateBlockbuster.pl"
        ],
        "RNA-Seq/rnaSeqAna.sh": [
            "blockbuster.x",
            "validateBlockbuster.pl"
        ]
    },
    "yuvakishore045/Capstone_Wichita": {
        "Capstone_Wichita/lauch2.sh": [
            "Wav2vec2.py"
        ]
    },
    "sfeeney/nsbh": {
        "nsbh/pbilby.sh": [
            "sim_nsbh_analysis_4NS.py"
        ],
        "nsbh/hypatia_no_mpi_slurm.sh": [
            "sim_nsbh_analysis.py"
        ],
        "nsbh/jobspec-cfg/sim_nsbh_analysis.py": [
            "sim_nsbh_analysis.py"
        ]
    },
    "delemottelab/KcsA_string_method_FES": {
        "KcsA_string_method_FES/jobspec-cfg/README.md": [
            "environment.yml",
            "LICENSE",
            "Makefile",
            "README.md",
            "setup.py"
        ],
        "KcsA_string_method_FES/data/raw/noLB-AMBER/slurm_string_dardel.sh": [
            "README.md"
        ],
        "KcsA_string_method_FES/data/raw/noLB-AMBER/restarts/1/gromacs_dardel.sh": [
            "README.md"
        ],
        "KcsA_string_method_FES/data/raw/LB-AMBER/restarts/1/gromacs_dardel.sh": [
            "README.md"
        ],
        "KcsA_string_method_FES/data/raw/LB-AMBER/restarts/2/gromacs_dardel.sh": [
            "README.md"
        ]
    },
    "artemiscapari/IR2-TOMT": {
        "IR2-TOMT/run.job": [
            "train.py",
            "plot.py"
        ]
    },
    "qyk130/MENNAG": {
        "MENNAG/shell_mpi_batch.sh": [
            "src/train.py"
        ]
    },
    "ChitvanGoyal/NLP_Project": {
        "NLP_Project/bert_finetune.sh": [
            "bert_finetune.py"
        ]
    },
    "MagMueller/PMLR": {
        "PMLR/run_exp.sh": [
            "main.py"
        ],
        "PMLR/jobspec-cfg/main.py": [
            "download_artifact.py"
        ]
    },
    "ktiwary2/nerf_pl": {
        "nerf_pl/64x64Vase.sh": [
            "train_efficient_sm.py"
        ],
        "nerf_pl/jobspec-cfg/train_efficient_sm.py": [
            "train_efficient_sm.py"
        ]
    },
    "y0ast/slurm-for-ml": {
        "slurm-for-ml/generic.sh": [
            "./run_locked.sh",
            "environment.yml"
        ],
        "slurm-for-ml/jobspec-cfg/run_locked.sh": [
            "run_locked.sh"
        ]
    },
    "CityU-AIM-Group/PRR-Imbalance": {
        "PRR-Imbalance/slm/train_script.slm": [
            "./main.py"
        ]
    },
    "CityU-AIM-Group/FedDM": {
        "PRR-Imbalance/slm/train_script.slm": [
            "./main.py"
        ],
        "FedDM/training_preprocess_promise.sh": [
            "slice_promise.py",
            "gen_weak.py"
        ]
    },
    "CityU-AIM-Group/DSI-Net": {
        "DSI-Net/training_script.sh": [
            "train_DSI_Net.py"
        ]
    },
    "brechetp/BW-linear-networks": {
        "BW-linear-networks/grid_search.bash": [
            "train_linear.py"
        ]
    },
    "SebastianMacaluso/ginkgo": {
        "ginkgo/submitHPC_ginkgo.s": [
            "submitHPC_ginkgo.s"
        ],
        "ginkgo/jobspec-cfg/submitHPC_ginkgo.s": [
            "submitHPC_ginkgo.s"
        ]
    },
    "sronnqvist/transformers-classifier": {
        "transformers-classifier/slurm_load.sh": [
            "train.py"
        ],
        "transformers-classifier/slurm_train_arg.sh": [
            "train.py"
        ]
    },
    "sronnqvist/doc-level-multilabel": {
        "doc-level-multilabel/slurm_run_classifier.sh": [
            "bert_fine_tune_multigpu.py"
        ]
    },
    "sronnqvist/prob-seqs": {
        "prob-seqs/slurm_train_lstm.sh": [
            "model_prob_seqs.py"
        ]
    },
    "dlyon304/CRE-Language": {
        "CRE-Language/src/iterative_uncertainty_regression.sbatch": [
            "src/iterative_uncertainty_regression.py"
        ],
        "CRE-Language/src/genomic_only.sbatch": [
            "src/genomic_only.py"
        ],
        "CRE-Language/src/train_class.sbatch": [
            "src/train_class.py"
        ]
    },
    "CampagneLaboratory/goby": {
        "goby/scripts/pbs/setup-pbs-align-job.sh": [
            "goby"
        ]
    },
    "yanhuo-zhy/protop": {
        "protop/scripts/train_cdcub.sh": [
            "main.py"
        ],
        "myocd/RankStat/scripts/train_uon.sh": [
            "main.py"
        ]
    },
    "yanhuo-zhy/mygcd": {
        "mygcd/scripts/run_aircraft.sh": [
            "train.py"
        ]
    },
    "yanhuo-zhy/text-gcd": {
        "mygcd/scripts/run_aircraft.sh": [
            "train.py"
        ],
        "text-gcd/scripts/train_simgcd_uon_psawl.sh": [
            "SimGCD/train.py"
        ],
        "text-gcd/scripts/train_herb.sh": [
            "train_herb.py"
        ],
        "text-gcd/scripts/trainl.sh": [
            "SimGCD/train.py"
        ],
        "text-gcd/scripts/kmeans.sh": [
            "kmeans.py"
        ]
    },
    "a-hr/pol2speed-nf": {
        "pol2speed-nf/launch_cluster.sh": [
            "main.nf",
            "input_params.yaml"
        ]
    },
    "lucktran/topnmusic": {
        "topnmusic/hpc_scripts/submit.sh": [
            "./src/topnmusic/ast_finetuned_audioset_finetuned_gtzan.py"
        ]
    },
    "momih/lateral-view-analysis": {
        "lateral-view-analysis/other/train.sh": [
            "orion_config.yaml",
            "./hyperparam_search.py"
        ],
        "lateral-view-analysis/other/preprocess.sh": [
            "extract_cohort.py",
            "preprocess_images.py"
        ]
    },
    "johndpope/cluster": {
        "cluster/setup_faceswap.sh": [
            "take000.mp4",
            "take002.mp4"
        ]
    },
    "johndpope/machine_learning": {
        "machine_learning/train_ptb.sh": [
            "train_ptb.py"
        ],
        "machine_learning/train_ptb_ns.sh": [
            "train_ptb_ns.py"
        ]
    },
    "ManonDls/KFTS-InSAR": {
        "KFTS-InSAR/run_KFTS.slurm": [
            "kfts.py",
            "configs/refconfigfile.ini"
        ]
    },
    "MIPT-Oulu/RabbitCCS": {
        "RabbitCCS/run_puhti_array.sh": [
            "requirements_short.txt",
            "./exp_csc.sh"
        ]
    },
    "ToHanwei/ProteinModel": {
        "ProteinModel/alphafold.lsf": [
            "log/output.err",
            "log/output.out",
            "alphafold.config"
        ],
        "ProteinModel/jobspec-cfg/log/output.out": [
            "log/output.err",
            "log/output.out"
        ]
    },
    "fionasguo/ts_clustering": {
        "ts_clustering/util.sh": [
            "setup.py",
            "src/real_test_data_processing/process_rvw_data.py",
            "src/real_test_data_processing/process_keith_coord_camp_data.py",
            "src/real_test_data_processing/get_bert_embeddings.py",
            "src/TSCluster/modeling/similarity_search.py",
            "tmp.py"
        ]
    },
    "IDEA-CCNL/Fooocus-Taiyi-XL": {
        "Fooocus-Taiyi-XL/run.sh": [
            "entry_with_update.py"
        ]
    },
    "tristan-ka/semantic-goal-sampler": {
        "semantic-goal-sampler/slurm/launch_array.sh": [
            "slurm/launcher.sh"
        ]
    },
    "maximilianmbeck/erank": {
        "erank/slurm.sh": [
            "run_sweep.py"
        ]
    },
    "thoamswilliams/Structure-in-GAN": {
        "Structure-in-GAN/testjob.sh": [
            "backup.py",
            "./train_ciwgan.py"
        ]
    },
    "NyleSiddiqui/DisCo": {
        "DisCo/script.slurm": [
            "finetune_sdm_yaml.py",
            "config/ref_attn_clip_combine_controlnet/tiktok_S256L16_xformers_tsv.py",
            "dataloader.py"
        ],
        "DisCo/jobspec-cfg/finetune_sdm_yaml.py": [
            "LICENSE"
        ]
    },
    "NyleSiddiqui/MultiView_Actions": {
        "DisCo/script.slurm": [
            "dataloader.py",
            "model.py"
        ],
        "MultiView_Actions/script.slurm": [
            "main.py"
        ]
    },
    "filipbartek/vampire-ml": {
        "vampire-ml/vampire.sh": [
            "env.sh"
        ],
        "vampire-ml/fit.sh": [
            "fit.sh"
        ],
        "vampire-ml/jobspec-cfg/fit.sh": [
            "fit.sh"
        ]
    },
    "montrealrobotics/RL4Chem": {
        "RL4Chem/scripts/cedar/6.sh": [
            "train_reinvent_reg_agent.py"
        ],
        "RL4Chem/scripts/cedar/3.sh": [
            "train_reinvent_reg_agent.py"
        ],
        "RL4Chem/scripts/cedar/4.sh": [
            "train_reinvent_reg_agent.py"
        ]
    },
    "rheasukthanker/smac_distributed_tests": {
        "smac_distributed_tests/job.sh": [
            "src/search/search_dask.py"
        ]
    },
    "bpiyush/rotation-equivariant-lfm": {
        "rotation-equivariant-lfm/jobscripts/create_gpu_env.sh": [
            "relfm-v1.0.yml"
        ]
    },
    "JGuymont/humanware": {
        "humanware/run_out.pbs": [
            "main.py"
        ],
        "humanware/jobs/resnet02.pbs": [
            "main.py",
            "./config/resnet02.ini"
        ]
    },
    "bear96/gemma": {
        "gemma/run.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "nicole-hjlin/mpala-tree-mapping": {
        "mpala-tree-mapping/scripts/pct.sh": [
            "labels.csv"
        ]
    },
    "iDurugkar/adversarial-intrinsic-motivation": {
        "adversarial-intrinsic-motivation/opt_spurm.sh": [
            "train.py"
        ],
        "adversarial-intrinsic-motivation/slurm.sh": [
            "train.py"
        ],
        "adversarial-intrinsic-motivation/slurm_reach.sh": [
            "train.py"
        ]
    },
    "AlecThomson/3c286_scripts": {
        "3c286_scripts/linmos.sh": [
            "./fix_header.py"
        ]
    },
    "ssen7/histo_captioning_experiments": {
        "histo_captioning_experiments/get4kreps.slurm": [
            "generate4kreps.py"
        ]
    },
    "TomFrederik/fact-ai": {
        "fact-ai/job_scripts/trial_job.job": [
            "main.py"
        ],
        "fact-ai/job_scripts/DRO_COMPAS_seed_avg.job": [
            "main.py"
        ],
        "fact-ai/job_scripts/DRO_Adult_gridsearch.job": [
            "main.py"
        ],
        "fact-ai/job_scripts/DRO_COMPAS_gridsearch.job": [
            "main.py"
        ]
    },
    "simoncblyth/j": {
        "j/okjobdev.sh": [
            "okjob.sh"
        ],
        "j/okjob.sh": [
            "okjob.sh"
        ],
        "j/jobspec-cfg/okjob.sh": [
            "okjob.sh"
        ],
        "opticks/bin/opticks-site.bash": [
            "okjob.sh"
        ],
        "opticks/jobspec-cfg/bin/opticks-site.bash": [
            "okjob.sh"
        ]
    },
    "simoncblyth/opticks": {
        "opticks/bin/opticks-site.bash": [
            "bin/opticks-site.bash",
            "CMakeLists.txt",
            "Makefile",
            "bin/opticks-site-local.bash"
        ],
        "opticks/jobspec-cfg/CMakeLists.txt": [
            "CMakeLists.txt"
        ],
        "opticks/jobspec-cfg/bin/opticks-site.bash": [
            "bin/opticks-site.bash",
            "CMakeLists.txt",
            "Makefile",
            "bin/opticks-site-local.bash"
        ]
    },
    "DeepLearnPhysics/pytorch-uresnet": {
        "pytorch-uresnet/submit_finetuning.sh": [
            "run_finetuning_job.sh"
        ],
        "pytorch-uresnet/jobspec-cfg/run_finetuning_job.sh": [
            "setup_container.sh",
            "finetune_wlarcv1_cosmics.py",
            "caffe_uresnet.py"
        ]
    },
    "DeepLearnPhysics/larcv_io_testing": {
        "larcv_io_testing/submission_scripts/thetagpu/minibatch_scaling_single_proc.qsub": [
            "exec.py"
        ],
        "larcv_io_testing/submission_scripts/theta/minibatch_scaling_single_proc.qsub": [
            "exec.py"
        ]
    },
    "ericlindsey/automate-gmtsar": {
        "automate-gmtsar/jobspec-cfg/gmtsar_app.py": [
            "gmtsar_app.py"
        ],
        "automate-gmtsar/jobspec-cfg/batch.config": [
            "gmtsar_app.py"
        ],
        "automate-gmtsar/pbs/run_gmtsar_app_mpi.pbs": [
            "batch.config",
            "gmtsar_app.py"
        ]
    },
    "NINAnor/BirdNET-Analyzer": {
        "BirdNET-Analyzer/run_birdnet_hpc.sh": [
            "species_list.txt"
        ]
    },
    "zhongh3/cs5242-project": {
        "cs5242-project/submit.pbs": [
            "application.py"
        ]
    },
    "neuraloperator/physics_informed": {
        "physics_informed/scripts/fnoRe500.sh": [
            "train_operator.py",
            "configs/operator/Re500-FNO.yaml"
        ]
    },
    "gebawe/T3D-UDA": {
        "T3D-UDA/script/da_livox_sim_real/train_livoxsim_f0_0_time.sh": [
            "train_uda.py",
            "train.py"
        ],
        "T3D-UDA/script/wod/train_wod_f3_3_time_32beam.sh": [
            "train.py"
        ],
        "T3D-UDA/script/da_kitti_poss/val_kitti_f2_2_time.sh": [
            "train_uda.py",
            "test.py"
        ],
        "T3D-UDA/script/da_kitti_poss/val_poss_f2_2_time.sh": [
            "train_uda.py",
            "test.py"
        ],
        "T3D-UDA/script/synthetic/train_synth4d_f2_2_time.sh": [
            "train_uda.py"
        ],
        "T3D-UDA/script/da_wod_nuscenes/train_wod_nuscenes_f2_0_time.sh": [
            "train_uda.py"
        ],
        "T3D-UDA/script/da_wod_nuscenes/train_nuscenes_wod_f2_0_time.sh": [
            "train_uda.py"
        ],
        "T3D-UDA/script/da_kitti_usl/val_kitti_usl_f2_0_time.sh": [
            "train_uda.py",
            "test.py"
        ],
        "T3D-UDA/script/da_kitti_usl/train_usl_f2_2_time.sh": [
            "train_uda.py",
            "train.py"
        ],
        "T3D-UDA/script/da_wod_kitti/val_wod_kitti_f0_0_time.sh": [
            "test.py"
        ],
        "T3D-UDA/script/da_wod_kitti/val_wod_kitti_f3_3_intensity.sh": [
            "test.py"
        ],
        "T3D-UDA/script/da_wod_kitti/val_wod_kitti_f0_0_intensity.sh": [
            "test.py"
        ]
    },
    "hlab1/Beeline-HLab1": {
        "Beeline-HLab1/beeline_eval_array.sbatch": [
            "BLEvaluator.py"
        ]
    },
    "fruitsbat/ensembles": {
        "ensembles/mpi.slurm": [
            "src/main.py"
        ]
    },
    "E3SM-Project/iESM": {
        "WW3/regtests/bin/matrix_divider_cmake.sh": [
            "Copyright"
        ]
    },
    "xyttyxy/ale_scripts": {
        "ale_scripts/semiparallel_workflow.sh": [
            "gather_topoid.py",
            "allconf2contconf.py"
        ]
    },
    "richherr/UNT_workshops": {
        "UNT_workshops/h2o.sh": [
            "h2o_randomForest.py"
        ]
    },
    "danielzgsilva/PGD-PyTorch": {
        "PGD-PyTorch/phase1.slurm": [
            "build_folder_tree.py",
            "validation.py"
        ]
    },
    "dbhaskar92/fMRI-Reconstruction": {
        "fMRI-Reconstruction/train.sh": [
            "main.py"
        ]
    },
    "Jiaxiangren/llama_git": {
        "llama_git/job_script.slurm": [
            "auto_sum.sh"
        ],
        "llama_git/jobspec-cfg/auto_sum.sh": [
            "Fed_lora.py",
            "Fed_lpt.py",
            "Fed_v2.py",
            "Fed_sLora.py",
            "Fed_adaLora.py",
            "Fed_deltaLora.py",
            "Fed_llama_ours.py"
        ]
    },
    "weishansu011017/PHANTOMJulia": {
        "PHANTOMJulia/subjobJ.sh": [
            "./Analysis_main.jl"
        ],
        "PHANTOMJulia/jobspec-cfg/Analysis_main.jl": [
            "Analysis_main.jl"
        ]
    },
    "TUM-DI-Lab-Graph-Scaling/ocp": {
        "ocp/jobspec-cfg/configs/is2re/100k/gemnet/gemnet-dT.yml": [
            "configs/is2re/100k/base.yml",
            "configs/s2ef/all/gemnet/scaling_factors/gemnet-dT.json"
        ],
        "ocp/jobspec-cfg/configs/s2ef/2M/gemnet/gemnet-oc.yml": [
            "configs/s2ef/2M/base.yml",
            "configs/s2ef/all/gemnet/scaling_factors/gemnet-oc.pt"
        ],
        "ocp/jobspec-cfg/configs/s2ef/200k/dimenet_plus_plus/dpp.yml": [
            "configs/s2ef/200k/base.yml"
        ],
        "ocp/jobspec-cfg/configs/s2ef/200k/gemnet/gemnet-dT.yml": [
            "configs/s2ef/200k/base.yml",
            "configs/s2ef/all/gemnet/scaling_factors/gemnet-dT.json"
        ],
        "ocp/scripts/slurm/is2re/gemnet.sh": [
            "main.py",
            "configs/is2re/100k/gemnet/gemnet-dT.yml",
            "configs/is2re/100k/gemnet/ds_config.json"
        ],
        "ocp/scripts/slurm/s2ef/dpp.sh": [
            "main.py",
            "configs/s2ef/200k/dimenet_plus_plus/dpp.yml",
            "configs/s2ef/200k/dimenet_plus_plus/ds_config.json"
        ],
        "ocp/scripts/slurm/s2ef/dpp-fp16.sh": [
            "main.py",
            "configs/s2ef/200k/dimenet_plus_plus/dpp.yml",
            "configs/s2ef/200k/dimenet_plus_plus/ds_config_fp16.json"
        ],
        "ocp/scripts/slurm/s2ef/dpp-stage2.sh": [
            "main.py",
            "configs/s2ef/200k/dimenet_plus_plus/dpp.yml",
            "configs/s2ef/200k/dimenet_plus_plus/ds_config_stage2.json"
        ],
        "ocp/scripts/slurm/s2ef/gemnet-oc.sh": [
            "main.py",
            "configs/s2ef/2M/gemnet/gemnet-oc.yml",
            "configs/s2ef/2M/gemnet/ds_config.json"
        ],
        "ocp/scripts/slurm/s2ef/gemnet.sh": [
            "main.py",
            "configs/s2ef/200k/gemnet/gemnet-dT.yml",
            "configs/s2ef/200k/gemnet/ds_config.json"
        ]
    },
    "yadudoc/mira-halo": {
        "mira-halo/TEST_RPN_16_NODE_512/cobalt_script.sh": [
            "mmps",
            "mmps_4"
        ],
        "mira-halo/TEST_RPN_16_NODE_512_5D/cobalt_script.sh": [
            "mmps",
            "mmps_4"
        ],
        "mira-halo/TEST_RPN_2_NODE_512/cobalt_script.sh": [
            "mmps_4"
        ]
    },
    "janmandel/WRF-WindNinja-FarsiteScript": {
        "WRF-WindNinja-FarsiteScript/include/buildEverything_Aeolus.sh": [
            "src/getFarsitePath.cpp",
            "src/getWindNinjaPath.cpp",
            "config/default.cmake"
        ]
    },
    "Magnusnolsoe/xlnet-proteins": {
        "xlnet-proteins/jobspec-cfg/run_train_gpu.py": [
            "train_gpu.py"
        ],
        "xlnet-proteins/scripts/hpc_submit_protein.sh": [
            "run_train_gpu.py"
        ]
    },
    "hwang2006/nlp-doccls": {
        "nlp-doccls/flask_run.sh": [
            "flask_port_forwarding_command",
            "doc-cls-deploy.py"
        ]
    },
    "caotians1/OD-test-master": {
        "OD-test-master/eval_nihcc.sh": [
            "setup_datasets.py",
            "Chest_eval_rand_seeds.py"
        ],
        "OD-test-master/eval_pcam.sh": [
            "setup_datasets.py",
            "PCAM_eval_rand_seeds.py"
        ],
        "OD-test-master/eval_drd.sh": [
            "setup_datasets.py",
            "DRD_eval_rand_seeds.py"
        ]
    },
    "niaid/timo": {
        "timo/index_variants.sh": [
            "readreport_v4_2.py"
        ]
    },
    "564612540/Hybrid-Federated-Learning": {
        "Hybrid-Federated-Learning/job_v4.txt": [
            "./train_hybrid.py",
            "./classes.txt",
            "./views.txt"
        ]
    },
    "ZhengPeng7/GCoNet_plus": {
        "GCoNet_plus/gco.sh": [
            "train.py",
            "collect_bests.py",
            "test.py"
        ],
        "GCoNet_plus/jobspec-cfg/train.py": [
            "loss.py"
        ]
    },
    "D61-IA/FisherGCN": {
        "FisherGCN/hpc/exec_grid.sh": [
            "scripts/benchmark_grid.py"
        ],
        "FisherGCN/hpc/exec_tune.sh": [
            "scripts/hyperopt_search.py"
        ]
    },
    "lzy604/Protpipe": {
        "Protpipe/src/run-diann.sh": [
            "config.txt"
        ]
    },
    "arazd/ResidualPrompts": {
        "ResidualPrompts/bash_finetune.sh": [
            "train.py"
        ]
    },
    "markravinet/gerbil_plague_resistance": {
        "gerbil_plague_resistance/sim_control_array_sel.slurm": [
            "gerbil_sims_exp_sel_v2.slim"
        ]
    },
    "yelenaPacheco/Chrysomelidae": {
        "Chrysomelidae/blobdb.sh": [
            "blobBlast.sh"
        ]
    },
    "Quintin1995/Gravitational_Lens_Detection": {
        "Gravitational_Lens_Detection/batch-gpu.txt": [
            "cnn.py"
        ],
        "Gravitational_Lens_Detection/batch-gpu_example.txt": [
            "cnn.py"
        ]
    },
    "Quintin1995/Strong_Gravitational_Lens_Detection_2.0": {
        "Strong_Gravitational_Lens_Detection_2.0/runs/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/batch_gpu_ensemble_model.txt": [
            "create_input_dep_ensemble.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/_example_batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment4_learning_rate/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment3_chunk_amount/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment8_f1_softloss/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment5_resnetX/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/final_experiment1_loss_functions/3_f_beta_soft_metric/batch-gpu_f_beta_soft_metric.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment2_avg_pooling/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment6_sources_amount/batch-gpu.txt": [
            "main.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/ensemble_runs/3mems_DDN_ensemble_model/batch-gpu_ensembles.txt": [
            "create_input_dep_ensemble.py"
        ],
        "Strong_Gravitational_Lens_Detection_2.0/runs/experiment9_early_stopping/batch-gpu.txt": [
            "main.py"
        ]
    },
    "dome272/Wuerstchen": {
        "Wuerstchen/run/train_stage_B.sh": [
            "train_stage_B.py"
        ],
        "Wuerstchen/run/train_stage_C.sh": [
            "train_stage_C.py"
        ]
    },
    "Ianfhca/Neural_Network_PAR": {
        "Neural_Network_PAR/slurm.sbatch": [
            "model.m"
        ]
    },
    "AdamWilsonLab/emma_model": {
        "emma_model/slurm_verbose_1day.sbatch": [
            "run_verbose.sh",
            "./run_verbose.sh"
        ],
        "emma_model/slurm_quiet.sbatch": [
            "./run_quiet.sh"
        ],
        "emma_model/slurm_sing.sh": [
            "./run.sh"
        ],
        "emma_model/slurm_verbose.sbatch": [
            "run_verbose.sh",
            "./run_verbose.sh"
        ],
        "emma_model/jobspec-cfg/run_quiet.sh": [
            "./run.sh",
            "run.R"
        ],
        "emma_model/jobspec-cfg/run.sh": [
            "./run.sh",
            "run.R"
        ],
        "emma_model/jobspec-cfg/run_verbose.sh": [
            "./run.sh",
            "run.R"
        ]
    },
    "jinfan99/prolificdream_work": {
        "prolificdream_work/egpd.sh": [
            "main.py"
        ]
    },
    "msubhanahmed/C-Tran": {
        "C-Tran/train.sh": [
            "main.py"
        ]
    },
    "vancoykendall/verdi_vae": {
        "verdi_vae/svm_train.sh": [
            "svm_models.py"
        ],
        "verdi_vae/train_script.sh": [
            "main.py"
        ]
    },
    "suehyunpark/trl": {
        "trl/jobspec-cfg/examples/scripts/mpa/ppo.py": [
            "examples/scripts/ppo.py"
        ],
        "trl/commands/run_ppo-66k_slurm.sh": [
            "examples/scripts/mpa/ppo.py"
        ]
    },
    "lebrice/mup_orion_demo": {
        "mup_orion_demo/sweep.sh": [
            "sweep_config.yaml",
            "./train.sh"
        ],
        "mup_orion_demo/jobspec-cfg/train.sh": [
            "mup_demo/train.py"
        ]
    },
    "lebrice/progressive_growing_of_gans": {
        "mup_orion_demo/sweep.sh": [
            "./train.sh"
        ],
        "progressive_growing_of_gans/linear.sh": [
            "./train.py"
        ],
        "progressive_growing_of_gans/noblur.sh": [
            "./train.py"
        ],
        "progressive_growing_of_gans/jobspec-cfg/train.sh": [
            "./train.py"
        ],
        "progressive_growing_of_gans/jobspec-cfg/train.py": [
            "config.py"
        ]
    },
    "tavareshugo/publication_Tavares2023_Nselection": {
        "publication_Tavares2023_Nselection/workflow/scripts/simulations/runSimulations.sh": [
            "workflow/scripts/simulations/single_replicate_simulation.py"
        ]
    },
    "ycemsubakan/contlearn": {
        "contlearn/cc_launch_single.sh": [
            "main_mnist.py"
        ]
    },
    "ncherric/Iliad": {
        "Iliad/slurm_jobs/Submodule-Lift-and-Merge-snakemake.sh": [
            "workflow/Lift-and-Merge_Snakefile"
        ],
        "Iliad/slurm_jobs/snpArray-snakemake.sh": [
            "workflow/snpArray_Snakefile"
        ]
    },
    "JulesBelveze/text-summarizer": {
        "text-summarizer/train-hpc.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "AkaCoder404/3DNN": {
        "3DNN/slurm_script.sh": [
            "train.py"
        ],
        "DS_ML_Journey/utils/slurm_script.sh": [
            "train.py"
        ]
    },
    "isl-org/Open3D-ML": {
        "Open3D-ML/scripts/train_scripts/randlanet_paris.sh": [
            "scripts/run_pipeline.py",
            "ml3d/configs/randlanet_parislille3d.yml"
        ],
        "Open3D-ML/scripts/train_scripts/pointpillars_waymo.sh": [
            "scripts/run_pipeline.py",
            "ml3d/configs/pointpillars_waymo.yml"
        ]
    },
    "IMMM-SFA/drat": {
        "drat/launch_combos.sl": [
            "drat_combos.R"
        ]
    },
    "cartelgouabou/End_to_end_decoupled_training_for_skin_lesion_classification": {
        "End_to_end_decoupled_training_for_skin_lesion_classification/gen-result.sh": [
            "generate_result.py"
        ]
    },
    "dvalters/WRF": {
        "WRF/compile_381.pbs": [
            "compile"
        ]
    },
    "lasithaya/yolact": {
        "yolact/scripts/resume.sh": [
            "train.py"
        ]
    },
    "aponsero/Metaphlan3_snakemake": {
        "Metaphlan3_snakemake/run.slurm": [
            "config/cluster.yaml"
        ],
        "Viral_hunt_v2_snakemake/run.slurm": [
            "config/cluster.yaml"
        ]
    },
    "aponsero/Viral_hunt_snakemake": {
        "Metaphlan3_snakemake/run.slurm": [
            "config/cluster.yaml"
        ],
        "Viral_hunt_v2_snakemake/run.slurm": [
            "config/cluster.yaml"
        ]
    },
    "aponsero/Viral_hunt_v2_snakemake": {
        "Metaphlan3_snakemake/run.slurm": [
            "config/cluster.yaml"
        ],
        "Viral_hunt_v2_snakemake/run.slurm": [
            "config/cluster.yaml"
        ]
    },
    "CosmoAI-AES/CosmoSim": {
        "CosmoSim/slurm/regression.slurm": [
            "Scripts/regressiontest.sh"
        ],
        "CosmoSim/jobspec-cfg/Scripts/regressiontest.sh": [
            "CosmoSimPy/datagen.py",
            "Datasets/debug.csv",
            "CosmoSimPy/compare.py"
        ]
    },
    "aljosaosep/mprcnn": {
        "mprcnn/train_two_heads_from_scratch.sh": [
            "./train.py"
        ],
        "mprcnn/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "Robendl/U-Net_segmentation": {
        "U-Net_segmentation/bash/run_results.sh": [
            "test.py"
        ]
    },
    "fhehli/latent-dire": {
        "latent-dire/sbatch/train_lresnet.sh": [
            "src/training.py"
        ],
        "latent-dire/sbatch/train_admdire.sh": [
            "src/training.py"
        ],
        "latent-dire/sbatch/train_dire.sh": [
            "src/training.py"
        ],
        "latent-dire/sbatch/train_ldire.sh": [
            "src/training.py"
        ],
        "latent-dire/sbatch/train_dldire_batch.sh": [
            "src/training.py"
        ],
        "latent-dire/sbatch/eval.sh": [
            "src/eval.py"
        ]
    },
    "Cernewein/heating-RL-agent": {
        "heating-RL-agent/train-hpc.sh": [
            "requirement.txt",
            "main.py"
        ]
    },
    "pbasting/RATT-with-GFF": {
        "RATT-with-GFF/exampleSapelo.sh": [
            "RATTwithGFF.py"
        ],
        "RATT-with-GFF/jobspec-cfg/RATTwithGFF.py": [
            "RATTwithGFF.py"
        ]
    },
    "cindyxinyiwang/nan-mt": {
        "nan-mt/scripts/archived_scripts/iwslt_exp5_v3.sh": [
            "src/main.py"
        ],
        "deep-latent-sequence-model/scripts/translate.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/sr_bos/translate_sr_bos.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/yelp/train_yelp.sh": [
            "src/main.py"
        ]
    },
    "cindyxinyiwang/SDE": {
        "nan-mt/scripts/archived_scripts/iwslt_exp5_v3.sh": [
            "src/main.py"
        ],
        "deep-latent-sequence-model/scripts/translate.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/sr_bos/translate_sr_bos.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/yelp/train_yelp.sh": [
            "src/main.py"
        ]
    },
    "cindyxinyiwang/deep-latent-sequence-model": {
        "nan-mt/scripts/archived_scripts/iwslt_exp5_v3.sh": [
            "src/main.py"
        ],
        "deep-latent-sequence-model/scripts/translate.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/shakespeare/train_classify.sh": [
            "src/cnn_classify.py"
        ],
        "deep-latent-sequence-model/scripts/sr_bos/translate_sr_bos.sh": [
            "src/translate.py"
        ],
        "deep-latent-sequence-model/scripts/yelp/train_yelp.sh": [
            "src/main.py"
        ]
    },
    "novatc/EnerGAIN": {
        "EnerGAIN/base_prl.job": [
            "main.py"
        ]
    },
    "michaelJwilson/Spectre": {
        "Spectre/pk.sh": [
            "pk.o",
            "driver_pk.c",
            "./pk.o",
            "output.txt"
        ],
        "Spectre/jobspec-cfg/output.txt": [
            "pk.sh"
        ]
    },
    "jhsansom/Open-GroundingDino": {
        "Open-GroundingDino/eval.sh": [
            "eval.py"
        ]
    },
    "midstlab/server_job_submission": {
        "server_job_submission/namd_midst_batch.sh": [
            "config_joblist",
            "./config_joblist"
        ]
    },
    "ual/PILATES": {
        "PILATES/run_pilates-xover.sh": [
            "./run.py"
        ],
        "PILATES/run_pilates-bebop.sh": [
            "./run.py"
        ]
    },
    "gbouras13/Nanopore_RNA_Seq_cdna_Pipeline": {
        "Nanopore_RNA_Seq_cdna_Pipeline/slurm/run_ghais_seq.sh": [
            "rna_seq_runner.smk"
        ],
        "Nanopore_RNA_Seq_cdna_Pipeline/jobspec-cfg/rna_seq_runner.smk": [
            "rna_seq_runner.smk"
        ]
    },
    "gbouras13/S_Aureus_Methylation": {
        "S_Aureus_Methylation/slurm/run_complete_staph.sh": [
            "rebasecall_runner.smk",
            "nanodisco_runner.smk"
        ]
    },
    "gbouras13/Nanopore_Bacterial_Assembly_Pipeline": {
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/run_complete_staph.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/run_rudnick_lysogen_staph.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/run_rudnick_pseudomonas.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/run_will.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/old_slurm/run_stephanie.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/old_slurm/run_gohar.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/old_slurm/run_gohar_07_07.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/old_slurm/run_ghais.sh": [
            "runner.smk"
        ],
        "Nanopore_Bacterial_Assembly_Pipeline/slurm/old_slurm/run_bardy.sh": [
            "runner.smk"
        ]
    },
    "mmbell/samurai": {
        "samurai/ncar_scripts/casper_v100_submit.sh": [
            "CMakeLists.txt"
        ]
    },
    "DataManagementLab/eleet": {
        "eleet/slurm/pretrain.slurm": [
            "scripts/pretrain.py"
        ]
    },
    "DreamBinary/LlamaInference": {
        "LlamaInference/run_vllm.sh": [
            "script/main.py",
            "data/scrambled_sampled_dataset.json"
        ],
        "LlamaInference/run_mii.sh": [
            "script/main.py",
            "data/scrambled_sampled_dataset.json"
        ],
        "LlamaInference/run_vllm_async.sh": [
            "script/main.py",
            "data/scrambled_sampled_dataset.json"
        ],
        "LlamaInference/jobspec-cfg/data/scrambled_sampled_dataset.json": [
            ".gitignore",
            "README.md",
            "Dockerfile"
        ]
    },
    "xiaoqian19940510/TASLP-EAREE": {
        "TASLP-EAREE/main.slurm": [
            "TC_preprocess.py",
            "AI_RC_preprocess.py",
            "AI_RC/get_data.py",
            "AI_RC/train_start.py",
            "AI_RC/test.py"
        ]
    },
    "jcboyd/cdpath21-gan": {
        "cdpath21-gan/slurm_submit.sh": [
            "main.py",
            "./config/config_camelyon.yml",
            "./config/config_crc.yml"
        ],
        "miccai2022-roigan/slurm_submit.sh": [
            "main.py"
        ]
    },
    "jcboyd/miccai2022-roigan": {
        "cdpath21-gan/slurm_submit.sh": [
            "main.py"
        ],
        "miccai2022-roigan/slurm_submit.sh": [
            "main.py",
            "./config/config.yml"
        ]
    },
    "philippinespire/pire_fq_gz_processing": {
        "pire_fq_gz_processing/gridDownloader.sh": [
            "checkFQ.sh"
        ],
        "pire_fq_gz_processing/jobspec-cfg/checkFQ.sh": [
            "checkFQ.sh"
        ]
    },
    "EmmaGau/projet_remote": {
        "projet_remote/src/train_job.sh": [
            "src/train.py"
        ],
        "projet_remote/src/eval_job.sh": [
            "src/eval.py"
        ]
    },
    "unibas-dmi-hpc/SPH-EXA": {
        "SPH-EXA/.jenkins/gnu.sh": [
            "./cmake/setup_GTest.cmake",
            "./domain/cmake/setup_GTest.cmake",
            "./ryoanji/cmake/setup_GTest.cmake"
        ]
    },
    "xl0418/GetGenome": {
        "GetGenome/sub_prokkagenome.bash": [
            "prokka_genomes.sh"
        ],
        "GetGenome/sub_prokkagenome_P16NS.bash": [
            "prokka_genomes_P16NS.sh"
        ],
        "GetGenome/jobspec-cfg/prokka_genomes_P16NS.sh": [
            "datasets"
        ],
        "GetGenome/jobspec-cfg/prokka_genomes.sh": [
            "datasets"
        ]
    },
    "JiangZehua/control-pcgrl3D": {
        "control-pcgrl3D/evo/train.sh": [
            "evo/evolve.py"
        ]
    },
    "DevKretov/ntu_nlp_al": {
        "ntu_nlp_al/slurm/train_gpu.batch": [
            "main.py"
        ]
    },
    "zwxu064/MPLayers": {
        "MPLayers/generate.sh": [
            "main.py"
        ],
        "MPLayers/MPLayers/run_all_sbatch.sh": [
            "main.py"
        ]
    },
    "zwxu064/RANP": {
        "RANP/run_shapenet.sh": [
            "train_shapenet.py"
        ],
        "RANP/run_stereo.sh": [
            "train_stereo.py"
        ],
        "RANP/run_brats.sh": [
            "train_brats.py"
        ],
        "RANP/run_ucf101.sh": [
            "train_ucf101.py"
        ]
    },
    "Entonytang/pytorch-asr": {
        "pytorch-asr/train_deepspeech.sh": [
            "batch_train.py"
        ]
    },
    "MarkAWard/kmeans": {
        "kmeans/jobspec-cfg/time_sklearn1.sh": [
            "sklearn-kmeans.py",
            "blobs_10000_10_k20.csv"
        ],
        "kmeans/subs/sk2_20.q": [
            "output/sk2_times20.txt",
            "./time_sklearn2.sh"
        ],
        "kmeans/subs/sk2_16.q": [
            "output/sk2_times16.txt",
            "./time_sklearn2.sh"
        ],
        "kmeans/subs/sk1_1.q": [
            "output/sk1_times1.txt",
            "./time_sklearn1.sh"
        ],
        "kmeans/subs/sk1_20.q": [
            "output/sk1_times20.txt",
            "./time_sklearn1.sh"
        ],
        "kmeans/subs/sk1_16.q": [
            "output/sk1_times16.txt",
            "./time_sklearn1.sh"
        ],
        "kmeans/subs/sk1_12.q": [
            "./time_sklearn1.sh"
        ],
        "kmeans/subs/np1.q": [
            "output/np1_times1.txt",
            "np-kmeans.py",
            "blobs_10000_10_k20.csv"
        ],
        "kmeans/subs/sk1_4.q": [
            "output/sk1_times4.txt",
            "./time_sklearn1.sh"
        ],
        "kmeans/subs/sk2_12.q": [
            "output/sk2_times12.txt",
            "./time_sklearn2.sh"
        ],
        "kmeans/subs/sk2_4.q": [
            "output/sk2_times4.txt",
            "./time_sklearn2.sh"
        ]
    },
    "KPHendriks/BrassiToL": {
        "BrassiToL/2a.hybphaser_node_setup.sh": [
            "2b.hybphaser_sample_Nikolov2019.sh",
            "namelist.txt",
            "2b.hybphaser_sample_Angiosperms353NewTargets.sh",
            "2c.hybphaser_combine_results_bait_sets.sh"
        ],
        "BrassiToL/6a.ASTRAL_PRO.sh": [
            "6d.ASTRAL_PRO_genelist.txt",
            "6f.ASTRAL_PRO_input_gene_trees.tre",
            "6g.ASTRAL_PRO_paralogs_to_samples.R",
            "6h.ASTRAL_PRO_paralogs_to_samples.txt",
            "6i.ASTRAL_PRO_species_tree.tre"
        ]
    },
    "GeraintPratten/spectre": {
        "spectre/support/SubmitScripts/Minerva.sh": [
            "LICENSE.txt"
        ]
    },
    "starovoitovs/makers": {
        "makers/run.sh": [
            "fbsde.py"
        ]
    },
    "sofiabroome/painface-recognition": {
        "painface-recognition/run_scripts/eqpain.sbatch": [
            "main.py",
            "metadata/horse_subjects.csv"
        ]
    },
    "wilke0818/i3_speech_emotion_recognition": {
        "i3_speech_emotion_recognition/sh_all.sh": [
            "experiments/batch_and_dropout.json"
        ],
        "i3_speech_emotion_recognition/sh_final.sh": [
            "train.py"
        ]
    },
    "RaphaelMaser/xnat-singularity": {
        "xnat-singularity/run_xnat.sh": [
            "xnat.def"
        ],
        "xnat-singularity/jobspec-cfg/xnat.def": [
            "xnat/xnat-conf.properties"
        ]
    },
    "RaphaelMaser/MONAI-BRATS-experimental": {
        "MONAI-BRATS-experimental/brats_deploy_hpc.sh": [
            "brats_deploy.py"
        ],
        "MONAI-BRATS-experimental/brats_train_hpc.sh": [
            "brats_train.py"
        ]
    },
    "hkhitesh7/VTG-using-CAT-Transformer": {
        "VTG-using-CAT-Transformer/jobspec-cfg/main/train_mr.py": [
            "1"
        ],
        "VTG-using-CAT-Transformer/scripts/qvhl_pretrain.sh": [
            "1",
            "./main/train_mr.py"
        ]
    },
    "Caohanwen0/bm_train_codes": {
        "bm_train_codes/mask.sh": [
            "compute_mask.py"
        ]
    },
    "MaloMn/wav2vec2-phone-classification": {
        "wav2vec2-phone-classification/array.sh": [
            "recipes/array-frozen/prepare_jobs.py",
            "recipes/array-frozen/recipe.py"
        ]
    },
    "navh/SkySurveillance.jl": {
        "SkySurveillance.jl/train-sky.sh": [
            "src/SkySurveillance.jl",
            "params-test.toml"
        ]
    },
    "PelechanoLab/OPUSeq_tools": {
        "OPUSeq_tools/pp.sh": [
            "var.txt"
        ]
    },
    "benjacobs123456/cam_eu_scRNAseq": {
        "cam_eu_scRNAseq/dandelion_bcr.sh": [
            "dandelion_bcr_filter_to_donor.R"
        ]
    },
    "utsavoza/doom": {
        "doom/scripts/std.sbatch": [
            "main.py"
        ],
        "doom/scripts/double_rocket.sbatch": [
            "main.py"
        ],
        "doom/scripts/double.sbatch": [
            "main.py"
        ],
        "doom/scripts/duel.sbatch": [
            "main.py"
        ],
        "doom/scripts/duel_rocket.sbatch": [
            "main.py"
        ]
    },
    "BiOmicsLab/TransImbAMP": {
        "TransImbAMP/execute.lsf": [
            "train.py",
            "evaluate.py"
        ]
    },
    "eshuldiner/KrasIP": {
        "KrasIP/run_tumor_processing.sh": [
            "run_tumor_processing.sh",
            "process_tumors.py",
            "tubaseq.sh"
        ],
        "KrasIP/jobspec-cfg/process_tumors.py": [
            "process_tumors.py"
        ],
        "KrasIP/jobspec-cfg/tubaseq.sh": [
            "tubaseq.sh",
            "project_set_up.py",
            "run_count_reads_array.sh",
            "run_filtering.sh",
            "run_convert_to_cells.sh",
            "run_tumor_processing.sh"
        ],
        "KrasIP/jobspec-cfg/run_tumor_processing.sh": [
            "run_tumor_processing.sh",
            "process_tumors.py",
            "tubaseq.sh"
        ]
    },
    "roomforyeesus/fluxnode-multitool": {
        "fluxnode-multitool/install_pro.sh": [
            "post-merge"
        ],
        "fluxnode-multitool/multitoolbox_testnet.sh": [
            "post-merge"
        ]
    },
    "mingzhew/character_naming_vision": {
        "character_naming_vision/facenet/facenet/src/align/pbs_template.sh": [
            "cropimg.py",
            "extract_feat_video.lua"
        ]
    },
    "salzman-lab/compactor": {
        "compactor/aspen.sh": [
            "submit_parse.py",
            "parallel_generate.py",
            "make_intermediates.py",
            "aspen.py"
        ],
        "compactor/jobspec-cfg/submit_parse.py": [
            "make_intermediates.py"
        ],
        "compactor/jobspec-cfg/parallel_generate.py": [
            "aspen.py"
        ]
    },
    "Miro-Astore/plumed_scripts": {
        "plumed_scripts/memb1_opes_explore_mw.pbs": [
            "memb1.pbs"
        ]
    },
    "jtchilders/tensorflow_skeleton": {
        "tensorflow_skeleton/submit_scripts/dgx_ilsvrc_resnet.sh": [
            "main.py",
            "configs/ilsvrc.json"
        ],
        "tensorflow_skeleton/submit_scripts/theta_ilsvrc_resnet.sh": [
            "main.py",
            "configs/ilsvrc.json"
        ],
        "tensorflow_skeleton/submit_scripts/thetagpu_ilsvrc_conda.sh": [
            "main.py",
            "configs/ilsvrc.json"
        ],
        "tensorflow_skeleton/submit_scripts/gpu_v100_smx2_ilsvrc_resnet.sh": [
            "main.py",
            "configs/ilsvrc.json"
        ],
        "tensorflow_skeleton/submit_scripts/gpu_v100_smx2_mnist.sh": [
            "main.py",
            "configs/mnist.json"
        ]
    },
    "cjpardodelahoz/nostocales": {
        "nostocales/scripts/slurm_snaq_subset1.sh": [
            "scripts/snaq_subset1.jl"
        ]
    },
    "cjpardodelahoz/cyanolichen_networks": {
        "cyanolichen_networks/scripts/environmental_sequencing/ont_trial/nanoclust_b.sh": [
            "misc_files/environmental_sequencing/ont_trial/nanoclust_b_samples.txt"
        ],
        "cyanolichen_networks/scripts/environmental_sequencing/ont_trial/nanoclust_a.sh": [
            "misc_files/environmental_sequencing/ont_trial/pool1_samples.txt"
        ]
    },
    "almaeder/ACM_CG": {
        "ACM_CG/run_job_lumi.sh": [
            "./wrapper.sh"
        ]
    },
    "lawmurray/SIR": {
        "Resampling/qsub_gpu.sh": [
            "./run.sh"
        ]
    },
    "lawmurray/Resampling": {
        "Resampling/qsub_gpu.sh": [
            "./run.sh"
        ]
    },
    "Machine-Learning-for-Medical-Language/Concept_Norm": {
        "Concept_Norm/run_model_n2c2.sh": [
            "train_system_conceptnorm.py"
        ],
        "Concept_Norm/run_model_share.sh": [
            "train_system_conceptnorm.py"
        ]
    },
    "knaughten/roms_tools": {
        "roms_tools/era_evap.job": [
            "romscice_evap.py",
            "era_evap.job"
        ],
        "roms_tools/jobspec-cfg/era_evap.job": [
            "romscice_evap.py",
            "era_evap.job"
        ],
        "roms_tools/jobspec-cfg/romscice_evap.py": [
            "era_evap.job"
        ]
    },
    "usama7628674/Fluxion": {
        "Fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "Fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "trevorjung02/Temporal": {
        "Temporal/slurm/slurm-5854818.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-6496918.out": [
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/situatedqa/training/t5_kadapters_yearly_2freeze.json",
            "configs/debug.json"
        ],
        "Temporal/slurm/slurm-5854811.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-5854816.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-6153697.out": [
            "configs/templama/evaluation/t5_kadapters_soft_full.json"
        ],
        "Temporal/slurm/slurm-7490544.out": [
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_large.json",
            "configs/templama/training/t5_kadapters_yearly_large_256.json",
            "configs/wmt/training/t5_kadapters_yearly_small.json",
            "configs/templama/training/t5_kadapters_load.json",
            "configs/wmt/training/t5_kadapters_yearly256.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/wmt/training/t5_kadapters_yearly.json",
            "configs/templama/evaluation/t5_baseline_full.json"
        ],
        "Temporal/slurm/slurm-7490624.out": [
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_large.json",
            "configs/templama/training/t5_kadapters_yearly_large_256.json",
            "configs/wmt/training/t5_kadapters_yearly_small.json",
            "configs/templama/training/t5_kadapters_load.json",
            "configs/wmt/training/t5_kadapters_yearly256.json",
            "configs/wmt/training/t5_kadapters_ensemble.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/wmt/training/t5_kadapters_yearly.json",
            "configs/templama/evaluation/t5_baseline_full.json"
        ],
        "Temporal/slurm/slurm-6496922.out": [
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/situatedqa/training/t5_kadapters_yearly_2freeze.json",
            "configs/debug.json"
        ],
        "Temporal/slurm/slurm-7385213.out": [
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_large.json",
            "configs/templama/training/t5_kadapters_yearly_large_256.json",
            "configs/wmt/training/t5_kadapters_yearly_small.json",
            "configs/templama/training/t5_kadapters_load.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/wmt/training/t5_kadapters_yearly.json",
            "configs/templama/evaluation/t5_baseline_full.json"
        ],
        "Temporal/slurm/slurm-6153775.out": [
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-5854810.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-5854823.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-6074851.out": [
            "configs/templama/training/t5_padapters_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-5854814.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-6365695.out": [
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-7043127.out": [
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_large.json",
            "configs/templama/training/t5_kadapters_yearly_large_256.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/wmt/training/t5_kadapters_yearly.json",
            "configs/templama/evaluation/t5_baseline_full.json"
        ],
        "Temporal/slurm/slurm-6153696.out": [
            "configs/templama/evaluation/t5_kadapters_soft_full.json"
        ],
        "Temporal/slurm/slurm-6237451.out": [
            "configs/templama/training/t5_kadapters_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-6288048.out": [
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-5854815.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-5814045.out": [
            "configs/small_setting/training/t5_kadapters_debug.json"
        ],
        "Temporal/slurm/slurm-6496944.out": [
            "configs/templama/training/t5_baseline_full.json",
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/wmt/training/t5_kadapters_soft_full.json",
            "configs/situatedqa/training/t5_baseline_full.json",
            "configs/situatedqa/training/t5_kadapters_soft_yearly_2freeze.json",
            "configs/situatedqa/training/t5_kadapters_yearly_2freeze.json",
            "configs/debug.json"
        ],
        "Temporal/slurm/slurm-5854805.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-5854808.out": [
            "configs/templama/training/t5_baseline_debug.json"
        ],
        "Temporal/slurm/slurm-6266623.out": [
            "configs/templama/training/t5_kadapters_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-6153692.out": [
            "configs/templama/evaluation/t5_kadapters_soft_full.json"
        ],
        "Temporal/slurm/slurm-6074847.out": [
            "configs/templama/training/t5_padapters_yearly_2freeze.json"
        ],
        "Temporal/slurm/slurm-6046626.out": [
            "configs/templama/training/t5_kadapters_soft_full.json"
        ],
        "Temporal/slurm/slurm-6156079.out": [
            "configs/situatedqa/evaluation/t5_baseline_yearly.json"
        ],
        "Temporal/slurm/slurm-6244685.out": [
            "configs/templama/training/t5_kadapters_yearly_2freeze.json",
            "configs/templama/training/t5_kadapters_soft_full.json",
            "configs/templama/evaluation/t5_kadapters_soft_full.json"
        ],
        "Temporal/slurm/slurm-6264568.out": [
            "configs/templama/training/t5_kadapters_yearly_2freeze.json"
        ]
    },
    "imawby/Ivysaurus": {
        "Ivysaurus/slurmScripts/ivysaurusTrainTest_VGG_EX.com": [
            "TrainIvysaurus.py"
        ],
        "Ivysaurus/slurmScripts/ivysaurusTrainTest_VGG_SEP.com": [
            "TrainIvysaurus.py"
        ],
        "Ivysaurus/slurmScripts/ivysaurusTrainTest_VGG_BN.com": [
            "TrainIvysaurus.py"
        ],
        "Ivysaurus/slurmScripts/ivysaurusTrainTest_VGG_RES.com": [
            "TrainIvysaurus.py"
        ],
        "Ivysaurus/slurmScripts/ivysaurusTrainTest_VGG.com": [
            "TrainIvysaurus.py"
        ],
        "Ivysaurus/IvysaurusCaloDisp/slurmScripts/ivysaurusTrainTest_VGG.com": [
            "TrainIvysaurus.py"
        ]
    },
    "ss-sun/Attri-Net-V2": {
        "Attri-Net-V2/scripts/main_resnet_short.sh": [
            "main_resnet.py"
        ]
    },
    "HPCBio/BashWES_VarCall_BW": {
        "BashWES_VarCall_BW/start.sh": [
            "summary.sh"
        ]
    },
    "HPCBio/BW_VariantCalling": {
        "BashWES_VarCall_BW/start.sh": [
            "summary.sh"
        ],
        "BW_VariantCalling/alignfastq.sh": [
            "alignfastq.sh",
            "start_realrecal_block.sh"
        ],
        "BW_VariantCalling/start_realrecal_block.sh": [
            "start_realrecal_block.sh"
        ],
        "BW_VariantCalling/alignbam.sh": [
            "alignbam.sh"
        ],
        "BW_VariantCalling/schedule_alignfastq.sh": [
            "schedule_alignfastq.sh",
            "start_realrecal_block.sh"
        ],
        "BW_VariantCalling/schedule_realrecal_nonmultiplexed.sh": [
            "cleanup.sh"
        ],
        "BW_VariantCalling/jobspec-cfg/alignfastq.sh": [
            "alignfastq.sh",
            "start_realrecal_block.sh"
        ],
        "BW_VariantCalling/jobspec-cfg/start_realrecal_block.sh": [
            "start_realrecal_block.sh"
        ],
        "BW_VariantCalling/jobspec-cfg/alignbam.sh": [
            "alignbam.sh"
        ],
        "BW_VariantCalling/jobspec-cfg/schedule_alignfastq.sh": [
            "schedule_alignfastq.sh",
            "start_realrecal_block.sh"
        ]
    },
    "arthursoenarto/csc490project": {
        "csc490project/segtrainjob.sh": [
            "code/resnet_accuracy.py"
        ]
    },
    "LOFAR-VLBI/lotss-hba-survey": {
        "lotss-hba-survey/slurm/run_concat-flag.sh": [
            "slurm/add_these_to_bashrc.txt"
        ]
    },
    "ispgroupucl/DeepSportLab": {
        "DeepSportLab/oks.sh": [
            "oks.py"
        ]
    },
    "winston-lab/net-and-rna-seq": {
        "net-and-rna-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "tss-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "mnase-seq/slurm_submit.sh": [
            "cluster.yaml"
        ]
    },
    "winston-lab/tss-seq": {
        "net-and-rna-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "tss-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "mnase-seq/slurm_submit.sh": [
            "cluster.yaml"
        ]
    },
    "winston-lab/mnase-seq": {
        "net-and-rna-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "tss-seq/slurm_submit.sh": [
            "cluster.yaml"
        ],
        "mnase-seq/slurm_submit.sh": [
            "cluster.yaml"
        ]
    },
    "MaxS1996/TVM_Profiler": {
        "TVM_Profiler/gpu2_depthwise_profiling.slurm": [
            "template_profiling.py"
        ],
        "TVM_Profiler/gpu2_conv2d_profiling.slurm": [
            "template_profiling.py"
        ],
        "TVM_Profiler/alpha_pool2d_profiling.slurm": [
            "template_profiling.py"
        ],
        "TVM_Profiler/gpu2_dense_profiling.slurm": [
            "template_profiling.py"
        ],
        "TVM_Profiler/alpha_dense_profiling.slurm": [
            "template_profiling.py"
        ],
        "TVM_Profiler/alpha_depthwise_profiling.slurm": [
            "template_profiling.py"
        ]
    },
    "georgegito/non-local-means-cuda": {
        "non-local-means-cuda/benchmark.sh": [
            "src/main.cu"
        ]
    },
    "threeeyelidds/finetuning-LLM": {
        "finetuning-LLM/recipes/launch.slurm": [
            "requirements.txt",
            "src/run_sft.py",
            "recipes/model_configs/sft/config_lora_llama.yaml"
        ]
    },
    "subramanya1997/adetr": {
        "adetr/run.sh": [
            "./run.sh",
            "./dataset.zip",
            "requirements.txt",
            "main.py",
            "./configs/vaw_attributes.yaml"
        ],
        "adetr/jobspec-cfg/run.sh": [
            "./run.sh",
            "./dataset.zip",
            "requirements.txt",
            "main.py",
            "./configs/vaw_attributes.yaml"
        ]
    },
    "jdossgollin/2020-PSU-ACI-rnetcdf": {
        "2020-PSU-ACI-rnetcdf/makeenv.pbs": [
            "environment.yml"
        ]
    },
    "Sanchit-404/MultimodalXMC": {
        "MultimodalXMC/run_single_job.sh": [
            "src/main.py"
        ]
    },
    "Poseidon724/LLaMA_Finetune": {
        "LLaMA_Finetune/finetune_sh.sh": [
            "mistral_finetune.py"
        ]
    },
    "Transconnectome/SwiFT": {
        "SwiFT/sample_scripts/sample_script.slurm": [
            "export_DDP_vars.sh",
            "project/main.py"
        ]
    },
    "wanyingkang/MITgcm-for-icy-ocean-worlds": {
        "MITgcm-for-icy-ocean-worlds/run.sub_template": [
            "climatology.m"
        ]
    },
    "PRI2MA/DL_NTCP_Xerostomia": {
        "DL_NTCP_Xerostomia/gpu_submit.sh": [
            "main.py"
        ],
        "DL_NTCP_Xerostomia/jobspec-cfg/main.py": [
            "lr_finder.py"
        ]
    },
    "maxsonBraunLab/cutTag-pipeline": {
        "cutTag-pipeline/run_pipeline_singularity.sh": [
            "run_pipeline_singularity.sh",
            "cluster.yaml"
        ],
        "cutTag-pipeline/jobspec-cfg/run_pipeline_singularity.sh": [
            "run_pipeline_singularity.sh",
            "cluster.yaml"
        ]
    },
    "jorditorresBCN/SA-MIRI-2020": {
        "Fundamentals-DL-CTE-POWER/ResNet50_seq.sh": [
            "ResNet50_seq.py"
        ]
    },
    "jorditorresBCN/Fundamentals-DL-CTE-POWER": {
        "SA-MIRI-2020/ResNet50.sh": [
            "ResNet50.py"
        ],
        "Fundamentals-DL-CTE-POWER/job-transformer-DDP-2-GPUs.sh": [
            "main_ddp.py"
        ],
        "Fundamentals-DL-CTE-POWER/ResNet50_seq.sh": [
            "ResNet50_seq.py"
        ],
        "Fundamentals-DL-CTE-POWER/job_hvd_1node_4gpu.sh": [
            "tf2_keras_cifar_hvd.py"
        ],
        "Fundamentals-DL-CTE-POWER/ResNet50.sh": [
            "ResNet50.py"
        ],
        "Fundamentals-DL-CTE-POWER/job-transformer-mixed-precision.sh": [
            "main.py"
        ],
        "Fundamentals-DL-CTE-POWER/job_hvd_1node_1gpu.sh": [
            "tf2_keras_cifar_hvd.py"
        ],
        "Fundamentals-DL-CTE-POWER/job-transformer-sequential.sh": [
            "main.py"
        ]
    },
    "knoriy/CLARA": {
        "CLARA/submit.sh": [
            "./scripts/clean_tmp_files.sh",
            "./scripts/download_from_s3.py",
            "./clara/train.py"
        ],
        "CLARA/jobspec-cfg/scripts/download_from_s3.py": [
            "scripts/download_from_s3.py",
            "./config/config/data/base.yaml"
        ]
    },
    "gmarkomanolis/roofline": {
        "roofline/submit.sh": [
            "./config_initial.txt"
        ]
    },
    "tomkoset/ML_pipeline_microbiome": {
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_dn1_family.sh": [
            "code/R/main.R",
            "test/data/classification_input_day-1_data_family.csv",
            "test/data/hyperparams.csv"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_dn1_family_output.sh": [
            "code/bash/family_dn1_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_d1.sh": [
            "code/R/main.R",
            "test/data/classification_input_day1_data.csv",
            "test/data/hyperparams.csv"
        ],
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_d0_family.sh": [
            "code/R/main.R",
            "test/data/classification_input_day0_data_family.csv",
            "test/data/hyperparams.csv"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_d0_family_output.sh": [
            "code/bash/family_d0_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_d1_family_output.sh": [
            "code/bash/family_d1_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_dn1_output.sh": [
            "code/bash/dn1_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_d0_output.sh": [
            "code/bash/d0_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_dn1.sh": [
            "code/R/main.R",
            "test/data/classification_input_day-1_data.csv",
            "test/data/hyperparams.csv"
        ],
        "ML_pipeline_microbiome/code/slurm/combine_d1_output.sh": [
            "code/bash/d1_cat_csv_files.sh"
        ],
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_d1_family.sh": [
            "code/R/main.R",
            "test/data/classification_input_day1_data_family.csv",
            "test/data/hyperparams.csv"
        ],
        "ML_pipeline_microbiome/code/slurm/L2_Logistic_Regression_d0.sh": [
            "code/R/main.R",
            "test/data/classification_input_day0_data.csv",
            "test/data/hyperparams.csv"
        ]
    },
    "pkuyyj/ElasticWaveProject.jl": {
        "ElasticWaveProject.jl/script/wavempi.sh": [
            "src/wave3D_multixpu.jl"
        ]
    },
    "jglane/Network-Control": {
        "Network-Control/guo.sub": [
            "guo.sub"
        ],
        "Network-Control/jobspec-cfg/guo.sub": [
            "guo.sub"
        ]
    },
    "hmdliu/DL-SP22-Team2": {
        "DL-SP22-Team2/gcp_pretrain_day2.slurm": [
            "main_pretrain.py"
        ],
        "DL-SP22-Team2/gcp_finetune.slurm": [
            "main_finetune.py"
        ]
    },
    "hmdliu/wx-challenge": {
        "wx-challenge/run_inference.slurm": [
            "ensemble_inference.py"
        ],
        "wx-challenge/run_main.slurm": [
            "main.py"
        ]
    },
    "tapchonk/KokkosGCN": {
        "KokkosGCN/remoterun4.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun6.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun7.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterungpu.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun5.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun3.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun2.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun1.sh": [
            "Makefile"
        ],
        "cuDNNGCN/remoterun.sh": [
            "Makefile"
        ]
    },
    "tapchonk/cuDNNGCN": {
        "KokkosGCN/remoterun4.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun6.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun7.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterungpu.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun5.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun3.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun2.sh": [
            "Makefile"
        ],
        "KokkosGCN/remoterun1.sh": [
            "Makefile"
        ],
        "cuDNNGCN/remoterun.sh": [
            "Makefile"
        ]
    },
    "SytseOegema/DeepLearning": {
        "DeepLearning/jobscript.sh": [
            "code/requirements.txt",
            "code/1b_pre_train_model.py"
        ]
    },
    "yyashpatel/ResNet_pytorch": {
        "ResNet_pytorch/M2.sbatch": [
            "main.py"
        ],
        "ResNet_pytorch/M3.sbatch": [
            "main.py"
        ],
        "ResNet_pytorch/M4.sbatch": [
            "main.py",
            "main2.py",
            "main3.py"
        ],
        "ResNet_pytorch/M1.sbatch": [
            "main.py"
        ]
    },
    "linhaojia13/PointMetaBase": {
        "PointMetaBase/jobspec-cfg/script/main_classification.sh": [
            "examples/classification/main.py",
            "script/main_classification.sh"
        ],
        "PointMetaBase/jobspec-cfg/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ],
        "PointMetaBase/script/main_classification.sh": [
            "examples/classification/main.py",
            "script/main_classification.sh"
        ],
        "PointMetaBase/script/main_partseg.sh": [
            "examples/shapenetpart/main.py"
        ],
        "PointMetaBase/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ]
    },
    "QM20/Multiple-Sclerosis-Lesion-Segmentation-With-High-Resolution-Net": {
        "Multiple-Sclerosis-Lesion-Segmentation-With-High-Resolution-Net/run_ISBI_HR.s": [
            "train_HRNet_ISBI.py"
        ]
    },
    "hughbg/fringe_rate_filter": {
        "fringe_rate_filter/sim.sh": [
            "mk_uvfits.py"
        ]
    },
    "tiwarylab/GrASP": {
        "GrASP/example_slurm_scripts/train_slurm_scripts/job_train_coach420_mlig.sh": [
            "train.py"
        ]
    },
    "LPris/coll_struct": {
        "coll_struct/launch.sbatch": [
            "./run.sh"
        ],
        "coll_struct/jobspec-cfg/run.sh": [
            "main.py"
        ]
    },
    "cmu-spuds/auramask": {
        "auramask/colorspace.sbatch": [
            "train.py"
        ],
        "auramask/grid.sbatch": [
            "train.py"
        ]
    },
    "andreasmolund/reca": {
        "reca/jobscripts/5massjob.pbs": [
            "bittask.py"
        ],
        "reca/jobscripts/20massjob.pbs": [
            "20bittask.py"
        ]
    },
    "vadim0x60/autoencoderopt": {
        "autoencoderopt/slurm.sh": [
            "opt.py"
        ]
    },
    "ETHZ-TEC/permafrostanalytics": {
        "permafrostanalytics/SLURM.txt": [
            "ideas/machine_learning/classification.py"
        ]
    },
    "franciszzj/HiLo": {
        "HiLo/scripts/one_stage_train_kcl_create.sh": [
            "tools/train.py"
        ],
        "HiLo/scripts/one_stage_train_jade2.sh": [
            "tools/train.py"
        ]
    },
    "isliliming/example01": {
        "example01/painn_example.sub": [
            "./train-painn-example.py"
        ]
    },
    "ashrosewood/scRNA_SMARTseq2": {
        "scRNA_SMARTseq2/submit_snakemake.sh": [
            "cluster.json",
            "Snakefile"
        ]
    },
    "OlgaOvcharenko/dsl_hate_speech": {
        "dsl_hate_speech/load_quantized_llm.sh": [
            "src/scripts/save_models_locally.py"
        ]
    },
    "ihsgnef/prostatex": {
        "prostatex/dwac.sh": [
            "dwac_args.py"
        ],
        "prostatex/wang.sh": [
            "wang_args.py"
        ]
    },
    "vittoriopipoli/XAI-Fake": {
        "XAI-Fake/dev.sh": [
            "main.py",
            "configs/resnet18_binary_classification.yaml"
        ],
        "XAI-Fake/prod.sh": [
            "main.py",
            "configs/resnet18_binary_classification.yaml"
        ]
    },
    "GustavAls/PartialNLP": {
        "PartialNLP/hpc/SUB_NLI_dataramp.bsub": [
            "SentimentAnalysis/SentimentClassifier.py"
        ],
        "PartialNLP/hpc/SUB_SA_laplace_sublayer.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_SA_swag_sublayer.bsub": [
            "SentimentAnalysis/ExperimentsSWAG.py"
        ],
        "PartialNLP/hpc/SUB_NLI_laplace_llla.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_SA_datagen.bsub": [
            "SentimentAnalysis/SentimentClassifier.py"
        ],
        "PartialNLP/hpc/SUB_uci_Laplace_SWAG.bsub": [
            "Laplace/uci_laplace.py"
        ],
        "PartialNLP/hpc/SUB_NLI_datagen.bsub": [
            "SentimentAnalysis/NLIClassifier.py"
        ],
        "PartialNLP/hpc/SUB_uci_HMC_VI_torch.bsub": [
            "HMC/uci_hmc.py"
        ],
        "PartialNLP/hpc/SUB_SA_Laplace.bsub": [
            "SentimentAnalysis/SentimentClassifier.py"
        ],
        "PartialNLP/hpc/SUB_NLI_laplace_sublayer.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_uci_HMC_VI_SVI.bsub": [
            "HMC/uci_hmc.py"
        ],
        "PartialNLP/hpc/SUB_SA_laplace_eval_map.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_SA_laplace_exp.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_NLI_swag_exp.bsub": [
            "SentimentAnalysis/ExperimentsSWAG.py"
        ],
        "PartialNLP/hpc/SUB_SA_swag_exp.bsub": [
            "SentimentAnalysis/ExperimentsSWAG.py"
        ],
        "PartialNLP/hpc/SUB_NLI_swag_sublayer.bsub": [
            "SentimentAnalysis/ExperimentsSWAG.py"
        ],
        "PartialNLP/hpc/SUB_NLI_laplace_eval_map.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_SA_laplace_llla.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ],
        "PartialNLP/hpc/SUB_huggingface_TS.bsub": [
            "Summarization/TextSummarizer.py"
        ],
        "PartialNLP/hpc/SUB_SA_dataramp.bsub": [
            "SentimentAnalysis/SentimentClassifier.py"
        ],
        "PartialNLP/hpc/SUB_NLI_laplace_exp.bsub": [
            "SentimentAnalysis/ExperimentsLaplace.py"
        ]
    },
    "e0397123/DynaEval": {
        "DynaEval/score.sh": [
            "score.py"
        ],
        "DynaEval/eval.sh": [
            "eval.py"
        ]
    },
    "stanford-rc/globus-example-flow": {
        "globus-example-flow/do_work.sh": [
            "LICENSE"
        ],
        "globus-example-flow/do_transfer.sh": [
            "LICENSE"
        ],
        "globus-example-flow/wait_for_transfer.sh": [
            "LICENSE"
        ]
    },
    "stanford-rc/rclone_sync": {
        "globus-example-flow/do_work.sh": [
            "LICENSE"
        ],
        "globus-example-flow/do_transfer.sh": [
            "LICENSE"
        ],
        "globus-example-flow/wait_for_transfer.sh": [
            "LICENSE"
        ]
    },
    "tlranda/FULL-W2V": {
        "FULL-W2V/replication/template.pbs": [
            "makefile",
            "replication/sweep.py"
        ]
    },
    "jahnavimalaga/VehicleSpeed_and_Feature_estimation": {
        "VehicleSpeed_and_Feature_estimation/script.slurm": [
            "script.slurm"
        ],
        "VehicleSpeed_and_Feature_estimation/jobspec-cfg/script.slurm": [
            "script.slurm"
        ]
    },
    "elyall/wandb_on_slurm": {
        "wandb_on_slurm/example_tf/example.sbatch": [
            "wandb_on_slurm.py"
        ],
        "wandb_on_slurm/example_torch/example.sbatch": [
            "wandb_on_slurm.py"
        ]
    },
    "gitMorelli/estimating_r": {
        "estimating_r/script_gpu.sh": [
            "training.py"
        ]
    },
    "mattwfranchi/Webots.HPC": {
        "Webots.HPC/merging_simulation.pbs": [
            "Simulations/HighwayMerge/worlds/LinkonMKZmyMap.wbt"
        ]
    },
    "neeru0303/Retinal-Segmentation": {
        "Retinal-Segmentation/train.job": [
            "python/main_model.py"
        ]
    },
    "roman-janik/diploma_thesis_program": {
        "diploma_thesis_program/mlm/train_mlm_model.sh": [
            "requirements.txt",
            "train_ml_model.py"
        ],
        "diploma_thesis_program/ner/train_ner_model.sh": [
            "requirements.txt",
            "train_ner_model.py"
        ],
        "diploma_thesis_program/ner/prepare_SumeCzech-NER.sh": [
            "requirements.txt"
        ],
        "diploma_thesis_program/page_crop/train_page_crop_model.sh": [
            "requirements.txt"
        ]
    },
    "aidenlab/juicer_old": {
        "juicer/AWS/scripts/juicer.sh": [
            "chimeric_blacklist.awk"
        ],
        "juicer/LSF/scripts/juicer.sh": [
            "chimeric_blacklist.awk"
        ]
    },
    "julienbrandoit/INFO0939---Parallel-implementations-of-a-sound-wave-propagation-scheme": {
        "INFO0939---Parallel-implementations-of-a-sound-wave-propagation-scheme/serial_job.job": [
            "SERIAL/fdtd.c"
        ]
    },
    "pheonix-18/3D-Unet-BraTS-PyTorch": {
        "3D-Unet-BraTS-PyTorch/train.slurm": [
            "train.py"
        ]
    },
    "ayushgupt/parallel-Matrix-Multiplication": {
        "parallel-Matrix-Multiplication/sc_run.sh": [
            "./a.out",
            "sample_inp.txt"
        ]
    },
    "showlab/UniVTG": {
        "UniVTG/scripts/cotrain.sh": [
            "./main/train_vlp_ddp.py"
        ],
        "UniVTG/scripts/qvhl_inference.sh": [
            "./main/train_mr.py"
        ],
        "UniVTG/scripts/pretrain.sh": [
            "./main/train_vlp_ddp.py"
        ],
        "UniVTG/scripts/qvhl_pretrain.sh": [
            "./main/train_mr.py"
        ]
    },
    "tsalo/complex-flow": {
        "complex-flow/singularity_dwidenoise.sh": [
            "test_dwidenoise.py"
        ]
    },
    "mskcc/GDD-Phase2": {
        "GDD-Phase2/ensemble.sh": [
            "msk_ensemble.py"
        ],
        "GDD-Phase2/ensemble_bal.sh": [
            "msk_ensemble_bal.py"
        ]
    },
    "emaballarin/HinTorch": {
        "HinTorch/orfeo_run.sh": [
            "repro.ipynb",
            "run.py"
        ]
    },
    "pamag/pmgEnsembl": {
        "pmgEnsembl/ensembl-functgenomics/scripts/environments/arrays.env": [
            "ensembl-functgenomics/docs/array_mapping.txt"
        ],
        "pmgEnsembl/jobspec-cfg/ensembl-functgenomics/docs/array_mapping.txt": [
            "ensembl-functgenomics/scripts/array_mapping/pre_process_probe_seqs.sh",
            "ensembl-functgenomics/scripts/environments/example.arrays",
            "ensembl-functgenomics/scripts/array_mapping/probe2transcript.pl"
        ]
    },
    "binchengecon/CC_NN": {
        "CC_NN/main2.sh": [
            "main_train.sh",
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ],
        "CC_NN/main.sh": [
            "main_train.sh",
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ],
        "CC_NN/main3.sh": [
            "main_train.sh",
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ],
        "CC_NN/run_Bin.sh": [
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ],
        "CC_NN/pre_tech_pre_damage_simulation_.job": [
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ],
        "CC_NN/jobspec-cfg/main_train.sh": [
            "pre_tech_post_damage.py",
            "post_tech_pre_damage.py",
            "pre_tech_pre_damage.py"
        ]
    },
    "mind-mappers/verification-prostate-histology": {
        "verification-prostate-histology/3_evaluate.sh": [
            "./evaluate_run.py"
        ]
    },
    "vortexlab-uclouvain/flups": {
        "flups/samples/validation/run/deprec/meluxina_compile.sh": [
            "make_arch/make.meluxina"
        ]
    },
    "JHU-CLSP/AnaloBench": {
        "AnaloBench/t1_script.sh": [
            "code/t1.py"
        ]
    },
    "huishenlab/multiscale_methylation_plot_pipeline": {
        "multiscale_methylation_plot_pipeline/bin/run_snakemake_workflow.sh": [
            "config/config.yaml"
        ],
        "multiscale_methylation_plot_pipeline/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv"
        ],
        "Biscuit_Snakemake_Workflow/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv"
        ]
    },
    "huishenlab/Biscuit_Snakemake_Workflow": {
        "multiscale_methylation_plot_pipeline/bin/run_snakemake_workflow.sh": [
            "config/config.yaml"
        ],
        "multiscale_methylation_plot_pipeline/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv"
        ],
        "Biscuit_Snakemake_Workflow/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv",
            "workflow/scripts/region_centered_bin_averages.py"
        ]
    },
    "HephyAnalysisSW/DeepLepton-Training": {
        "DeepLepton-Training/predictjob.sh": [
            "env.sh"
        ],
        "DeepLepton-Training/trainjob.sh": [
            "env.sh",
            "Train/DYvsQCD2016.py"
        ]
    },
    "anzhichen1999/test_sample": {
        "test_sample/Q1.sbatch": [
            "finished.py"
        ]
    },
    "ryanliu30/gtrack": {
        "gtrack/PM_submit_job_requeue.sh": [
            "run.py"
        ]
    },
    "kkarbasi/tacdecs": {
        "tacdecs/run_slurm.sh": [
            "requirements.txt",
            "run_parallel.py"
        ]
    },
    "Isabella136/telseq": {
        "telseq/run.sh": [
            "config/cluster.json"
        ]
    },
    "Reventh-Sharma/DSC-250-LMTutor": {
        "DSC-250-LMTutor/run.sh": [
            "run.py"
        ]
    },
    "Yanruz/Signature-Verification": {
        "Signature-Verification/train.SBATCH": [
            "siamese_train.py"
        ]
    },
    "CatalinaMedina/covid_SEIHR_county": {
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/4_tidy_pp_gq.sh": [
            "scripts/tidy_posterior_predictive_and_generated_quantities.R",
            "slurm_submissions/5a_calcat.sh",
            "slurm_submissions/5b_figures.sh"
        ],
        "covid_SEIHR_county/jobspec-cfg/slurm_submissions/3_gen_pp_gq.sh": [
            "slurm_submissions/4_tidy_pp_gq.sh",
            "scripts/generate_posterior_predictive_and_generated_quantities.jl"
        ],
        "covid_SEIHR_county/slurm_submissions/2_fit_model.sh": [
            "slurm_submissions/3_gen_pp_gq.sh",
            "scripts/fit_model.jl"
        ],
        "covid_SEIHR_county/slurm_submissions/3_gen_pp_gq.sh": [
            "slurm_submissions/4_tidy_pp_gq.sh",
            "scripts/generate_posterior_predictive_and_generated_quantities.jl"
        ]
    },
    "TechDufus/fluxnode-multitool": {
        "fluxnode-multitool/install_pro.sh": [
            "post-merge"
        ],
        "fluxnode-multitool/multitoolbox_testnet.sh": [
            "post-merge"
        ]
    },
    "choROPeNt/3dseg": {
        "3dseg/scripts_sh/predict.sh": [
            "./scripts/predict.py"
        ]
    },
    "fancompute/wavetorch": {
        "wavetorch/study/nonlinear_speed/job_nonlinear_speed.slurm": [
            "./study/vowel_train.py",
            "./study/nonlinear_speed/nonlinear_speed.yml"
        ],
        "wavetorch/study/satdamp/job_satdamp.slurm": [
            "./study/vowel_train.py",
            "./study/satdamp/satdamp.yml"
        ]
    },
    "SPECFEM/specfem3d_globe": {
        "specfem3d_globe/utils/Cluster/pbs/valgrind_go_solver_pbs.bash": [
            "DATA/Par_file",
            "DATA/STATIONS",
            "DATA/CMTSOLUTION"
        ],
        "scaling-benchmarks/Titan/SPECFEM3D_GLOBE/results/CPUstrong96.Dec2018.daniel/go_benchmark.titan.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/benchmark-scripts/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/CPUstrong96.Dec2018.daniel/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/regional_Greece_small.Dec2018.daniel/job_mesher_solver.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/CPUstrong96.nex512.Jan2019.daniel/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "specfem3d/EXAMPLES/applications/meshfem3D_examples/many_interfaces/go_process_pbs.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "specfem3d/utils/scripts/Cluster/pbs/valgrind_go_solver_pbs.bash": [
            "DATA/Par_file",
            "DATA/STATIONS",
            "DATA/CMTSOLUTION"
        ]
    },
    "SPECFEM/specfem3d": {
        "specfem3d_globe/utils/Cluster/pbs/valgrind_go_solver_pbs.bash": [
            "DATA/Par_file",
            "DATA/STATIONS",
            "DATA/CMTSOLUTION"
        ],
        "scaling-benchmarks/Titan/SPECFEM3D_GLOBE/results/CPUstrong96.Dec2018.daniel/go_benchmark.titan.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/benchmark-scripts/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/CPUstrong96.Dec2018.daniel/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/regional_Greece_small.Dec2018.daniel/job_mesher_solver.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "scaling-benchmarks/Summit/SPECFEM3D_GLOBE/results/CPUstrong96.nex512.Jan2019.daniel/go_benchmark.summit.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/STATIONS"
        ],
        "specfem3d/EXAMPLES/applications/meshfem3D_examples/many_interfaces/go_process_pbs.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/FORCESOLUTION",
            "DATA/STATIONS"
        ],
        "specfem3d/utils/scripts/Cluster/pbs/valgrind_go_solver_pbs.bash": [
            "DATA/Par_file",
            "DATA/STATIONS",
            "DATA/CMTSOLUTION"
        ]
    },
    "aarondwolf/egc_hpc_manual": {
        "egc_hpc_manual/matlab_job.sh": [
            "matlab/master.m"
        ]
    },
    "cihangxie/SmoothAdversarialTraining": {
        "SmoothAdversarialTraining/ResNet/slurm/train.sh": [
            "LICENSE"
        ],
        "SmoothAdversarialTraining/ResNet/slurm/eval.sh": [
            "LICENSE"
        ]
    },
    "mrchtr/code-gan": {
        "code-gan/jobs/train.job": [
            "./data/dataset/out_train.txt",
            "environments.yml",
            "requirements.txt",
            "run.py"
        ]
    },
    "rdiehlmartinez/multilingual-smlmt": {
        "multilingual-smlmt/scripts/run_sweep.wilkes3": [
            "run_model.py"
        ]
    },
    "MRIresearch/maddenXCP": {
        "maddenXCP/runxcp.sh": [
            "modifyConfounds.py"
        ]
    },
    "shkimmie-umb/melanoma_detection": {
        "melanoma_detection/SLURMS/aug/working/ResNet152V2/ISIC2020_aug_ResNet152V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet152/ISIC2016%2BISIC2020_aug_ResNet152.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet152/MEDNODE_aug_ResNet152.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet50/MEDNODE_aug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet50/ISIC2016%2BPH2_aug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet50/HAM10000_aug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet50V2/HAM10000_aug_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet50V2/KaggleMB_aug_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet101/ISIC2020_aug_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet101V2/ISIC2018_aug_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/aug/working/ResNet101V2/ISIC2017_aug_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet152/ISIC2019_noaug_ResNet152.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet152/ISIC2016%2BMEDNODE_noaug_ResNet152.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet152/ISIC2018_noaug_ResNet152.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet50/ISIC2018_noaug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet50/MEDNODE_noaug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet50/ISIC2016%2BISIC2017_noaug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet50/ISIC2019_noaug_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet50V2/ISIC2019_noaug_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet101/KaggleMB_noaug_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet101/HAM10000_noaug_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/noaug/working/ResNet101V2/ISIC2019_noaug_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet50/ISIC2017_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet50/ISIC2016%2BMEDNODE_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet50V2/MEDNODE_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet50V2/HAM10000_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet50V2/ISIC2019_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet101/MEDNODE_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet101/PAD_UFES_20_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/640x640/ResNet101V2/HAM10000_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet152V2/ISIC2018_ResNet152V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet50/ISIC2016%2BKaggleMB_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet50/ISIC2016_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet50V2/_7_point_criteria_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet50V2/ISIC2017_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet50V2/ISIC2016_ResNet50V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet101/ISIC2020_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/150x150/ResNet101V2/KaggleMB_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet152V2/ISIC2020_ResNet152V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet50/ISIC2016%2BISIC2017_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet50/ISIC2018_ResNet50.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet101/ISIC2016%2BPH2_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet101/ISIC2016_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet101/ISIC2020_ResNet101.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet101V2/ISIC2020_ResNet101V2.sbatch": [
            "train.py"
        ],
        "melanoma_detection/SLURMS/scripts/384x384/ResNet101V2/ISIC2016_ResNet101V2.sbatch": [
            "train.py"
        ]
    },
    "dvsth/ie-nlp-cluster": {
        "ie-nlp-cluster/scripts/gpu.sh": [
            "nlp.py"
        ]
    },
    "uob-vil/TRN-pytorch": {
        "TRN-pytorch/train_rgb_jester.sh": [
            "main.py"
        ]
    },
    "davidygp/Pedestrian-Attribute-Recognition": {
        "Pedestrian-Attribute-Recognition/output_results/1.%20backbone/resnet101.pbs.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/1.%20backbone/resnet50.pbs.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/1.%20backbone/se_resnet50.pbs.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/1.%20backbone/se_resnet101.pbs.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/1.%20backbone/dpn68b.pbs.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_LabelSmoothing_v2.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomErase_v1.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomErase_v5.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomErase_v3.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_Mosaic_v2.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomErase_v2.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_LabelSmoothing_v3.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomAffine_v3.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_Mosaic_v1.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomErase_v4.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_LabelSmoothing_v1.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomAffine_v1.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_LabelSmoothing_v5.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_RandomAffine_v2.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/2.%20resnet50_augmentation/PETA_resnet50_LabelSmoothing_v4.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/3.%20dpn107_augmentation/PETA_dpn107_Mosaic_v4.txt": [
            "train.py"
        ],
        "Pedestrian-Attribute-Recognition/output_results/3.%20dpn107_augmentation/PETA_dpn107_Mosaic_v5.txt": [
            "train.py"
        ]
    },
    "bujol12/document-classification-transformers": {
        "document-classification-transformers/run_slurm.sh": [
            "main.py"
        ]
    },
    "tingyan08/ICSHM2022": {
        "ICSHM2022/job/identification-disp.sh": [
            "train_identification.py"
        ]
    },
    "smfsamir/understanding-augmentation-morphology": {
        "understanding-augmentation-morphology/run_byt5.sh": [
            "main_byt5.py"
        ]
    },
    "tobyperrett/lmr-release": {
        "lmr-release/slurm_scripts/ek/run_single_node_job.sh": [
            "setup.py",
            "tools/run_net.py"
        ]
    },
    "pjlab-sys4nlp/llama-moe": {
        "llama-moe/scripts/cpt/fpt.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/fpt_llama2_7b_moefication.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/fpt_13b.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/fpt_7b_residual.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/fpt_llama2_7b_share.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/gate_loss.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/fpt_resume.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/lora.sh": [
            "smoe/entrypoint/cpt/cpt_lora.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/sheared_llama_paper.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/baseline.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/baseline_112gpus_sheared_llama_portion_fluency.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/baseline_112gpus_sheared_llama_portion.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/sheared_llama_112gpus_100B.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/dynamic_data_selection/sheared_llama_112gpus.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/8_2/baseline_112gpus_8_2_sheared_llama_portion_fluency_sf4.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/cpt/8_2/mixtral_112gpus_8_2_sheared_llama_portion_fluency_sf4.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/eval/ref_loss.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ],
        "llama-moe/scripts/eval/ref_loss_random_split.sh": [
            "smoe/entrypoint/cpt/cpt_fpt.py"
        ]
    },
    "jonabur/Megatron-DeepSpeed": {
        "Megatron-DeepSpeed/pretrain_viking_13B.sh": [
            "./log_restart_info.sh",
            "pretrain_gpt.py",
            "./launch.sh"
        ],
        "Megatron-DeepSpeed/pretrain_viking_33B.sh": [
            "./log_restart_info.sh",
            "pretrain_gpt.py",
            "./launch.sh"
        ]
    },
    "algorithmcardboard/grasp-lift-eeg-detection": {
        "grasp-lift-eeg-detection/subGenROCcurve.sh": [
            "requirements.txt",
            "generateROCcurve.py"
        ],
        "grasp-lift-eeg-detection/subGridSearch.sh": [
            "requirements.txt",
            "linear_bofw_pipeline.py"
        ]
    },
    "fangyuan-ksgk/PairRM-with-mps": {
        "PairRM-with-mps/train_ranker.sh": [
            "train_ranker.py"
        ],
        "PairRM-with-mps/jobspec-cfg/train_ranker.py": [
            "LICENSE"
        ]
    },
    "AlirezAkbary/PANORAMIA": {
        "PANORAMIA/experiments/WikiText-2/paper/target_whole/generator_generation/less_random_generator/run.sh": [
            "experiments/WikiText-2/paper/target_whole/generator_generation/less_random_generator/generator_generation.yaml"
        ],
        "PANORAMIA/experiments/WikiText-2/paper/target_whole/generator_generation/dp_generator/run.sh": [
            "experiments/WikiText-2/paper/target_whole/generator_generation/dp_generator/generator_generation.yaml"
        ],
        "PANORAMIA/experiments/WikiText-2/paper/target_whole/generator_generation/dp_generator/extra_syn_data/run.sh": [
            "experiments/WikiText-2/paper/target_whole/generator_generation/dp_generator/extra_syn_data/generator_generation.yaml"
        ],
        "PANORAMIA/experiments/WikiText-2/paper/target_whole/helper_with_syn/less_random_generator/run.sh": [
            "experiments/WikiText-2/paper/target_whole/helper_with_syn/less_random_generator/helper_with_syn.yaml"
        ],
        "PANORAMIA/experiments/WikiText-2/paper/target_whole/helper_with_syn/dp_synthetic_data/run.sh": [
            "experiments/WikiText-2/paper/target_whole/helper_with_syn/dp_synthetic_data/helper_with_syn.yaml"
        ]
    },
    "puzhao8/smp-seg-pytorch": {
        "smp-seg-pytorch/jobspec-cfg/test.py": [
            "main_s1s2_unet.py"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_distill_unet.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_distill_unet.sh",
            "main_s1s2_distill_unet.py"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_siamunet.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_siamunet.sh"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_mtbs.sh": [
            "run_on_geoinfo/run_unet.sh",
            "run_on_geoinfo/run_mtbs.sh",
            "main_s1s2_unet_mtbs.py",
            "main_s1s2_unet_aug.py",
            "main_s1s2_unet_wsl.py",
            "main_s1s2_unet.py"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_eval.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_eval.sh",
            "s1s2_evaluator.py",
            "s1s2_evaluator_prg.py"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_cfg_delay.sh": [
            "run_on_geoinfo/run_cfg_delay.sh",
            "main_cfg_delay.py"
        ],
        "smp-seg-pytorch/jobspec-cfg/run_on_geoinfo/run_unet.sh": [
            "run_on_geoinfo/run_unet.sh",
            "test.py",
            "main_s1s2_unet.py",
            "main_s1s2_unet_mtbs.py",
            "main_s1s2_unet_aug.py",
            "main_s1s2_unet_wsl.py"
        ],
        "smp-seg-pytorch/run_on_snic/run_s1s2_unet.sh": [
            "main_s1s2_unet.py"
        ],
        "smp-seg-pytorch/run_on_snic/run_s1s2_fuse_unet.sh": [
            "test.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_distill_unet.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_distill_unet.sh",
            "main_s1s2_distill_unet.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_siamunet.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_siamunet.sh"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_geoinfo_gpu.sh": [
            "test_geoinfo_gpu.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_mtbs.sh": [
            "run_on_geoinfo/run_unet.sh",
            "run_on_geoinfo/run_mtbs.sh",
            "main_s1s2_unet_mtbs.py",
            "main_s1s2_unet_aug.py",
            "main_s1s2_unet_wsl.py",
            "main_s1s2_unet.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_eval.sh": [
            "main_s1s2_unet.py",
            "run_on_geoinfo/run_eval.sh",
            "s1s2_evaluator.py",
            "s1s2_evaluator_prg.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_cfg_delay.sh": [
            "run_on_geoinfo/run_cfg_delay.sh",
            "main_cfg_delay.py"
        ],
        "smp-seg-pytorch/run_on_geoinfo/run_unet.sh": [
            "run_on_geoinfo/run_unet.sh",
            "test.py",
            "main_s1s2_unet.py",
            "main_s1s2_unet_mtbs.py",
            "main_s1s2_unet_aug.py",
            "main_s1s2_unet_wsl.py"
        ]
    },
    "ghousman/chondro-time-evo": {
        "chondro-time-evo/code/cellranger_06/cellranger.batch2.c.sh": [
            "./../chondro-time-evo/code/cellranger_06/cellranger.batch2.c.csv"
        ],
        "chondro-time-evo/code/cellranger_06/cellranger.batch1.hc.sh": [
            "./../chondro-time-evo/code/cellranger_06/cellranger.batch1.hc.csv"
        ],
        "chondro-time-evo/code/cellranger_06/cellranger.batch1.h.sh": [
            "./../chondro-time-evo/code/cellranger_06/cellranger.batch1.h.csv"
        ],
        "chondro-time-evo/code/cellranger/cellranger.batch1.hc.sh": [
            "./../chondro-time-evo/code/cellranger/cellranger.batch1.hc.csv"
        ],
        "chondro-time-evo/code/cellranger/cellranger.batch2.hc.sh": [
            "./../chondro-time-evo/code/cellranger/cellranger.batch2.hc.csv"
        ]
    },
    "YihangZhu/train_ml_on_HPC": {
        "train_ml_on_HPC/launch.qsub": [
            "requirements.txt",
            "main.py",
            "config/cifar/Res32_cifar10_1.yaml"
        ]
    },
    "floft/codats": {
        "codats/kamiak_train_ssda_upper.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_timing_ssda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_eval_ssda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main_eval.py"
        ],
        "codats/kamiak_train_msda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_eval_ssda_upper.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main_eval.py"
        ],
        "codats/jobspec-cfg/main_eval.py": [
            "main.py"
        ],
        "vrada/kamiak_process.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train_cpu.srun": [
            "kamiak_config.sh"
        ],
        "calda/kamiak_train.srun.template": [
            "kamiak_config.sh",
            "main.py"
        ],
        "calda/kamiak_eval.srun.template": [
            "kamiak_config.sh",
            "main_eval.py"
        ],
        "calda/jobspec-cfg/main_eval.py": [
            "main.py"
        ]
    },
    "floft/vrada": {
        "codats/kamiak_train_ssda_upper.srun": [
            "kamiak_config.sh"
        ],
        "codats/kamiak_timing_ssda.srun": [
            "kamiak_config.sh"
        ],
        "codats/kamiak_eval_ssda.srun": [
            "kamiak_config.sh"
        ],
        "codats/kamiak_train_msda.srun": [
            "kamiak_config.sh"
        ],
        "codats/kamiak_eval_ssda_upper.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_process.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train_cpu.srun": [
            "kamiak_config.sh"
        ],
        "calda/kamiak_train.srun.template": [
            "kamiak_config.sh"
        ],
        "calda/kamiak_eval.srun.template": [
            "kamiak_config.sh"
        ]
    },
    "floft/calda": {
        "codats/kamiak_train_ssda_upper.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_timing_ssda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_eval_ssda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main_eval.py"
        ],
        "codats/kamiak_train_msda.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main.py"
        ],
        "codats/kamiak_eval_ssda_upper.srun": [
            "kamiak_config.sh",
            "kamiak_tensorflow_gpu.sh",
            "main_eval.py"
        ],
        "codats/jobspec-cfg/main_eval.py": [
            "main.py"
        ],
        "vrada/kamiak_process.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train.srun": [
            "kamiak_config.sh"
        ],
        "vrada/kamiak_train_cpu.srun": [
            "kamiak_config.sh"
        ],
        "calda/kamiak_train.srun.template": [
            "kamiak_config.sh",
            "main.py"
        ],
        "calda/kamiak_eval.srun.template": [
            "kamiak_config.sh",
            "main_eval.py"
        ],
        "calda/jobspec-cfg/main_eval.py": [
            "main.py"
        ]
    },
    "shuzhangcourage/HiC-data-analysis": {
        "HiC-data-analysis/01_dump.sh": [
            "./01_dump.py"
        ],
        "HiC-data-analysis/02_EV1.sh": [
            "./02_EV1.py"
        ]
    },
    "quandao10/lfm": {
        "lfm/run_pbs.sh": [
            "train_redressing_flow.py",
            "train_flow.py"
        ]
    },
    "vildenst/In_Silico_Heart_Models": {
        "In_Silico_Heart_Models/mat2fem.sh": [
            "mat2fem.py"
        ],
        "In_Silico_Heart_Models/jobspec-cfg/mat2fem.py": [
            "stim_coord.dat"
        ],
        "3D-heart-models/mat2fem.sh": [
            "mat2fem.py"
        ]
    },
    "vildenst/3D-heart-models": {
        "In_Silico_Heart_Models/mat2fem.sh": [
            "mat2fem.py"
        ],
        "3D-heart-models/mat2fem.sh": [
            "mat2fem.py"
        ]
    },
    "praneethy91/5_Law-Sentiment": {
        "5_Law-Sentiment/run_task_HPC_background.sh": [
            "get_ckt_yr_from_case.py"
        ],
        "5_Law-Sentiment/run_vader_batch.sh": [
            "run_task_HPC_background.sh",
            "paragraph_sentiment_vader.py"
        ],
        "5_Law-Sentiment/jobspec-cfg/run_task_HPC_background.sh": [
            "get_ckt_yr_from_case.py"
        ]
    },
    "weizhang11/MPI-KiD": {
        "MPI-KiD/run-nvidia.slm": [
            "namelists/CU_2D.nml"
        ],
        "MPI-KiD/run-cray.slm": [
            "namelists/CU_2D.nml"
        ]
    },
    "UO-BGMP/quality-and-index-hopping-Apb58": {
        "quality-and-index-hopping-Apb58/Qual_Calc_run.srun": [
            "./Qual_Mean_Calc.py"
        ],
        "quality-and-index-hopping-Apb58/Qual_Index_run.srun": [
            "./Qual_Index_Swp.py"
        ]
    },
    "TemplierPaul/Compute": {
        "Compute/script.slurm": [
            "script.py"
        ]
    },
    "IamRabin/Meta-Learning-Seg": {
        "Meta-Learning-Seg/meta.sh": [
            "main.py"
        ]
    },
    "MoiCatPigeon/WT-MetaD-HREX_HJ": {
        "WT-MetaD-HREX_HJ/run-md_gmx.sh": [
            "plumed.dat",
            "preplumed.dat"
        ]
    },
    "atonderski/lidarclip": {
        "lidarclip/berzelius.sh": [
            "train.py"
        ]
    },
    "Tangsun/SuperCloud_test": {
        "SuperCloud_test/regression_batch.sh": [
            "regression_pytorch.py"
        ]
    },
    "akkornel/mpi4py": {
        "mpi4py/mpi4.py.sbatch": [
            "mpi4.py"
        ],
        "mpi4py/jobspec-cfg/mpi4.py": [
            "README.md"
        ]
    },
    "UKPLab/arxiv2018-bayesian-ensembles": {
        "arxiv2018-bayesian-ensembles/batch_scripts/PBSPro/run_NER_AAAI20.sh": [
            "src/experiments/AAAI2020/run_ner_experiments_gpu.py"
        ],
        "arxiv2018-bayesian-ensembles/batch_scripts/PBSPro/run_ARG_EMNLP19.sh": [
            "src/experiments/EMNLP2019/run_arg_experiments.py"
        ],
        "arxiv2018-bayesian-ensembles/batch_scripts/PBSPro/run_PICO_AAAI20.sh": [
            "src/experiments/AAAI2020/run_pico_experiments_gpu.py"
        ],
        "arxiv2018-bayesian-ensembles/batch_scripts/PBSPro/run_FAM.sh": [
            "src/experiments/AAAI2020/run_famulus_semisupervised.py",
            "src/experiments/AAAI2020/run_famulus_unsupervised.py"
        ]
    },
    "UKPLab/tacl2020-interactive-ranking": {
        "tacl2020-interactive-ranking/jobspec-cfg/stage1_coala.py": [
            "stage1_coala.py"
        ],
        "tacl2020-interactive-ranking/jobspec-cfg/stage1_active_pref_learning.py": [
            "stage1_active_pref_learning.py"
        ],
        "tacl2020-interactive-ranking/scripts/PBSPro/run_supert.sh": [
            "obtain_supert_scores.py"
        ],
        "tacl2020-interactive-ranking/scripts/PBSPro/run_inter_sum_supert_2001_75.sh": [
            "stage1_active_pref_learning.py"
        ],
        "tacl2020-interactive-ranking/scripts/PBSPro/run_inter_sum_reaper_2001_lownoise_10.sh": [
            "stage1_active_pref_learning.py"
        ],
        "tacl2020-interactive-ranking/scripts/PBSPro/run_inter_sum_supert_2004.sh": [
            "stage1_active_pref_learning.py"
        ],
        "tacl2020-interactive-ranking/scripts/PBSPro/run_bert_cqa.sh": [
            "BERT_cQA.py"
        ],
        "tacl2020-interactive-ranking/scripts/SLURM/run_inter_cqa_bert.sh": [
            "stage1_coala.py"
        ]
    },
    "UKPLab/tacl2018-preference-convincing": {
        "tacl2018-preference-convincing/sushi_100.sh": [
            "python/analysis/sushi_10_tests.py"
        ],
        "tacl2018-preference-convincing/synth.sh": [
            "python/analysis/simulations/synth_tests.py",
            "python/analysis/simulations/synth_latent_factor_tests.py"
        ],
        "tacl2018-preference-convincing/batch_scripts/TACL2018/run_al.sh": [
            "python/analysis/habernal_comparison/active_learning_tests.py",
            "python/analysis/habernal_comparison/compute_AL_metrics.py"
        ],
        "tacl2018-preference-convincing/batch_scripts/TACL2018/run_noisy.sh": [
            "python/analysis/habernal_comparison/noisy_data_tests.py",
            "python/analysis/habernal_comparison/noisy_data_metrics.py"
        ]
    },
    "UKPLab/2022-RAFT": {
        "2022-RAFT/scripts/pretrain/evaluate-academicbert.sh": [
            "run_mlm.py"
        ],
        "2022-RAFT/scripts/pretrain/academicbert.sh": [
            "run_mlm.py"
        ]
    },
    "vinay-004/MPI_Raytracer": {
        "MPI_Raytracer/runner_mpi.sh": [
            "configs/twhitted.xml",
            "configs/box.xml"
        ]
    },
    "pscedu/mlstamps_oltr": {
        "mlstamps_oltr/sbatch_stamps.job": [
            "main_shuffler.py",
            "config/stamps/stage_1.py",
            "config/stamps/stage_2_meta_embedding.py",
            "inference.py"
        ]
    },
    "mikasenghaas/sillystill": {
        "sillystill/run.sh": [
            "requirements.txt",
            "src/train.py"
        ],
        "bsc/train.job": [
            "src/train.py"
        ]
    },
    "mikasenghaas/bsc": {
        "sillystill/run.sh": [
            "src/train.py"
        ],
        "bsc/eval.job": [
            "src/eval.py"
        ],
        "bsc/train.job": [
            "src/train.py"
        ],
        "bsc/jobspec-cfg/src/eval.py": [
            "src/eval.py",
            "src/infer.py"
        ]
    },
    "ccdmb/nanopore_assembly": {
        "nanopore_assembly/batch_scripts/run_zeus.sbatch": [
            "./main.nf"
        ],
        "qcflow-rnaseq/jobspec-cfg/main.nf": [
            "./main.nf"
        ]
    },
    "ccdmb/pclust": {
        "pclust/batch_scripts/run_pclust.sbatch": [
            "./pclust.nf"
        ]
    },
    "ccdmb/qcflow-rnaseq": {
        "nanopore_assembly/batch_scripts/run_zeus.sbatch": [
            "./main.nf"
        ],
        "qcflow-rnaseq/jobspec-cfg/main.nf": [
            "./main.nf"
        ],
        "qcflow-rnaseq/batch_scripts/run_bbt.sbatch": [
            "./create_bloom.nf"
        ]
    },
    "kimocoder/refluxion": {
        "refluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "refluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "Ruchit-rt/fgpa_hardware_accelerateNN": {
        "fgpa_hardware_accelerateNN/jobspec-cfg/scripts/emulate_build.sh": [
            "scripts/emulate_build.sh"
        ],
        "fgpa_hardware_accelerateNN/scripts/emulate_build.sh": [
            "scripts/emulate_build.sh"
        ]
    },
    "uclaml/VACDB": {
        "VACDB/run.sh": [
            "main.py"
        ]
    },
    "freeenergylab/we_scripts": {
        "we_scripts/runwe_pbs.sh": [
            "env.sh"
        ]
    },
    "saarthak2002/ML4VA": {
        "ML4VA/binary_ann_with_smote.slurm": [
            "binary_ann_with_smote.py"
        ]
    },
    "neuronsimulator/reduced_dentate": {
        "reduced_dentate/run_gpu.sh": [
            "run.hoc"
        ],
        "reduced_dentate/run_cpu.sh": [
            "run.hoc"
        ]
    },
    "giveMeLife/QAP-MetaHeuristics": {
        "QAP-MetaHeuristics/run.slurm": [
            "main.R"
        ]
    },
    "alexcoca/dst": {
        "dst/train.sh": [
            "configs/train_arguments.yaml"
        ],
        "dst/decode.sh": [
            "configs/decode_arguments.yaml"
        ]
    },
    "huynhngoc/cubiai": {
        "cubiai/slurm_feedback.sh": [
            "feedback_model.py"
        ]
    },
    "huynhngoc/PMB-2021": {
        "PMB-2021/slurm.sh": [
            "experiment.py"
        ],
        "depredict/slurm.sh": [
            "experiment.py"
        ],
        "head-neck-analysis/slurm.sh": [
            "experiment.py"
        ],
        "cnn-template/slurm.sh": [
            "experiment.py"
        ]
    },
    "huynhngoc/mice": {
        "mice/slurm_concat.sh": [
            "ensemble_results.py"
        ],
        "hnc-surv/interpretability.sh": [
            "interpretability.py"
        ],
        "head-neck-analysis/interpretability.sh": [
            "interpretability.py"
        ]
    },
    "huynhngoc/depredict": {
        "PMB-2021/slurm.sh": [
            "experiment.py"
        ],
        "depredict/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "depredict/slurm.sh": [
            "experiment.py"
        ],
        "hnc-surv/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "head-neck-analysis/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "head-neck-analysis/slurm.sh": [
            "experiment.py"
        ],
        "cnn-template/slurm.sh": [
            "experiment.py"
        ]
    },
    "huynhngoc/canine": {
        "PMB-2021/slurm.sh": [
            "experiment.py"
        ],
        "depredict/slurm.sh": [
            "experiment.py"
        ],
        "canine/slurm_transfer.sh": [
            "transfer_learning.py"
        ],
        "canine/slurm.sh": [
            "experiment_orion.py"
        ],
        "canine/slurm_external.sh": [
            "run_external.py"
        ],
        "head-neck-analysis/slurm_transfer.sh": [
            "transfer_learning.py"
        ],
        "head-neck-analysis/slurm.sh": [
            "experiment.py"
        ],
        "cnn-template/slurm.sh": [
            "experiment.py"
        ]
    },
    "huynhngoc/hnc-surv": {
        "depredict/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "hnc-surv/interpret_analyze.sh": [
            "interpret_analyze.py"
        ],
        "hnc-surv/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "hnc-surv/interpret_analyze_PET.sh": [
            "interpret_analyze_PET.py"
        ],
        "hnc-surv/slurm_surv_external.sh": [
            "survival_external.py"
        ],
        "hnc-surv/interpretability.sh": [
            "interpretability.py"
        ],
        "hnc-surv/slurm_survival_dummy.sh": [
            "experiment_survival_dummy.py"
        ],
        "hnc-surv/slurm_outcome.sh": [
            "experiment_outcome.py"
        ],
        "head-neck-analysis/slurm_ensemble.sh": [
            "ensemble_outcome.py"
        ],
        "head-neck-analysis/interpretability.sh": [
            "interpretability.py"
        ],
        "head-neck-analysis/slurm_outcome.sh": [
            "experiment_outcome.py"
        ]
    },
    "huynhngoc/head-neck-analysis": {
        "PMB-2021/slurm.sh": [
            "experiment.py"
        ],
        "depredict/slurm_ensemble.sh": [
            "ensemble_outcome.py",
            "run_test.py"
        ],
        "depredict/slurm.sh": [
            "experiment.py",
            "run_test.py"
        ],
        "canine/slurm_transfer.sh": [
            "transfer_learning.py"
        ],
        "canine/slurm.sh": [
            "run_test.py"
        ],
        "canine/slurm_external.sh": [
            "run_external.py"
        ],
        "hnc-surv/interpret_analyze.sh": [
            "interpret_analyze.py",
            "run_test.py"
        ],
        "hnc-surv/slurm_ensemble.sh": [
            "ensemble_outcome.py",
            "run_test.py"
        ],
        "hnc-surv/interpret_analyze_PET.sh": [
            "run_test.py"
        ],
        "hnc-surv/slurm_surv_external.sh": [
            "run_test.py"
        ],
        "hnc-surv/interpretability.sh": [
            "interpretability.py",
            "run_test.py"
        ],
        "hnc-surv/slurm_survival_dummy.sh": [
            "run_test.py"
        ],
        "hnc-surv/slurm_outcome.sh": [
            "experiment_outcome.py",
            "run_test.py"
        ],
        "head-neck-analysis/slurm_transfer.sh": [
            "transfer_learning.py",
            "run_test.py"
        ],
        "head-neck-analysis/slurm_ensemble.sh": [
            "ensemble_outcome.py",
            "run_test.py"
        ],
        "head-neck-analysis/slurm_cont.sh": [
            "continue_experiment.py"
        ],
        "head-neck-analysis/interpretability.sh": [
            "interpretability.py",
            "run_test.py"
        ],
        "head-neck-analysis/slurm.sh": [
            "experiment.py",
            "run_test.py"
        ],
        "head-neck-analysis/slurm_outcome.sh": [
            "experiment_outcome.py",
            "run_test.py"
        ],
        "head-neck-analysis/correct.sh": [
            "correct_dice.py"
        ],
        "head-neck-analysis/slurm_seg_uncertainty.sh": [
            "run_uncertainty.py",
            "run_test.py"
        ],
        "cnn-template/slurm_cont.sh": [
            "continue_experiment.py"
        ],
        "cnn-template/slurm.sh": [
            "experiment.py"
        ]
    },
    "huynhngoc/orion-slurm-gpu": {
        "orion-slurm-gpu/run_tf_gpu.sh": [
            "scripts/run_tensorflow.py"
        ],
        "orion-slurm-gpu/run_tf_gpu_xs.sh": [
            "scripts/run_tensorflow_xs.py"
        ],
        "orion-slurm-gpu/setups/setup_tensorflow.sh": [
            "singularity/Singularity.PyTensorflow"
        ]
    },
    "huynhngoc/cnn-template": {
        "PMB-2021/slurm.sh": [
            "experiment.py"
        ],
        "depredict/slurm.sh": [
            "experiment.py"
        ],
        "head-neck-analysis/slurm_cont.sh": [
            "continue_experiment.py"
        ],
        "head-neck-analysis/slurm.sh": [
            "experiment.py"
        ],
        "head-neck-analysis/correct.sh": [
            "test_experiment.py"
        ],
        "cnn-template/slurm_cont.sh": [
            "continue_experiment.py"
        ],
        "cnn-template/slurm.sh": [
            "experiment.py"
        ],
        "cnn-template/slurm_external.sh": [
            "test_experiment_external.py"
        ]
    },
    "jharno/SimulLens": {
        "SimulLens/Submit.sh": [
            "CosmoDist.py"
        ]
    },
    "abbotts/MFC": {
        "MFC/jobspec-cfg/mfc.sh": [
            "CMakeLists.txt",
            "mfc.sh",
            "./mfc.sh"
        ],
        "MFC/toolchain/templates/pbs.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC/toolchain/templates/slurm.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC/toolchain/templates/lsf.sh": [
            "./mfc.sh",
            "mfc.sh"
        ]
    },
    "bwasti/TensorComprehensions": {
        "TensorComprehensions/jobspec-cfg/examples/scripts/autotuner_parallel.sh": [
            "./examples/scripts/autotuner_parallel.sh"
        ],
        "TensorComprehensions/examples/scripts/autotuner_parallel.sh": [
            "./examples/scripts/autotuner_parallel.sh"
        ]
    },
    "CrayLabs/smartsim-openmm": {
        "smartsim-openmm/thetagpu/thetagpu_submit.sh": [
            "smartsim_md_thetagpu.py"
        ]
    },
    "CrayLabs/smartsim-openFOAM": {
        "smartsim-openFOAM/run-theta.sh": [
            "driver.py"
        ],
        "smartsim-openFOAM/run.sh": [
            "driver.py"
        ]
    },
    "NathanHuetsch/GenerativeJetting": {
        "GenerativeJetting/jobspec-cfg/run_Zn.py": [
            "run_Zn.py"
        ],
        "GenerativeJetting/runfiles/experiment.sh": [
            "run_Zn.py"
        ],
        "GenerativeJetting/runfiles/warm_experiment.sh": [
            "run_Zn.py"
        ]
    },
    "stajichlab/Microbiome_resources": {
        "Microbiome_resources/scripts/qiime_ITS.sh": [
            "scripts/00_make_combined_ITS.sh"
        ]
    },
    "stajichlab/ExRhodotorula_PopGenomics_Rdairenensis": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "stajichlab/Candida_lusitaniae_Nanopore": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "stajichlab/GWSS_Resistance": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "stajichlab/PopGenomics_Elasticomyces_elasticus": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "stajichlab/CIFAR_DeepUnderFungi_MG": {
        "CIFAR_DeepUnderFungi_MG/pipeline/metashot/03_metashot-prok-qual.sh": [
            "metashot-qual.cfg"
        ],
        "Asocialis_CCGP_metagenome/metashot-MAG.sh": [
            "metashot-MAG.cfg"
        ]
    },
    "stajichlab/Cramer_Afum_SM_resistance": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "stajichlab/Asocialis_CCGP_metagenome": {
        "CIFAR_DeepUnderFungi_MG/pipeline/metashot/03_metashot-prok-qual.sh": [
            "process.config"
        ],
        "Asocialis_CCGP_metagenome/metashot-MAG.sh": [
            "metashot-MAG.cfg"
        ]
    },
    "stajichlab/PopGenomics_Acarospora_socialis_HerbariumSamples": {
        "ExRhodotorula_PopGenomics_Rdairenensis/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Candida_lusitaniae_Nanopore/pipeline/01_aln.sh": [
            "config.txt"
        ],
        "PopGenomics_Elasticomyces_elasticus/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "Cramer_Afum_SM_resistance/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "popCNV/pipeline/07_bamstats.sh": [
            "config.txt"
        ],
        "Afum_popgenome/variantcall/pipeline/06_BQSR.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/AZTEC/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "PopGenomics_Afumigatus_multiproject/align/SRA/pipeline/02_call_gvcf.sh": [
            "config.txt"
        ],
        "AsmAnnot_Aspergillus_melleus_IMV_01140/annotate/pipeline/04b_iprscan.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/03_jointGVCF_call_slice.sh": [
            "config.txt"
        ],
        "PopGenomics_Acarospora_socialis_HerbariumSamples/pipeline/01_align.sh": [
            "config.txt"
        ]
    },
    "ajb5d/ds6050_ecg": {
        "ds6050_ecg/train_transformer3.slurm": [
            "transformer_age3.py"
        ],
        "ds6050_ecg/train_transformer2.slurm": [
            "transformer_age2.py"
        ]
    },
    "eQTLGen/MetaAnalysis": {
        "MetaAnalysis/submit_meta_analysis_template.sh": [
            "HaseMetaAnalysis.nf"
        ],
        "MetaAnalysis/submit_combine_template.sh": [
            "OutputPerPhenotype.nf"
        ],
        "MetaAnalysis/jobspec-cfg/HaseMetaAnalysis.nf": [
            "HaseMetaAnalysis.nf"
        ]
    },
    "eQTLGen/PerCohortDataPreparations": {
        "PerCohortDataPreparations/submit_per_cohort_preparations_template.sh": [
            "PerCohortDataPreparations.nf"
        ],
        "PerCohortDataPreparations/jobspec-cfg/PerCohortDataPreparations.nf": [
            "PerCohortDataPreparations.nf"
        ]
    },
    "eQTLGen/DataQC": {
        "DataQC/submit_DataQc_pipeline_template.sh": [
            "DataQC.nf"
        ],
        "DataQC/jobspec-cfg/DataQC.nf": [
            "DataQC.nf"
        ]
    },
    "VarunBurde/TexPose_karolina_backup": {
        "TexPose_karolina_backup/jobs.batch": [
            "compute_box.py",
            "compute_surfelinfo.py",
            "train.py",
            "evaluate.py"
        ]
    },
    "boulderrinnlab/CLASS_2020": {
        "CLASS_2020/run.sh": [
            "hg38-blacklist.v2.bed",
            "nextflow.config"
        ],
        "CLASS_2021/rnaseq/run.sh": [
            "nextflow.config"
        ],
        "CLASS_2022/class_exeRcises/analysis/18_running_RNAseq_NF_CORE/preclass_NF_core_RUN/run.sh": [
            "nextflow.config"
        ],
        "CLASS_2022/rnaseq/run.sh": [
            "nextflow.config"
        ],
        "CLASS_2023/CLASSES/03_Nextflow/00_my_chipseq/run.sh": [
            "design.csv",
            "nextflow.config"
        ],
        "CLASS_2023/CLASSES/03_Nextflow/00_Pol2_NF_CORE_RUN/run.sh": [
            "design.csv",
            "nextflow.config"
        ],
        "CLASS_2023/CLASSES/03_Nextflow/00_Pol2_NF_CORE_RUN/POL2_run_long/run.sh": [
            "design.csv",
            "nextflow.config"
        ],
        "CLASS_2023/CLASSES/05_R_analyses/05_RNAseq/00_RNAseq_download_NF_core_pipeline/00_NF_CORE_RNAseq_Pipeline_run/run.sh": [
            "nextflow.config"
        ]
    },
    "Karl-Liu-ch/DiffusionAirfoil": {
        "DiffusionAirfoil/job_2dtip.sh": [
            "wingtip.py"
        ],
        "DiffusionAirfoil/job_1d.sh": [
            "simulation.py",
            "test.py"
        ],
        "DiffusionAirfoil/PPO.sh": [
            "RL_algorithm.py"
        ],
        "DiffusionAirfoil/job_1dtip.sh": [
            "wingtip.py"
        ],
        "DiffusionAirfoil/job_2d.sh": [
            "simulation.py",
            "test.py"
        ],
        "DiffusionAirfoil/job_bezier.sh": [
            "simulation.py",
            "test.py"
        ],
        "DiffusionAirfoil/job_script/job_2dtip.sh": [
            "wingtip.py"
        ],
        "DiffusionAirfoil/job_script/job_1d.sh": [
            "simulation.py",
            "test.py"
        ],
        "DiffusionAirfoil/job_script/td3.sh": [
            "RL_algorithm.py"
        ],
        "DiffusionAirfoil/job_script/ppo.sh": [
            "RL_algorithm.py"
        ],
        "DiffusionAirfoil/job_script/transform_2d.sh": [
            "simulation.py"
        ],
        "DiffusionAirfoil/job_script/sac.sh": [
            "RL_algorithm.py"
        ],
        "DiffusionAirfoil/job_script/diffusion_bo.sh": [
            "bayesoptim/bayesian_opt.py"
        ],
        "DiffusionAirfoil/job_script/transform_1d.sh": [
            "simulation.py"
        ],
        "DiffusionAirfoil/job_script/job_1dtip.sh": [
            "wingtip.py"
        ],
        "DiffusionAirfoil/job_script/job_2d.sh": [
            "simulation.py",
            "test.py"
        ],
        "DiffusionAirfoil/job_script/job_bezier.sh": [
            "simulation.py",
            "test.py"
        ]
    },
    "soudry/ORNNs": {
        "ORNNs/Old/submit.sh": [
            "Main.py"
        ]
    },
    "OlineStaerke/Ml_Ops_Project": {
        "Ml_Ops_Project/submitjob_optuna.sh": [
            "src/models/train_model_optuna.py"
        ]
    },
    "willsonho2000/gizmo-public": {
        "gizmo-public/submit_TNG.sh": [
            "GIZMO_ics",
            "Config.sh",
            "./GIZMO_ics",
            "GIZMO_ics_2",
            "./GIZMO_ics_2"
        ],
        "gizmo-public/jobspec-cfg/Config.sh": [
            "TREECOOL"
        ]
    },
    "s1ghhh/MedVicuna": {
        "MedVicuna/run_medvicuna_13b.sh": [
            "fastchat/train/train_mem.py"
        ]
    },
    "hszhao/SAN": {
        "SAN/jobspec-cfg/tool/test.py": [
            "config/imagenet/imagenet_san10_pairwise.yaml"
        ],
        "SAN/jobspec-cfg/tool/train.sh": [
            "tool/train.sh",
            "tool/train.py",
            "tool/test.sh",
            "tool/test.py"
        ],
        "SAN/jobspec-cfg/tool/train.py": [
            "config/imagenet/imagenet_san10_pairwise.yaml"
        ],
        "SAN/jobspec-cfg/tool/test.sh": [
            "tool/test.sh",
            "tool/test.py"
        ],
        "SAN/tool/train.sh": [
            "tool/train.sh",
            "tool/train.py",
            "tool/test.sh",
            "tool/test.py"
        ]
    },
    "daveredrum/Scan2Cap": {
        "Scan2Cap/slurm/project.job": [
            "scripts/project_multiview_features.py"
        ],
        "Scan2Cap/slurm/extract.job": [
            "scripts/compute_multiview_features.py"
        ],
        "Pointnet2.ScanNet/slurm/train.job": [
            "scripts/train.py"
        ]
    },
    "daveredrum/Pointnet2.ScanNet": {
        "Scan2Cap/slurm/project.job": [
            "scripts/project_multiview_features.py"
        ],
        "Scan2Cap/slurm/extract.job": [
            "scripts/compute_multiview_features.py"
        ],
        "Pointnet2.ScanNet/slurm/train.job": [
            "scripts/train.py"
        ]
    },
    "Amad881/ICICLE_Foodshed_Parser": {
        "ICICLE_Foodshed_Parser/jobSub.sh": [
            "runOvernight.sh"
        ]
    },
    "pittacus/progressive_growing_of_gans": {
        "progressive_growing_of_gans/run.sh": [
            "train.py"
        ],
        "progressive_growing_of_gans/jobspec-cfg/train.py": [
            "config.py"
        ]
    },
    "explodinggradients/Funtuner": {
        "Funtuner/infer.sh": [
            "funtuner/sampling.py",
            "evals/sampler.py"
        ],
        "Funtuner/run_gpu.sh": [
            "funtuner/trainer.py"
        ]
    },
    "akcorut/SnakeRNASeq": {
        "SnakeRNASeq/SnakeRNAseq.sh": [
            "Snakefile"
        ]
    },
    "mmtrebuchet/bpreveal": {
        "bpreveal/buildCondaCerebro.slurm": [
            "buildCondaLocal.zsh"
        ]
    },
    "CellFateNucOrg/SMC_RNAseq": {
        "SMC_RNAseq/mapRNAreads.sh": [
            "makeCoverageBigwig.R"
        ]
    },
    "itiv-kit/dnn-model-exploration": {
        "dnn-model-exploration/job-submission_example.sh": [
            "workloads/resnet50.yaml"
        ]
    },
    "trondkr/downscaleA20": {
        "downscaleA20/runM2R.sh": [
            "interpolateNORESM_using_ESMF.py"
        ],
        "downscaleA20/jobspec-cfg/interpolateNORESM_using_ESMF.py": [
            "createClimatologyERA.sh",
            "interpolateNORESM_using_ESMF.py"
        ]
    },
    "trondkr/NOLA": {
        "NOLA/submit_od.sh": [
            "run_od_norkyst.py"
        ]
    },
    "Sgelet/DynamicConvexHull": {
        "DynamicConvexHull/submit.sh": [
            "./smalltest.sh"
        ]
    },
    "anonymous-code-0/lie-transformer": {
        "lie-transformer/scripts/slurm_molecule_SE3lieconv.sh": [
            "scripts/train_molecule.py"
        ]
    },
    "JoonsungP/ML": {
        "ML/.ipynb_checkpoints/run-checkpoint.script": [
            "train.py"
        ]
    },
    "geeanlooca/sdm-propane": {
        "sdm-propane/singularity/singularity_compile.job": [
            "singularity/singularity_image.def"
        ]
    },
    "NCBR-FNLCR/ATAC-seq": {
        "ATAC-seq/submit.sbatch": [
            "cluster.json"
        ]
    },
    "MickiFoerster/spl-transformer": {
        "spl-transformer/test-suite/job-template-builder.sh": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read/opt-vs-noopt.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read/noopt.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read/opt.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read_closer_data_dep/exclusive_read.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read_closer_data_dep/opt-vs-noopt.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read_closer_data_dep/job2.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read_closer_data_dep/job3.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/exclusive_read_closer_data_dep/job1.bsub": [
            "CMakeLists.txt"
        ],
        "spl-transformer/test-suite/plain-parallel/opt-vs-noopt.bsub": [
            "CMakeLists.txt"
        ]
    },
    "iesl/CE2ERE": {
        "CE2ERE/run.sh": [
            "src/main.py"
        ]
    },
    "aramanlab/Doran_etal_2022": {
        "Doran_etal_2022/scripts/slurm/runSPI.sbatch": [
            "scripts/slurm/runners/runSPI.jl"
        ]
    },
    "GerardMJuan/RNN-VAE": {
        "RNN-VAE/hpc/metaexp_mri_nopad.sh": [
            "scripts/metaexp_mri_nopad.py"
        ],
        "RNN-VAE/hpc/metaexp_adni_bl.sh": [
            "scripts_mc/metaexp_adni.py",
            "scripts_mc/metaexp_adni_bl.py"
        ],
        "RNN-VAE/hpc/metaexp_synth_pad.sh": [
            "scripts_mc/metaexp_synth_pad.py"
        ],
        "RNN-VAE/hpc/metaexp_mri_pad.sh": [
            "scripts/metaexp_mri_pad.py",
            "scripts/metaexp_cort.py",
            "scripts/metaexp_cog.py"
        ],
        "RNN-VAE/hpc/metaexp_adni_cv.sh": [
            "scripts_mc/metaexp_adni.py",
            "scripts_mc/metaexp_adni_cv.py",
            "scripts_mc_moreparams/train_adni_full.py"
        ]
    },
    "cgadiyam/Parallel-implementation-of-Ray-Tracing-algorithm-using-MPI": {
        "Parallel-implementation-of-Ray-Tracing-algorithm-using-MPI/runner_mpi.sh": [
            "raytrace_mpi",
            "configs/twhitted.xml"
        ],
        "Parallel-implementation-of-Ray-Tracing-algorithm-using-MPI/runner_seq.sh": [
            "./raytrace_seq",
            "configs/box.xml"
        ]
    },
    "jeremiahsmithdev/COMP4120": {
        "COMP4120/quickscript.sh": [
            "GA_Darwin.py"
        ],
        "COMP4120/testscript.sh": [
            "GA_Darwin.py"
        ],
        "COMP4120/gascript.sh": [
            "GARNN.py"
        ],
        "COMP4120/jobspec-cfg/GARNN.py": [
            "output"
        ],
        "COMP4120/jobspec-cfg/GA_Darwin.py": [
            "output"
        ]
    },
    "rtealwitter/QuantumQueryOptimizer": {
        "QuantumQueryOptimizer/run.slurm": [
            "planes.py"
        ]
    },
    "rtealwitter/OpenStreets": {
        "OpenStreets/benchmark.slurm": [
            "code/benchmark.py"
        ],
        "OpenStreets/run.slurm": [
            "code/qlearning.py"
        ]
    },
    "henryclara/DerwaelAccompanyingCode": {
        "Derwael/Forward/Submit.sh": [
            "Forward.sif",
            "Submit.sh"
        ],
        "Derwael/Forward/Submit0.sh": [
            "Forward.sif",
            "Submit.sh"
        ],
        "Derwael/Forward/Forward/Submit.sh": [
            "Forward.sif"
        ],
        "Derwael/Init/Submit.sh": [
            "Init.sif"
        ],
        "DerwaelAccompanyingCode/Submit.sh": [
            "Forward.sif",
            "Submit.sh"
        ],
        "DerwaelAccompanyingCode/Submit0.sh": [
            "Forward.sif",
            "Submit.sh"
        ],
        "DerwaelAccompanyingCode/jobspec-cfg/Submit.sh": [
            "Forward.sif",
            "Submit.sh"
        ]
    },
    "emadghalenoei/Alpha_Shape": {
        "Alpha_Shape/max.sh": [
            "MaxFinder.py"
        ],
        "Alpha_Shape/post.sh": [
            "Posterior_Process.py"
        ]
    },
    "icaros-usc/dqd-rl": {
        "dqd-rl/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dqd-rl/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ]
    },
    "icaros-usc/dsage": {
        "dqd-rl/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dqd-rl/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ]
    },
    "icaros-usc/scaling-cma-mae": {
        "dqd-rl/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dqd-rl/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dqd-rl/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "dsage/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "dsage/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_postprocess.sh": [
            "scripts/slurm_postprocess.sh",
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "scaling-cma-mae/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ],
        "scaling-cma-mae/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "scripts/rm_mujoco_lock.sh",
            "scripts/slurm_cancel.sh",
            "scripts/slurm_postprocess.sh"
        ]
    },
    "zhouh/chunk-nmt": {
        "chunk-nmt/beam_decode.sh": [
            "./translate_gpu.py"
        ]
    },
    "automl/NASLib": {
        "NASLib/scripts/zc/benchmarks/run.sh": [
            "naslib/runners/zc/benchmarks/runner.py"
        ],
        "NASLib/scripts/zc/correlation/run.sh": [
            "naslib/runners/zc/runner.py"
        ]
    },
    "automl/MODNAS": {
        "MODNAS/scripts/job_nb201_search-mgd.sh": [
            "search_spaces/nb201/search_nb201_mgd.py"
        ],
        "MODNAS/scripts/job_mobilenet.sh": [
            "search_spaces/MobileNetV3/search/mobilenet_search_base.py"
        ],
        "MODNAS/scripts/job_en_fr.sh": [
            "search_spaces/hat/train.py"
        ],
        "MODNAS/scripts/job_en_de.sh": [
            "search_spaces/hat/train.py"
        ]
    },
    "automl/RobustDARTS": {
        "RobustDARTS/scripts/RandomNAS.sh": [
            "src/search/randomNAS/random_weight_share.py"
        ]
    },
    "automl/nasbench-1shot1": {
        "nasbench-1shot1/optimizers/enas/cluster_scripts/search_space_3/baseline_script.sh": [
            "optimizers/enas/enas.py"
        ],
        "nasbench-1shot1/optimizers/enas/cluster_scripts/search_space_1/baseline_script.sh": [
            "optimizers/enas/enas.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_3/second_order_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_3/baseline_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_3/learning_rate_eval.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_3/weight_decay_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_3/baseline_script_trans.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_2/second_order_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_2/baseline_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_2/baseline_script_trans.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_1/second_order_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_1/cutout.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_1/baseline_script.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/darts/cluster_scripts/search_space_1/baseline_script_trans.sh": [
            "optimizers/darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_3/second_order_script.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_3/baseline_script.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_3/learning_rate_eval.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_2/learning_rate_eval.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_1/second_order_script.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_1/cutout.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/pc_darts/cluster_scripts/search_space_1/learning_rate_eval.sh": [
            "optimizers/pc_darts/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_3/learning_rate_eval.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_3/weight_decay_script.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_3/baseline_script_trans.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_2/gdas_evaluation_cutout.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_2/cutout.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_2/weight_decay_script.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_2/baseline_script_trans.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_1/gdas_evaluation.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_1/gdas_evaluation_cutout.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_1/baseline_script.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_1/learning_rate_eval.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/optimizers/gdas/cluster_scripts/search_space_1/weight_decay_script.sh": [
            "optimizers/gdas/train_search.py"
        ],
        "nasbench-1shot1/cluster_scripts/start-smac.sh": [
            "optimizers/smac/run_smac.py"
        ],
        "nasbench-1shot1/cluster_scripts/start-bohb.sh": [
            "optimizers/bohb/run_bohb.py"
        ],
        "nasbench-1shot1/cluster_scripts/start-tpe.sh": [
            "optimizers/tpe/run_tpe.py"
        ],
        "nasbench-1shot1/cluster_scripts/bohb_one_shot_scripts/bohb-darts.sh": [
            "optimizers/bohb_one_shot/master.py"
        ],
        "nasbench-1shot1/nasbench_analysis/evaluate_correlation.sh": [
            "nasbench_analysis/evaluate_one_shot_models.py"
        ],
        "nasbench-1shot1/nasbench_analysis/architecture_inductive_bias/baseline_script.sh": [
            "nasbench_analysis/architecture_inductive_bias/train.py"
        ],
        "nasbench-1shot1/nasbench_analysis/single_architecture_training/baseline_script_sgdr.sh": [
            "nasbench_analysis/single_architecture_training/train_sgdr.py"
        ]
    },
    "automl/SPaCE_BIG": {
        "SPaCE_BIG/run_space.sh": [
            "src/space_ray.py",
            "features/cpm_test.csv",
            "features/cpm_train.csv"
        ]
    },
    "XintianHan/jets": {
        "jets/train.s": [
            "train.py"
        ]
    },
    "XiaoyuLiu198/spatial_personality": {
        "spatial_personality/run.sb": [
            "requirements.txt",
            "single.py"
        ],
        "spatial_personality/run_0.slurm": [
            "requirements.txt",
            "single.py"
        ],
        "spatial_personality/jobspec-cfg/single.py": [
            "single.py"
        ]
    },
    "atalianb/SimpleMC_myversionfornested": {
        "SimpleMC_myversionfornested/simpleMC_cola.pbs": [
            "test.py"
        ]
    },
    "yetulaxman/htvs": {
        "htvs/job_nf.sh": [
            "test_real.nf"
        ]
    },
    "helsinki-sda-group/Sensor-Fusion": {
        "Sensor-Fusion/slurm_train_shoulderunit.sh": [
            "train_CrossVIO.py"
        ]
    },
    "ezh/fzf-ls": {
        "fzf-ls/fzf-ls.zsh": [
            "LICENSE"
        ]
    },
    "marialymperaiou/ganspace": {
        "ganspace/aris_logs/slurm.sh": [
            "visualize.py"
        ]
    },
    "DzvinkaYarish/ControlNet-different-backbones": {
        "ControlNet-different-backbones/train.sh": [
            "tool_add_control.py",
            "tutorial_train.py"
        ]
    },
    "DzvinkaYarish/qtl-moa-prediction": {
        "qtl-moa-prediction/run_nextflow.sh": [
            "main.nf",
            "enformer_main.nf"
        ]
    },
    "CEMeNT-PSAAP/DeNTminiapp": {
        "DeNTminiapp/run-cuda.lsf": [
            "1_10x1_10.mesh",
            "FGMRES.json"
        ]
    },
    "finngaida/mlproject_rug": {
        "mlproject_rug/frcnn_train_job.sh": [
            "requirements.txt"
        ],
        "mlproject_rug/frcnn/only_bp_res50_gpu_2_job.sh": [
            "requirements.txt",
            "train_data_bp.txt"
        ],
        "mlproject_rug/frcnn/only_bp_res50_job.sh": [
            "requirements.txt",
            "train_data_bp.txt"
        ]
    },
    "MatevzFa/hpvm-tuning-android": {
        "hpvm-tuning-android/tune-wrapper.sh": [
            "tune_x.py"
        ]
    },
    "sjsu-high-z-classify/GalNet": {
        "GalNet/galnet.sh": [
            "galnet/galnet.py"
        ]
    },
    "Tikquuss/lm": {
        "lm/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm/jobspec-cfg/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm_hf/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm_hf/jobspec-cfg/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ]
    },
    "Tikquuss/lm_hf": {
        "lm/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm/jobspec-cfg/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm_hf/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ],
        "lm_hf/jobspec-cfg/cluster.sh": [
            "requirements.txt",
            "cluster.sh"
        ]
    },
    "srayan00/608_Project": {
        "608_Project/608proj.sbat": [
            "test_vi.py"
        ]
    },
    "hpvok13/stats_lecture": {
        "stats_lecture/trainer.sh": [
            "src/price_predictor/train.py",
            "config.yaml"
        ]
    },
    "Liyang-Zhang/ctDNA_EQA": {
        "ctDNA_EQA/somatic_snv_Varscan2.slurm": [
            "somatic_snv_Varscan2.slurm"
        ],
        "ctDNA_EQA/jobspec-cfg/somatic_snv_Varscan2.slurm": [
            "somatic_snv_Varscan2.slurm"
        ]
    },
    "liruiw/Dec-SSL": {
        "Dec-SSL/scripts/imagenet_script/train_test_dec_ssl_imagenet100_simclr_mpi.sh": [
            "src/decentralized_ssl_main.py"
        ],
        "Dec-SSL/scripts/imagenet_script/train_test_dec_sl_imagenet100_simclr_mpi.sh": [
            "src/decentralized_sl_main.py"
        ]
    },
    "illinois-ceesd/drivers_y2-prediction": {
        "drivers_y2-prediction/experiments/2D/quarterX_template/restartLassenBatch.sh": [
            "./prediction.py"
        ],
        "drivers_y2-prediction/experiments/Y3/3D/quarterX/runLassenBatch.sh": [
            "./prediction.py"
        ]
    },
    "illinois-ceesd/mirgecom": {
        "mirgecom/scripts/tioga.flux.sh": [
            "examples/pulse.py"
        ]
    },
    "illinois-ceesd/drivers_flame1d": {
        "drivers_flame1d/baseline/runLassenBatch.sh": [
            "./flame1d.py"
        ]
    },
    "illinois-ceesd/timing": {
        "timing/timing-driver.sh": [
            "./install-mirgecom.sh"
        ]
    },
    "illinois-ceesd/drivers_y1-nozzle": {
        "drivers_y1-nozzle/timing_run_lazy/runLassenBatch.sh": [
            "./nozzle.py"
        ]
    },
    "illinois-ceesd/drivers_y2-isolator": {
        "drivers_y2-combustor/baseline/runLassenBatch.sh": [
            "./isolator.py"
        ],
        "drivers_y2-isolator/baseline/runLassenBatch.sh": [
            "./isolator.py"
        ]
    },
    "Presciman/SC24-COMPSO": {
        "SC24-COMPSO/examples/submit.lsf": [
            "./launch.sh",
            "torch_cifar10_resnet.py"
        ]
    },
    "Presciman/BERT_Finetuning": {
        "BERT_Finetuning/scripts/run_pretraining.cobalt": [
            "run_pretraining.py"
        ]
    },
    "kklot/dbmethod": {
        "dbmethod/sim_stats_1-20.sh": [
            "sim_stats.R"
        ]
    },
    "rvlente/ismi-camelyon": {
        "ismi-camelyon/cluster/4-resnet-da-tta.sh": [
            "requirements.txt",
            "train.py",
            "test.py"
        ],
        "ismi-camelyon/cluster/2-geertnet-da3.sh": [
            "requirements.txt",
            "train.py",
            "test.py"
        ],
        "ismi-camelyon/cluster/2-geertnet-da1.sh": [
            "requirements.txt",
            "train.py",
            "test.py"
        ]
    },
    "yatingliu2548/topic-modeling": {
        "topic-modeling/r/experiments/synthetic/array_synthetic_debug.sh": [
            "r/experiments/synthetic/synthetic_experiment.R"
        ],
        "topic-modeling/r/experiments/synthetic/testing_n.sh": [
            "r/experiments/synthetic/testing_n.R"
        ]
    },
    "ai2cm/pace": {
        "pace/fv3core/.jenkins/jenkins.sh": [
            ".jenkins/jenkins.sh"
        ],
        "pace/.jenkins/jenkins.sh": [
            ".jenkins/jenkins.sh"
        ],
        "pace/jobspec-cfg/.jenkins/jenkins.sh": [
            ".jenkins/jenkins.sh"
        ]
    },
    "RishabhPandey0403/cs490dsc": {
        "cs490dsc/setup_env.sh": [
            "job.sh"
        ],
        "cs490dsc/jobspec-cfg/job.sh": [
            "job.sh"
        ]
    },
    "gchrupala/peppa": {
        "peppa/jobarray.sh": [
            "run.py"
        ]
    },
    "CIRLMemphis/PySIM_Orig": {
        "PySIM_Orig/testTF2.sh": [
            "testTF2.py"
        ]
    },
    "eslambakr/LAR-Look-Around-and-Refer": {
        "LAR-Look-Around-and-Refer/run_imgs.slurm": [
            "setup.py",
            "train_referit3d.py"
        ],
        "LAR-Look-Around-and-Refer/referit3d/scripts/runSATwith2DWithMulti.sh": [
            "train_referit3d.py"
        ]
    },
    "slchenchn/spacenet6": {
        "spacenet6/tools/hpc_dist_train.sbatch": [
            "tools/train.py",
            "configs/deeplabv3/deeplabv3_r50-d8-selfsup_512x512_10k_sn6_sar_pro_rotated_ft.py"
        ]
    },
    "MichalTesnar/mystery": {
        "mystery/BUFFER_fun.sh": [
            "main_buffer.py"
        ]
    },
    "weinbe2/sierra-qhmc-quda": {
        "sierra-qhmc-quda/runscripts/gdr_tile/jsrunjob_stag_inv_test_96x96x96x192_3x3x3x8_gdr_tile.lsf": [
            "env.sh"
        ],
        "sierra-qhmc-quda/runscripts/gdr/jsrunjob_stag_inv_test_96x96x96x192_3x3x3x8_gdr.lsf": [
            "env.sh"
        ]
    },
    "ulissigroup/catlas": {
        "catlas/configs/dask_cluster/perlmutter/catlas_run.sh": [
            "bin/predictions.py",
            "configs/dask_cluster/perlmutter/test_gpu_relax.yml",
            "configs/dask_cluster/perlmutter/slurm_scheduler.yml"
        ],
        "catlas/jobspec-cfg/bin/predictions.py": [
            "configs/dask_cluster/dask_operator/catlas-hybrid-cluster.yml",
            "bin/predictions.py",
            "configs/dask_cluster/dask_operator/dask_connect.py"
        ]
    },
    "ucdavis-bioinformatics/bcl2fastq_automation": {
        "bcl2fastq_automation/run_bcl2fastq.slurm": [
            "run_bcl2fastq.pl"
        ],
        "bcl2fastq_automation/jobspec-cfg/run_bcl2fastq.pl": [
            "run_bcl2fastq.slurm"
        ]
    },
    "jameshay218/virosolver_paper": {
        "virosolver_paper/5.bwh/fit_real_ma.sh": [
            "5.bwh/5.fit_ma_gp.R"
        ],
        "virosolver_paper/4.sim_full/fit_sim_gp_sampsize_prior.sh": [
            "4.sim_full/4.full_sim_recovery_cluster_sampsize_prior.R"
        ]
    },
    "stevenaleung/CS230-final-project": {
        "CS230-final-project/run_main_gpu.sh": [
            "main.py"
        ]
    },
    "Elluito/sparse_ensemble": {
        "sparse_ensemble/slurm_handler.sh": [
            "slurm_2nd_order.sh",
            "slurm_run.sh",
            "slurm_run_ffcv.sh",
            "resume_run.sh"
        ],
        "sparse_ensemble/slurm_run.sh": [
            "train_CIFAR10.py",
            "Second_order_Receptive_field.py",
            "test_backwards.py",
            "hao_models_pruning_test.py",
            "resume_run.sh"
        ],
        "sparse_ensemble/jobspec-cfg/resume_run.sh": [
            "train_CIFAR10.py"
        ],
        "sparse_ensemble/jobspec-cfg/slurm_run.sh": [
            "train_CIFAR10.py",
            "Second_order_Receptive_field.py",
            "test_backwards.py",
            "hao_models_pruning_test.py",
            "resume_run.sh",
            "prune_models.py",
            "main.py"
        ],
        "sparse_ensemble/jobspec-cfg/slurm_run_ffcv.sh": [
            "train_CIFAR10.py",
            "Second_order_Receptive_field.py",
            "test_backwards.py",
            "hao_models_pruning_test.py"
        ],
        "sparse_ensemble/jobspec-cfg/slurm_2nd_order.sh": [
            "train_CIFAR10.py",
            "Second_order_Receptive_field.py"
        ]
    },
    "Jacob608/Nfp5_Cfp5_Dimerization_Simulations": {
        "Nfp5_Cfp5_Dimerization_Simulations/get_NAMDenergy_all_simulations.sh": [
            "get_NAMDenergy.vmd"
        ]
    },
    "YosefLab/theoretical_lineage_tracing_reproducibility": {
        "theoretical_lineage_tracing_reproducibility/run_sim_vary_n.sh": [
            "run_sim_vary_n.sh"
        ],
        "theoretical_lineage_tracing_reproducibility/run_sim_validate_k.sh": [
            "run_sim_validate_k.sh"
        ],
        "theoretical_lineage_tracing_reproducibility/run_sim_vary_lambda_q.sh": [
            "run_sim_vary_lambda_q.sh"
        ],
        "theoretical_lineage_tracing_reproducibility/jobspec-cfg/run_sim_vary_n.sh": [
            "run_sim_vary_n.sh"
        ],
        "theoretical_lineage_tracing_reproducibility/jobspec-cfg/run_sim_validate_k.sh": [
            "run_sim_validate_k.sh"
        ],
        "theoretical_lineage_tracing_reproducibility/jobspec-cfg/run_sim_vary_lambda_q.sh": [
            "run_sim_vary_lambda_q.sh"
        ]
    },
    "divvun/lang-sme-ml-speech": {
        "lang-sme-ml-speech/run_prepare.sh": [
            "train_tacotron.py"
        ],
        "lang-sme-ml-speech/run_training.sh": [
            "train_forward.py"
        ],
        "lang-sme-ml-speech/jobspec-cfg/train_forward.py": [
            "train_tacotron.py"
        ]
    },
    "lucasdavid/tf-experiment": {
        "tf-experiment/runners/sdumont/classification/voc12/train.all.sh": [
            "./config/sdumont/.env",
            "config/classification/train_and_finetune.yml",
            "config/classification/datasets/voc12.yml",
            "config/augmentation/randaug.yml",
            "config/classification/optimizers/momentum_nesterov.yml",
            "config/classification/regularizers/dropout.yml",
            "config/training/preinitialized-training.yml",
            "config/environment/precision-mixed-float16.yml",
            "config/environment/sdumont.yml",
            "config/logging/wandb.train.yml",
            "config/classification/regularizers/orthogonal.yml",
            "config/classification/regularizers/kernel-usage.yml",
            "config/models/rn101.yml",
            "config/classification/datasets/cifar10.yml",
            "config/classification/datasets/cifar100.yml",
            "config/classification/datasets/cityscapes.yml",
            "config/classification/datasets/coco17.yml",
            "config/classification/datasets/voc07.yml",
            "config/augmentation/none.yml",
            "config/augmentation/simple.yml",
            "config/models/enb0.yml",
            "config/models/enb6.yml",
            "config/models/rn50.yml",
            "config/models/rn152.yml",
            "config/training/scratch-training.yml",
            "config/training/train-head-and-finetune.yml",
            "config/classification/regularizers/l1l2.yml",
            "config/environment/dev.yml"
        ],
        "tf-experiment/runners/sdumont/classification/cifar100/train.rn50.all.sh": [
            "./config/sdumont/.env",
            "config/classification/train_and_finetune.yml",
            "config/classification/datasets/cifar100.yml",
            "config/augmentation/none.yml",
            "config/classification/optimizers/momentum_nesterov.yml",
            "config/training/preinitialized-training.yml",
            "config/environment/precision-mixed-float16.yml",
            "config/environment/sdumont.yml",
            "config/logging/wandb.train.yml",
            "config/training/train-head-and-finetune.yml",
            "config/augmentation/simple.yml",
            "config/augmentation/randaug.yml",
            "config/classification/regularizers/dropout.yml",
            "config/classification/regularizers/l1l2.yml",
            "config/classification/regularizers/orthogonal.yml",
            "config/classification/regularizers/kernel-usage.yml",
            "config/classification/datasets/cifar10.yml",
            "config/classification/datasets/cityscapes.yml",
            "config/classification/datasets/coco17.yml",
            "config/classification/datasets/voc07.yml",
            "config/classification/datasets/voc12.yml",
            "config/environment/dev.yml",
            "config/models/enb0.yml",
            "config/models/enb6.yml",
            "config/models/rn50.yml",
            "config/models/rn101.yml",
            "config/models/rn152.yml"
        ],
        "tf-experiment/runners/sdumont/classification/cifar10/train.rn50.all.sh": [
            "./config/sdumont/.env",
            "config/classification/train_and_finetune.yml",
            "config/training/preinitialized-training.yml",
            "config/classification/datasets/cifar10.yml",
            "config/augmentation/none.yml",
            "config/classification/optimizers/momentum_nesterov.yml",
            "config/environment/precision-mixed-float16.yml",
            "config/environment/sdumont.yml",
            "config/logging/wandb.train.yml",
            "config/augmentation/simple.yml",
            "config/augmentation/randaug.yml",
            "config/models/rn50.yml",
            "config/classification/regularizers/dropout.yml",
            "config/classification/regularizers/l1l2.yml",
            "config/classification/regularizers/orthogonal.yml",
            "config/classification/regularizers/kernel-usage.yml",
            "config/classification/datasets/cityscapes.yml",
            "config/classification/datasets/coco17.yml",
            "config/classification/datasets/voc07.yml",
            "config/classification/datasets/voc12.yml",
            "config/training/train-head-and-finetune.yml",
            "config/environment/dev.yml",
            "config/models/enb0.yml",
            "config/models/enb6.yml",
            "config/models/rn101.yml",
            "config/models/rn152.yml"
        ],
        "afhp/runners/0-setup.sh": [
            "requirements.txt"
        ]
    },
    "lucasdavid/afhp": {
        "afhp/runners/1-run-all.sh": [
            "run.py"
        ],
        "afhp/runners/0-setup.sh": [
            "requirements.txt"
        ]
    },
    "MMesbahU/ensembl-api": {
        "ensembl-api/ensembl-functgenomics/scripts/environments/arrays.env": [
            "ensembl-functgenomics/docs/array_mapping.txt"
        ],
        "ensembl-api/jobspec-cfg/ensembl-functgenomics/docs/array_mapping.txt": [
            "ensembl-functgenomics/scripts/array_mapping/pre_process_probe_seqs.sh",
            "ensembl-functgenomics/scripts/environments/example.arrays",
            "ensembl-functgenomics/scripts/array_mapping/probe2transcript.pl"
        ]
    },
    "annsaln/transformers-classifier": {
        "transformers-classifier/slurm_predict.sh": [
            "train_lstm.py"
        ],
        "transformers-classifier/slurm_train_xlmr.sh": [
            "train_lstm.py"
        ],
        "transformers-classifier/slurm_train_lstm.sh": [
            "train_lstm.py"
        ]
    },
    "joaomiguelol/item2vec": {
        "item2vec/trans.sh": [
            "src/recsys23/main.py"
        ]
    },
    "federatedcloud/WaterPaths": {
        "WaterPaths/borg_mpi_valgrind.sh": [
            "./output/borgms_run_hybrid.out",
            "./error/borgms_run_hybrid.err",
            "nodefile"
        ],
        "WaterPaths/jobspec-cfg/error/borgms_run_hybrid.err": [
            "nodefile"
        ]
    },
    "raspstephan/CBRAIN": {
        "CBRAIN/submit_tensorflow.sh": [
            "./main.py"
        ],
        "CBRAIN/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "kotoba-tech/kotoba-recipes": {
        "kotoba-recipes/scripts/abci/mistral/mistral-ylab.sh": [
            "examples/finetuning.py"
        ]
    },
    "Imathatguy/DataPoisoningFL-Rank": {
        "DataPoisoningFL-Rank/gaussian.jobscript": [
            "gaussian_attack.py"
        ]
    },
    "wljungbergh/yolov7": {
        "yolov7/jobspec-cfg/train_aux.py": [
            "test.py",
            "train.py"
        ],
        "yolov7/scripts/yolov7-multi.sh": [
            "train_aux.py",
            "cfg/training/yolov7_zod.yaml",
            "data/hyp.scratch.custom.yaml"
        ]
    },
    "pinskylab/codEvol": {
        "codEvol/scripts/slim_calcpcangsdoutlier.sh": [
            "scripts/vcftobeagle.R"
        ]
    },
    "briancpark/tinyllama-lora": {
        "tinyllama-lora/scripts/lora.batch": [
            "main.py"
        ]
    },
    "Dimitrije2507/BlueberryRowDetectionKubeflow": {
        "BlueberryRowDetectionKubeflow/pytorch.sbatch": [
            "child.sh"
        ]
    },
    "youngdashu/islands_desync": {
        "islands_desync/run-hpc.sh": [
            "islands_desync/start.py"
        ]
    },
    "raspbeep/VUT-KNN": {
        "VUT-KNN/metacentrum/train_config-epochs.sh": [
            "train.py"
        ]
    },
    "jubgjf/PLMTuningCompetition": {
        "PLMTuningCompetition/bbt.sh": [
            "test.py",
            "bbt.py"
        ],
        "PLMTuningCompetition/jobspec-cfg/test.py": [
            "bbt.py"
        ]
    },
    "DalhousieAI/ssl-bentho": {
        "ssl-bentho/bt.sh": [
            "./solo_learn_train-bentho.py"
        ],
        "ssl-bentho/mae_mini.sh": [
            "./solo_learn_train-bentho.py"
        ],
        "ssl-bentho/mocov3.sh": [
            "./solo_learn_train-bentho.py"
        ],
        "ssl-bentho/mae.sh": [
            "./solo_learn_train-bentho.py"
        ],
        "ssl-bentho/byol.sh": [
            "./solo_learn_train-bentho.py"
        ],
        "ssl-bentho/dino.sh": [
            "./solo_learn_train-bentho.py"
        ]
    },
    "srijitpaul/pi_nucleon": {
        "pi_nucleon/cori_job.sh": [
            "cori_error.out",
            "cori_seq.out"
        ]
    },
    "Yushi-Y/art-emotion-interpreter": {
        "art-emotion-interpreter/run_downsample.sh": [
            "img_classifier_downsample.py"
        ]
    },
    "bojesomo/Traffic4Cast2021-SwinUNet3D": {
        "Traffic4Cast2021-SwinUNet3D/Traffic4Cast2021/submit.sh": [
            "Traffic4Cast2021/main1.py"
        ]
    },
    "bojesomo/Weather4Cast2021-SwinUNet3D": {
        "Weather4Cast2021-SwinUNet3D/ieee_bd/submit.sh": [
            "ieee_bd/main.py"
        ]
    },
    "jacob-hjortlund/PyAutoFit_Functional_Tests": {
        "PyAutoFit_Functional_Tests/run_mp.sh": [
            "test_parallel_search.py"
        ]
    },
    "richardarcher1/slurm_debugging": {
        "slurm_debugging/slurm.sbatch": [
            "test.py"
        ]
    },
    "behzadhaki/GrooveTransformer": {
        "GrooveTransformer/vae_bhaki.sh": [
            "train.py"
        ],
        "GrooveTransformer/vae.sh": [
            "train.py"
        ]
    },
    "hubert10/semantic-segmentation": {
        "semantic-segmentation/sbatch/cpu_train_unet_model_job.sh": [
            "model_training/training_unet_model.py"
        ],
        "field-delineation-hub/sbatchs/tile_4096_4096.sh": [
            "make_predictions.py"
        ]
    },
    "hubert10/field-delineation-hub": {
        "field-delineation-hub/sbatchs/koutiala_make_predictions.sh": [
            "field_delineation_end2end.py"
        ]
    },
    "OpenBioML/chemnlp": {
        "chemnlp/experiments/scripts/sbatch_train_hf_multinode.sh": [
            "experiments/scripts/run_tune.py"
        ]
    },
    "arturfabricio/aircraft-detection": {
        "aircraft-detection/run.sh": [
            "src/main.py"
        ]
    },
    "Evelyn-H/Rubiks-Cube-DL": {
        "Rubiks-Cube-DL/job3.sh": [
            "train.py",
            "ini/cube3x3-zero-goal-decay-d50.ini"
        ],
        "Rubiks-Cube-DL/solver.sh": [
            "solver.py"
        ],
        "Rubiks-Cube-DL/job2.sh": [
            "train.py",
            "ini/cube2x2-zero-goal-d30.ini"
        ],
        "Rubiks-Cube-DL/solver2.sh": [
            "solver.py"
        ]
    },
    "sandorfoldi/deeponet": {
        "deeponet/bash/exp0/pred_exp_0_1.sh": [
            "src/pred.py"
        ],
        "deeponet/bash/exp0/train_exp_0_c.sh": [
            "src/train.py"
        ],
        "deeponet/bash/exp0/pred_exp_0_e32-512.sh": [
            "src/pred.py"
        ],
        "deeponet/bash/exp0/pred_exp_0_0.sh": [
            "src/pred.py"
        ],
        "deeponet/bash/exp0/train_exp_0_h.sh": [
            "src/train.py"
        ],
        "deeponet/bash/exp0/train_exp_0_a.sh": [
            "src/train.py"
        ],
        "deeponet/bash/exp0/train_exp_0_g.sh": [
            "src/train.py"
        ],
        "deeponet/bash/exp_pinn/1c_mu_1_0.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp_pinn/1a_mu_1_1e14.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp_pinn/1a_mu_1_1e13.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp3_bs_2048/1a.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp3_bs_2048/2a.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp_0_bs_2048/pred.sh": [
            "src/pred.py"
        ],
        "deeponet/bash/exp2_bs_2048/a.sh": [
            "src/train_pinn.py"
        ],
        "deeponet/bash/exp_batch_size/bs512.sh": [
            "src/train.py"
        ]
    },
    "jonahanton/SSL_medicalimaging": {
        "SSL_medicalimaging/slurm_submits/saliency.sh": [
            "saliency.py"
        ],
        "SSL_medicalimaging/slurm_submits/reconstruction.sh": [
            "reconstruction.py"
        ]
    },
    "afmagee/gefbd": {
        "gefbd/empirical_analysis/4_run_EFBDP_GMRF.sh": [
            "src/analysis_age_uncertainty.Rev"
        ],
        "gefbd/empirical_analysis/3_compute_hyperpriors.sh": [
            "src/posteriors2gammaPriors.R"
        ]
    },
    "guilherme439/NuZero": {
        "NuZero/SLURM/slurm-gaips.sh": [
            "Run.py"
        ]
    },
    "v-i-s-h/summary-likelihood": {
        "summary-likelihood/slurm-scripts/submit_sstbert_train.sh": [
            "train.py"
        ]
    },
    "n12iki/DL": {
        "DL/launcher.sh": [
            "model.py"
        ],
        "DL/transfer_learning/launcherUnfreeze.sh": [
            "model.py"
        ]
    },
    "NCAR/iCESM1.2": {
        "DART/models/wrf/regression/CONUS-V3/icbc_real.ksh": [
            "Copyright"
        ]
    },
    "NCAR/rechunk_retro_nwm_v21": {
        "rechunk_retro_nwm_v21/ldasout/ldasout_verification_array.sh": [
            "./verify_output.py"
        ]
    },
    "NCAR/mlmicrophysics": {
        "mlmicrophysics/batch_process.sh": [
            "scripts/train_mp_neural_nets.py",
            "config/cesm_tau_run5_full_train_nn_noL2.yml"
        ],
        "mlmicrophysics/batch_nn.sh": [
            "scripts/train_mp_neural_nets.py",
            "config/cesm_sd_full_train_nn.yml"
        ]
    },
    "NCAR/goes16ci": {
        "goes16ci/launch.sh": [
            "hyperparameter.yml"
        ],
        "goes16ci/CountPrediction.sh": [
            "scripts/BinnedCountPredictionModel.py"
        ],
        "goes16ci/goes16_benchmark_cheyenne.sh": [
            "goes16_deep_learning_benchmark.py"
        ],
        "goes16ci/infer_patches.sh": [
            "patch_inference.py"
        ],
        "goes16ci/goes16_benchmark_casper.sh": [
            "goes16_deep_learning_benchmark.py"
        ],
        "goes16ci/goes16_benchmark_casper_res.sh": [
            "goes16_deep_learning_benchmark.py"
        ],
        "goes16ci/CountPredictionNo0.sh": [
            "BinnedCountPredictionModelNo0.py"
        ],
        "goes16ci/jobspec-cfg/patch_inference.py": [
            "./patch_inference.py"
        ]
    },
    "NCAR/ior_scaling": {
        "ior_scaling/pbs/ior_n8_2.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n2_2.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n32_2.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n16_2.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n64_2.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n32.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n4.pbs": [
            "./scripts/runtest.sh"
        ],
        "ior_scaling/pbs/ior_n2.pbs": [
            "./scripts/runtest.sh"
        ]
    },
    "NCAR/UFS_UTILS": {
        "UFS_UTILS/ush/fv3gfs_chgres.sh": [
            "VERSION"
        ]
    },
    "NCAR/SWM": {
        "SWM/buildRun.sh": [
            "shallow_swap.c",
            "wtime.c",
            "results_ref.64x64.IT4000.txt",
            "shallow_swap.acc.c"
        ],
        "SWM/NCAR_slurm/buildRunGPU.sh": [
            "shallow_swap.acc.Tile.c",
            "wtime.c"
        ],
        "SWM/NCAR_slurm/buildRunValgrind.sh": [
            "shallow_swap.c",
            "wtime.c"
        ],
        "SWM/jobspec-cfg/shallow_swap.c": [
            "wtime.c"
        ],
        "SWM/jobspec-cfg/shallow_swap.acc.Tile.c": [
            "wtime.c"
        ],
        "SWM/jobspec-cfg/shallow_swap.acc.c": [
            "wtime.c"
        ]
    },
    "NCAR/marbleri": {
        "marbleri/train_hwrf_casper_2021.sh": [
            "train_hwrf_ml.py"
        ]
    },
    "h39s/mlsys": {
        "mlsys/schedule_3090.sh": [
            "run_benchmark.py",
            "config/config_3090_6.yaml"
        ]
    },
    "Alejandro-neuro/Vphy": {
        "Vphy/job.sbatch": [
            "Figures/init_exp.py"
        ]
    },
    "NASA-IMPACT/pixel-detector": {
        "pixel-detector/train_job.sh": [
            "code/train.py"
        ]
    },
    "EricSDavis/dietJuicer": {
        "dietJuicer/dietJuicerMerge.sh": [
            "config/requirements.txt",
            "workflows/buildHIC",
            "./scripts/status.py"
        ]
    },
    "nickveltmaat/SNVcaller": {
        "SNVcaller/SNVcaller.sh": [
            "./hardfilter.py",
            "./sort_vardict.R",
            "./vardict_vcf.py",
            "./sort_sinvict.R",
            "./create_vcf.py",
            "./clean_pon.py",
            "./merge_variants.py",
            "./post_filtering.py",
            "./plotting.py"
        ]
    },
    "AirtrafficAnalysisGroup/graph_tools_networkx": {
        "graph_tools_networkx/rungraphbuilder.pbs": [
            "graphbuilder.py"
        ]
    },
    "candiceT233/local-co-scheduling": {
        "local-co-scheduling/deception_ddmd_1hm/hm_ddmd_openmpi.sbatch": [
            "./host_ip"
        ],
        "local-co-scheduling/deception_ddmd_scripts/hm_ddmd_openmpi.sbatch": [
            "./host_ip"
        ],
        "local-co-scheduling/bluesky_ddmd_scripts/hm_ddmd.sbatch": [
            "./host_ip"
        ]
    },
    "mafreitas/snakemake_lablefree_proteomics": {
        "snakemake_lablefree_proteomics/qsub-snakefile.sh": [
            "Snakefile.py"
        ]
    },
    "ynx0/fluxion": {
        "fluxion/fluxion.sh": [
            "lib/installer/InstallerUtils.sh",
            "lib/InterfaceUtils.sh",
            "lib/SandboxUtils.sh",
            "lib/FormatUtils.sh",
            "lib/ColorUtils.sh",
            "lib/IOUtils.sh",
            "lib/HashUtils.sh",
            "lib/Help.sh"
        ]
    },
    "vitoriapacela/iVAE": {
        "iVAE/hugemem_puhti.sh": [
            "main.py"
        ],
        "iVAE/mila.sh": [
            "fastica.py",
            "data_5_40_1000_1.csv",
            "mix_5_40_1000_1.csv",
            "main.py"
        ],
        "iVAE/cpu_puhti.sh": [
            "main.py"
        ],
        "iVAE/longrun_puhti.sh": [
            "main.py"
        ],
        "iVAE/gpu_puhti.sh": [
            "main.py"
        ],
        "iVAE/gpu_puhti-Copy1.sh": [
            "main.py"
        ],
        "iVAE/kale_gpu.sh": [
            "main.py"
        ]
    },
    "jagathv/sv-ml": {
        "sv-ml/roc.sh": [
            "roc_prc_gen.py"
        ]
    },
    "RavibhaiDhola/Traffic_sign_classification": {
        "Traffic_sign_classification/main.sh": [
            "nas.py"
        ]
    },
    "frhl/wes_ko_ukbb": {
        "wes_ko_ukbb/scripts/conditional/dominance/02_cond_additive_recessive.sh": [
            "utils/bash_utils.sh"
        ]
    },
    "micheledaddetta1/CycleNLPGAN": {
        "CycleNLPGAN/cuda_legion.sbatch": [
            "train.py"
        ],
        "CycleNLPGAN/jobspec-cfg/train.py": [
            "train.py",
            "options/base_options.py",
            "options/train_options.py"
        ]
    },
    "dokato/2drdk": {
        "2drdk/grid_cluster.sh": [
            "grid_ww_iter.py"
        ]
    },
    "cylondata/cylon": {
        "cylon/target/uva-cs/rp-scripts/rp-cylon.slurm": [
            "rivanna/rp-scripts/rp_scaling.py"
        ]
    },
    "pixas/TAIA_LLM": {
        "TAIA_LLM/scripts/train/slurm/sft_llama2-lora-redteam.sh": [
            "scripts/zero3.json"
        ],
        "TAIA_LLM/scripts/train/slurm/sft_qwen1.5-1.8b-molora.sh": [
            "scripts/zero3.json"
        ]
    },
    "JRLamontagne/cdice_sa": {
        "cdice_sa/Bootstrap/Example_Run.sh": [
            "./parsing_CDICE.sh"
        ]
    },
    "conghienquoc/595FinalProject": {
        "595FinalProject/caption.sh": [
            "595_final_project.py"
        ]
    },
    "yukikoyanagi/localpattern": {
        "localpattern/patrot.sh": [
            "patrot.sh",
            "./patrot.py"
        ],
        "localpattern/pred_cheat_arr.sh": [
            "pred_cheat_arr.py"
        ],
        "localpattern/jobspec-cfg/patrot.sh": [
            "patrot.sh",
            "./patrot.py"
        ],
        "localpattern/jobspec-cfg/patrot.py": [
            "patrot.py"
        ]
    },
    "ramanathanlab/Megatron-DeepSpeed": {
        "Megatron-DeepSpeed/train_llama_alcf_polaris_hzheng.sh": [
            "./pretrain_gpt_alcf.py"
        ]
    },
    "KhoomeiK/CACR": {
        "CACR/dist_train.sh": [
            "train_itm_hard_negatives.py"
        ]
    },
    "EtomicBomb/deep-learning-final-project": {
        "deep-learning-final-project/jobspec-cfg/src/experiment.sh": [
            "src/main.py",
            "src/experiment.sh"
        ],
        "deep-learning-final-project/src/experiment.sh": [
            "src/main.py",
            "src/experiment.sh"
        ]
    },
    "drago1234/2020Fall_Plant_disease_detection_Code": {
        "2020Fall_Plant_disease_detection_Code/train.sh": [
            "baseline_backup.py",
            "baseline_InceptionV3.py",
            "baseline_ResNet.py",
            "baseline_NASNet.py"
        ]
    },
    "mvsjober/ml-benchmarks": {
        "ml-benchmarks/slurm/mahti-cpu128.sh": [
            "slurm/common.sh"
        ]
    },
    "cheng-yeh/brainmagick": {
        "brainmagick/dry_run.sbatch": [
            "requirements.txt"
        ],
        "brainmagick/analysis.sbatch": [
            "requirements.txt",
            "analysis.py"
        ],
        "brainmagick/setup.sbatch": [
            "requirements.txt"
        ]
    },
    "cheng-yeh/NeRF2": {
        "NeRF2/manual.sbatch": [
            "nerf2_runner.py",
            "configs/mimo-csi.yml"
        ]
    },
    "newtonjoo/deepfold": {
        "deepfold/run_train.sh": [
            "train.py"
        ]
    },
    "automl-private/metassl-dino": {
        "metassl-dino/cluster/submit_imagenet_dino_pretraining_resnet50.sh": [
            "main_dino.py"
        ],
        "metassl-dino/cluster/submit_imagenet_dino_linear_evaluation_resnet50.sh": [
            "eval_linear.py"
        ]
    },
    "bajeluk/surrogate-cmaes": {
        "surrogate-cmaes/exp/metacentrum_binary_task_template.sh": [
            "exp/bbob_test_01.m"
        ]
    },
    "billspat/hpcc_megadetector": {
        "hpcc_megadetector/run_detector.sb": [
            "run_detector.py"
        ]
    },
    "phargogh/prototype-concurrency-in-pygeoprocessing": {
        "prototype-concurrency-in-pygeoprocessing/example-sherlock.sbatch": [
            "example-sherlock.py"
        ],
        "prototype-concurrency-in-pygeoprocessing/jobspec-cfg/example-sherlock.py": [
            "requirements.txt",
            "example-sherlock.py"
        ]
    },
    "calculquebec/cip201-serveurs-calcul": {
        "cip201-serveurs-calcul/scripts/crunch-sbatch-1gpu.sh": [
            "scripts/crunch.py"
        ]
    },
    "AnhDuongN/llmsmoothing": {
        "llmsmoothing/run_test.sh": [
            "prompt.py"
        ]
    },
    "jeltevanbommel/ALFL": {
        "ALFL/run-pyscript.sbatch": [
            "research.py"
        ]
    },
    "fadamsyah/miccai2022-diffusion-anomaly": {
        "miccai2022-diffusion-anomaly/run_exp_hpc.sh": [
            "adam/generate_brats_healthy_volume.py"
        ],
        "miccai2022-diffusion-anomaly/jobspec-cfg/adam/generate_brats_healthy_volume.py": [
            "adam/generate_brats_healthy_volume.py"
        ]
    },
    "scottbarnesg/Cooperative_Search_Env": {
        "Cooperative_Search_Env/run.sh": [
            "run_mapEnv.py"
        ]
    },
    "psteinb/deeprace": {
        "deeprace/scripts/resnet/full/resnet30-bs512.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet50.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet50-bs256.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet30-bs128.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet30.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet50-bs128.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet30-bs256.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/full/resnet50-bs512.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet30-short.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet50-short-bs512.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet30-short-bs512.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet30-short-bs256.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet50-short-bs256.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet50-short-bs128.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet30-short-bs128.slurm": [
            "./deeprace.py"
        ],
        "deeprace/scripts/resnet/short/resnet50-short.slurm": [
            "./deeprace.py"
        ]
    },
    "kridk999/02466-Fagpakkeprojekt-Point-clouds": {
        "02466-Fagpakkeprojekt-Point-clouds/hpc.sh": [
            "./train.py"
        ]
    },
    "manateechen/wrf-chem.r13172": {
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_NFRDM_250m_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_WSLOP_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_CNTL_NFRDM_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_NFRDM_500m_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_PBCSP_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_Colo_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf/run_scripts/RUN_REAL_TIME/real_time_WRF_NFRDM_CU.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_CPSR_FCST.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_parameters_nested_v3.6.1.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_RETR_MA.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_CPSR.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_RETR_FINE_SCALE.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_CNTL.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_parameters.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_parameters_nested.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_PANDA_RETR.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_RETR.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_RETR_TEST.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_PANDA_RETR_MA.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_parameters_FRAPPE_v3.6.1.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_PANDA_RETR_RELEASE_TEST.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_FRAPPE_CNTL_FINE_SCALE.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/real_time_PANDA_RETR_IDIR_SV.ksh": [
            "index.html"
        ],
        "wrf-chem.r13172/models/wrf_chem/run_scripts/RUN_REAL_TIME/QINWEI_TEST/real_time_PANDA_RETR_RELEASE_TEST.ksh": [
            "index.html"
        ]
    },
    "aniketntnu/resnet-Phosc": {
        "resnet-Phosc/trainPhoscPretrain.sbatch": [
            "main.py"
        ]
    },
    "Sir-Teo/PlantNet": {
        "PlantNet/job.sh": [
            "main.py"
        ],
        "MineNet/job-mamba.sh": [
            "main.py"
        ],
        "MineNet/job.sh": [
            "main.py"
        ],
        "MineNet/jobspec-cfg/main.py": [
            "main.py"
        ],
        "MusicBART/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "Sir-Teo/MIDISentimentBERT": {
        "MIDISentimentBERT/job.sh": [
            "train.py"
        ],
        "MIDISentimentBERT/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "Sir-Teo/MineNet": {
        "PlantNet/job.sh": [
            "main.py"
        ],
        "MineNet/job-mamba.sh": [
            "main.py"
        ],
        "MineNet/job.sh": [
            "main.py"
        ],
        "MineNet/jobspec-cfg/main.py": [
            "main.py"
        ],
        "MusicBART/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "Sir-Teo/MusicBART": {
        "PlantNet/job.sh": [
            "main.py"
        ],
        "MineNet/job-mamba.sh": [
            "main.py"
        ],
        "MineNet/job.sh": [
            "main.py"
        ],
        "MineNet/jobspec-cfg/main.py": [
            "main.py"
        ],
        "MusicBART/job.sh": [
            "main_parallel.py"
        ],
        "MusicBART/jobspec-cfg/main_parallel.py": [
            "main_parallel.py"
        ],
        "MusicBART/jobspec-cfg/main.py": [
            "main.py",
            "main_parallel.py"
        ]
    },
    "sameraslan/PerceptAlign": {
        "PerceptAlign/scripts/slurm/streamlit.sh": [
            "./sample_visualization.py"
        ]
    },
    "tomekzaw/agh_sem9_ar_proj1": {
        "agh_sem9_ar_proj1/zeus2.sh": [
            "main.py"
        ],
        "agh_sem9_ar_proj1/zeus3.sh": [
            "main.py"
        ]
    },
    "lyeskhalil/CORL": {
        "CORL/scripts/tune.sh": [
            "requirements.txt",
            "run.py"
        ]
    },
    "kougou/pytorch-cifar": {
        "pytorch-cifar/cmd.cmd": [
            "main.py"
        ]
    },
    "aic-factcheck/ColBERTv2": {
        "ColBERTv2/slurm/wiki_en_02_index_amdgpu.batch": [
            "scripts/build_index.py"
        ],
        "ColBERTv2/slurm/csfever_01_train_amdgpu.batch": [
            "scripts/train.py"
        ],
        "ColBERTv2/slurm/enfever_01_train_amdgpu.batch": [
            "scripts/train.py"
        ]
    },
    "MichiganNLP/video-fill-in-the-blank": {
        "video-fill-in-the-blank/scripts/great_lakes/t5_i3d_two_stream.sh": [
            "scripts/great_lakes/init.source",
            "scripts/run_model.py"
        ]
    },
    "pnkraemer/experiments-lanczos-adjoints": {
        "experiments-lanczos-adjoints/scripts/gaussian_processes/run_uci.sh": [
            "experiments/applications/gaussian_process/train/optim_logml_gpytorch_adaptive.py",
            "experiments/applications/gaussian_process/train/optim_logml_adjoints_adaptive.py"
        ]
    },
    "ryanzhangfan/NeuroSAT": {
        "NeuroSAT/run_sr40to100.sh": [
            "src/train.py"
        ],
        "NeuroSAT/run_eval.sh": [
            "src/eval.py"
        ],
        "NeuroSAT/run_sr200to500.sh": [
            "src/train.py"
        ],
        "NeuroSAT/run_sr10to40.sh": [
            "src/train.py"
        ]
    },
    "UoS-HGIG/WES_multicalling_pipeline_2020": {
        "GenePy-1.4/jobspec-cfg/GENEPY_1.3.sh": [
            "README.md"
        ]
    },
    "UoS-HGIG/GenePy-1.4": {
        "GenePy-1.4/vep.sh": [
            "vep.sh"
        ],
        "GenePy-1.4/subber.sh": [
            "GENEPY_1.3.sh"
        ],
        "GenePy-1.4/jobspec-cfg/GENEPY_1.3.sh": [
            "README.md",
            "make_scores_mat_6.py"
        ],
        "GenePy-1.4/jobspec-cfg/vep.sh": [
            "vep.sh"
        ]
    },
    "tomchor/CSI_insights": {
        "CSI_insights/pbs_intjet_np.sh": [
            "intjet_np.jl"
        ],
        "CSI_insights/pbs_surfjet_np.sh": [
            "surfjet_np.jl"
        ],
        "CSI_insights/aux_pbs_ISI_jet.sh": [
            "surfjet_np.jl"
        ]
    },
    "mobeets/valuernn": {
        "valuernn/bin/run.sbatch": [
            "quick_train.py"
        ],
        "valuernn/bin/prun.sbatch": [
            "quick_train.py"
        ]
    },
    "kantharajucn/CLIP-imagenet-evaluation": {
        "CLIP-imagenet-evaluation/train.sh": [
            "train.py"
        ]
    },
    "JP-MRPhys/fastMRI-GAN": {
        "fastMRI-GAN/jade_job_small2.sh": [
            "./model/VQVAE1.py"
        ]
    },
    "virtualmartire/OBIWAN": {
        "OBIWAN/job_sample.sh": [
            "training_routine.py"
        ]
    },
    "jens5588/FZI-WIM-NLI4CT": {
        "FZI-WIM-NLI4CT/fsdp_training.sh": [
            "fsdp/lora_finetuning.py"
        ]
    },
    "jeppe742/language_of_molecules": {
        "language_of_molecules/runjob.sh": [
            "train.py"
        ]
    },
    "ondrejbohdal/CloserLookFewShot": {
        "CloserLookFewShot/scripts/multi_meta_array_job.sh": [
            "train.py",
            "save_features.py",
            "test.py"
        ]
    },
    "ondrejbohdal/dataset-distillation": {
        "dataset-distillation/dd_cifar10_steps.sh": [
            "main.py"
        ],
        "dataset-distillation/dd_cifar10_resnet.sh": [
            "main.py"
        ],
        "dataset-distillation/dd_cifar100_steps.sh": [
            "main.py"
        ],
        "dataset-distillation/dd_mnist_steps.sh": [
            "main.py"
        ],
        "dataset-distillation/dd_cifar10_many_steps.sh": [
            "main.py"
        ]
    },
    "pathak-ashutosh/clinical-risk-prediction": {
        "EconBERTa-rep/run.slurm": [
            "src/main.py"
        ],
        "clinical-risk-prediction/run.slurm": [
            "src/main.py"
        ]
    },
    "ketranm/ptardis": {
        "ptardis/runwmt.sh": [
            "train.py"
        ],
        "ptardis/jobspec-cfg/train.py": [
            "data/multi-bleu.perl"
        ]
    },
    "AaltoRSE/ImageNetTools": {
        "ImageNetTools/shardJob.sh": [
            "shardImageNetTrain"
        ]
    },
    "StefPetro/ATEL_speciale": {
        "ATEL_speciale/batch_scripts/pretrainer.sh": [
            "requirements.txt",
            "pretrain.py"
        ],
        "ATEL_speciale/batch_scripts/prepare_data.sh": [
            "requirements.txt",
            "prepare_dataset.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/lstm_Fremstillingsform.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/lstm_Holistisk_vurdering.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Fremstillingsform/lstm_Fremstillingsform_cv10.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Tekstbaand/lstm_Tekstbaand_cv4.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Stemmer/lstm_Stemmer_cv1.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Stemmer/lstm_Stemmer_cv7.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Semantisk_univers/lstm_Semantisk_univers_cv6.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Perspektiv/lstm_Perspektiv_cv6.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Perspektiv/lstm_Perspektiv_cv2.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Holistisk_vurdering/lstm_Holistisk_vurdering_cv4.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/LSTM_scripts/Holistisk_vurdering/lstm_Holistisk_vurdering_cv7.sh": [
            "run_lstm.py"
        ],
        "ATEL_speciale/batch_scripts/BERT_scripts/BERT_finetune_Fremstillingsform.sh": [
            "run_BERT_finetune.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Genre/AL_Genre_cv6.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Genre/AL_Genre_cv8.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Genre/AL_Genre_cv7.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Genre/AL_Genre_cv1.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Genre/AL_Genre_cv4.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Fremstillingsform/AL_Fremstillingsform_cv4.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Fremstillingsform/AL_Fremstillingsform_cv6.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Fremstillingsform/AL_Fremstillingsform_cv5.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Tekstbaand/AL_Tekstbaand_cv2.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Stemmer/AL_Stemmer_cv10.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Stemmer/AL_Stemmer_cv3.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Semantisk_univers/AL_Semantisk_univers_cv3.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/entropy/Holistisk_vurdering/AL_Holistisk_vurdering_cv9.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Genre/AL_Genre_cv8.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Fremstillingsform/AL_Fremstillingsform_cv6.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Fremstillingsform/AL_Fremstillingsform_cv8.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Tekstbaand/AL_Tekstbaand_cv10.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Tekstbaand/AL_Tekstbaand_cv7.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Stemmer/AL_Stemmer_cv8.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Semantisk_univers/AL_Semantisk_univers_cv8.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Holistisk_vurdering/AL_Holistisk_vurdering_cv9.sh": [
            "run_BERT_AL.py"
        ],
        "ATEL_speciale/batch_scripts/AL_scripts/random/Holistisk_vurdering/AL_Holistisk_vurdering_cv1.sh": [
            "run_BERT_AL.py"
        ]
    },
    "rvandeghen/ASTOD": {
        "ASTOD/process.sh": [
            "src/create_pseudo.py"
        ]
    },
    "flow123d/flow123d": {
        "flow123d/bin/config/tarkil.cesnet.cz.sh": [
            "version",
            "bin/mpiexec",
            "bin/flow123d"
        ],
        "docker-config/archive/install-libs.sh": [
            "version"
        ],
        "docker-config/archive/build-flow.sh": [
            "version"
        ]
    },
    "rivas-lab/sex-diff-biomarker-genetics": {
        "sex-diff-biomarker-genetics/src/05_loo/run_ll.sh": [
            "src/05_loo/compute_LL.R"
        ]
    },
    "xiafeichang/qrnn": {
        "qrnn/submitOpt.sh": [
            "optimize.py"
        ]
    },
    "Senorelegans/MysteryMiner": {
        "MysteryMiner/1.0_MysteryMiner_Nextflow.sh": [
            "nextflow.config"
        ]
    },
    "MaToeStudent/MLOps_Amazon_review_project": {
        "MLOps_Amazon_review_project/job_submit.sh": [
            "src/models/train_model.py"
        ]
    },
    "Stern5497/SCP": {
        "SCP/run_ubelix_job.sh": [
            "main.py"
        ]
    },
    "sbelharbi/Deep-Ordinal-Classification-with-Inequality-Constraints": {
        "Deep-Ordinal-Classification-with-Inequality-Constraints/jobs/jb-0-ds-bach-part-a-2018-ls-LossCE.sl~": [
            "main.py"
        ]
    },
    "sbelharbi/learning-class-invariant-features": {
        "learning-class-invariant-features/k80.sl": [
            "trainLenet.py"
        ],
        "learning-class-invariant-features/p100.sl": [
            "trainLenet.py"
        ]
    },
    "magitz/distributed_mnist": {
        "distributed_mnist/run_mnist.sbatch": [
            "distributed_mnist.py"
        ]
    },
    "Tinkaa/DLproject": {
        "DLproject/train.sh": [
            "train_frcnn.py"
        ],
        "DLproject/train_all_classes.sh": [
            "train_frcnn.py",
            "config_all_classes.pickle"
        ]
    },
    "ml4ai/FSS-1000": {
        "FSS-1000/fss1000-elgato.pbs": [
            "autolabel_hpc.py"
        ]
    },
    "jgte/plot-files": {
        "plot-files/dockerize.sh": [
            "dockerize.par"
        ]
    },
    "mwcoleman/speech-language-classifier": {
        "speech-language-classifier/classify.slurm": [
            "model.py"
        ]
    },
    "JD-X1/classification_pipeline": {
        "classification_pipeline/nersc_runner.sub": [
            "envs/Titania.yaml",
            "rules/mag_stats.smk"
        ],
        "classification_pipeline/jobspec-cfg/rules/mag_stats.smk": [
            "modules/mag_stats.py",
            "modules/busco_parse.py",
            "modules/eukcc_parse.py",
            "modules/xg_parse.py"
        ]
    },
    "isekai-portal/Link-Context-Learning": {
        "Link-Context-Learning/launcher_intelmpi.sh": [
            "start_in_container.sh"
        ]
    },
    "brainlife/app-mrtrix3-preproc": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-LBspectrum_matlab": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-lap-single-example/compile.sh": [
            "build.m"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-dwi2t1-nonlinear": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/bl-network-template-matlab": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-removeTractOutliers": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-track-between-multiple-regions": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-tractanalysisprofiles": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-MBAplotTracts": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-noddi-matlab": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-lap-single-example/compile.sh": [
            "build.m"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-FSLTopupEddy": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-autoalignacpc": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-preparePRF": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-hcp-pipeline": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-convert-tck-to-trk": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-testgradientflip": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-tracking": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-tractseg": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-lap-single-example": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-trk2tck": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-pynets": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-denoise-tensorflow": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "brainlife/app-nobrainer": {
        "app-LBspectrum_matlab/jobspec-cfg/build.m": [
            "main"
        ],
        "app-dipy-afq/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ],
        "app-AFQ-seg/submit.pbs": [
            "main"
        ]
    },
    "Vendea/summer-research-2016": {
        "summer-research-2016/cifar10.sh": [
            "cifar10/LBFGS.py"
        ]
    },
    "brooksjk/Witt_Dillon_alignment_workflow": {
        "Witt_Dillon_alignment_workflow/snakemake_submitter.sh": [
            "Snakefile"
        ]
    },
    "VectorInstitute/FL4Health": {
        "FL4Health/jobspec-cfg/research/picai/central/launch.slrm": [
            "research/picai/central/launch.slrm"
        ],
        "FL4Health/research/picai/central/launch.slrm": [
            "research/picai/central/launch.slrm"
        ]
    },
    "MortenEneberg/Nanopore_WGS": {
        "Nanopore_WGS/code/submit_pbs.sh": [
            "Snakefile",
            "config/config_pbs.yaml"
        ]
    },
    "yinanazhou/lyric-emotion": {
        "lyric-emotion/xlnet_cv_8.sh": [
            "requirements.txt",
            "xlnet_cv.py"
        ],
        "lyric-emotion/bert_cv_8.sh": [
            "requirements.txt",
            "bert_cv.py"
        ],
        "lyric-emotion/xlnet_bs_8_es_4.sh": [
            "requirements.txt",
            "xlnet_cv.py"
        ],
        "lyric-emotion/xlnet_bs_8_es_5.sh": [
            "requirements.txt",
            "xlnet_cv.py"
        ],
        "lyric-emotion/xlnet_cv_16.sh": [
            "requirements.txt",
            "xlnet_cv.py"
        ],
        "lyric-emotion/bert_cv_16.sh": [
            "requirements.txt",
            "bert_cv.py"
        ]
    },
    "rebeccak1/wait_times": {
        "wait_times/wdw.sh": [
            "getWaits.py"
        ]
    },
    "SharuPaul/otb": {
        "otb/otb.lite.template.slurm": [
            "./otb.sh"
        ],
        "otb/jobspec-cfg/otb.sh": [
            "scr/io.sh",
            "./otb.sh",
            "run.nf",
            "otb.sh",
            "scr/check_env.sh"
        ]
    },
    "MaxDu17/CS224n_final": {
        "CS224n_final/sbatch.sh": [
            "run.py"
        ]
    },
    "marco-rosti/CFF-dropStats": {
        "CFF-dropStats/launchDropCount.sh": [
            "combineOutputs.py"
        ]
    },
    "plemeri/InSPyReNet": {
        "InSPyReNet/slurm-submit.sh": [
            "run/Train.py"
        ]
    },
    "megh1241/pdsw_artifacts": {
        "pdsw_artifacts/experiments/job_microbenchmarks.qsub": [
            "./experiments/microbenchmark.py"
        ]
    },
    "megh1241/flamestore": {
        "flamestore/job_benchmarks.qsub": [
            "bin/flamestore",
            "examples/resnet50/client-synthetic.py"
        ]
    },
    "IMCBioinformatics/metatranscriptomics": {
        "metatranscriptomics/pipeline_sbatch.sh": [
            "cluster.json"
        ]
    },
    "MaximeRobeyns/SPItorch": {
        "SPItorch/simplejob.sh": [
            "./job.sh",
            "job.sh",
            "spt/modelling/simulation.py",
            "spt/inference/inference.py"
        ],
        "SPItorch/job.sh": [
            "./job.sh",
            "job.sh",
            "./bin/local_launcher.sh",
            "bin/slurm_launcher.sh"
        ],
        "SPItorch/jobspec-cfg/job.sh": [
            "./job.sh",
            "job.sh",
            "./bin/local_launcher.sh",
            "bin/slurm_launcher.sh"
        ]
    },
    "shamoons/deep-learning-lstm": {
        "deep-learning-lstm/run1.sh": [
            "Q1.py"
        ],
        "deep-learning-lstm/run5.sh": [
            "Q5_Train.py"
        ],
        "deep-learning-lstm/run3.sh": [
            "Q3.py"
        ],
        "deep-learning-lstm/run2.sh": [
            "Q2.py"
        ]
    },
    "pabloabur/brian2-sims": {
        "brian2-sims/scripts/lsm_job.sh": [
            "run_simulation.py"
        ]
    },
    "jcblemai/COVID-19_italy-vaccination-oc": {
        "COVID-19_italy-vaccination-oc/batch_scripts/AGpost-medium-death.run": [
            "main-agpost.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/big.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/EQ_medium.run": [
            "main-eq.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/medium.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_medium_infection.run": [
            "main-ag.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AGpost-medium-infection.run": [
            "main-agpost.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/small.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_small_death.run": [
            "main-ag.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_medium_death.run": [
            "main-ag.py",
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_small_infection.run": [
            "main-ag.py",
            "main.py"
        ],
        "influpaint/inpaint.run": [
            "main.py"
        ],
        "influpaint/train.run": [
            "main.py"
        ]
    },
    "jcblemai/influpaint": {
        "COVID-19_italy-vaccination-oc/batch_scripts/AGpost-medium-death.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/big.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/EQ_medium.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/medium.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_medium_infection.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AGpost-medium-infection.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/small.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_small_death.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_medium_death.run": [
            "main.py"
        ],
        "COVID-19_italy-vaccination-oc/batch_scripts/AG_small_infection.run": [
            "main.py"
        ],
        "influpaint/inpaint.run": [
            "main.py"
        ],
        "influpaint/train.run": [
            "main.py"
        ]
    },
    "mrgransky/DARIAH-FI": {
        "DARIAH-FI/narvi_sbatch_concat.sh": [
            "concat_dfs.py"
        ],
        "DARIAH-FI/jobspec-cfg/concat_dfs.py": [
            "concat_dfs.py",
            "tokenizer_utils.py"
        ]
    },
    "PsuAstro528/lab8-start": {
        "lab7-start/old/ex2.pbs": [
            "ex2_run_nb.jl"
        ],
        "lab6-start-Spring2019/ex2.pbs": [
            "ex2_run_nb.jl"
        ]
    },
    "PsuAstro528/lab7-start": {
        "lab7-start/ex1_job_array.slurm": [
            "ex1_job_array.jl"
        ],
        "lab7-start/old/ex1_serial.pbs": [
            "ex1_serial.jl"
        ],
        "lab7-start/old/ex1_parallel.pbs": [
            "ex1_parallel.jl"
        ],
        "lab7-start/old/ex1_job_array.pbs": [
            "ex1_job_array.jl"
        ],
        "lab7-start/old/ex2.pbs": [
            "ex2_run_nb.jl"
        ],
        "lab6-start-Spring2019/ex1_serial.pbs": [
            "ex1_serial.jl"
        ],
        "lab6-start-Spring2019/ex1_parallel.pbs": [
            "ex1_parallel.jl"
        ],
        "lab6-start-Spring2019/ex1_job_array.pbs": [
            "ex1_job_array.jl"
        ],
        "lab6-start-Spring2019/ex2.pbs": [
            "ex2_run_nb.jl"
        ]
    },
    "PsuAstro528/project-elizabethg60": {
        "project-elizabethg60/parallel_onenode_v2.slurm": [
            "parallel_v2.jl"
        ],
        "project-elizabethg60/serial_v1.slurm": [
            "serial_v1.jl"
        ]
    },
    "PsuAstro528/lab6-start-Spring2019": {
        "lab7-start/ex1_job_array.slurm": [
            "ex1_job_array.jl"
        ],
        "lab7-start/old/ex1_serial.pbs": [
            "ex1_serial.jl"
        ],
        "lab7-start/old/ex1_parallel.pbs": [
            "ex1_parallel.jl"
        ],
        "lab7-start/old/ex1_job_array.pbs": [
            "ex1_job_array.jl"
        ],
        "lab7-start/old/ex2.pbs": [
            "ex2_run_nb.jl"
        ],
        "lab6-start-Spring2019/ex1_serial.pbs": [
            "ex1_serial.jl"
        ],
        "lab6-start-Spring2019/ex1_parallel.pbs": [
            "ex1_parallel.jl"
        ],
        "lab6-start-Spring2019/ex1_job_array.pbs": [
            "ex1_job_array.jl"
        ],
        "lab6-start-Spring2019/ex2.pbs": [
            "ex2_run_nb.jl"
        ]
    },
    "PsuAstro528/lab7-start-Spring2019": {
        "lab7-start-Spring2019/setup_gpu.pbs": [
            "test_gpu.jl"
        ]
    },
    "armahmood/repn-learning": {
        "repn-learning/run.sh": [
            "learner_xrel.py"
        ]
    },
    "maryamnz/moss-phylo2023": {
        "moss-phylo2023/create_venv.sh": [
            "moss_phylo_stub.srun"
        ]
    },
    "akira-nair/multiomic-model-tcga": {
        "multiomic-model-tcga/models/MAVI/simple_model.sh": [
            "models/MAVI/simple_model.py"
        ]
    },
    "NYU-DICE-Lab/CorrelatedSampleRS": {
        "CorrelatedSampleRS/slurm_train_4.sh": [
            "train_smooth.py"
        ],
        "CorrelatedSampleRS/infer_new_smoothmax_uniform.sh": [
            "infer_certify_pretrained_salman_uncorrelated.py",
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/infer.sh": [
            "infer_certify.py"
        ],
        "CorrelatedSampleRS/infer_new.sh": [
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/salman_infer.sh": [
            "infer_certify.py",
            "smoothadv/certify.py"
        ],
        "CorrelatedSampleRS/infer_new_smoothmax_rp.sh": [
            "infer_certify_pretrained_salman_uncorrelated.py",
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/infer_wo_max.sh": [
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/infer_new_smoothmax.sh": [
            "infer_certify_pretrained_salman_uncorrelated.py",
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/infer_new_2.sh": [
            "infer_certify_pretrained_salman_uncorrelated.py",
            "infer_certify_pretrained_salman.py"
        ],
        "CorrelatedSampleRS/train_cifar.sh": [
            "train_smooth.py"
        ]
    },
    "NYU-DICE-Lab/open_clip": {
        "open_clip/batch/yfcc-not-in1k.sbatch": [
            "src/script/run-singularity-rocm.bash",
            "src/training/main.py"
        ],
        "open_clip/batch/yfcc-lit-rn50timm.sbatch": [
            "src/script/run-singularity.bash",
            "src/training/main.py"
        ],
        "open_clip/batch/yfcc-2m.sbatch": [
            "src/script/run-singularity.bash",
            "src/training/main.py"
        ]
    },
    "HarrisonWilde/Foundations-of-Bayesian-Learning-from-Synthetic-Data": {
        "Foundations-of-Bayesian-Learning-from-Synthetic-Data/sbatch/logistic_heart.sbatch": [
            "run.jl"
        ]
    },
    "pouya-codes/singularity_auto_annotate": {
        "singularity_auto_annotate/toreadme.sh": [
            "README.md",
            "app.py"
        ],
        "singularity_auto_annotate/jobspec-cfg/README.md": [
            "app.py"
        ],
        "singularity_extract_annotated_patches/toreadme.sh": [
            "README.md",
            "app.py"
        ],
        "singularity_extract_annotated_patches/jobspec-cfg/README.md": [
            "app.py"
        ]
    },
    "pouya-codes/singularity_ocr": {
        "singularity_auto_annotate/toreadme.sh": [
            "README.md"
        ],
        "singularity_extract_annotated_patches/toreadme.sh": [
            "README.md"
        ]
    },
    "pouya-codes/singularity_extract_annotated_patches": {
        "singularity_auto_annotate/toreadme.sh": [
            "README.md",
            "app.py"
        ],
        "singularity_auto_annotate/jobspec-cfg/README.md": [
            "app.py"
        ],
        "singularity_extract_annotated_patches/toreadme.sh": [
            "README.md",
            "app.py"
        ],
        "singularity_extract_annotated_patches/jobspec-cfg/README.md": [
            "app.py"
        ]
    },
    "Julien-pour/evaluate_model": {
        "evaluate_model/extract_feat.sh": [
            "extract_feat.py"
        ]
    },
    "Harry-Yang0518/GLMC": {
        "GLMC/script/train_new.sh": [
            "main_wb.py"
        ],
        "GLMC/script/nc_cf100.sh": [
            "main_nc.py"
        ]
    },
    "njohnso6/gene_edits_fidelity": {
        "gene_edits_fidelity/batchscript.sh": [
            "Snakefile_vcf"
        ]
    },
    "Jacob-Zhou/gecdi": {
        "gecdi/pred.sh": [
            "pred.sh",
            "scripts/set_environment.sh",
            "intervened_decode.py",
            "scripts/predict_utils/para_to_input.py",
            "eval_pred.py",
            "scripts/predict_utils/retokenize.py",
            "tools/m2scorer/scripts/m2scorer.py",
            "scripts/set_py36_environment.sh"
        ],
        "gecdi/jobspec-cfg/pred.sh": [
            "pred.sh",
            "scripts/set_environment.sh",
            "intervened_decode.py",
            "scripts/predict_utils/para_to_input.py",
            "eval_pred.py",
            "scripts/predict_utils/retokenize.py",
            "tools/m2scorer/scripts/m2scorer.py",
            "scripts/set_py36_environment.sh"
        ],
        "gecdi/jobspec-cfg/scripts/set_environment.sh": [
            "requirements.txt"
        ]
    },
    "iliaschalkidis/flash-roberta": {
        "flash-roberta/demo_mlm.sh": [
            "demo_mlm.py"
        ],
        "flash-roberta/demo_train_mlm_hf.sh": [
            "run_mlm.py"
        ]
    },
    "DeepRainProject/pystager": {
        "pystager/run_script.sh": [
            "main.py"
        ]
    },
    "opencube-horizon/polytope-benchmark": {
        "polytope-benchmark/build.sh": [
            "docker/requirements.txt"
        ]
    },
    "sigbjobo/DNA_Hybrid_particle_field": {
        "PETSC_tests/ex2/Jobscript.sh": [
            "test"
        ]
    },
    "kowaalczyk/reformer-tts": {
        "reformer-tts/jobs/train_entropy_home.sbatch": [
            "environment.yml"
        ],
        "reformer-tts/jobs/train_entropy.sbatch": [
            "environment.yml"
        ],
        "reformer-tts/jobs/train_entropy_home_arnold.sbatch": [
            "environment.yml"
        ]
    },
    "wood-b/nersc-pytorch-build": {
        "nersc-pytorch-build/install.sh": [
            "config.sh",
            "./build_env.sh",
            "./build_pytorch.sh",
            "./build_apex.sh",
            "./build_geometric.sh",
            "./build_mpi4py.sh"
        ],
        "nersc-pytorch-build/install_cgpu.sh": [
            "config_cgpu.sh",
            "./build_env.sh",
            "./build_pytorch.sh",
            "./build_apex.sh",
            "./build_geometric.sh",
            "./build_mpi4py.sh"
        ]
    },
    "NOAA-PSL/gsi-jedi-cycling": {
        "gsi-jedi-cycling/job.sh": [
            "checkdate.py",
            "main.sh",
            "./main_controlanal.sh",
            "./main.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/main_controlanal.sh": [
            "config.sh",
            "pickinfo.sh",
            "blendinc.sh",
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "hpss.sh",
            "job_hpss.sh",
            "job.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/main.sh": [
            "config.sh",
            "pickinfo.sh",
            "blendinc.sh",
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "hpss.sh",
            "job_hpss.sh",
            "job.sh"
        ],
        "ufs_enkf_psonly/job.sh": [
            "./main.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/config.sh": [
            "./main.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/main.sh": [
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "hpss.sh",
            "job_hpss.sh",
            "config.sh",
            "job.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/job.sh": [
            "./main.sh"
        ]
    },
    "NOAA-PSL/ufs_enkf_psonly": {
        "gsi-jedi-cycling/job.sh": [
            "checkdate.py",
            "main.sh",
            "./main.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/main_controlanal.sh": [
            "config.sh",
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "job.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/config.sh": [
            "checkdate.py",
            "main.sh",
            "./main.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/main.sh": [
            "config.sh",
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "job.sh"
        ],
        "gsi-jedi-cycling/jobspec-cfg/job.sh": [
            "checkdate.py",
            "main.sh",
            "./main.sh"
        ],
        "ufs_enkf_psonly/job.sh": [
            "./main.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/config.sh": [
            "./main.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/main.sh": [
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "config.sh",
            "job.sh"
        ],
        "ufs_enkf_psonly/jobspec-cfg/job.sh": [
            "./main.sh"
        ]
    },
    "ZealYa/ComputationOffloadingRL": {
        "ComputationOffloadingRL/matlabJob_GPU.sh": [
            "train_dqn.m"
        ],
        "ComputationOffloadingRL/matlabJob_GPU_ddpg.sh": [
            "train_ddpg.m"
        ]
    },
    "zphang/bert": {
        "bert/prince.sbatch": [
            "run_classifier.py"
        ]
    },
    "MetaGenAI/multimodal-transflower": {
        "multimodal-transflower/jobspec-cfg/script_generate.sh": [
            "inference/generate.py"
        ],
        "multimodal-transflower/jobspec-cfg/script_train.sh": [
            "training/train.py"
        ],
        "multimodal-transflower/jobspec-cfg/script_train_dev.sh": [
            "training/train.py"
        ],
        "multimodal-transflower/jobspec-cfg/feature_extraction/audio_feature_extraction_test.sh": [
            "./feature_extraction/process_audio.py",
            "./feature_extraction/generate_ddc_features.py",
            "./feature_extraction/extract_transform.py",
            "./feature_extraction/apply_transforms.py",
            "./feature_extraction/combine_feats.py",
            "./feature_extraction/extract_transform2.py",
            "./feature_extraction/script_to_list_filenames"
        ],
        "multimodal-transflower/jobspec-cfg/feature_extraction/process_tw_data.sh": [
            "./feature_extraction/process_filenames.py",
            "feature_extraction/extract_transform2.py",
            "feature_extraction/apply_transforms.py",
            "feature_extraction/pad_features.py",
            "feature_extraction/filter_out_by_length.py",
            "./feature_extraction/script_to_list_filenames",
            "feature_extraction/trim_seqs.py",
            "./feature_extraction/combine_feats.py"
        ],
        "multimodal-transflower/misc/slurm_scripts/slurm_script_generate_array.slurm": [
            "./script_generate.sh"
        ],
        "multimodal-transflower/misc/slurm_scripts/slurm_script_generate_array_rs.slurm": [
            "./script_generate.sh"
        ],
        "multimodal-transflower/misc/slurm_scripts/slurm_script_feature_extract.slurm": [
            "./feature_extraction/audio_feature_extraction_test.sh"
        ],
        "multimodal-transflower/misc/slurm_scripts/slurm_script2s.slurm": [
            "./script_train.sh",
            "./script_train_dev.sh"
        ],
        "multimodal-transflower/misc/slurm_scripts/process_data.slurm": [
            "./feature_extraction/process_tw_data.sh"
        ],
        "multimodal-transflower/misc/slurm_scripts/slurm_script_dev.slurm": [
            "./script_train.sh",
            "./script_train_dev.sh"
        ]
    },
    "holajoa/Adaptor-VL-SSL": {
        "Adaptor-VL-SSL/shell/finetune-covidx.sh": [
            "./finetune.py"
        ],
        "Adaptor-VL-SSL/shell/segment-siim.sh": [
            "./segment.py"
        ],
        "Adaptor-VL-SSL/shell/segment-rsna.sh": [
            "./segment.py"
        ]
    },
    "UL-FRI-NLP-2023-2024/ul-fri-nlp-course-project-f1": {
        "ul-fri-nlp-course-project-f1/src/scripts/hp_rag.sh": [
            "src/hp_rag.py"
        ]
    },
    "MaxMax2016/HifiDiff": {
        "DeepFilterNet/scripts/sbatch_train.sh": [
            "requirements.txt"
        ],
        "HifiDiff/scripts/kagayaki/infer_priorgrad.sh": [
            "inference.py",
            "filelists/test.txt",
            "filelists/test_bali.txt",
            "filelists/test_batak.txt",
            "filelists/test_jawa.txt",
            "filelists/test_sunda.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r9.sh": [
            "__main__.py",
            "configs/hifidiffv18r9.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv11r2.sh": [
            "__main__.py",
            "configs/hifidiffv11r2.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv9r6.sh": [
            "__main__.py",
            "configs/hifidiffv9r6.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/infer_hifidiffv18r4_mstft.sh": [
            "inference.py",
            "filelists/test.txt",
            "filelists/test_bali.txt",
            "filelists/test_batak.txt",
            "filelists/test_jawa.txt",
            "filelists/test_sunda.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r4.sh": [
            "__main__.py",
            "configs/hifidiffv18r4.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r4_mstft_c64.sh": [
            "__main__.py",
            "configs/hifidiffv18r4_mstft_c64.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_priorgrad.sh": [
            "__main__.py",
            "configs/priorgrad.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r7.sh": [
            "__main__.py",
            "configs/hifidiffv18r7.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r4_mstft_c128_t200.sh": [
            "__main__.py",
            "configs/hifidiffv18r4_mstft_c128_t200.py",
            "filelists/train.txt"
        ],
        "HifiDiff/scripts/kagayaki/infer_diffwave.sh": [
            "inference.py",
            "filelists/test.txt",
            "filelists/test_bali.txt",
            "filelists/test_batak.txt",
            "filelists/test_jawa.txt",
            "filelists/test_sunda.txt"
        ],
        "HifiDiff/scripts/kagayaki/train_hifidiffv18r4_mstft.sh": [
            "__main__.py",
            "configs/hifidiffv18r4_mstft.py",
            "filelists/train.txt"
        ]
    },
    "MaxMax2016/bwe_historical_recordings": {
        "bwe_historical_recordings/train_bwe.sh": [
            "train_bwe.py"
        ]
    },
    "BruceResearch/BiTr-Unet": {
        "BiTr-Unet/train.sbatch": [
            "train.py"
        ]
    },
    "neverfox/GEDI-BDL": {
        "GEDI-BDL/cluster/job_array_regression_crossval_ensemble.sh": [
            "torch_code/train.py"
        ]
    },
    "Mar111tiN/RNAseq": {
        "RNAseq/SLURM.sh": [
            "config/cluster/RNAseq-cluster.json"
        ]
    },
    "Mar111tiN/somVarWES": {
        "somVarWES/cacheSLURM.sh": [
            "cacheSnakefile",
            "configs/cluster/PONcache-cluster.json"
        ],
        "somVarWES/SLURMDRMAA.sh": [
            "configs/cluster/somvar-cluster.json"
        ],
        "somVarWES/SLURM.sh": [
            "configs/cluster/somvar-cluster.json"
        ],
        "somVarWES/cacheDRMAA.sh": [
            "cacheSnakefile",
            "configs/cluster/PONcache-cluster.json"
        ],
        "dockersnake/SLURMcluster.sh": [
            "configs/cluster/somvar-cluster.json"
        ]
    },
    "Mar111tiN/dockersnake": {
        "somVarWES/SLURMDRMAA.sh": [
            "configs/cluster/somvar-cluster.json"
        ],
        "somVarWES/SLURM.sh": [
            "configs/cluster/somvar-cluster.json"
        ],
        "dockersnake/SLURMcluster.sh": [
            "configs/cluster/somvar-cluster.json"
        ],
        "dockersnake/makeEBcacheSLURM.sh": [
            "Snakefiles/EBcacheSnakefile",
            "configs/cluster/ebcache-cluster.json"
        ]
    },
    "Mar111tiN/bam2fastq": {
        "bam2fastq/SLURM.sh": [
            "cluster.json"
        ]
    },
    "Mar111tiN/cellrangersnake": {
        "cellrangersnake/SLURM.sh": [
            "configs/cluster/cellranger-cluster.json"
        ],
        "cellrangersnake/SLURMtest.sh": [
            "Snaketest",
            "test/test-cluster.json"
        ]
    },
    "zhpinkman/explagraphgen": {
        "explagraphgen/general.sh": [
            "scripts/train_graph_gen.sh",
            "scripts/train_graph_max_margin.sh",
            "scripts/train_graph_contrastive.sh",
            "scripts/train_graph_gen_pos_perturbed.sh"
        ],
        "explagraphgen/jobspec-cfg/scripts/train_graph_max_margin.sh": [
            "src/train_graph_gen_max_margin.py"
        ],
        "explagraphgen/jobspec-cfg/scripts/train_graph_gen.sh": [
            "src/train_graph_gen.py"
        ],
        "explagraphgen/jobspec-cfg/scripts/train_graph_contrastive.sh": [
            "src/train_graph_gen_contrastive.py"
        ],
        "explagraphgen/jobspec-cfg/scripts/train_graph_gen_pos_perturbed.sh": [
            "src/train_graph_gen_pos_perturbed.py"
        ]
    },
    "DFKI-NLP/sam": {
        "sam/training_scripts/cluster/batch.sh": [
            "training_scripts/cluster/wrapper.sh",
            "training_scripts/sweeps/start_agent.py"
        ],
        "sam/jobspec-cfg/training_scripts/cluster/wrapper.sh": [
            "requirements.txt"
        ]
    },
    "LindaNab/simexvsmecor": {
        "simexvsmecor/input/runsim.sh": [
            "./input/output.R"
        ]
    },
    "gridapapps/GridapMHD.jl": {
        "GridapGeosciences.jl/driver/mpi/GalewskyShallowWaterThetaMethod/compilejob.sh": [
            "compile/compile.jl"
        ]
    },
    "ucd-plse/MPAS-tuning": {
        "MPAS-tuning/scripts/build_MPAS_init_atm_intel.sh": [
            "./scripts/set_MPAS_env_intel.sh"
        ],
        "MPAS-tuning/scripts/build_MPAS_atm_intel.sh": [
            "./scripts/set_MPAS_env_intel.sh"
        ],
        "MPAS-tuning/scripts/build_MPAS_atm_intel_debug.sh": [
            "./scripts/set_MPAS_env_intel.sh"
        ],
        "MPAS-tuning/scripts/build_MPAS_atm_intel_gptl.sh": [
            "./scripts/set_MPAS_env_intel.sh"
        ]
    },
    "ralf-tambets/coloc": {
        "coloc/run_bioinformatics_gwas.sh": [
            "main_gwas.nf"
        ],
        "coloc/run_bioinformatics_pqtl.sh": [
            "main_pqtl.nf"
        ],
        "coloc/run_pqtl.sh": [
            "main_pqtl.nf"
        ],
        "coloc/run_gwas.sh": [
            "main_gwas.nf"
        ]
    },
    "ajitgupta7/DVRPSR_PPO": {
        "DVRPSR_PPO/config_hpc.txt": [
            "run_model.py"
        ]
    },
    "mabdullahsoyturk/gem5": {
        "gem5/slurm_scripts/monte_carlo_submit.sh": [
            "run.py"
        ],
        "gem5/slurm_scripts/sobel_submit.sh": [
            "run.py"
        ]
    },
    "slanglab/nmt_hpsg": {
        "nmt_hpsg/slurm/export.sh": [
            "src/wikiwoods.py"
        ]
    },
    "i4Ds/radio_sunburst_detector": {
        "radio_sunburst_detector/sbatch_main.sh": [
            "main.py"
        ],
        "radio_sunburst_detector/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "LAION-AI/safety-pipeline": {
        "safety-pipeline/dd.sh": [
            "main.py"
        ]
    },
    "daniel-macrae/DL_NTCP_Xerostomia": {
        "DL_NTCP_Xerostomia/gpu_submit.sh": [
            "main.py"
        ],
        "DL_NTCP_Xerostomia/jobspec-cfg/main.py": [
            "lr_finder.py"
        ]
    },
    "SpaceHunterInf/t5dst": {
        "t5dst/slurm.sh": [
            "T5.py"
        ]
    },
    "cwig/start_follow_read": {
        "start_follow_read/slurm_examples/training.sh": [
            "continuous_validation.py",
            "sample_config.yaml",
            "continuous_sol_training.py",
            "continuous_lf_training.py",
            "continuous_hw_training.py"
        ]
    },
    "iroblesrazzaq/stars-hackathon": {
        "stars-hackathon/submit_classifier.sh": [
            "MergeNeuralNetwork.py"
        ]
    },
    "sunxfancy/IPRA-exp": {
        "IPRA-exp/benchmarks/hpcc-leveldb.sh": [
            "make"
        ],
        "IPRA-exp/benchmarks/hpcc-mysql.sh": [
            "make"
        ],
        "IPRA-exp/benchmarks/bench.sh": [
            "make"
        ],
        "IPRA-exp/benchmarks/hpcc-mongodb.sh": [
            "make"
        ],
        "IPRA-exp/benchmarks/hpcc-clang.sh": [
            "make"
        ],
        "IPRA-exp/benchmarks/hpcc-gcc.sh": [
            "make"
        ]
    },
    "bluehope/MXMNet": {
        "MXMNet/run.sh": [
            "main.py"
        ]
    },
    "deephdc/deep-hpc": {
        "deep-hpc/misc/deepaas-hpc.sh": [
            "LICENSE"
        ]
    },
    "salarim/Semi-Supervised-CL": {
        "Semi-Supervised-CL/job.sh": [
            "requirements.txt",
            "main_semicl.py",
            "main_linear.py"
        ]
    },
    "NKI-AI/ahcore-old": {
        "ahcore-old/scripts/example_hparam.sh": [
            "tools/train.py"
        ]
    },
    "NKI-AI/dmpnn-matchmaker": {
        "dmpnn-matchmaker/submit-ray-cluster.sbatch": [
            "start-head.sh",
            "start-worker.sh",
            "hyperparameter_optimization.py"
        ]
    },
    "inwaves/graphtrans": {
        "graphtrans/scripts/scale_GNN.sh": [
            "main.py",
            "configs/NCI1/gcn/scaled_layers_constant_embedding.yml",
            "configs/NCI1/gcn/scaled_embedding_constant_layers.yml",
            "configs/NCI1/gcn/scaled_layers_scaled_embedding.yml",
            "configs/NCI109/gcn/scaled_layers_constant_embedding.yml",
            "configs/NCI109/gcn/scaled_embedding_constant_layers.yml",
            "configs/NCI109/gcn/scaled_layers_scaled_embedding.yml"
        ],
        "graphtrans/scripts/baseline.sh": [
            "main.py",
            "configs/NCI1/gcn/base.yml",
            "configs/NCI1/gcn-virtual/base.yml",
            "configs/NCI1/gnn-transformer/no-virtual/gd=128+gdp=0.1+tdp=0.1+l=3+cosine.yml",
            "configs/NCI1/gnn-transformer/no-virtual/gin+gdp=0.1+tdp=0.1+l=4+cosine.yml",
            "configs/NCI1/transformer-gnn/no-virtual/gd=128+gdp=0.1+tdp=0.1+l=3+cosine.yml",
            "configs/NCI1/transformer-gnn/no-virtual/gin+gdp=0.1+tdp=0.1+l=4+cosine.yml",
            "configs/NCI1/transformer/pooling=cls.yml",
            "configs/NCI109/gcn/base.yml",
            "configs/NCI109/gcn-virtual/base.yml",
            "configs/NCI109/gnn-transformer/no-virtual/gd=128+gdp=0.1+tdp=0.1+l=3+cosine.yml",
            "configs/NCI109/gnn-transformer/no-virtual/gin+gdp=0.1+tdp=0.1+l=4+cosine.yml",
            "configs/NCI109/transformer/pooling=cls.yml"
        ]
    },
    "AW14Saurabh/pointnet": {
        "pointnet/slurm.sh": [
            "train.py"
        ],
        "pointnet/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "azeemhaque/CycleSafe---A-Deep-Learning-Project": {
        "CycleSafe---A-Deep-Learning-Project/run_pspnet_outputs.sh": [
            "pspnet102.py"
        ]
    },
    "juthoma22/imbag": {
        "imbag/jobs/dataset.job": [
            "src/create_datasets.py"
        ],
        "imbag/jobs/clip.job": [
            "src/ImbagClip.py"
        ]
    },
    "borevitzlab/brachy-genotyping": {
        "brachy-genotyping/raijin/runit.sh": [
            "raijin/modules.sh"
        ],
        "brachy-genotyping/raijin/submit.sh": [
            "raijin/modules.sh",
            "raijin/cluster.yaml",
            "raijin/jobscript.sh"
        ],
        "brachy-genotyping/jobspec-cfg/raijin/jobscript.sh": [
            "raijin/modules.sh"
        ]
    },
    "Joshua-Ren/P4_Graph": {
        "P4_Graph/bashes/hpc_nil_run.sh": [
            "main_nil.py"
        ]
    },
    "dkfz-b060/gb_code": {
        "gb_code/mouse_RNAseq_01_process.sh": [
            "mouse_RNAseq_01_process.sh"
        ],
        "gb_code/jobspec-cfg/mouse_RNAseq_01_process.sh": [
            "mouse_RNAseq_01_process.sh"
        ]
    },
    "mb010/EquivariantSelfAttention": {
        "EquivariantSelfAttention/strain.sh": [
            "configs/experiment_configs.txt",
            "train.py"
        ]
    },
    "paul-levy/SF_diversity": {
        "SF_diversity/batchFitHPC.sh": [
            "model_responses_pytorch.py"
        ],
        "SF_diversity/jobspec-cfg/model_responses_pytorch.py": [
            "batchFitUnix.sh",
            "modCompare.ipynb"
        ]
    },
    "diplomacy/research": {
        "research/diplomacy_research/scripts/launch_build_dataset.sh": [
            "diplomacy_research/scripts/build_dataset.py"
        ]
    },
    "gabriele-inghirami/compare_pythia_versions_in_smash": {
        "compare_pythia_versions_in_smash/postproc_smash.slurm": [
            "compute_observables.py"
        ],
        "compare_pythia_versions_in_smash/jobspec-cfg/compute_observables.py": [
            "./compute_observables.py"
        ]
    },
    "KBodolai/GEDI-BDL": {
        "GEDI-BDL/cluster/job_array_regression_crossval_ensemble.sh": [
            "torch_code/train.py"
        ]
    },
    "adammoss/montepython_public": {
        "montepython_public/pctest.sh": [
            "montepython/MontePython.py"
        ]
    },
    "rbawden/Token_QuestEval": {
        "Token_QuestEval/scripts/train_test.slurm": [
            "scripts/finetune_t5_mt.py"
        ],
        "Token_QuestEval/scripts/train_paraphrase.slurm": [
            "scripts/finetune_t5_mt.py"
        ],
        "Token_QuestEval/scripts/train_paraphrase2.slurm": [
            "scripts/finetune_t5.py"
        ],
        "Token_QuestEval/scripts/train_mt.slurm": [
            "scripts/finetune_t5.py"
        ],
        "Token_QuestEval/scripts/train_paraphrase1.slurm": [
            "scripts/finetune_t5.py"
        ]
    },
    "SeonjeongHwang/coqa_cqa": {
        "coqa_cqa/run.sh": [
            "run_cqa.py",
            "run_cqa_inference.py",
            "tool/convert_coqa.py",
            "tool/eval_coqa.py"
        ]
    },
    "dib-lab/charcoal": {
        "charcoal/snakemake.slurm": [
            "conf/gtdb-contam-dna.conf",
            "eval/tara-delmont-relaxed.conf",
            "eval/tara-delmont-strict.conf",
            "conf/ibd2.conf",
            "conf/tara-delmont.conf"
        ],
        "charcoal/jobspec-cfg/conf/tara-delmont.conf": [
            "conf/tara-delmont-all-list.txt",
            "conf/tara-delmont-provided-lineages.csv"
        ],
        "charcoal/jobspec-cfg/conf/ibd2.conf": [
            "conf/ibd2/genome-list.txt",
            "conf/ibd2.provided_lineages"
        ],
        "charcoal/jobspec-cfg/eval/tara-delmont-relaxed.conf": [
            "conf/tara-delmont-all-list.txt",
            "conf/tara-delmont-provided-lineages.csv"
        ],
        "charcoal/jobspec-cfg/eval/tara-delmont-strict.conf": [
            "conf/tara-delmont-all-list.txt",
            "conf/tara-delmont-provided-lineages.csv"
        ]
    },
    "levrex/EHR-Clustering-RA": {
        "EHR-Clustering-RA/src/3_downstream/SHAP_job.sh": [
            "src/3_downstream/GPU_Shap.py"
        ],
        "EHR-Clustering-RA/src/3_downstream/computation_das.sh": [
            "src/3_downstream/Compute_DAS.py"
        ],
        "EHR-Clustering-RA/src/3_downstream/Bootstrapping.sh": [
            "src/3_downstream/Bootstrapping_OnlyNumeric.py",
            "src/3_downstream/Bootstrapping_OnlyCategoric.py"
        ]
    },
    "nagaharago/LaMPP": {
        "LaMPP/inference_modelchain.sh": [
            "image_segmentation/RedNet_inference.py"
        ],
        "LaMPP/blip-llm-inference_squid.sh": [
            "image_segmentation/blip-llm_inference.py"
        ],
        "LaMPP/inference_lampp.sh": [
            "image_segmentation/RedNet_inference.py"
        ]
    },
    "gonfeco/dask_cluster_ft3": {
        "dask_cluster_ft3/dask_submit_cluster.sh": [
            "./dask_cluster.py",
            "./PreLoad.py"
        ],
        "dask_cluster_ft3/dask_submit_scheduler.sh": [
            "./dask_cluster.py",
            "./PreLoad.py"
        ],
        "dask_cluster_ft3/dask_submit_all.sh": [
            "./dask_cluster.py",
            "./inc_dask.py",
            "./wraper.sh"
        ],
        "dask_cluster_ft3/dask_submit_workers.sh": [
            "./dask_cluster.py",
            "./PreLoad.py"
        ],
        "dask_cluster_ft3/jobspec-cfg/wraper.sh": [
            "./inc_dask.py",
            "./dask_cluster.py",
            "./PreLoad.py"
        ]
    },
    "WilsonSayresLab/PopInf": {
        "PopInf/snakemake_PopInf_slurm.sh": [
            "snakemake_PopInf_slurm.sh",
            "Snakefile",
            "make_merge_list.py",
            "make_par.py",
            "pca_inferred_ancestry_report.R"
        ],
        "PopInf/jobspec-cfg/snakemake_PopInf_slurm.sh": [
            "snakemake_PopInf_slurm.sh",
            "Snakefile",
            "make_merge_list.py",
            "make_par.py",
            "pca_inferred_ancestry_report.R"
        ],
        "PopInf/jobspec-cfg/pca_inferred_ancestry_report.R": [
            "pca_inferred_ancestry_report.R"
        ],
        "PopInf/jobspec-cfg/make_merge_list.py": [
            "make_merge_list.py"
        ],
        "PopInf/jobspec-cfg/make_par.py": [
            "make_par.py"
        ]
    },
    "sedab/PathCNN": {
        "PathCNN/run_tsne.sh": [
            "tsne.py"
        ]
    },
    "DCAN-Labs/CABINET": {
        "CABINET/run.sh": [
            "./run.py"
        ]
    },
    "EMBEDDIA/eunlg-with-neural-ordering": {
        "eunlg-with-neural-ordering/bulk_gen_ukko.sh": [
            "eunlg/bulk_generate.py"
        ]
    },
    "blueted2/utwente-acvpr-gcl_sem": {
        "utwente-acvpr-gcl_sem/jobs/train_with_masks.sbatch": [
            "train.py"
        ],
        "utwente-acvpr-gcl_sem/jobs/train_with_channels.sbatch": [
            "train.py"
        ]
    },
    "sdrobert/scpc": {
        "scpc/jobspec-cfg/run.sh": [
            "scripts/preamble.sh",
            "resources/converted_aligned_phones.zip",
            "resources/train_clean_100_train_subset.txt",
            "resources/train_clean_100_test_subset.txt",
            "conf/pca.yaml"
        ],
        "scpc/jobspec-cfg/scripts/cc_run.sh": [
            "./scripts/cc_run.sh",
            "./scripts/zrc_run.sh",
            "run.sh",
            "scripts/cc_env.sh"
        ],
        "scpc/jobspec-cfg/scripts/zrc_run.sh": [
            "scripts/preamble.sh",
            "conf/zrc.params.template.yaml",
            "conf/zrc.meta.template.yaml"
        ],
        "scpc/scripts/cc_run.sh": [
            "./scripts/cc_run.sh",
            "./scripts/zrc_run.sh",
            "run.sh",
            "scripts/cc_env.sh"
        ]
    },
    "always-blue-DL-FA23/video-prediction": {
        "video-prediction/job_2gpu.slurm": [
            "main_semseg_2.py"
        ],
        "video-prediction/job_hidden.slurm": [
            "Hidden_dataset.py"
        ]
    },
    "lilymagnus/dynamics_flamingo": {
        "dynamics_flamingo/batch.sh": [
            "accretion.py"
        ]
    },
    "adoodles/TrackToLearn": {
        "TrackToLearn/cc_scripts/sac_search_exp2_fibercup.sh": [
            "TrackToLearn/searchers/sac_searcher.py"
        ],
        "TrackToLearn/cc_scripts/sac_search_exp3_ismrm2015.sh": [
            "TrackToLearn/searchers/sac_searcher.py"
        ],
        "TrackToLearn/cc_scripts/ppo_search_exp1_ismrm2015.sh": [
            "TrackToLearn/searchers/ppo_searcher.py"
        ],
        "TrackToLearn/cc_scripts/a2c_search_exp3_ismrm2015.sh": [
            "TrackToLearn/searchers/a2c_searcher.py"
        ],
        "TrackToLearn/cc_scripts/trpo_search_exp3_ismrm2015.sh": [
            "TrackToLearn/searchers/trpo_searcher.py"
        ],
        "TrackToLearn/cc_scripts/acktr_search_exp3_fibercup.sh": [
            "TrackToLearn/searchers/acktr_searcher.py"
        ],
        "TrackToLearn/cc_scripts/td3_search_exp1_ismrm2015.sh": [
            "TrackToLearn/searchers/td3_searcher.py"
        ],
        "TrackToLearn/cc_scripts/trpo_search_exp3_fibercup.sh": [
            "TrackToLearn/searchers/trpo_searcher.py"
        ],
        "TrackToLearn/cc_scripts/trpo_search_exp2_ismrm2015.sh": [
            "TrackToLearn/searchers/trpo_searcher.py"
        ],
        "TrackToLearn/cc_scripts/sac_auto_search_exp4_2dirs_fibercup.sh": [
            "TrackToLearn/searchers/sac_auto_searcher.py"
        ],
        "TrackToLearn/cc_scripts/sac_search_exp2_ismrm2015.sh": [
            "TrackToLearn/searchers/sac_searcher.py"
        ]
    },
    "jiarong/SSUsearch": {
        "SSUsearch/hpc/slurm/submit.sub": [
            "config.yaml"
        ],
        "SSUsearch/jobspec-cfg/config.yaml": [
            "metadata.tsv",
            "ssusearch",
            "Snakefile"
        ]
    },
    "luigifvr/calo_dreamer": {
        "calo_dreamer/job_cfm_script.sh": [
            "src/main.py"
        ]
    },
    "AdelNabli/ACiD": {
        "ACiD/adp.slurm": [
            "main.py"
        ]
    },
    "JaiDoshi/knowledge-erasure": {
        "knowledge-erasure/submit_lora.sh": [
            "run_lora.sh"
        ],
        "knowledge-erasure/jobspec-cfg/run_lora.sh": [
            "erasure/train_ds_lora.py",
            "configs/llama_ds.json"
        ]
    },
    "dalozano4/ML-Phase-Unwrapping": {
        "ML-Phase-Unwrapping/phase_unwrapping_experiment_launcher.pbs": [
            "phase_unwrap_model_hokulea.py"
        ]
    },
    "maeslopezortiz/GradientBoostingRegressor": {
        "GradientBoostingRegressor/GBR.sh": [
            "GBR.sh",
            "GBR_na.py"
        ],
        "GradientBoostingRegressor/jobspec-cfg/GBR.sh": [
            "GBR.sh",
            "GBR_na.py"
        ]
    },
    "JoaquinRives/TurkuAILab_Challenge_CinC-2020": {
        "TurkuAILab_Challenge_CinC-2020/train_stage_2.sh": [
            "train_stage_2.py"
        ],
        "TurkuAILab_Challenge_CinC-2020/train_stage_1_job_array.sh": [
            "train_stage_1.py"
        ]
    },
    "chuanting/FedDA": {
        "FedDA/run_att.sh": [
            "fed_att_algo.py"
        ],
        "FedDA/run_avg.sh": [
            "fed_avg_algo.py"
        ],
        "FedDA/run_trento.sh": [
            "fed_dual_att.py"
        ],
        "FedDA/run_milano.sh": [
            "fed_dual_att.py"
        ],
        "FedDA/jobspec-cfg/fed_dual_att.py": [
            "fed_dual_att.py"
        ],
        "FedDA/jobspec-cfg/fed_avg_algo.py": [
            "fed_avg_algo.py"
        ],
        "FedDA/jobspec-cfg/fed_att_algo.py": [
            "fed_att_algo.py"
        ]
    },
    "msamogh/continual-learning-nlu": {
        "continual-learning-nlu/run.slurm": [
            "out_cl",
            "err_cl",
            "requirements.txt"
        ]
    },
    "zhujack/ngs_pipeline_Jack": {
        "ngs_pipeline_Jack/submit_snakemake.sh": [
            "samplesheet.json",
            "dag.png",
            "rulegraph.png"
        ]
    },
    "CW3E/GSI-WRF-Cycling-Template": {
        "GSI-WRF-Cycling-Template/rocoto.sh": [
            "rocoto_utilities.py"
        ]
    },
    "shanwangshan/Self_supervised_ACL": {
        "Self_supervised_ACL/gpu_train.sh": [
            "main_train.py",
            "config/params_unsupervised_cl.yaml"
        ]
    },
    "shanwangshan/supervised_ACL": {
        "TAU-urban-audio-visual-scenes/train/gpu_train.sh": [
            "train.py"
        ],
        "supervised_ACL/gpu_sbatch.sh": [
            "train.py",
            "config/params.yaml"
        ]
    },
    "milescsmith/nf-rnaseq": {
        "nf-rnaseq/run_nextflow.sbatch": [
            "main.nf"
        ]
    },
    "pkusc/ASC22_HPL": {
        "ASC22_HPL/hpl-linux-x86_64/sample-slurm/hpl-singularity-dgx-a100-1N.sub": [
            "hpl.sh"
        ],
        "ASC22_HPL/hpl-ai-linux-x86_64/sample-slurm/hpl-ai-singularity-dgx-a100-8N.sub": [
            "hpl.sh"
        ],
        "ASC22_HPL/hpl-ai-linux-x86_64/sample-slurm/hpl-ai-singularity-dgx-a100-1N.sub": [
            "hpl.sh"
        ]
    },
    "vladfedoriuk/vqa": {
        "vqa/jobspec-cfg/scripts/jupyter.sh": [
            "requirements/base.txt",
            "requirements/dev.txt"
        ],
        "vqa/scripts/run-jupyter.sh": [
            "scripts/jupyter.sh"
        ]
    },
    "SouthGreenPlatform/PanExplorer_workflow": {
        "PanExplorer_workflow/panexplorer_sbatch.sh": [
            "Snakemake_files/Snakefile_pggb_heatmap_upset"
        ]
    },
    "DandiC/Mesh-Convolutional-Networks-with-Face-and-Vertex-Feature-Operators": {
        "Mesh-Convolutional-Networks-with-Face-and-Vertex-Feature-Operators/scripts/human_seg/train.sh": [
            "train.py"
        ],
        "Mesh-Convolutional-Networks-with-Face-and-Vertex-Feature-Operators/scripts/shrec/train.sh": [
            "train.py"
        ]
    },
    "MerrimanLab/NeSI_GATK": {
        "NeSI_GATK/s1_align.sl": [
            "s1_align.sl"
        ],
        "NeSI_GATK/jobspec-cfg/s1_align.sl": [
            "s1_align.sl"
        ]
    },
    "Gustavroot/DDalphaAMG": {
        "DDalphaAMG/submit_E250_GPU.job": [
            "sample_E250_GPU.ini"
        ],
        "DDalphaAMG/sub8to4.sh": [
            "sample8to4.ini"
        ],
        "DDalphaAMG/submit_E250_CPU.job": [
            "sample_E250_CPU.ini"
        ],
        "DDalphaAMG/jobspec-cfg/sample8to4.ini": [
            "conf/8x8x8x8b6.0000id3n1"
        ],
        "DDalphaAMG/jobspec-cfg/sample_E250_GPU.ini": [
            "sample_devel.ini"
        ],
        "DDalphaAMG/jobspec-cfg/sample_E250_CPU.ini": [
            "sample_devel.ini"
        ]
    },
    "sudhirNallam/Unsupervised-training-using-SWWAE": {
        "Unsupervised-training-using-SWWAE/run-training.s": [
            "mnist_model.py",
            "mnist_results.py"
        ]
    },
    "ME-ICA/ds003643-bidsification": {
        "ds003643-bidsification/fmriprep_job_v21.sbatch": [
            "fmriprep_job_v21.sbatch"
        ],
        "ds003643-bidsification/jobspec-cfg/fmriprep_job_v21.sbatch": [
            "fmriprep_job_v21.sbatch"
        ]
    },
    "ME-ICA/tedana-reliability-analysis": {
        "tedana-reliability-analysis/tedana_template.sub": [
            "run_tedana.py"
        ],
        "tedana-reliability-analysis/fmriprep_template.sub": [
            "collect_fmriprep.py"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_39.sub": [
            "errorfiles/tedana_39",
            "outfiles/tedana_39"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_28.sub": [
            "errorfiles/tedana_28",
            "outfiles/tedana_28"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_30.sub": [
            "errorfiles/tedana_30",
            "outfiles/tedana_30"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_37.sub": [
            "errorfiles/tedana_37",
            "outfiles/tedana_37"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_13.sub": [
            "errorfiles/tedana_13",
            "outfiles/tedana_13"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_7.sub": [
            "errorfiles/tedana_7",
            "outfiles/tedana_7"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_22.sub": [
            "errorfiles/tedana_22",
            "outfiles/tedana_22"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_17.sub": [
            "errorfiles/tedana_17",
            "outfiles/tedana_17"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_38.sub": [
            "errorfiles/tedana_38",
            "outfiles/tedana_38"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_3.sub": [
            "errorfiles/tedana_3",
            "outfiles/tedana_3"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_20.sub": [
            "errorfiles/tedana_20",
            "outfiles/tedana_20"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_23.sub": [
            "errorfiles/tedana_23",
            "outfiles/tedana_23"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_25.sub": [
            "errorfiles/tedana_25",
            "outfiles/tedana_25"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_19.sub": [
            "errorfiles/tedana_19",
            "outfiles/tedana_19"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_0.sub": [
            "errorfiles/tedana_0",
            "outfiles/tedana_0"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_33.sub": [
            "errorfiles/tedana_33",
            "outfiles/tedana_33"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_15.sub": [
            "errorfiles/tedana_15",
            "outfiles/tedana_15"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_12.sub": [
            "errorfiles/tedana_12",
            "outfiles/tedana_12"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_27.sub": [
            "errorfiles/tedana_27",
            "outfiles/tedana_27"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_35.sub": [
            "errorfiles/tedana_35",
            "outfiles/tedana_35"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_26.sub": [
            "errorfiles/tedana_26",
            "outfiles/tedana_26"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_29.sub": [
            "errorfiles/tedana_29",
            "outfiles/tedana_29"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_18.sub": [
            "errorfiles/tedana_18",
            "outfiles/tedana_18"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_21.sub": [
            "errorfiles/tedana_21",
            "outfiles/tedana_21"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_6.sub": [
            "errorfiles/tedana_6",
            "outfiles/tedana_6"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_32.sub": [
            "errorfiles/tedana_32",
            "outfiles/tedana_32"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_16.sub": [
            "errorfiles/tedana_16",
            "outfiles/tedana_16"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_24.sub": [
            "errorfiles/tedana_24",
            "outfiles/tedana_24"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_4.sub": [
            "errorfiles/tedana_4",
            "outfiles/tedana_4"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_14.sub": [
            "errorfiles/tedana_14",
            "outfiles/tedana_14"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_10.sub": [
            "errorfiles/tedana_10",
            "outfiles/tedana_10"
        ],
        "tedana-reliability-analysis/jobfiles/temp_job_11.sub": [
            "errorfiles/tedana_11",
            "outfiles/tedana_11"
        ]
    },
    "t170815518/control_dialogue_summarization_evaluation_benchmark": {
        "control_dialogue_summarization_evaluation_benchmark/job_submit_5_shot_opt.sh": [
            "requirements.txt",
            "direct_prompt.py"
        ]
    },
    "NVIDIA/nvidia-hpcg": {
        "LDDL/jobspec-cfg/benchmarks/torch_train.py": [
            "COPYRIGHT"
        ],
        "LDDL/jobspec-cfg/examples/local_example.sh": [
            "COPYRIGHT"
        ],
        "LDDL/examples/slurm_example.sub": [
            "COPYRIGHT"
        ],
        "multi-gpu-programming-models/bench.sbatch.sh": [
            "COPYRIGHT"
        ],
        "multi-gpu-programming-models/jobspec-cfg/bench.sh": [
            "COPYRIGHT"
        ]
    },
    "NVIDIA/LDDL": {
        "LDDL/jobspec-cfg/examples/local_example.sh": [
            "docker/build.sh",
            "docker/interactive.sh",
            "benchmarks/torch_train.py"
        ],
        "LDDL/examples/slurm_example.sub": [
            "docker/build.sh",
            "examples/local_example.sh",
            "benchmarks/torch_train.py"
        ]
    },
    "NVIDIA/multi-gpu-programming-models": {
        "multi-gpu-programming-models/bench.sbatch.sh": [
            "./bench.sh"
        ]
    },
    "voulgarakisromanos/PKTforRL": {
        "PKTforRL/run_array_jobs.sh": [
            "src/scripts/train_student.jl"
        ],
        "PKTforRL/run_train_student.sh": [
            "src/scripts/train_student.jl"
        ]
    },
    "hu-macsy/triangle-counting-mpi": {
        "triangle-counting-mpi/triangle-counting-mpi.sh": [
            "data/small-graph.metis"
        ]
    },
    "wesg52/world-models": {
        "world-models/slurm/evaluate_probes/hex_colors.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/evaluate_probes/movies.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/evaluate_probes/cities.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/evaluate_probes/zips.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/evaluate_probes/people.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/evaluate_probes/colors.sh": [
            "evaluate_probes.py"
        ],
        "world-models/slurm/train_probes/main.sh": [
            "probe_experiment.py"
        ],
        "world-models/slurm_openmind/save_activations.sh": [
            "save_activations.py"
        ]
    },
    "ucberkeley/savio-training-intro-2018": {
        "savio-training-intro-2018/job.sh": [
            "calc.py"
        ],
        "brc-datacarpentry-2018/example_job.sh": [
            "calc.py"
        ]
    },
    "avihu111/viewpoint_disentanglement": {
        "viewpoint_disentanglement/cnn_openai.sh": [
            "train_lord_dalle.py"
        ]
    },
    "HartmutSchoon/spinglass": {
        "spinglass/JS_spinglass.sh": [
            "./spinglass.sh"
        ]
    },
    "SrLozano/MAMe_DL": {
        "MAMe_DL/launcher.sh": [
            "mame_cnn.py"
        ]
    },
    "ExplainableML/AVCA-GZSL": {
        "AVCA-GZSL/selavi_feature_extraction/scripts/master.sh": [
            "main.py"
        ]
    },
    "danielries/TFC": {
        "TFC/hpc/run-scripts/Run.sh": [
            "code/main.py"
        ]
    },
    "5cript/mpi_matrix_test": {
        "mpi_matrix_test/remote_run_job.sh": [
            "run.sh"
        ],
        "mpi_matrix_test/remote_build_job.sh": [
            "build.sh"
        ]
    },
    "amew0/autoencoders": {
        "autoencoders/bt.sh": [
            "bt.py"
        ],
        "autoencoders/eit.sh": [
            "eit.py"
        ],
        "autoencoders/v2lr.sh": [
            "v2lr.py"
        ],
        "autoencoders/ymls.sh": [
            "eit.py"
        ]
    },
    "yograjyog/MCS-calculation": {
        "MCS-calculation/my_job.job": [
            "requirements.txt",
            "code3.py"
        ]
    },
    "frostinassiky/denoiseloc": {
        "denoiseloc/slurm/trainval_v100_snr.sh": [
            "moment_detr/train.py"
        ]
    },
    "frostinassiky/mlod.tf": {
        "mlod.tf/train.batch": [
            "./experiments/scripts/train_faster_rcnn.sh"
        ],
        "mlod.tf/jobspec-cfg/experiments/scripts/train_faster_rcnn.sh": [
            "./tools/trainval_net.py",
            "./experiments/scripts/test_faster_rcnn.sh"
        ]
    },
    "ICHEC/QPFAS": {
        "QPFAS/qpfas.sh": [
            "py/run_workflow.py"
        ],
        "QPFAS/qpfas_big.sh": [
            "py/run_workflow.py"
        ]
    },
    "McGill-NLP/bias-bench": {
        "bias-bench/python_job.sh": [
            "batch_jobs/_experiment_configuration.sh"
        ]
    },
    "timkphd/examples": {
        "examples/spack/dojulia.sh": [
            "simple"
        ],
        "examples/spack/dojules.sh": [
            "simple"
        ],
        "examples/mpi/mpilist.sh": [
            "simple"
        ],
        "examples/newspack/system/do01.sh": [
            "simple"
        ],
        "examples/newspack/system/dogcc.sh": [
            "simple"
        ],
        "examples/newspack/system/newstage.sh": [
            "simple"
        ],
        "examples/newspack/system/stage0.sh": [
            "simple"
        ],
        "examples/newspack/julia/dojules.sh": [
            "simple"
        ]
    },
    "lyn1874/fl_example": {
        "fl_example/submit_job.sh": [
            "./run_cifar.sh"
        ],
        "fl_example/jobspec-cfg/run_cifar.sh": [
            "mnist_utils.py",
            "train_cifar10_efficient.py"
        ]
    },
    "BoundaryLayerVercauteren/abl_scm_perturbation_study": {
        "abl_scm_perturbation_study/run_model_multi_job.sh": [
            "main.py"
        ]
    },
    "xuzijian629/reedbush_config": {
        "reedbush_config/run.sh": [
            "env.sh"
        ]
    },
    "ardamavi/3D-Medical-Segmentation-GAN": {
        "3D-Medical-Segmentation-GAN/Assets/HPC%20Cluster%20Job/job.sh": [
            "train.py"
        ]
    },
    "simbilod/ELE559-simulations": {
        "ELE559-simulations/bent_waveguide.job.slurm": [
            "bent_waveguide.py"
        ]
    },
    "Fenerator/Diffusion-Recommender-System": {
        "Diffusion-Recommender-System/run_LT.job": [
            "./LT-DiffRec/inference.py",
            "./LT-DiffRec/main.py"
        ],
        "Diffusion-Recommender-System/run_L.job": [
            "./L-DiffRec/inference.py",
            "./L-DiffRec/main.py"
        ],
        "Diffusion-Recommender-System/run_T.job": [
            "./T-DiffRec/main.py"
        ],
        "Diffusion-Recommender-System/run.job": [
            "./DiffRec/main.py",
            "./L-DiffRec/main.py",
            "./LT-DiffRec/main.py",
            "./DiffRec/inference.py",
            "./T-DiffRec/inference.py",
            "./L-DiffRec/inference.py",
            "./LT-DiffRec/inference.py"
        ]
    },
    "sashkarivkind/imagewalker": {
        "imagewalker/loop2Agpu.job": [
            "iter.job",
            "run_syclop_generic_cnn_vfb_neu.py",
            "nana.job",
            "run_syclop_generic1.py"
        ],
        "imagewalker/teacher_student/feature_learning_job.job": [
            "iter.job",
            "nana.job"
        ]
    },
    "xcgoner/iclr2020_zeno_async": {
        "iclr2020_zeno_async/experiment_script_2.sh": [
            "convert_cifar10.py",
            "train_cifar10_server.py"
        ],
        "iclr2020_zeno_async/experiment_script_3.sh": [
            "convert_cifar10.py",
            "train_cifar10_server.py"
        ]
    },
    "jvpoulos/multi-tmle": {
        "multi-tmle/simulation_static_mpi.sb": [
            "tmle_MultinomialTrts.R"
        ]
    },
    "jvpoulos/eICU_Benchmark": {
        "eICU_Benchmark/bash.sh": [
            "bash.py"
        ]
    },
    "spietz/SEM": {
        "SEM/jobscript_topopt.sh": [
            "jobscript.sh"
        ],
        "SEM/jobspec-cfg/jobscript.sh": [
            "jobscript.sh"
        ]
    },
    "ikergarcia1996/Self-Driving-Car-in-Video-Games": {
        "Self-Driving-Car-in-Video-Games/training_scripts/GPU/TEDD_1140_xl.sh": [
            "train.py"
        ],
        "Self-Driving-Car-in-Video-Games/training_scripts/GPU/evaluate_models.sh": [
            "eval.py"
        ]
    },
    "ikergarcia1996/NoticIA": {
        "Self-Driving-Car-in-Video-Games/training_scripts/GPU/evaluate_models.sh": [
            "eval.py"
        ],
        "NoticIA/bash_scripts/RunAll_zero.sh": [
            "run.py"
        ]
    },
    "MikheyevLab/snakemake-lesson": {
        "snakemake-lesson/snakemake.slurm": [
            "cluster.json"
        ]
    },
    "jvt3112/towards_unified_defense": {
        "towards_unified_defense/cluster_fmnist.sh": [
            "main.py"
        ],
        "towards_unified_defense/centralised/script.sh": [
            "main.py"
        ],
        "towards_unified_defense/centralised/centralised.sh": [
            "main.py"
        ]
    },
    "JacobHA/u-chi-learning": {
        "u-chi-learning/crun.sh": [
            "experiments/ablation_num_nets.py"
        ],
        "u-chi-learning/s_dqn.sh": [
            "experiments/dqn_baseline.py"
        ]
    },
    "kks32/learning_to_simulate": {
        "learning_to_simulate/slurm_scripts/render.sh": [
            "start_venv.sh"
        ],
        "learning_to_simulate/slurm_scripts/train.sh": [
            "start_venv.sh"
        ]
    },
    "sinzlab/nntransfer_recipes": {
        "nntransfer_recipes/slurm_run.sh": [
            "./singularity_run.sh"
        ],
        "nntransfer_recipes/jobspec-cfg/singularity_run.sh": [
            "./jupyter_run.sh",
            "./singularity_run.sh"
        ]
    },
    "Hakurem/slurm_train": {
        "slurm_train/conda_setup.sh": [
            "requirements.txt"
        ]
    },
    "ksos104/DH_HSSN": {
        "DH_HSSN/run.sh": [
            "tools/train.py"
        ],
        "DH_HSSN/tools/hssn_train.sh": [
            "tools/train.py"
        ]
    },
    "ksos104/DH_BodyAnalysis": {
        "DH_BodyAnalysis/eval.sh": [
            "evaluate.py"
        ],
        "DH_BodyAnalysis/jobspec-cfg/evaluate.py": [
            "evaluate.py",
            "LICENSE"
        ]
    },
    "sighook/refluxion": {
        "refluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "refluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "arashmodrad/Deep_learning_excersice-": {
        "Deep_learning_excersice-/tensorflow-batch-submit.bash": [
            "train_cnn_script.py"
        ]
    },
    "arashmodrad/Forcast-climate-by-Deep-Learning": {
        "Forcast-climate-by-Deep-Learning/tensorflow-batch-submit_final.bash": [
            "environment.yml",
            "Model_proj_final.py"
        ],
        "Forcast-climate-by-Deep-Learning/outputs/tensorflow-batch-submit_final.bash": [
            "environment.yml",
            "Model_proj_final.py"
        ]
    },
    "nsidn98/InforMARL": {
        "InforMARL/scripts/informarl_n.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/vdn.sh": [
            "baselines/offpolicy/scripts/train/train_mpe.py"
        ],
        "InforMARL/scripts/mqmix.sh": [
            "baselines/offpolicy/scripts/train/train_mpe.py"
        ],
        "InforMARL/scripts/mpnn.sh": [
            "baselines/mpnn/nav/main.py"
        ],
        "InforMARL/scripts/baselines.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/local_glob.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/informarl_10n.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/compare3.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/compare7.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/cent_obs.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/graph_feat.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/rmaddpg.sh": [
            "baselines/offpolicy/scripts/train/train_mpe.py"
        ],
        "InforMARL/scripts/informarl.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/compare10.sh": [
            "onpolicy/scripts/train_mpe.py"
        ],
        "InforMARL/scripts/dgn_baseline.sh": [
            "baselines/dgn/dgn_navigation/main.py"
        ],
        "InforMARL/scripts/radius_comp.sh": [
            "onpolicy/scripts/train_mpe.py"
        ]
    },
    "cmcantalupo/geopm-legacy-branches": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "cmcantalupo/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "sabrina-faria/breaking-simmetry-lotsizing": {
        "breaking-simmetry-lotsizing/script_memshort.sh": [
            "main.py"
        ],
        "breaking-simmetry-lotsizing/script_memlong.sh": [
            "outputs/erros_memlong",
            "outputs/saidas_memlong",
            "main.py"
        ],
        "breaking-simmetry-lotsizing/script_par128.sh": [
            "main.py"
        ],
        "breaking-simmetry-lotsizing/script_testes.sh": [
            "outputs/erros_testes",
            "outputs/saidas_testes",
            "main.py"
        ],
        "breaking-simmetry-lotsizing/script_parexp.sh": [
            "outputs/erros_parexp",
            "outputs/saidas_parexp",
            "main.py"
        ]
    },
    "rubiruchi/Game-Theory-Final-Project": {
        "Game-Theory-Final-Project/runFiles/runEnsemble1.pbs": [
            "./clusterRunner.py"
        ],
        "Game-Theory-Final-Project/runFiles/runSingle1.pbs": [
            "./clusterRunner.py"
        ]
    },
    "pkamath2/raw-audio-transformer": {
        "raw-audio-transformer/container-config/audiotx.pb": [
            "main.py"
        ]
    },
    "mcs-code-review/codellama": {
        "codellama/run-7b-instruct-codereview.sh": [
            "code_review_instructions.py"
        ],
        "codellama/run-34b-instruct-codereview-new.sh": [
            "code_review_instructions.py"
        ],
        "codellama/run-13b-instruct-codereview.sh": [
            "code_review_instructions.py"
        ],
        "codellama/run-13b-instruct-codereview-new.sh": [
            "code_review_instructions.py"
        ]
    },
    "luchsonice/3dod": {
        "3dod/proposal_functions.sh": [
            "tools/eval_boxes.py",
            "configs/BoxNet.yaml"
        ],
        "3dod/submit.sh": [
            "tools/eval_boxes.py",
            "configs/BoxNet.yaml",
            "tools/train_net.py",
            "configs/Base_Omni3D.yaml"
        ]
    },
    "barakcohenlab/CRX-Active-Learning": {
        "CRX-Active-Learning/src/cnn_k562_classification_sampling.sh": [
            "src/cnn_k562_classification_sampling.py"
        ],
        "CRX-Active-Learning/src/process_join_annotate_counts.sh": [
            "src/process_and_join_counts.py",
            "src/annotate_data.py"
        ],
        "CRX-Active-Learning/src/cnn_k562_iterative_uncertainty.sh": [
            "src/cnn_k562_iterative_uncertainty.py"
        ],
        "CRX-Active-Learning/src/cnn_regression_multi_starts.sh": [
            "src/cnn_regression_random_start.py"
        ],
        "CRX-Active-Learning/src/svm_multiclass_cross_validation.sh": [
            "src/svm_multiclass_cross_validation.py"
        ]
    },
    "jamesgleave/DD_protocol": {
        "DD_protocol/phase_4.sh": [
            "jobid_writer.py",
            "scripts_2/extract_labels.py",
            "scripts_2/simple_job_models.py"
        ],
        "DD_protocol/phase_2_glide.sh": [
            "jobid_writer.py"
        ],
        "DD_protocol/phase_4_evaluator.sh": [
            "jobid_writer.py",
            "scripts_2/extract_labels.py",
            "scripts_2/simple_job_models.py",
            "scripts_2/progressive_evaluator.py"
        ],
        "DD_protocol/phase_1.sh": [
            "jobid_writer.py",
            "scripts_1/molecular_file_count_updated.py",
            "scripts_1/sampling.py",
            "scripts_1/sanity_check.py",
            "scripts_1/extracting_morgan.py",
            "scripts_1/extracting_smiles.py"
        ]
    },
    "xuqifan897/Optimus": {
        "Optimus/pretrain_bert_tiny.sh": [
            "pretrain_bert.py"
        ],
        "Optimus/pretrain_bert.sh": [
            "pretrain_bert.py"
        ]
    },
    "LLNL/Wemul": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ]
    },
    "LLNL/TOPE": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ]
    },
    "LLNL/FAST": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ]
    },
    "LLNL/cardioid": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ]
    },
    "LLNL/ExaConstit": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ]
    },
    "LLNL/DD-NM-ROM": {
        "FAST/data_util/parallel_chimera_preprocess_pdbbind_2018_refined_docking.sh": [
            "LICENSE"
        ],
        "DD-NM-ROM/nmrom_nsnaps.sh": [
            "driver_train_port_autoencoder.py",
            "driver_train_rom.py"
        ],
        "DD-NM-ROM/train_port_decoders.sh": [
            "driver_train_port_autoencoder.py"
        ],
        "DD-NM-ROM/train_rom.sh": [
            "driver_train_rom.py",
            "driver_train_monolithic_rom.py"
        ],
        "DD-NM-ROM/nmrom_sizes.sh": [
            "driver_train_rom.py",
            "driver_train_port_autoencoder.py"
        ],
        "DD-NM-ROM/nmrom_ddconfigs.sh": [
            "driver_train_port_autoencoder.py",
            "driver_train_rom.py"
        ]
    },
    "loubnabnl/bloom-code-evaluation": {
        "bloom-code-evaluation/generate_code_opt.slurm": [
            "code_eval.py"
        ],
        "bloom-code-evaluation/other/generate_code_bloom7b1_xp3capmixlossseq.slurm": [
            "code_eval.py"
        ],
        "bloom-code-evaluation/other/generate_code_bloom7b1_xp3capmix.slurm": [
            "code_eval.py"
        ]
    },
    "intelligentEarth/pt-Bayeslands": {
        "pt-Bayeslands/runPTBayeslands.pbs": [
            "ptBayeslands_sedvec.py"
        ]
    },
    "Holocene-Reconstruction/Holocene-code": {
        "Holocene-code/run_da.sh": [
            "da_main_code.py"
        ]
    },
    "psamfass/HPL_GPU": {
        "HPL_GPU/scripts/slurm_single_node.sh": [
            "HPL.dat"
        ]
    },
    "felixkolo/HMT_submission": {
        "HMT_submission/cnn-job.sh": [
            "cnnDO.py"
        ],
        "HMT_submission/create_training_data.sh": [
            "voronoi_loop.sh",
            "./voronoi_loop.sh"
        ],
        "HMT_submission/jobspec-cfg/voronoi_loop.sh": [
            "voronoi.py",
            "image.py"
        ]
    },
    "bugrabaran/Semantics-driven-FSL": {
        "Semantics-driven-FSL/runner2.slurm": [
            "train_fsl.py",
            "pretrain.py"
        ]
    },
    "dlwlgus53/police2": {
        "police2/chat.sh": [
            "main.py"
        ]
    },
    "chawins/adv-part-model": {
        "adv-part-model/DINO/scripts/DINO_eval.sh": [
            "main.py"
        ]
    },
    "antolonappan/dell": {
        "dell/Job/FG1.sh": [
            "simulation.py",
            "filtering.py",
            "quest.py"
        ],
        "dell/Job/lens.sh": [
            "simulation.py"
        ],
        "s4bird/Jobs/filt_temp3.sh": [
            "quest.py"
        ],
        "s4bird/Jobs/qclss.sh": [
            "quest.py"
        ]
    },
    "antolonappan/s4bird": {
        "dell/Job/FG1.sh": [
            "simulation.py",
            "quest.py"
        ],
        "dell/Job/lens.sh": [
            "simulation.py"
        ],
        "s4bird/Jobs/filt_temp3.sh": [
            "quest.py"
        ],
        "s4bird/Jobs/qclss.sh": [
            "quest.py"
        ],
        "s4bird/Jobs/combination3.sh": [
            "combination.py"
        ]
    },
    "AvihaiNaa/superVit": {
        "superVit/run.sbatch": [
            "train.py",
            "evaluate.py"
        ]
    },
    "mousany/muphys": {
        "muphys/tools/ncu.sh": [
            "scripts/levante-setup.sh"
        ],
        "muphys/tools/my-run-debug.sh": [
            "scripts/levante-setup.sh"
        ],
        "muphys/tools/nsys.sh": [
            "scripts/levante-setup.sh"
        ],
        "muphys/tools/my-run.sh": [
            "scripts/levante-setup.sh"
        ],
        "muphys/scripts/levante-cpu.sbatch": [
            "scripts/levante-setup.sh",
            "scripts/build-cpu.sh",
            "./scripts/diffn-cpu.sh"
        ]
    },
    "erikdengerud/GPTime-Series": {
        "GPTime-Series/job.slurm": [
            "configs/config_train.yml"
        ]
    },
    "singh96aman/lume-impact-live-demo": {
        "lume-impact-live-demo/my_job.sh": [
            "lume-impact-live-demo.py"
        ]
    },
    "thomascherickal/TensorComprehensions": {
        "TensorComprehensions/jobspec-cfg/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ],
        "TensorComprehensions/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ]
    },
    "Darklanx/rl-baselines3-zoo": {
        "rl-baselines3-zoo/qsub/ppo_seaquest.sh": [
            "train.py"
        ]
    },
    "Bick95/CognitiveRobotics_Robo_Control": {
        "CognitiveRobotics_Robo_Control/start.sh": [
            "main.py",
            "ParameterSettings/params_6.json"
        ],
        "CognitiveRobotics_Robo_Control/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "deinal/unet-reconnection": {
        "unet-reconnection/submit_training.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/experiment.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/predict.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/preprocess.sh": [
            "./env.sh"
        ]
    },
    "deinal/infant-aagcn": {
        "unet-reconnection/submit_training.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/experiment.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/predict.sh": [
            "./env.sh"
        ],
        "infant-aagcn/run/preprocess.sh": [
            "./env.sh"
        ]
    },
    "rsdelhi91/MPI-IO-SPARTAN-Cluster": {
        "MPI-IO-SPARTAN-Cluster/noargstwo.pbs": [
            "mpigeneric.py"
        ],
        "MPI-IO-SPARTAN-Cluster/jobspec-cfg/mpigeneric.py": [
            "mpigeneric.py"
        ]
    },
    "mattyoung101/ant_colony_hpc": {
        "ant_colony_hpc/mpislurm_omp.sh": [
            "antconfig_megamap_mpi.ini"
        ],
        "ant_colony_hpc/jobspec-cfg/antconfig_megamap_mpi.ini": [
            "maps/megamap_mpi.png"
        ]
    },
    "harvardinformatics/snpArcher": {
        "snpArcher/run_pipeline_update.sh": [
            "workflow/Snakefile"
        ]
    },
    "jhongover9000/stable-diffusion-2": {
        "stable-diffusion-2/base_generate_full.sh": [
            "scripts/guidance_inference_combo_neg.py",
            "webDiffusion.csv",
            "configs/stable-diffusion/v2-inference.yaml"
        ],
        "stable-diffusion-2/scripts/archived_sbatch_queries/generate_images_768.sh": [
            "webDiffusion.csv",
            "configs/stable-diffusion/v2-inference-v.yaml"
        ]
    },
    "wuhuiyun07/pav_mgs_2023": {
        "pav_mgs_2023/jobspec-cfg/config/test.yaml": [
            "config/samples.tsv",
            "config/units.tsv"
        ],
        "pav_mgs_2023/workflow/scripts/spades.16.sh": [
            "config/test.yaml"
        ],
        "pav_mgs_2023/workflow/scripts/spades.24.sh": [
            "config/test.yaml"
        ],
        "pav_mgs_2023/workflow/scripts/spades.23.sh": [
            "config/test.yaml"
        ],
        "pav_mgs_2023/workflow/scripts/spades.29.sh": [
            "config/test.yaml"
        ],
        "pav_mgs_2023/workflow/scripts/spades.22.sh": [
            "config/test.yaml"
        ]
    },
    "KailongPeng/LocalAggregation-Pytorch": {
        "LocalAggregation-Pytorch/jobspec-cfg/scripts/instance.sh": [
            "./scripts/instance.py",
            "./scripts/instance.sh"
        ],
        "LocalAggregation-Pytorch/NMPH/torch2numpy.sh": [
            "./NMPH/torch2numpy.py"
        ],
        "LocalAggregation-Pytorch/NMPH/NMPH.sh": [
            "./NMPH/NMPH.py"
        ],
        "LocalAggregation-Pytorch/scripts/instance.sh": [
            "./scripts/instance.py",
            "./scripts/instance.sh"
        ]
    },
    "MITIBMxGraph/SALIENT": {
        "SALIENT/examples/example_Satori_batch_2_nodes.slurm": [
            "driver/parser.py"
        ]
    },
    "RobbieEarle/vector_projects": {
        "vector_projects/slurm/sbatch_combinact_imagenet.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/sbatch_combinact.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/sbatch_combinact_nsamples.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/sbatch_combinact_50ep.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/sbatch_combinact_new.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/sbatch_combinact_nparam.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/cf100_100_12_balanced.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/ep.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/width.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/cf10_100_12.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/cf100_100_12.sh": [
            "engine.py"
        ],
        "vector_projects/slurm/seed_exp/cf10_100_12_balanced.sh": [
            "engine.py"
        ]
    },
    "fruce-ki/utility_scripts": {
        "utility_scripts/jobspec-cfg/fileutilities.py": [
            "fileutilities.py"
        ],
        "utility_scripts/mageck/mageck_workflow.sh": [
            "fileutilities.py"
        ]
    },
    "zonca/other": {
        "other/mytest.sh": [
            "test.py"
        ]
    },
    "AlejandroCiuba/CS3730": {
        "CS3730/crc_dataset.sh": [
            "dataset.py"
        ],
        "CS3730/crc_finetune.sh": [
            "finetune.py"
        ],
        "CS3730/crc_merge.sh": [
            "finetune.py",
            "merge.py"
        ],
        "CS3730/crc_repeat.sh": [
            "finetune_repeat.py"
        ],
        "CS3730/crc_preference_alt.sh": [
            "finetune_preference_alt.py"
        ],
        "CS3730/crc_preference.sh": [
            "finetune_preference.py"
        ],
        "CS3730/crc_scores.sh": [
            "scores.py"
        ]
    },
    "RNAcentral/rnacentral-import-pipeline": {
        "rnacentral-import-pipeline/weekly-update/run.sh": [
            "weekly-update/update.config",
            "select_databases.nf",
            "prepare-environment.nf",
            "import-data.nf",
            "analyze.nf",
            "precompute.nf",
            "report.nf",
            "export.nf"
        ]
    },
    "It4innovations/ruth": {
        "ruth/run.sh": [
            "ruth/zeromq/bench.py"
        ]
    },
    "treanus/KUL_NIS": {
        "KUL_NIS/KUL_preproc_all.sh": [
            "study_config/subjects_and_options.csv",
            "KUL_dwiprep_anat.sh",
            "KUL_dwiprep_MNI.sh"
        ],
        "KUL_NIS/jobspec-cfg/KUL_dwiprep_anat.sh": [
            "KUL_mrview_figure.sh"
        ]
    },
    "ceciliaromaro/PDCM_NetPyNE": {
        "PDCM_NetPyNE/pd_512.sbatch": [
            "init.py"
        ],
        "PDCM_NetPyNE/pd.sbatch": [
            "init.py"
        ],
        "PDCM_NetPyNE/jobspec-cfg/init.py": [
            "init.py"
        ]
    },
    "matinraayai/MCX-Denoising-Pytorch": {
        "MCX-Denoising-Pytorch/sbatch/3D/blind-denoising/unet.sh": [
            "train-lightning.py",
            "configs/3D/blind-denoising/unet.yaml"
        ],
        "MCX-Denoising-Pytorch/sbatch/3D/inference/resmcnet.sh": [
            "configs/3D/inference/resmcnet/absorb-64x64x64.yaml",
            "configs/3D/inference/resmcnet/absorb-100x100x100.yaml",
            "configs/3D/inference/resmcnet/absorb-128x128x128.yaml",
            "configs/3D/inference/resmcnet/homo-64x64x64.yaml",
            "configs/3D/inference/resmcnet/homo-100x100x100.yaml",
            "configs/3D/inference/resmcnet/homo-128x128x128.yaml",
            "configs/3D/inference/resmcnet/refractive-64x64x64.yaml",
            "configs/3D/inference/resmcnet/refractive-100x100x100.yaml",
            "configs/3D/inference/resmcnet/refractive-128x128x128.yaml",
            "configs/3D/inference/resmcnet/colin27.yaml",
            "configs/3D/inference/resmcnet/digimouse.yaml",
            "configs/3D/inference/resmcnet/usc195.yaml"
        ],
        "MCX-Denoising-Pytorch/sbatch/2D/blind-denoising/dncnn.sh": [
            "train-lightning.py",
            "configs/2D/blind-denoising/dncnn.yaml"
        ]
    },
    "evenmm/thesis_MSc": {
        "thesis_MSc/job.slurm": [
            "cluster-parallel-robustness-evaluation.py"
        ],
        "thesis_MSc/jobspec-cfg/cluster-parallel-robustness-evaluation.py": [
            "parallel-robustness-evaluation.py"
        ]
    },
    "benkirk/petsc_tests": {
        "demo_containers/mpi/singularity/run_mpi%2Bcpu_container.sh": [
            "get_local_rank"
        ],
        "demo_containers/mpi/singularity/run_mpi%2Bgpu_container.sh": [
            "get_local_rank"
        ]
    },
    "benkirk/demo_containers": {
        "petsc_tests/ex19b_GPU.sh": [
            "config_env.sh"
        ],
        "petsc_tests/ex19_GPU.sh": [
            "config_env.sh"
        ],
        "petsc_tests/compile.sh": [
            "config_env.sh"
        ],
        "demo_containers/mpi/singularity/run_mpi%2Bcpu_container.sh": [
            "config_env.sh"
        ],
        "demo_containers/mpi/singularity/run_mpi%2Bgpu_container.sh": [
            "config_env.sh"
        ],
        "demo_containers/mpi/singularity/run_fasteddy_container.sh": [
            "config_env.sh"
        ],
        "demo_containers/mpi/singularity/run_mpi_container.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/mpi_GPU.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/pt2pt_GPU.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/mps_GPU.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/compile.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/collective_GPU.sh": [
            "config_env.sh"
        ],
        "mpi_gpu_tests/openmpi_GPU.sh": [
            "config_env.sh"
        ]
    },
    "benkirk/mpi_gpu_tests": {
        "demo_containers/mpi/singularity/run_mpi%2Bcpu_container.sh": [
            "get_local_rank"
        ],
        "demo_containers/mpi/singularity/run_mpi%2Bgpu_container.sh": [
            "get_local_rank"
        ]
    },
    "darcyabjones/pclust": {
        "pclust/batch_scripts/run_pclust.sbatch": [
            "./main.nf"
        ],
        "panann/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "panann/batch_scripts/run.sbatch": [
            "./main.nf"
        ],
        "mitoflow/batch_scripts/run_pipeline.sbatch": [
            "./main.nf"
        ]
    },
    "darcyabjones/panann": {
        "pclust/batch_scripts/run_pclust.sbatch": [
            "./main.nf"
        ],
        "panann/jobspec-cfg/main.nf": [
            "main.nf",
            "data/extrinsic_hints.cfg",
            "data/extrinsic_gapfiller.cfg",
            "data/evm.cfg"
        ],
        "panann/batch_scripts/run.sbatch": [
            "./main.nf"
        ],
        "mitoflow/batch_scripts/run_pipeline.sbatch": [
            "./main.nf"
        ]
    },
    "darcyabjones/mitoflow": {
        "pclust/batch_scripts/run_pclust.sbatch": [
            "./main.nf"
        ],
        "panann/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "panann/batch_scripts/run.sbatch": [
            "./main.nf"
        ],
        "mitoflow/batch_scripts/run_pipeline.sbatch": [
            "./main.nf"
        ]
    },
    "mattleblanc/pfn_example": {
        "pfn_example/jobspec-cfg/pfn_train.py": [
            "pfn_example.py"
        ],
        "pfn_example/batch/train_4.sh": [
            "pfn_train.py"
        ],
        "pfn_example/batch/train_2.sh": [
            "pfn_train.py"
        ],
        "pfn_example/batch/train_32.sh": [
            "pfn_train.py"
        ]
    },
    "mayrajeo/lulc_ml": {
        "lulc_ml/train_model_csc.sh": [
            "train_model.py"
        ]
    },
    "armandstrickernlp/chitchat-as-interference": {
        "chitchat-as-interference/launch_train_and_generate_and_eval.sh": [
            "train_and_generate_and_eval.py"
        ],
        "chitchat-as-interference/jobspec-cfg/train_and_generate_and_eval.py": [
            "train_and_generate_and_eval.py"
        ]
    },
    "SiddarthNarayanan01/darwin": {
        "darwin/amarel.sh": [
            "run",
            "run.py"
        ]
    },
    "usgs-makerspace/wbeep-processing": {
        "wbeep-processing/src/calc_max.slurm": [
            "src/calc_max.R"
        ]
    },
    "smsharma/PAPERCLIP-Hubble": {
        "PAPERCLIP-Hubble/scripts/submit_summarize.sh": [
            "summarize.py"
        ],
        "PAPERCLIP-Hubble/scripts/submit_train.sh": [
            "train.py",
            "./configs/base.py"
        ]
    },
    "smsharma/mining-for-substructure-lens": {
        "PAPERCLIP-Hubble/scripts/submit_train.sh": [
            "train.py"
        ],
        "mining-for-substructure-lens/scripts/eval_alpha.sh": [
            "test.py"
        ],
        "mining-for-substructure-lens/scripts/eval_other.sh": [
            "test.py"
        ],
        "mining-for-substructure-lens/scripts/eval_carl.sh": [
            "test.py"
        ],
        "fermi-gce-flows/scripts/simulate.sh": [
            "simulate.py"
        ]
    },
    "smsharma/point-cloud-galaxy-diffusion": {
        "PAPERCLIP-Hubble/scripts/submit_train.sh": [
            "train.py"
        ],
        "point-cloud-galaxy-diffusion/scripts/submit_infer.sh": [
            "infer.py"
        ]
    },
    "smsharma/fermi-gce-flows": {
        "PAPERCLIP-Hubble/scripts/submit_summarize.sh": [
            "summarize.py"
        ],
        "PAPERCLIP-Hubble/scripts/submit_train.sh": [
            "train.py"
        ],
        "fermi-gce-flows/scripts/simulate.sh": [
            "simulate.py"
        ],
        "fermi-gce-flows/scripts/batch/submit.batch": [
            "nptfit.py"
        ]
    },
    "CarolinaPB/Bioinfo_scripts": {
        "Bioinfo_scripts/snippets.sh": [
            "rename_fasta.py"
        ]
    },
    "domenicrosati/longform_edit_model_evals": {
        "longform_edit_model_evals/slurm_produce_data.sh": [
            "./produce_dataset.sh"
        ],
        "longform_edit_model_evals/jobspec-cfg/produce_dataset.sh": [
            "produce_dataset.py",
            "./data/zsre/zsre_mend_eval.json",
            "./data/counterfact.json"
        ]
    },
    "trevorgrif/RuralABMDriver": {
        "RuralABMDriver/runSlurm.slurm": [
            "distributed_startup.jl"
        ]
    },
    "nish-ant/2d-cylinder-wake-openfoam": {
        "2d-cylinder-wake-openfoam/runscript.solve": [
            "constant/polyMesh/boundary"
        ],
        "SOWFA.NREL5MWRef.ALMAdvanced.flatTerrain.neutral/common/ABL/runscript.solve.0": [
            "system/controlDict"
        ],
        "SOWFA.NREL5MWRef.ALMAdvanced.flatTerrain.neutral/common/ABL/runscript.preprocess": [
            "system/controlDict"
        ],
        "SOWFA.NREL5MWRef.ALMAdvanced.flatTerrain.neutral/common/ALMAdvanced/runscript.restart.1": [
            "system/controlDict",
            "system/fvSchemes"
        ],
        "SOWFA.NREL5MWRef.ALMAdvanced.flatTerrain.neutral/common/ALMAdvanced/runscript.solve.0": [
            "system/controlDict",
            "system/fvSchemes"
        ],
        "SOWFA.NREL5MWRef.ALMAdvanced.flatTerrain.neutral/common/ALMAdvanced/runscript.preprocess": [
            "system/controlDict",
            "system/fvSchemes"
        ]
    },
    "janaleible/hotpotQA-ir-task": {
        "hotpotQA-ir-task/lisa/train_l2r.sh": [
            "requirements.txt",
            "main_retrieval.py"
        ]
    },
    "nicoladainese96/SC2-RL": {
        "SC2-RL/old_batch_job.sh": [
            "run.py"
        ],
        "SC2-RL/batch_job_v2.sh": [
            "monobeast_v2.py"
        ],
        "SC2-RL/batch_job.sh": [
            "monobeast.py"
        ]
    },
    "freesunshine0316/neural-graph-to-seq-mp": {
        "neural-graph-to-seq-mp/decode_g2s.sh": [
            "src_g2s/G2S_beam_decoder.py",
            "data/test.json"
        ]
    },
    "hplt-project/monotextor-slurm": {
        "monotextor-slurm/30.stats": [
            "scripts/filter-stats.py"
        ]
    },
    "DavidC001/MEMO-TPT-DL2024": {
        "MEMO-TPT-DL2024/runMEMO.sh": [
            "memo/main.py"
        ]
    },
    "MichiganCOG/RobotSlangBenchmark": {
        "RobotSlangBenchmark/ray_tune.sb": [
            "train_raytune.py"
        ]
    },
    "thomasvant/Character-classification": {
        "Character-classification/jobfile.sh": [
            "main.py"
        ]
    },
    "lhmtriet/Latent-Vulnerability": {
        "Latent-Vulnerability/evaluate_linevul_bigvul_latest.sh": [
            "evaluate_linevul_bigvul_latest.py"
        ],
        "Latent-Vulnerability/evaluate_linevul_bigvul.sh": [
            "evaluate_linevul_bigvul.py"
        ],
        "Latent-Vulnerability/jobspec-cfg/evaluate_linevul_bigvul.py": [
            "linevul/linevul_main.py"
        ],
        "Latent-Vulnerability/jobspec-cfg/evaluate_linevul_bigvul_latest.py": [
            "linevul/linevul_main.py"
        ]
    },
    "lhmtriet/Function-level-Vulnerability-Assessment": {
        "Function-level-Vulnerability-Assessment/evaluate_models_single.sh": [
            "Code/single/evaluate_models_single.py"
        ]
    },
    "cdwxxv/SelfExp": {
        "SelfExp/submit.job": [
            "preprocessing/store_parse_trees.py",
            "preprocessing/build_concept_store.py",
            "model/run.py",
            "model/infer_model.py",
            "data/dev_output_emotions.csv"
        ]
    },
    "rudolfmard/Pangu-Weather-mini": {
        "Pangu-Weather-mini/run_array.sh": [
            "main.py"
        ]
    },
    "sisl/WorldModelsForDeepRL": {
        "WorldModelsForDeepRL/train_mpi.sh": [
            "train_a3c.py"
        ]
    },
    "xiaomiannvwang/Download_CONUS": {
        "Download_CONUS/script.txt": [
            "download_CONUS_2.5_multiprocessing_v1_check_dir_umfolder_v2_scc_logging.py"
        ],
        "Download_CONUS/script.sh": [
            "download_CONUS_2.5_multiprocessing_v2.1_Unixpath.py"
        ]
    },
    "isears/ecmo-interpretability": {
        "ecmo-interpretability/slurm/singleFit.sh": [
            "src/ecmointerp/modeling/transformerSingle.py"
        ]
    },
    "isears/tabnet-sepsis": {
        "tabnet-sepsis/slurm/tuneTabnet.sh": [
            "src/tabsep/modeling/tuneTabnet.py"
        ]
    },
    "pglpm/plinkinetti": {
        "plinkinetti/queue.sh": [
            "job.R"
        ]
    },
    "jxbz/agd": {
        "agd/supercloud/multi-cifar.sh": [
            "main.py"
        ],
        "agd/supercloud/single-cifar.sh": [
            "main.py"
        ],
        "agd/supercloud/multi-imagenet.sh": [
            "main.py"
        ],
        "modula/paper/sweep/run.sh": [
            "main.py"
        ]
    },
    "axr6077/Ray-Trace-Parallelization": {
        "Ray-Trace-Parallelization/runner_mpi.sh": [
            "configs/box.xml"
        ]
    },
    "andreapiacentini/aq": {
        "aq/crontest_aq.sh": [
            "bundle/CMakeLists.txt",
            "./install_aq.ksh"
        ]
    },
    "ilmari99/RLFramework": {
        "RLFramework/Moska/fit_model_batch_job.sh": [
            "./Moska/fit_model.py"
        ]
    },
    "pat-alt/julia-hpc-for-dummies": {
        "julia-hpc-for-dummies/examples/cuda_is_functional_blue.sh": [
            "examples/slurm_header.sh",
            "examples/cuda_is_functional.jl"
        ],
        "julia-hpc-for-dummies/examples/jem_gpu_blue.sh": [
            "examples/jem_gpu.jl",
            "examples/jem_gpu.log"
        ],
        "julia-hpc-for-dummies/examples/mljflux_gpu_blue.sh": [
            "examples/mljflux_gpu.jl",
            "examples/mljflux_gpu.log"
        ]
    },
    "pat-alt/ECCCo.jl": {
        "ECCCo.jl/experiments/daic/models/german_credit.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/models/tabular.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/models/fmnist.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/generators/fmnist.sh": [
            "experiments/slurm_header.sh",
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/testing/cali_100_8.sh": [
            "experiments/slurm_header.sh",
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/testing/lin_sep.sh": [
            "experiments/slurm_header.sh",
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/tuning/models/fmnist.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/daic/tuning/generators/fmnist.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/jobscripts/models/mnist.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/jobscripts/models/fmnist.sh": [
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/jobscripts/generators/moons.sh": [
            "experiments/slurm_header.sh",
            "experiments/run_experiments.jl"
        ],
        "ECCCo.jl/experiments/jobscripts/testing/all_small.sh": [
            "experiments/slurm_header.sh",
            "experiments/run_experiments.jl"
        ]
    },
    "menauwy/ConvGQR": {
        "ConvGQR/run_gen_embeddings.sh": [
            "gen_doc_embeddings.py",
            "Config/gen_doc_embeddings.toml",
            "gen_doc_embeddings_adapted.py"
        ],
        "ConvGQR/jobspec-cfg/gen_doc_embeddings.py": [
            "gen_doc_embeddings.py",
            "Config/gen_doc_embeddings.toml"
        ],
        "ConvGQR/jobspec-cfg/gen_doc_embeddings_adapted.py": [
            "gen_doc_embeddings.py",
            "Config/gen_doc_embeddings.toml"
        ]
    },
    "nci/FourCastNeXt": {
        "FourCastNeXt/run_inference.pbs": [
            "inference.py"
        ],
        "FourCastNeXt/run_trainer.pbs": [
            "trainer.py"
        ]
    },
    "h-roy/geometric-laplace": {
        "geometric-laplace/jobscript2.sh": [
            "src/training/train_fc.py"
        ],
        "geometric-laplace/sampler_resnet_baselines.sh": [
            "src/sampling/sample_lapalce_baselines.py"
        ],
        "geometric-laplace/sampler_resnet_seeds2.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet_exact_diag.sh": [
            "src/sampling/sample_lapalce_baselines.py"
        ],
        "geometric-laplace/sampler_resnet_backup.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet_seeds0.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet_seeds1.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet_seeds4.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet.sh": [
            "src/sampling/sample_resnet.py"
        ],
        "geometric-laplace/sampler_resnet_seeds3.sh": [
            "src/sampling/sample_resnet.py"
        ]
    },
    "uchicago-dsi/ai-sci-hackathon-2024": {
        "ai-sci-hackathon-2024/example_submission.sh": [
            "example_torch.py",
            "example_tf.py",
            "example_jax.py"
        ]
    },
    "mehdidc/ALAE": {
        "ALAE/scripts/train_jusuf.sh": [
            "train_alae.py",
            "configs/imagenet.yaml"
        ],
        "ALAE/scripts/sample_hdfml.sh": [
            "sample.py"
        ],
        "ALAE/scripts/train_hdfml.sh": [
            "train_alae.py",
            "configs/ffhq.yaml"
        ]
    },
    "Prithvitarale/twominds": {
        "twominds/job.txt": [
            "./interface.py"
        ]
    },
    "ComputationalFlowGroup/MFC-develop": {
        "MFC-develop/jobspec-cfg/mfc.sh": [
            "mfc.sh",
            "./mfc.sh"
        ],
        "MFC-develop/toolchain/templates/pbs.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC-develop/toolchain/templates/slurm.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC-develop/toolchain/templates/lsf.sh": [
            "./mfc.sh",
            "mfc.sh"
        ]
    },
    "erwulff/particleflow": {
        "particleflow/scripts/flatiron/pipeline_train_multi_node.slurm": [
            "mlpf/pipeline.py"
        ]
    },
    "karnikkanojia/yolov7-intel": {
        "yolov7-intel/train.sh": [
            "requirements.txt",
            "detect.py"
        ],
        "yolov7-intel/jobspec-cfg/requirements.txt": [
            "requirements.txt"
        ]
    },
    "Vchitect/Latte": {
        "Latte/jobspec-cfg/train.py": [
            "LICENSE",
            "train.py"
        ],
        "Latte/slurm_scripts/taichi.slurm": [
            "train.py",
            "./configs/taichi/taichi_train.yaml"
        ],
        "Latte/slurm_scripts/sky.slurm": [
            "train.py",
            "./configs/sky/sky_train.yaml"
        ]
    },
    "NoneWait/bert_demo": {
        "bert_demo/script/run.pbs": [
            "demo/run_my.py"
        ]
    },
    "zhan4429/ROCm-Containers": {
        "ROCm-Containers/jobspec-cfg/index.rst": [
            "images/amd_logo.jpg"
        ],
        "ROCm-Containers/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "NGC/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "Purdue-RCAC-Biocontainer/scripts/generatedocumentation.sh": [
            "index.rst"
        ]
    },
    "zhan4429/NGC": {
        "ROCm-Containers/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "NGC/jobspec-cfg/index.rst": [
            "images/nvidia_logo.jpg"
        ],
        "NGC/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "Purdue-RCAC-Biocontainer/scripts/generatedocumentation.sh": [
            "index.rst"
        ]
    },
    "zhan4429/Purdue-RCAC-Biocontainer": {
        "ROCm-Containers/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "NGC/scripts/generatedocumentation.sh": [
            "index.rst"
        ],
        "Purdue-RCAC-Biocontainer/jobspec-cfg/index.rst": [
            "images/biocontainer_cloud.jpg"
        ],
        "Purdue-RCAC-Biocontainer/scripts/generatedocumentation.sh": [
            "index.rst"
        ]
    },
    "andro-demir/Auto-PyTorch": {
        "Auto-PyTorch/examples/ensemble/job_main_exp.sh": [
            "examples/ensemble/test_ensemble.py"
        ]
    },
    "Linwei94/Focal-Loss-Search": {
        "Focal-Loss-Search/hpc_scripts/Gadi/search_retrain_noCE.sh": [
            "train_search.py"
        ],
        "Focal-Loss-Search/hpc_scripts/Gadi/search_retrain.sh": [
            "train_search.py"
        ],
        "Focal-Loss-Search/hpc_scripts/USYD-HPC-Scripts/search_retrain.sh": [
            "train_search.py"
        ],
        "NAS-Calibration/exp_scripts/USYD-HPC-Scripts/search.sh": [
            "requirements.txt",
            "train_search.py"
        ],
        "NAS-Calibration/exp_scripts/USYD-HPC-Scripts/jobsample.pbs": [
            "requirements.txt",
            "train_search.py"
        ]
    },
    "Linwei94/NAS-Calibration": {
        "Focal-Loss-Search/hpc_scripts/Gadi/search_retrain_noCE.sh": [
            "train_search.py"
        ],
        "Focal-Loss-Search/hpc_scripts/Gadi/search_retrain.sh": [
            "train_search.py"
        ],
        "Focal-Loss-Search/hpc_scripts/USYD-HPC-Scripts/search_retrain.sh": [
            "train_search.py"
        ],
        "NAS-Calibration/exp_scripts/USYD-HPC-Scripts/search.sh": [
            "requirements.txt",
            "train_search.py"
        ],
        "NAS-Calibration/exp_scripts/USYD-HPC-Scripts/retrain.sh": [
            "train.py"
        ],
        "NAS-Calibration/exp_scripts/USYD-HPC-Scripts/jobsample.pbs": [
            "requirements.txt",
            "train_search.py"
        ]
    },
    "quokka-astro/quokka": {
        "quokka/scripts/crusher-1node.submit": [
            "tests/benchmark_unigrid_512.in"
        ]
    },
    "EricWang12/DiT": {
        "DiT/submit.slurm": [
            "train.py"
        ]
    },
    "princeton-nlp/AutoCompressors": {
        "AutoCompressors/run/eval_llama.sh": [
            "train.py"
        ]
    },
    "princeton-nlp/CEPE": {
        "AutoCompressors/run/eval_llama.sh": [
            "train.py"
        ]
    },
    "SanniM3/predicitons_with_explanations": {
        "predicitons_with_explanations/esnli.sh": [
            "scripts/exp.py"
        ],
        "predicitons_with_explanations/jobspec-cfg/scripts/exp.py": [
            "scripts/input_to_label_and_rationale.py"
        ]
    },
    "Maelic/sg2im_torch1.13": {
        "sg2im_torch1.13/SLURM.sh": [
            "scripts/train.py"
        ]
    },
    "abhishek-agrawal94/childes-contingency": {
        "childes-contingency/bash_scripts/train.sh": [
            "nn/fine_tuning_nn.py"
        ],
        "childes-contingency/bash_scripts/annotate.sh": [
            "nn/annotate_contingency_nn.py"
        ]
    },
    "rabachi/paml": {
        "paml/sbatch_reinforce.sh": [
            "parser.py"
        ],
        "paml/cheetah_sbatch.sh": [
            "parser.py"
        ],
        "paml/runningscripts/sbatch_reinforce.sh": [
            "parser.py"
        ]
    },
    "nspranav/Ukbiobank_ADHD": {
        "Ukbiobank_ADHD/RunArrayDistributed.sh": [
            "distributed_conv.py"
        ]
    },
    "eromero-vlc/chroma-scripts-cori": {
        "chroma-scripts-cori/create_meson.sh": [
            "ensembles.sh"
        ],
        "chroma-scripts-cori/ensembles.sh": [
            "check.sh",
            "common.sh"
        ],
        "chroma-scripts-cori/create_redstar.sh": [
            "ensembles.sh"
        ],
        "chroma-scripts-cori/jobspec-cfg/check.sh": [
            "ensembles.sh"
        ],
        "chroma-scripts-cori/jobspec-cfg/ensembles.sh": [
            "check.sh",
            "common.sh"
        ]
    },
    "arjunmajum/vln-bert": {
        "vln-bert/scripts/slurm/debug.sh": [
            "train.py"
        ]
    },
    "Microbial-Ecology-Group/AMRplusplus": {
        "AMRplusplus/run_AMR%2B%2B_slurm.sh": [
            "main_AMR++.nf"
        ],
        "AMRplusplus/jobspec-cfg/main_AMR++.nf": [
            "main_AMR++.nf",
            "params.config"
        ]
    },
    "mahsa-mousavi/eDNAFlow": {
        "eDNAFlow/jobspec-cfg/eDNAFlow.nf": [
            "eDNAFlow.nf"
        ],
        "eDNAFlow/paperScripts_example4RunningOnHPC/runNFjob_se.slurm": [
            "eDNAFlow.nf"
        ]
    },
    "Android-xD/road-segmentation-2023": {
        "road-segmentation-2023/job.sh": [
            "startup.sh",
            "train.py"
        ],
        "road-segmentation-2023/job_full.sh": [
            "startup.sh",
            "train.py",
            "submit.py",
            "mask_to_submission.py"
        ],
        "road-segmentation-2023/jobspec-cfg/train.py": [
            "train.py"
        ],
        "road-segmentation-2023/jobspec-cfg/submit.py": [
            "mask_to_submission.py"
        ],
        "deep-learning-with-curiosity-and-perseverance/jobs/train_colorization-autoencoder.sh": [
            "train.py"
        ]
    },
    "Android-xD/deep-learning-with-curiosity-and-perseverance": {
        "deep-learning-with-curiosity-and-perseverance/jobs/train_vae.sh": [
            "scripts/startup.sh"
        ],
        "deep-learning-with-curiosity-and-perseverance/jobs/create_dataset.sh": [
            "scripts/startup.sh"
        ],
        "deep-learning-with-curiosity-and-perseverance/jobs/train_colorization-autoencoder.sh": [
            "scripts/startup.sh"
        ],
        "deep-learning-with-curiosity-and-perseverance/jobs/train_ae_simple.sh": [
            "scripts/startup.sh"
        ],
        "deep-learning-with-curiosity-and-perseverance/jobs/visualize_clustering_autoencoder.sh": [
            "scripts/startup.sh"
        ]
    },
    "marcodelapierre/trinity-nf": {
        "trinity-nf/test/gadi.sh": [
            "main.nf"
        ],
        "nanopore-nf/test/zeus.sh": [
            "main.nf"
        ]
    },
    "marcodelapierre/nanopore-nf": {
        "trinity-nf/test/gadi.sh": [
            "main.nf"
        ],
        "nanopore-nf/test/zeus.sh": [
            "main.nf"
        ]
    },
    "Josh-ee/sd-scripts": {
        "sd-scripts/nersc.sh": [
            "run.py"
        ],
        "sd-scripts/jobspec-cfg/run.py": [
            "train_network.py"
        ]
    },
    "compsy/machine-learning-depression": {
        "machine-learning-depression/jobspec-cfg/main.py": [
            "main.py"
        ],
        "machine-learning-depression/docker/cluster/submit.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "schwartzlab-methods/NEST": {
        "NEST/gpu_job_submit_compute_canada.sh": [
            "nest"
        ]
    },
    "CAMP-benchmark/CAMP": {
        "CAMP/batch/archer2.slurm": [
            "./camp",
            "config/example"
        ]
    },
    "m-kreuzer/PISM-MOM_coupling": {
        "PISM-MOM_coupling/run_coupled.sh.jinja2": [
            "AUTHORS",
            "POEM/input.nml-regular"
        ]
    },
    "eteq/Fakespeare": {
        "Fakespeare/job.pbs": [
            "train.py"
        ]
    },
    "levilelis/h-levin": {
        "h-levin/run_bootstrap_train_stp.sh": [
            "src/main.py"
        ],
        "h-levin/run_bootstrap_train_astar_sokoban.sh": [
            "src/main.py"
        ],
        "h-levin/run_bootstrap_train_witness.sh": [
            "src/main.py"
        ]
    },
    "MoMaF/facerec": {
        "facerec/scripts/extract.sh": [
            "./facerec/extract.py"
        ]
    },
    "LeyangWen/smplx": {
        "smplx/slurm_transfer_model.sh": [
            "config_files/smplx2smpl.yaml"
        ]
    },
    "LeyangWen/MotionBERT": {
        "MotionBERT/slurm_train_mesh.sh": [
            "train_mesh.py",
            "configs/mesh/MB_train_VEHS_3D.yaml"
        ]
    },
    "jdppthk/DDP_UNet": {
        "DDP_UNet/submit1.slr": [
            "train.py"
        ],
        "DDP_UNet/submit16.slr": [
            "train.py"
        ]
    },
    "ayush-alag/DataAuditing": {
        "DataAuditing/covid.sh": [
            "train_model.py",
            "run_audit.py"
        ]
    },
    "MasiboBrian/VGG11": {
        "VGG11/cifar10_augmented_monet_B1.sh": [
            "train_cifar10_augmented.py"
        ]
    },
    "Huzaifg/chrono": {
        "chrono/chrono_npz.sh": [
            "chrono_npz.py"
        ]
    },
    "kmchiti/WCAT": {
        "WCAT/scripts/train_resnet20.sh": [
            "src/main.py"
        ],
        "WCAT/scripts/RBF_resnet20.sh": [
            "src/main.py"
        ]
    },
    "SMAPPNYU/internal-dashboard": {
        "internal-dashboard/daily_update.sbatch": [
            "daily_update.ipynb"
        ]
    },
    "vsenderov/phyrppl": {
        "phyrppl/jobspec-cfg/runppl.sh": [
            "./runppl.sh",
            "tools/pdf.py",
            "tools/sample.py",
            "tools/figtree.py"
        ],
        "phyrppl/experiments/run_experiments-Ramphastidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments_Jeremy_CRBD.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments_Psittacidae1.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments_P20a.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-S13.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments_M6.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-P21.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Strigidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-P10.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-M1.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-P2.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Phasianidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-S6.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Procellariidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-CC8.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-S7S8.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Psittacidae1.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-M5.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Thamnophilidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-S2.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-P7.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Psittacidae2.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-M4.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments_Thamnophilidae.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-TitTyranRest.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-P20b.sh": [
            "./runppl.sh"
        ],
        "phyrppl/experiments/run_experiments-Charadrii.sh": [
            "./runppl.sh"
        ]
    },
    "yifeihe007/simd_FFT": {
        "simd_FFT/job_t.sh": [
            "test_n.sh"
        ]
    },
    "alper111/multimodal-vae": {
        "multimodal-vae/train.slurm": [
            "run_train.py"
        ],
        "multimodal-vae/jobspec-cfg/run_train.py": [
            "train.py",
            "test.py"
        ]
    },
    "Danield21/rosa": {
        "rosa/scripts/jobs.sh": [
            "train_mlm.py"
        ]
    },
    "oxcsml/lie-transformer": {
        "lie-transformer/scripts/slurm_molecule_SE3lieconv.sh": [
            "scripts/train_molecule.py"
        ]
    },
    "JasonChristo99/game-of-life-assignment": {
        "game-of-life-assignment/sbatch.sh": [
            "./game_of_life"
        ]
    },
    "Kevin-Haigis-Lab/kras-allele-genetic-interactions": {
        "kras-allele-genetic-interactions/src/20_21_run-rc-test-snakemake.sh": [
            "config/rc-test-snakemake-cluster.json",
            "graphs/20_20_rc-test-Snakefile/dag.pdf"
        ],
        "kras-allele-genetic-interactions/src/20_63_nonallelespec_run-rc-test-snakemake.sh": [
            "src/20_62_nonallelespec_rc-test-Snakefile.py",
            "config/rc-test-snakemake-cluster.json"
        ]
    },
    "Kevin-Haigis-Lab/speclet": {
        "speclet/expt-gpu-run.sh": [
            "./speclet/cli/fit_bayesian_model_cli.py",
            "models/model-configs.yaml"
        ],
        "speclet/munge/munge.sh": [
            "munge/munge-config.json"
        ],
        "speclet/pipelines/010_012_run-model-fitting-pipeline.sh": [
            "pipelines/010_011_smk-config.yaml"
        ]
    },
    "OpenLLMAI/OpenRLHF": {
        "OpenRLHF/examples/scripts/train_ppo_llama_ray_slurm.sh": [
            "examples/train_ppo_ray.py"
        ]
    },
    "georgestein/suPAErnova": {
        "suPAErnova/scripts/slurm/submit_train.slr": [
            "scripts/train_ae.py",
            "scripts/train_flow.py",
            "scripts/run_posterior_analysis.py"
        ]
    },
    "georgestein/twopoint_codes": {
        "twopoint_codes/doall_xi_pk.sh": [
            "pk_comparison.py",
            "data_append_pkxi.py"
        ]
    },
    "alexgraehl/TimeForScience": {
        "TimeForScience/Config/Alex_Williams/.aliases": [
            ".git/config"
        ],
        "TimeForScience/Config/Alex_Williams/.aliases-zsh": [
            ".git/config"
        ]
    },
    "fburic/candia": {
        "candia/jobspec-cfg/scripts/parafac/decompose_parafac.Snakefile": [
            "scripts/parafac/decompose_parafac.py"
        ],
        "candia/scripts/parafac/decompose_cluster_no_singularity.sh": [
            "scripts/parafac/start_mps.sh",
            "scripts/parafac/decompose_parafac.Snakefile",
            "scripts/parafac/stop_mps.sh"
        ],
        "candia/scripts/parafac/decompose_cluster.sh": [
            "scripts/parafac/start_mps.sh",
            "scripts/parafac/decompose_parafac.Snakefile"
        ]
    },
    "trislaz/gigassl": {
        "gigassl/tiling.sh": [
            "build_dataset/main_tiling.py"
        ]
    },
    "whatevermybaby/DRO_trustregion": {
        "DRO_trustregion/run.sh": [
            "my_train.py"
        ],
        "DRO_trustregion/DRO_trustregion-correct/run_log.sh": [
            "my_train.py"
        ],
        "DRO_trustregion/DRO_trustregion-correct/run_partial_log.sh": [
            "my_train.py"
        ],
        "DRO_trustregion/DRO_trustregion-correct/run.sh": [
            "my_train.py"
        ],
        "DRO_trustregion/jobspec-cfg/my_train.py": [
            "plot.py"
        ]
    },
    "xuyongzhi/pointnet": {
        "pointnet/P100_pointnet.sh": [
            "./train.py"
        ],
        "pointnet/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "MichelMarieLamah13/ECAPA-TDNN": {
        "ECAPA-TDNN/train_resnet_multi_1cl.sh": [
            "trainRESNETModelMulti_1cl.py"
        ],
        "ECAPA-TDNN/train_resnet_multi_ncl_1.sh": [
            "trainRESNETModelMulti_ncl_1.py"
        ]
    },
    "phil-mansfield/symphony_pipeline": {
        "symphony_pipeline/job_UM.sh": [
            "write_um_file.py",
            "configs/Group/config.txt",
            "print_UM.py"
        ]
    },
    "jfontestad/Boolean-QA": {
        "Boolean-QA/launchpad.sh": [
            "requirements.txt",
            "classification.py",
            "rag_classification.py",
            "bloomz.py",
            "petals_bloomz.py"
        ]
    },
    "cavanes1/ColTools": {
        "ColTools/script.sh": [
            "lst.py"
        ]
    },
    "shubham83183/DiffiMOT": {
        "DiffiMOT/slurm%20files/eval.slurm": [
            "src/track.py"
        ],
        "DiffiMOT/slurm%20files/job02.slurm": [
            "src/train.py"
        ]
    },
    "dapello/braintree": {
        "braintree/array_final_controls.sbatch": [
            "main.py"
        ],
        "braintree/array_final.sbatch": [
            "main.py"
        ],
        "braintree/array_final_advtrain.sbatch": [
            "main.py"
        ]
    },
    "BenHuiHui/kf": {
        "kf/submit3.pbs": [
            "project3.py"
        ],
        "kf/submit_vgg.pbs": [
            "project_vgg.py"
        ],
        "kf/submit.pbs": [
            "project.py"
        ],
        "kf/submit1.pbs": [
            "project1.py"
        ],
        "kf/jobspec-cfg/project_vgg.py": [
            "result"
        ]
    },
    "jeremiahpslewis/AlgorithmicCompetition.jl": {
        "AlgorithmicCompetition.jl/src/dddc_slurm_sbatch.sh": [
            "src/dddc_slurm_batch.jl"
        ],
        "AlgorithmicCompetition.jl/src/aiapc_slurm_sbatch.sh": [
            "src/aiapc_slurm_batch.jl"
        ]
    },
    "SingerLab/single-cell_cnv": {
        "single-cell_cnv/jobspec-cfg/src/01_bwa.sc.map.sh": [
            "./src/01_bwa.sc.map.sh",
            "./src/02_varbin_pe.sh"
        ],
        "single-cell_cnv/jobspec-cfg/src/02_varbin_pe.sh": [
            "./src/02_varbin_pe.sh"
        ],
        "single-cell_cnv/jobspec-cfg/src/05_runGISTIC_SC.sh": [
            "./src/05_runGISTIC_SC.sh"
        ],
        "single-cell_cnv/src/01_bwa.sc.map.sh": [
            "./src/01_bwa.sc.map.sh",
            "./src/02_varbin_pe.sh"
        ],
        "single-cell_cnv/src/05_runGISTIC_SC.sh": [
            "./src/05_runGISTIC_SC.sh"
        ],
        "single-cell_cnv/src/05_runGISTIC_DNA.sh": [
            "./src/05_runGISTIC_SC.sh"
        ]
    },
    "bricstb-softwares/rxp2p-cycle": {
        "rxp2p-cycle/train_p2p.sh": [
            "train.py"
        ]
    },
    "amansouri3476/MD-CRL": {
        "MD-CRL/run-train-mila-cpu.sh": [
            "run_training.py"
        ],
        "MD-CRL/jobspec-cfg/run_training.py": [
            "run_training.py"
        ]
    },
    "rtviii/kddlab_sockeye": {
        "kddlab_sockeye/sample.job.array.sh": [
            "experiment_parser.py"
        ]
    },
    "mtelias2/ie534_rl_hw": {
        "ie534_rl_hw/run_a2c.pbs": [
            "Main.py"
        ]
    },
    "swom/ArchitectureEvolution": {
        "ArchitectureEvolution/run_multiple_param_Cmake.sh": [
            "./run_multiple_param_loop.sh"
        ],
        "ArchitectureEvolution/jobspec-cfg/run_multiple_param_loop.sh": [
            "./run_multiple_param_loop.sh",
            "run_loop.sh"
        ]
    },
    "connormarrs/FGF-manifold-simulator": {
        "FGF-manifold-simulator/run_BrownianBridge_dist.sh": [
            "python_scripts/s_0.5_maxima_distribution.py"
        ],
        "FGF-manifold-simulator/run_ExpectedMaxima.sh": [
            "python_scripts/expected_means.py"
        ]
    },
    "VanAndelInstitute/Biscuit_Snakemake_Workflow": {
        "Biscuit_Snakemake_Workflow/bin/run_snakemake_workflow_env_modules.sh": [
            "config/config.yaml"
        ],
        "Biscuit_Snakemake_Workflow/bin/run_snakemake_workflow.sh": [
            "config/config.yaml"
        ],
        "Biscuit_Snakemake_Workflow/jobspec-cfg/config/config.yaml": [
            "config/samples.tsv"
        ]
    },
    "deephyper/deephyper": {
        "deephyper/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "deephyper/install/alcf/thetagpu.sh": [
            "setup.py"
        ],
        "anl-22-summer-workshop/scripts/ALCF-ThetaGPU/job-install-dhenv.sh": [
            "setup.py"
        ],
        "quickstart/sites/ALCF/thetagpu/install/install.sh": [
            "setup.py"
        ]
    },
    "deephyper/dmobo-sc24": {
        "deephyper/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "deephyper/install/alcf/thetagpu.sh": [
            "setup.py"
        ],
        "anl-22-summer-workshop/scripts/ALCF-ThetaGPU/job-install-dhenv.sh": [
            "setup.py"
        ],
        "quickstart/sites/ALCF/thetagpu/install/install.sh": [
            "setup.py"
        ]
    },
    "ljxw88/pvae-tangent-estimator": {
        "pvae-tangent-estimator/run_vae_80_3.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_80_1.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_40_2.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_60_3.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_40_1.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_60_4.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_60_1.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_80_2.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_40_4.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_80_4.sh": [
            "pvae/main.py"
        ],
        "pvae-tangent-estimator/run_vae_60_2.sh": [
            "pvae/main.py"
        ]
    },
    "MuhangTian/synthetic-medical-image": {
        "synthetic-medical-image/shell/run.sh": [
            "train.py"
        ]
    },
    "chiragfalor/Ultimate-PUPPI": {
        "Ultimate-PUPPI/job1.slurm": [
            "retrain_model.py"
        ]
    },
    "pradyumnaym/BoaTetection": {
        "BoaTetection/run.sh": [
            "train.py",
            "data/BoaTetection_v2.yaml",
            "cfg/training/yolov7x.yaml",
            "data/hyp.scratch.p5.yaml"
        ],
        "BoaTetection/jobspec-cfg/train.py": [
            "test.py",
            "train.py"
        ]
    },
    "jpp46/NATURE_MI2020": {
        "NATURE_MI2020/g0_closed.script": [
            "worker_closed.jl"
        ],
        "NATURE_MI2020/g0.script": [
            "worker.jl"
        ],
        "NATURE_MI2020/g15.script": [
            "worker.jl"
        ],
        "NATURE_MI2020/grh.script": [
            "worker_roll_hill.jl"
        ],
        "NATURE_MI2020/g15_semi.script": [
            "worker_semi.jl"
        ],
        "NATURE_MI2020/g_any.script": [
            "worker.jl"
        ]
    },
    "eddietorres24/Research": {
        "Research/MapCutAndRun.sh": [
            "config.txt"
        ],
        "Research/ChIPseqPipeline_RY.sh": [
            "config.txt"
        ]
    },
    "viswanathgs/r2c": {
        "r2c/scripts/run_eval.sh": [
            "./scripts/setup_env.sh"
        ]
    },
    "neeland/disentangle": {
        "disentangle/slurm.100c100.sh.save": [
            "main.py"
        ]
    },
    "xiaofeng-d/VAE-benchmark": {
        "VAE-benchmark/submit.sh": [
            "vae-grid.py"
        ]
    },
    "xiaofeng-d/classifier": {
        "classifier/run-driver.sh": [
            "./driver.py"
        ],
        "classifier/jobspec-cfg/driver.py": [
            "driver.py",
            "utils.py"
        ]
    },
    "zhhao1/fcgcl": {
        "fcgcl/run.sh": [
            "./path.sh",
            "local/st_train.py"
        ],
        "fcgcl/jobspec-cfg/path.sh": [
            "path.sh"
        ]
    },
    "jason-fer/Theano-DBNs-For-Drug-Discovery": {
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/example-job.sh": [
            "sk_logistic_regression.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_random_forests/pbs-random_forests-tox21.sh": [
            "sk_random_forests.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_random_forests/pbs-random_forests-pcba.sh": [
            "sk_random_forests.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_random_forests/pbs-random_forests-muv.sh": [
            "sk_random_forests.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_random_forests/pbs-random_forests-dude.sh": [
            "sk_random_forests.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_logistic_regression/pbs-logistic_regression-muv.sh": [
            "sk_logistic_regression.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_logistic_regression/pbs-logistic_regression-pcba.sh": [
            "sk_logistic_regression.py"
        ],
        "Theano-DBNs-For-Drug-Discovery/sbel_jobs/sk_logistic_regression/pbs-logistic_regression-dude.sh": [
            "sk_logistic_regression.py"
        ]
    },
    "Devintoober/CLASS_2020": {
        "CLASS_2020/run.sh": [
            "nextflow.config"
        ],
        "Nextflow/run.sh": [
            "nextflow.config"
        ]
    },
    "Devintoober/Nextflow": {
        "CLASS_2020/run.sh": [
            "hg38-blacklist.v2.bed",
            "nextflow.config"
        ],
        "Nextflow/run.sh": [
            "design.csv",
            "hg38-blacklist.v2.bed",
            "nextflow.config"
        ]
    },
    "ruohoruotsi/pase": {
        "pase/template_scripts/train_resnet50.sh": [
            "train.py",
            "cfg/distortions/overlap.cfg",
            "data/librispeech_50h_stats.pkl"
        ]
    },
    "bdice/cp2k-nvt": {
        "cp2k-nvt/run.sh": [
            "project.py"
        ]
    },
    "bonaert/explainable_rl": {
        "explainable_rl/cluster_scripts/mountain_car/run_with_teacher_mc_seed_500.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/mountain_car/run_without_teacher_mc_seed_300.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/mountain_car/run_without_teacher_mc_seed_200.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/mountain_car/run_without_teacher_mc_seed_400.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/mountain_car/run_with_teacher_mc_seed_200.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/mountain_car/run_without_teacher_mc_seed_500.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/lunar_lander/run_without_teacher_ll_seed_500.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/lunar_lander/run_without_teacher_ll_seed_200.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/lunar_lander/run_without_teacher_ll_seed_400.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/lunar_lander/run_without_teacher_ll_seed_100.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ],
        "explainable_rl/cluster_scripts/lunar_lander/run_with_teacher_ll_seed_300.pbs": [
            "hierarchical_algos/run_hac_general.py"
        ]
    },
    "Ryan-Oblivion/RNA-seq_pipeline_NF": {
        "RNA-seq_pipeline_NF/run_rna_pe_pipeline.sh": [
            "pe_rna_sle_pipeline.nf"
        ],
        "RNA-seq_pipeline_NF/jobspec-cfg/pe_rna_sle_pipeline.nf": [
            "feature_count.R"
        ]
    },
    "Ryan-Oblivion/Updated_SLE_CutRun_pipeline": {
        "RNA-seq_pipeline_NF/run_rna_pe_pipeline.sh": [
            "pe_sle_pipeline.nf",
            "make_homer.sh"
        ],
        "Updated_SLE_CutRun_pipeline/run_my_pe_pipeline.sh": [
            "pe_sle_pipeline.nf",
            "make_homer.sh",
            "homer_anno_combined.sh"
        ]
    },
    "centuri-engineering/metatranscriptomics-bulkrnaseq_workflow": {
        "metatranscriptomics-bulkrnaseq_workflow/run_slurm.sh": [
            "Snakefile",
            "cluster_config.json"
        ]
    },
    "lyu-xg/dec-hdrqn": {
        "dec-hdrqn/dis.script": [
            "main.py"
        ]
    },
    "awwong1/rsna-hemorrhage-classification": {
        "rsna-hemorrhage-classification/cc_rsna.sh": [
            "main.py"
        ],
        "rsna-hemorrhage-classification/cc_rsna_pos.sh": [
            "main.py"
        ]
    },
    "sjoudaki/CosmoJBD": {
        "CosmoJBD/testjbd.sh": [
            "cosmomc",
            "data/lensingrsdfiles/nz_z1_kids_binned_bootstrap.dat",
            "data/lensingrsdfiles/nz_z2_kids_binned_bootstrap.dat",
            "data/lensingrsdfiles/nz_z3_kids_binned_bootstrap.dat",
            "data/lensingrsdfiles/nz_z4_kids_binned_bootstrap.dat",
            "./cosmomc",
            "testjbd.ini"
        ],
        "CosmoJBD/jobspec-cfg/testjbd.ini": [
            "planck_covmats/base_TT_lowTEB_plik.covmat"
        ]
    },
    "bnriiitb/telugu_asr": {
        "telugu_asr/script.sh": [
            "script.sh",
            "requirements.txt",
            "train.py"
        ],
        "telugu_asr/jobspec-cfg/train.py": [
            "train.py",
            "console.log"
        ],
        "telugu_asr/jobspec-cfg/script.sh": [
            "script.sh",
            "requirements.txt",
            "train.py"
        ]
    },
    "csuhan/OneLLM": {
        "OneLLM/exps/image_text_pretrain_slurm.sh": [
            "main_pretrain.py",
            "config/llama2/7B.json",
            "config/llama2/tokenizer.model"
        ]
    },
    "csuhan/s2anet": {
        "s2anet/tools/slurm_train.slurm": [
            "./tools/dist_train.sh"
        ]
    },
    "Deltares/interreg-meuse": {
        "interreg-meuse/h7_snakefile_cluster.sh": [
            "snakefile",
            "config/members_config.yml",
            "snakefile_nocdo"
        ]
    },
    "alextidd/snRNAseq_analysis": {
        "snRNAseq_analysis/src/snRNAseq_workflow/11_integrate_all.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/03_seurat_clustering.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/01_filter.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/12_monocle_clustering.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/05_merge_infercnv_patients.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/10_integrate_mnn.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/04_infercnv.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/07_differential_expression.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/13_pseudobulk.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/08_pathway_analysis.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/02_integrate.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/06_integrate_infercnv_malignant.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/archive/02_run.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/archive/04_run_by_patient_wo_organoids.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/snRNAseq_workflow/archive/03_run_by_patient.sh": [
            "config/snRNAseq_workflow/oesophageal_10X.config",
            "config/imperial.config"
        ],
        "snRNAseq_analysis/src/scflow/02_run.sh": [
            "config/scflow/oesophageal_10X.config"
        ],
        "snRNAseq_analysis/src/scflow/04_run_by_patient_wo_organoids.sh": [
            "config/scflow/oesophageal_10X.config"
        ],
        "snRNAseq_analysis/src/scflow/03_run_by_patient.sh": [
            "config/scflow/oesophageal_10X.config"
        ]
    },
    "rezanmz/GraphNLP": {
        "GraphNLP/job.sh": [
            "src/main.py"
        ]
    },
    "erin-atkinson/filament-instability": {
        "filament-instability/scripts/ParameterSweep/Ri020.sh": [
            "src/simulation.jl"
        ],
        "filament-instability/scripts/ParameterSweep/Ri010-3d.sh": [
            "src/simulation.jl"
        ],
        "filament-instability/scripts/ParameterSweep/Ri000-3d.sh": [
            "src/simulation.jl"
        ],
        "filament-instability/scripts/ParameterSweep/Ri000.sh": [
            "src/simulation.jl"
        ],
        "filament-instability/scripts/ParameterSweep/Ri010.sh": [
            "src/simulation.jl"
        ]
    },
    "edwardkang0925/exon": {
        "exon/test_sampleData_array.sbatch": [
            "nextflow",
            "exonPipeline_array.nf"
        ]
    },
    "cheshmi/sc23-ad-sparse-fusion": {
        "sc23-ad-sparse-fusion/run_gs.sh": [
            "gauss_seidel.py"
        ]
    },
    "spamela/neural_parareal": {
        "neural_parareal/run_job.slurm": [
            "./run_parareal_jorek.py"
        ],
        "neural_parareal/jobspec-cfg/run_parareal_jorek.py": [
            "./coarse_solver/input"
        ]
    },
    "boun-tabi-LMG/turkish-lm-tuner": {
        "turkish-lm-tuner/experiments/scripts/evaluate.sh": [
            "experiments/eval.py"
        ]
    },
    "Gabriel-A-Barrett/Grayling_gwas_nf": {
        "Grayling_gwas_nf/nextflow.sh": [
            "main.nf"
        ]
    },
    "yuming-l2/M-spikelearn-dh": {
        "M-spikelearn-dh/theta_job_checkpoints.qsub": [
            "src/stdp_mnist_launcher.py"
        ]
    },
    "dls03/DeepIsoFun": {
        "DeepIsoFun/runM.sh": [
            "DeepIsoFun/deepisofun3.py"
        ]
    },
    "minkichunm/master_thesis": {
        "master_thesis/run.sh": [
            "main.py"
        ]
    },
    "krcnynk/UnequalLossProtectionDeepFeatures_CI": {
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineGraphImages.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineB.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRBUR.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRBURNS.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRSBUR.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRSIIDNSW.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineTNS.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRSIIDNS.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineRSIID.sh": [
            "Korcan/pipeline.py"
        ],
        "UnequalLossProtectionDeepFeatures_CI/CCscripts/pipelineT.sh": [
            "Korcan/pipeline.py"
        ]
    },
    "NormalUhr/hydra-structured": {
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_std_auto_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10Idx_adv_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10Idx_adv_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10_std_auto_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_std_auto_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_std_auto_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10Idx_adv_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10Idx_adv_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_std_auto_finetune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_finetune_resume.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_adv_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10_std_auto_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_std_auto_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10Idx_adv_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10Idx_adv_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_adv_finetune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_finetune_resume.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_std_auto_prune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_prune_resume.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_adv_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10_adv_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_adv_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10Idx_adv_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10Idx_adv_finetune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet20s_CIFAR10_adv_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_adv_prune.sb"
        ],
        "hydra-structured/jobspec-cfg/scripts/resnet18_CIFAR10_adv_prune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_prune_resume.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_std_auto_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_prune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10Idx_adv_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10Idx_adv_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_std_auto_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_std_auto_prune.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_std_auto_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_auto_prune_resume.sb": [
            "train.py"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10Idx_adv_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10Idx_adv_prune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_auto_finetune.sb": [
            "train.py"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_std_auto_finetune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_finetune_resume.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_adv_prune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_prune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_auto_prune.sb": [
            "train.py"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_std_auto_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_std_auto_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10Idx_adv_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10Idx_adv_prune.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_adv_finetune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_finetune_resume.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_std_auto_prune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_std_auto_prune_resume.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_adv_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_finetune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_adv_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_auto_finetune_resume.sb": [
            "train.py"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10Idx_adv_finetune.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10Idx_adv_finetune.sb"
        ],
        "hydra-structured/scripts/resnet20s_CIFAR10_adv_prune.sb": [
            "train.py",
            "scripts/resnet20s_CIFAR10_adv_prune.sb"
        ],
        "hydra-structured/scripts/resnet18_CIFAR10_adv_prune_resume.sb": [
            "train.py",
            "scripts/resnet18_CIFAR10_adv_prune_resume.sb"
        ]
    },
    "HaoZ-Work/FinalThesis2023": {
        "FinalThesis2023/slurm_scripts/preprocess_bookcorpus.sh": [
            "preprocess.py"
        ]
    },
    "fangwei00-jin/ViTransPAD": {
        "ViTransPAD/TransformerFAS.slurm": [
            "configs/OuluNPU.json"
        ]
    },
    "rwmahrra/DiscoveryWorldPongAIExhibit": {
        "DiscoveryWorldPongAIExhibit/run.sh": [
            "requirements.txt",
            "reinforcement_selfplay.py"
        ]
    },
    "rohanmaddamsetti/AR-gene-plasmid-analysis": {
        "AR-gene-plasmid-analysis/assemble-DH5a-genomes.sh": [
            "assemble-DH5a-genomes.sh"
        ],
        "AR-gene-plasmid-analysis/jobspec-cfg/assemble-DH5a-genomes.sh": [
            "assemble-DH5a-genomes.sh"
        ]
    },
    "isugifNF/polishCLR": {
        "polishCLR/submit_nf.slurm": [
            "main.nf"
        ],
        "polishCLR/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "RNAseq/submit_nf.slurm": [
            "main.nf"
        ],
        "RNAseq/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "assemblyStats/submit_nf.slurm": [
            "main.nf"
        ]
    },
    "isugifNF/RNAseq": {
        "polishCLR/submit_nf.slurm": [
            "main.nf"
        ],
        "polishCLR/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "RNAseq/submit_nf.slurm": [
            "main.nf"
        ],
        "RNAseq/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "assemblyStats/submit_nf.slurm": [
            "main.nf"
        ]
    },
    "isugifNF/assemblyStats": {
        "polishCLR/submit_nf.slurm": [
            "main.nf"
        ],
        "polishCLR/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "RNAseq/submit_nf.slurm": [
            "main.nf"
        ],
        "RNAseq/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "assemblyStats/submit_nf.slurm": [
            "main.nf"
        ]
    },
    "samebdon/springtail_haploid_selection": {
        "springtail_haploid_selection/scripts/bsub_gene_pop_allacma_fusca.txt": [
            "nextflow/gene_pop/gene_pop_main.nf",
            "nextflow/conf/nextflow.config"
        ],
        "springtail_haploid_selection/scripts/bsub_herho_allacma_fusca.txt": [
            "nextflow/herho/herho_main.nf",
            "nextflow/conf/nextflow.config"
        ],
        "springtail_haploid_selection/scripts/bsub_lg_het_allacma_fusca.txt": [
            "nextflow/lg_het/lg_het_main.nf",
            "nextflow/conf/nextflow.config"
        ],
        "springtail_haploid_selection/scripts/bsub_ortholog_pop_gen.sh": [
            "nextflow/ortholog_pop_gen/ortholog_pop_gen_main.nf",
            "nextflow/conf/nextflow.config"
        ],
        "springtail_haploid_selection/scripts/bsub_var_call.txt": [
            "nextflow/var_call/var_call_main.nf",
            "nextflow/conf/nextflow.config"
        ]
    },
    "jaded0/memory_encoding": {
        "memory_encoding/big_run.sh": [
            "run_training.sh"
        ],
        "memory_encoding/jobspec-cfg/run_training.sh": [
            "run_training.sh",
            "hebby.py"
        ]
    },
    "xingyaoww/code-act": {
        "code-act/jobspec-cfg/scripts/slurm/configs/finetune_4xA100_4tp.slurm": [
            "scripts/slurm/configs/finetune_4xA100_4tp.slurm"
        ],
        "code-act/scripts/slurm/configs/finetune_4xA100_4tp.slurm": [
            "scripts/slurm/configs/finetune_4xA100_4tp.slurm"
        ]
    },
    "jxhe/unify-parameter-efficient-tuning": {
        "unify-parameter-efficient-tuning/jobspec-cfg/examples/pytorch/text-classification/run_glue.py": [
            "src/transformers/training_args.py"
        ],
        "unify-parameter-efficient-tuning/jobspec-cfg/examples/pytorch/translation/run_translation.py": [
            "src/transformers/training_args.py"
        ],
        "unify-parameter-efficient-tuning/jobspec-cfg/examples/pytorch/summarization/run_summarization.py": [
            "src/transformers/training_args.py"
        ],
        "unify-parameter-efficient-tuning/exps/run_xsum.sh": [
            "examples/pytorch/summarization/run_summarization.py"
        ],
        "unify-parameter-efficient-tuning/exps/run_glue.sh": [
            "examples/pytorch/text-classification/run_glue.py"
        ],
        "unify-parameter-efficient-tuning/exps/run_en_ro.sh": [
            "examples/pytorch/translation/run_translation.py",
            "exps/romanian_postprocess.sh"
        ]
    },
    "1KFG/Phylogenomics": {
        "Phylogenomics/jobs/04_MSA_aln.sh": [
            "config.txt",
            "scripts/CodonTrim.py"
        ]
    },
    "semjon00/EchoMorph": {
        "EchoMorph/job_train.sh": [
            "training.py",
            "job_train.sh"
        ],
        "EchoMorph/jobspec-cfg/job_train.sh": [
            "training.py",
            "job_train.sh"
        ]
    },
    "elyssasliheet/predictBA": {
        "predictBA/get_labels.job": [
            "get_labels.py"
        ]
    },
    "Jefidev/distance_estimation_project": {
        "distance_estimation_project/slurm-align.sh": [
            "main.py"
        ],
        "distance_estimation_project/slurm-dino.sh": [
            "main.py"
        ],
        "distance_estimation_project/slurm-baseline.sh": [
            "main.py"
        ],
        "sign-language-benchmark/slurms/contrastive_500.sh": [
            "requirements.txt"
        ],
        "sign-language-benchmark/slurms/contrastive_250.sh": [
            "requirements.txt"
        ],
        "sign-language-benchmark/slurms/NXtent/contrastive_250.sh": [
            "requirements.txt"
        ]
    },
    "Jefidev/sign-language-benchmark": {
        "sign-language-benchmark/slurms/contrastive_500.sh": [
            "requirements.txt",
            "VIT_contrastive.py"
        ],
        "sign-language-benchmark/slurms/contrastive_250.sh": [
            "requirements.txt",
            "VIT_contrastive.py"
        ],
        "sign-language-benchmark/slurms/NXtent/contrastive_250.sh": [
            "requirements.txt",
            "VIT_contrastive.py"
        ]
    },
    "ohsu-cedar-comp-hub/scRNAvelocity": {
        "scRNAvelocity/submit_snakemake.sh": [
            "cluster.json",
            "Snakefile"
        ]
    },
    "OSU-SRLab/ImmuneGen": {
        "ImmuneGen/makeGraphs.sh": [
            "assignFunction.R",
            "makeBreakpoints.R",
            "makeSNVmap.R",
            "makeCancerType.R",
            "makeExpression.R"
        ]
    },
    "zheng-20/Work1": {
        "Work1/jobspec-cfg/tool/run.sh": [
            "tool/run.sh",
            "model/pointtransformer/pointtransformer.py"
        ],
        "Work1/tool/finalrun.sh": [
            "tool/run.sh",
            "model/pointtransformer/pointtransformer.py"
        ],
        "Work1/tool/testrun.sh": [
            "tool/run.sh",
            "model/pointtransformer/pointtransformer.py"
        ]
    },
    "FreedomIntelligence/try_Phoenix2": {
        "try_Phoenix2/multinode_pretrain.sh": [
            "TinyLlama/pretrain/tinyllama.py"
        ]
    },
    "alirezaomidi/colabfold-scripts": {
        "colabfold-scripts/slurm/cedar-multi-gpu.sh": [
            "batch.py"
        ],
        "colabfold-scripts/slurm/graham-multi-gpu.sh": [
            "batch.py"
        ]
    },
    "thomasgnuttall/cae-invar-mod": {
        "cae-invar-mod/sbatch_job.sh": [
            "get_started.sh",
            "train.py",
            "filelist_full_dataset.txt",
            "config_cqt.ini",
            "convert.py",
            "extract_motives.py",
            "jku_csv_files.txt"
        ],
        "cae-invar-mod/jobspec-cfg/jku_csv_files.txt": [
            "./complex_auto/motives_extractor/jku_csvs/mazurka24-4-poly.csv",
            "./complex_auto/motives_extractor/jku_csvs/silverswan-poly.csv",
            "./complex_auto/motives_extractor/jku_csvs/sonata01-3-poly.csv",
            "./complex_auto/motives_extractor/jku_csvs/sonata04-2-poly.csv",
            "./complex_auto/motives_extractor/jku_csvs/wtc2f20-poly.csv"
        ],
        "cae-invar-mod/jobspec-cfg/get_started.sh": [
            "get_started.sh",
            "train.py",
            "filelist_audio.txt",
            "config_cqt.ini",
            "convert.py",
            "extract_motives.py",
            "jku_csv_files.txt"
        ]
    },
    "mbzuai-oryx/MobiLlama": {
        "MobiLlama/pretrain.sh": [
            "main_mobillama.py"
        ]
    },
    "warisqr007/transformer-vc": {
        "transformer-vc/job.slurm": [
            "main.py"
        ]
    },
    "Jiahuan-Pei/CoMemNN": {
        "CoMemNN/pre.sh": [
            "pre.sh"
        ],
        "CoMemNN/trains.sh": [
            "train.sh"
        ],
        "CoMemNN/jobspec-cfg/train.sh": [
            "train.sh"
        ],
        "CoMemNN/jobspec-cfg/pre.sh": [
            "pre.sh"
        ]
    },
    "DengPingFan/FSGAN": {
        "FSGAN/train_ours.sh": [
            "train.py"
        ]
    },
    "jonathanking/angletransformer": {
        "protein-transformer/research/cluster/pre112019/final_project/alldata03.pbs": [
            "train.py"
        ],
        "protein-transformer/research/cluster/pre112019/final_project/alldata02.pbs": [
            "train.py"
        ],
        "angletransformer/slurm/aim3b_conv_resnet/toasty4gpuC3.slurm": [
            "train.py"
        ],
        "angletransformer/slurm/aim3b_conv_resnet_4day/toasty4gpuN2.slurm": [
            "train.py"
        ],
        "angletransformer/slurm/aim3b_conv_resnet_4day/toasty4gpuC2.slurm": [
            "train.py"
        ],
        "angletransformer/slurm/aim3b_conv_resnet_4day/toasty4gpuC3.slurm": [
            "train.py"
        ]
    },
    "Horrible-Supervisors/data": {
        "data/scripts/run_gen_per_shard100.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set1/run_gen_image_vars3.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set1/run_gen_image_vars7.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set0/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set0/run_gen_image_vars4.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set0/run_gen_image_vars5.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set0/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenet2012_subset_1pct/set0/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars3.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars7.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars15.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars2.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars14.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars5.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set1/run_gen_image_vars13.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars3.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars7.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars15.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars6.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars0.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars8.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set3/run_gen_image_vars13.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars3.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars4.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars15.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars2.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars14.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars5.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars9.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars6.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set2/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars15.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars2.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars14.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars6.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars0.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars12.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars8.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set4/run_gen_image_vars13.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars4.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars2.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars5.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars6.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars0.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars8.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set0/run_gen_image_vars13.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars3.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars11.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars7.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars14.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars5.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars6.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars12.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars10.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars1.sh": [
            "generate_image_variations.py"
        ],
        "data/scripts/imagenette/set5/run_gen_image_vars13.sh": [
            "generate_image_variations.py"
        ]
    },
    "leedtan/PersonaBot": {
        "PersonaBot/default.sh": [
            "model.py"
        ]
    },
    "Becktor/robustNets": {
        "robustNets/runscripts/oldscripts/start9k.sh": [
            "train.py"
        ],
        "robustNets/runscripts/oldscripts/robust_net.sh": [
            "train.py"
        ],
        "robustNets/runscripts/oldscripts/cont.sh": [
            "train.py"
        ],
        "robustNets/runscripts/oldscripts/runscript.sh": [
            "train.py"
        ],
        "robustNets/runscripts/reannotate/starta_50.sh": [
            "train.py"
        ],
        "robustNets/runscripts/reannotate/starta.sh": [
            "train.py"
        ]
    },
    "isi-vista/adam": {
        "adam/scripts/run_experiment.sh": [
            "adam/experiment/log_experiment.py"
        ]
    },
    "AdeDZY/DeepCT": {
        "DeepCT/train_marcodoc.sh": [
            "run_deepct.py"
        ],
        "DeepCT/inference_marcotsvdoc.sh": [
            "run_deepct.py"
        ]
    },
    "Spyros-Vl/master_thesis_dtu": {
        "master_thesis_dtu/jobscript.sh": [
            "src/models/train_model_DETR_fromCheck.py"
        ]
    },
    "narendasan/neural-mmo": {
        "neural-mmo/evo_eval.sh": [
            "Forge.py"
        ],
        "neural-mmo/jobspec-cfg/Forge.py": [
            "Forge.py",
            "projekt/config.py"
        ]
    },
    "glwagner/LESbrary.jl": {
        "LESbrary.jl/scripts/boundary_layer_turbulence.slurm": [
            "simulation/boundary_layer_turbulence_simple.jl"
        ]
    },
    "luckyos-code/mia-covid": {
        "mia-covid/mia_covid.job": [
            "mia_covid.job"
        ],
        "mia-covid/jobspec-cfg/mia_covid.job": [
            "mia_covid.job"
        ]
    },
    "juanb09111/semantic_depth": {
        "semantic_depth/train.sh": [
            "train.py"
        ],
        "semantic_depth/inference.sh": [
            "inference.py"
        ]
    },
    "daniilkk/TabDL-Credit-Scoring": {
        "TabDL-Credit-Scoring/sbatch/experiments/resnet_ple.sbatch": [
            "requirements.txt",
            "src/train.py"
        ],
        "TabDL-Credit-Scoring/sbatch/experiments/resnet.sbatch": [
            "requirements.txt",
            "src/train.py"
        ]
    },
    "Huangzizhou/microstructure_inflators": {
        "microstructure_inflators/compile.sh": [
            "compile.sh"
        ],
        "microstructure_inflators/jobspec-cfg/compile.sh": [
            "compile.sh"
        ]
    },
    "abhinav70113/binaryML": {
        "binaryML/train.sh": [
            "make_uniformz.py",
            "chunk_classifier.py",
            "single_index_predict_f.py",
            "single_index_predict_z.py",
            "single_index_predict_snr.py",
            "single_index_predict_z_with_pvol.py",
            "create_ppdot_all.py"
        ],
        "binaryML/jobspec-cfg/create_ppdot_all.py": [
            "gen_pdot_vol.py"
        ]
    },
    "PinzhenChen/show-partially-attend-and-tell": {
        "show-partially-attend-and-tell/long.sh": [
            "train.py"
        ],
        "show-partially-attend-and-tell/jobspec-cfg/train.py": [
            "create_input_files.py"
        ]
    },
    "elggem/Neural-IMage-Assessment": {
        "Neural-IMage-Assessment/hpc_gpu_job.sh": [
            "./train.sh",
            "hpc_gpu_job.sh"
        ],
        "Neural-IMage-Assessment/jobspec-cfg/hpc_gpu_job.sh": [
            "./train.sh",
            "hpc_gpu_job.sh"
        ],
        "Neural-IMage-Assessment/jobspec-cfg/train.sh": [
            "main.py"
        ]
    },
    "patmjen/blood-vessel-segmentation": {
        "blood-vessel-segmentation/submit_inference.sh": [
            "init.sh",
            "run_inference.py"
        ],
        "blood-vessel-segmentation/submit_train.sh": [
            "init.sh",
            "run_training.py"
        ]
    },
    "mollymr305/mnist-mc-dropout": {
        "mnist-mc-dropout/mnist_mc_dropout.pbs": [
            "mnist_mc_dropout.py"
        ]
    },
    "MemduhG/versetorch": {
        "versetorch/notebooks/jupyter.sh": [
            "scripts/venv.sh"
        ],
        "versetorch/scripts/train/rf.sh": [
            "scripts/venv.sh",
            "src/train/rf.py"
        ],
        "versetorch/scripts/train/acc_tur.sh": [
            "scripts/venv.sh",
            "src/train/train_accumulation.py"
        ],
        "versetorch/scripts/train/dae_cz.sh": [
            "scripts/venv.sh",
            "src/train/dae_acc.py"
        ],
        "versetorch/scripts/train/acc_cz.sh": [
            "scripts/venv.sh",
            "src/train/train_accumulation.py"
        ],
        "versetorch/scripts/translate/val_template.sh": [
            "scripts/venv.sh",
            "src/utils/translate.py"
        ]
    },
    "Yongrui-Su/Nanocomposites": {
        "Nanocomposites/gpu_bd.sh": [
            "./ysu_bd_gpu",
            "gpu_bd.sh"
        ],
        "Nanocomposites/jobspec-cfg/gpu_bd.sh": [
            "./ysu_bd_gpu",
            "gpu_bd.sh"
        ]
    },
    "adrn/apogee-dr17-distances": {
        "apogee-dr17-distances/mpi/train.sh": [
            "config.yml"
        ]
    },
    "adrn/GCMatchedFilter": {
        "GCMatchedFilter/mpi/control-ll.sh": [
            "scripts/compute-cmd-likelihoods.py"
        ],
        "GCMatchedFilter/mpi/cluster-ll.sh": [
            "scripts/compute-cmd-likelihoods.py"
        ],
        "GCMatchedFilter/mpi/xd-ll.sh": [
            "scripts/compute-xd-likelihoods.py"
        ],
        "GCMatchedFilter/mpi/isochrone-ll.sh": [
            "scripts/compute-cmd-likelihoods.py"
        ]
    },
    "codehacken/MUSE": {
        "MUSE/muse.slurm": [
            "supervised.py",
            "evaluate.py"
        ],
        "MUSE/bidnn.slurm": [
            "bdma_sup.py",
            "evaluate.py"
        ],
        "MUSE/jobspec-cfg/bdma_sup.py": [
            "LICENSE"
        ],
        "MUSE/jobspec-cfg/evaluate.py": [
            "LICENSE",
            "evaluate.py"
        ],
        "MUSE/jobspec-cfg/supervised.py": [
            "LICENSE"
        ]
    },
    "delomast/GSmhSim": {
        "GSmhSim/mh_snp_atlSalm.sh": [
            "mh_snp_comparison_sim.R"
        ],
        "GSmhSim/mh_snp_eobc.sh": [
            "mh_snp_comparison_sim.R"
        ]
    },
    "jmduarte/particleflow": {
        "particleflow/mlpf/tallinn/cms.sh": [
            "mlpf/pipeline.py",
            "parameters/cms.yaml"
        ],
        "particleflow/mlpf/flatiron/raytune.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pipeline.py"
        ],
        "particleflow/mlpf/flatiron/find_lr_4GPUs.slurm": [
            "mlpf/pipeline.py"
        ]
    },
    "muberraozmen/MrMP": {
        "MrMP/shells/reuters.sh": [
            "main.py"
        ],
        "MrMP/shells/delicious.sh": [
            "main.py"
        ]
    },
    "MauriceChiu7/571-ai-project-mapf": {
        "571-ai-project-mapf/stest.sh": [
            "turtlebot3.py"
        ],
        "571-ai-project-mapf/strain.sh": [
            "primal_train.py",
            "strain.sh"
        ],
        "571-ai-project-mapf/jobspec-cfg/strain.sh": [
            "primal_train.py",
            "strain.sh"
        ]
    },
    "cmse822/project-5-gpus-with-cuda-team-11": {
        "project-5-gpus-with-cuda-team-11/job_.sb": [
            "final_diffusion_code.cu"
        ]
    },
    "cmse822/project-3-mpi-p2p-team-10": {
        "project-3-mpi-p2p-team-10/part1-differ.sb": [
            "./ping-ping-blocking.c",
            "ping-ping-blocking.out",
            "./ping-ping-blocking.out"
        ],
        "project-3-mpi-p2p-team-10/part1-same.sb": [
            "./ping-ping-blocking.c",
            "ping-ping-blocking.out",
            "./ping-ping-blocking.out"
        ],
        "project-3-mpi-p2p-team-10/part2-same.sb": [
            "./ping-ping-non-blocking.c",
            "ping-ping-non-blocking.out",
            "./ping-ping-non-blocking.out"
        ],
        "project-3-mpi-p2p-team-10/part2-differ.sb": [
            "./ping-ping-non-blocking.c",
            "ping-ping-non-blocking.out",
            "./ping-ping-non-blocking.out"
        ]
    },
    "cmse822/project-2-pi-by-mpi-team-2": {
        "project-2-pi-by-mpi-team-2/submit_MPI_MCPi.sb": [
            "src/Ser_PI_Calc_MPI.cpp"
        ]
    },
    "cmse822/project-3-mpi-p2p-team-6": {
        "project-3-mpi-p2p-team-6/jobs/submitjob_blocking_ringshift.sb": [
            "./scripts/run_ringshift.sh"
        ]
    },
    "cmse822/project-2-pi-by-mpi-team-4": {
        "project-5-gpus-with-cuda-seven-c-s/Ian/submission.sb": [
            "./a.out"
        ],
        "project-2-pi-by-mpi-team-4/submitjob.sb": [
            "output.txt"
        ]
    },
    "davidzhou9/DeepVol": {
        "DeepVol/run.cmd": [
            "main.py"
        ]
    },
    "YannDubs/vissl": {
        "vissl/bin/eval_nlprun.sh": [
            "bin/extract_features_sphinx.sh",
            "tools/linear_eval.py"
        ],
        "vissl/jobspec-cfg/bin/extract_features_sphinx.sh": [
            "tools/run_distributed_engines.py"
        ]
    },
    "trinityrnaseq/trinityrnaseq": {
        "trinityrnaseq/util/PBS/trinity_pbs.sh": [
            "Trinity"
        ]
    },
    "hongyuanmei/neurawkes": {
        "neurawkes/scripts/train_models.sh": [
            "train_models.py"
        ]
    },
    "konami86/DeepLab-v3-plus-cityscapes-Res50": {
        "DeepLab-v3-plus-cityscapes-Res50/volta.sh": [
            "train.py"
        ]
    },
    "jpata/particleflow": {
        "particleflow/scripts/tallinn/rtx/pytorch.sh": [
            "mlpf/pyg_pipeline.py",
            "parameters/pytorch/pyg-delphes.yaml",
            "parameters/pytorch/pyg-clic.yaml",
            "parameters/pytorch/pyg-clic-hits.yaml",
            "parameters/pytorch/pyg-cms.yaml"
        ],
        "particleflow/scripts/tallinn/a100/eval.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/juwels/pipeline_train.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/juwels/pipeline_evaluate.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/juwels/find_lr.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/juwels/raytune.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_train.slurm": [
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_train_1GPU.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_train_8GPUs.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_h100_2GPUsperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytrain_a100.slurm": [
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_h100_8GPUsperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytrain_h100.slurm": [
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_train_multi_node.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_evaluate_1GPU.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_infer.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/raytune.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_h100_4GPUsperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pipeline_train_4GPUs.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/raytune_1GPUperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/find_lr_4GPUs.slurm": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_a100_4GPUsperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_h100_1GPUperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/flatiron/pt_raytune_a100_1GPUperTrial.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pyg_pipeline.py"
        ],
        "particleflow/scripts/jureca/pipeline_train.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/jureca/pipeline_evaluate.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/jureca/find_lr.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/jureca/raytune.sh": [
            "mlpf/raytune/start-head.sh",
            "mlpf/raytune/start-worker.sh",
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/jureca/horovod_pipeline_train.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/jureca/pipeline_raytune_analysis.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/train-gpu-7.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/clic_bin_size_128.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/clic_bin_size_64.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/train-gpu-4.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/clic_bin_size_512.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/train-gpu-1.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/clic_bin_size_32.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/train-gpu-2.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/pytorch.sh": [
            "mlpf/pyg_pipeline.py",
            "parameters/pytorch/pyg-cms.yaml"
        ],
        "particleflow/scripts/lumi/train-gpu-8.sh": [
            "mlpf/pipeline.py"
        ],
        "particleflow/scripts/lumi/train-gpu-5.sh": [
            "mlpf/pipeline.py"
        ]
    },
    "MikeVasmer/hybrid-decoder": {
        "hybrid-decoder/array-job.sh": [
            "monte_carlo.py"
        ]
    },
    "jasonxyliu/ltl_transfer": {
        "ltl_transfer/bash_scripts/run_relabel_spot.sh": [
            "src/run_experiments.py"
        ],
        "ltl_transfer/bash_scripts/run_transfer_singlejob.sh": [
            "src/run_experiments.py"
        ],
        "ltl_transfer/bash_scripts/run_relabel_arrayjob.sh": [
            "src/run_experiments.py"
        ],
        "ltl_transfer/bash_scripts/run_relabel_singlejob.sh": [
            "src/run_experiments.py"
        ]
    },
    "eth-cscs/firecrest": {
        "firecrest/examples/UI-client-credentials/src/sbatch_templates/post_proc.sh.tmpl": [
            "LICENSE"
        ]
    },
    "rohitgajawada/multimodal-ocr": {
        "multimodal-ocr/ocr2.sh": [
            "crnn_main_online.py"
        ],
        "multimodal-ocr/ocr.sh": [
            "crnn_main.py"
        ]
    },
    "shararezr/DiffuRecSys": {
        "DiffuRecSys/jobscript.sh": [
            "main.py"
        ]
    },
    "Nagharjun17/Unsupervised_Image_Denoising": {
        "Unsupervised_Image_Denoising/TrainLDAMP.sbatch": [
            "TrainLDAMP.py"
        ]
    },
    "emo-bon/MetaGOflow": {
        "MetaGOflow/slurm_run.sh": [
            "./run_wf.sh",
            "test_input/wgs-paired-SRR1620013_1.fastq.gz",
            "test_input/wgs-paired-SRR1620013_2.fastq.gz",
            "test_input/test_1_fwd_HWLTKDRXY_600000.fastq.gz",
            "test_input/test_2_rev_HWLTKDRXY_600000.fastq.gz"
        ],
        "MetaGOflow/jobspec-cfg/run_wf.sh": [
            "tools/fetch-tool/get_raw_data_run.cwl",
            "utils/create_yml.py",
            "config.yml",
            "utils/edit-ro-crate.py"
        ]
    },
    "HNR1/ba-code": {
        "ba-code/scripts/start_script.sh": [
            "scripts/requirements.txt",
            "src/gen_imgs.py"
        ],
        "ba-code/scripts/repair_script.sh": [
            "scripts/requirements.txt",
            "src/fixing/remove_dataset.py"
        ],
        "ba-code/scripts/start_script_log.sh": [
            "scripts/requirements.txt",
            "src/logging/gen_img_log.py",
            "src/logging/gen_perf_log.py"
        ],
        "ba-code/scripts/deprecated/start_script_time.sh": [
            "scripts/requirements.txt"
        ],
        "ba-code/scripts/deprecated/start_script_fid.sh": [
            "scripts/requirements.txt"
        ],
        "ba-code/scripts/deprecated/start_script_perf.sh": [
            "scripts/requirements.txt",
            "src/logging/gen_perf_log.py"
        ]
    },
    "thepowerfuldeez/OLMo": {
        "OLMo/jobspec-cfg/configs/mitchish65.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/jobspec-cfg/configs/v1-mix-medium.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/jobspec-cfg/configs/llama7.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/jobspec-cfg/configs/v1-mix-small.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/jobspec-cfg/configs/v1_5-mix-medium-mitch-ish.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/scripts/lumi/c4-small-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/c4-small.yaml"
        ],
        "OLMo/scripts/lumi/mitch-ish-7b.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1_5-mix-medium-mitch-ish.yaml"
        ],
        "OLMo/scripts/lumi/olmo-small-ablation-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py"
        ],
        "OLMo/scripts/lumi/c4-large-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/c4-large.yaml"
        ],
        "OLMo/scripts/lumi/v1-mix-small-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1-mix-small.yaml"
        ],
        "OLMo/scripts/lumi/olmo7-ablations.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py"
        ],
        "OLMo/scripts/lumi/mitchish65.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/mitchish65.yaml"
        ],
        "OLMo/scripts/lumi/v1-mix-medium-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1-mix-medium.yaml"
        ],
        "OLMo/scripts/lumi/llama7.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/llama7.yaml"
        ],
        "OLMo/scripts/kempner/llama7.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/llama7.yaml"
        ]
    },
    "samtruesdell/coinFlip": {
        "coinFlip/hpccRunFlip.sh": [
            "./runFlip.R",
            "runFlip.R"
        ]
    },
    "kevtimova/InfoGAN": {
        "InfoGAN/jobs/mnist_baseline.sh": [
            "launchers/run_mnist_exp.py"
        ],
        "InfoGAN/jobs/basicprop_baseline.sh": [
            "launchers/run_mnist_exp.py"
        ],
        "InfoGAN/jobs/infogan_template.sh": [
            "launchers/run_mnist_exp.py"
        ],
        "InfoGAN/jobs/mnist_noinfo.sh": [
            "launchers/run_mnist_exp.py"
        ],
        "InfoGAN/jobs/mnist_gan.sh": [
            "launchers/run_mnist_exp.py"
        ]
    },
    "Alyetama/Megadetector-Hazel": {
        "Megadetector-Hazel/predict.sh": [
            "predict.sh",
            "filter_results.py"
        ],
        "Megadetector-Hazel/jobspec-cfg/predict.sh": [
            "predict.sh",
            "filter_results.py"
        ]
    },
    "Alyetama/label-studio-yolov5": {
        "label-studio-yolov5/train.slurm.sh": [
            "prepare_dataset.py"
        ]
    },
    "Alyetama/BirdFSD-YOLOv5": {
        "BirdFSD-YOLOv5/slurm/train.sh": [
            "slurm/generate_options.py",
            "birdfsd_yolov5/label_studio_helpers/sync_tasks.py",
            "birdfsd_yolov5/preprocessing/json2yolov5.py",
            "birdfsd_yolov5/preprocessing/add_bg_images.py",
            "birdfsd_yolov5/model_utils/relative_to_abs.py",
            "birdfsd_yolov5/model_utils/download_weights.py",
            "birdfsd_yolov5/model_utils/update_run_cfg.py",
            "birdfsd_yolov5/model_utils/wandb_helpers.py"
        ]
    },
    "r00tman/EventNeRF": {
        "EventNeRF/scripts/job_real_sewing.sh": [
            "ddp_train_nerf.py",
            "configs/real/sewing.txt"
        ],
        "EventNeRF/scripts/job_nextnextgen_tapes.sh": [
            "ddp_train_nerf.py",
            "configs/nextnextgen/tapes.txt"
        ],
        "EventNeRF/scripts/job_deff_nerf1.sh": [
            "ddp_train_nerf.py"
        ],
        "EventNeRF/scripts/job_angle_0.01.sh": [
            "ddp_train_nerf.py",
            "configs/angle/0.01.txt"
        ],
        "EventNeRF/scripts/job_angle_2.sh": [
            "ddp_train_nerf.py",
            "configs/angle/2.txt"
        ],
        "EventNeRF/scripts/render_deff_nerf100.sh": [
            "ddp_test_nerf.py"
        ],
        "EventNeRF/scripts/job_real_urpils.sh": [
            "ddp_train_nerf.py",
            "configs/real/urpils.txt"
        ],
        "EventNeRF/scripts/job_ablation_noneg.sh": [
            "ddp_train_nerf.py",
            "configs/ablation/noneg.txt"
        ],
        "EventNeRF/scripts/job_e2vid_chair.sh": [
            "ddp_train_nerf.py",
            "configs/e2vid/chair.txt"
        ],
        "EventNeRF/scripts/job_angle_0.sh": [
            "ddp_train_nerf.py",
            "configs/angle/0.txt"
        ],
        "EventNeRF/scripts/render_ablation_win50.sh": [
            "ddp_test_nerf.py",
            "configs/ablation/win50.txt"
        ],
        "EventNeRF/scripts/render_real_r.sh": [
            "ddp_test_nerf.py"
        ],
        "EventNeRF/scripts/job_altbase.sh": [
            "ddp_train_nerf.py",
            "configs/altbase.txt"
        ],
        "EventNeRF/scripts/job_noise_1.sh": [
            "ddp_train_nerf.py",
            "configs/noise/1.txt"
        ],
        "EventNeRF/scripts/job_ablation_noldist.sh": [
            "ddp_train_nerf.py",
            "configs/ablation/noldist.txt"
        ],
        "EventNeRF/scripts/job_noise_20.sh": [
            "ddp_train_nerf.py",
            "configs/noise/20.txt"
        ]
    },
    "Kiwi/markets": {
        "markets/mkt_func.sh": [
            "cgk.sh",
            "cmc.sh"
        ],
        "markets/jobspec-cfg/cmc.sh": [
            "cmc.sh"
        ],
        "markets/jobspec-cfg/cgk.sh": [
            "cgk.sh"
        ]
    },
    "MAbdelatti/GA_VRP_mGPU": {
        "GA_VRP_mGPU/vrp.sh": [
            "gpu.py"
        ]
    },
    "krembilneuroinformatics/openneuro_preproc": {
        "openneuro_preproc/code/02_fmriprep_func_scinet.sh": [
            "notebooks/00_setting_up_envs.md"
        ],
        "openneuro_preproc/code/03_clean_and_parcellate_w_wb_container_scc_r.sh": [
            "notebooks/00_setting_up_envs.md"
        ],
        "openneuro_preproc/code/03_clean_and_parcellate_w_wb_container_scc.sh": [
            "notebooks/00_setting_up_envs.md"
        ],
        "openneuro_preproc/code/01_fmriprep_anat_scinet.sh": [
            "notebooks/00_setting_up_envs.md"
        ]
    },
    "jordanthompson18/FinetuningPretrainedLanguageModel": {
        "FinetuningPretrainedLanguageModel/json.sh": [
            "create_json.py"
        ]
    },
    "stackhpc/mpi-container-test": {
        "mpi-container-test/ompi4-foss2019-ib-ping.sh": [
            "imb-stats.py"
        ],
        "mpi-container-test/ompi4-NA-ib-ping.sh": [
            "imb-stats.py"
        ]
    },
    "stackhpc/io500-singularity": {
        "io500-singularity/submit.sh": [
            "submit.sh"
        ],
        "io500-singularity/jobspec-cfg/submit.sh": [
            "submit.sh"
        ]
    },
    "stackhpc/pingmatrix": {
        "mpi-container-test/ompi4-foss2019-ib-ping.sh": [
            "imb-stats.py"
        ],
        "mpi-container-test/ompi4-NA-ib-ping.sh": [
            "imb-stats.py"
        ]
    },
    "HuffordLab/Maize_WGS_Build": {
        "Maize_WGS_Build/submit_nf.slurm": [
            "main.nf"
        ],
        "Maize_WGS_Build/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "evaham1/10x_neural_plate_border_EH": {
        "10x_neural_plate_border_EH/run_scripts_eva/NF-downstream_analysis_crick.sh": [
            "./NF-downstream_analysis/main.nf",
            "./NF-downstream_analysis/samplesheet.csv"
        ]
    },
    "evaham1/atac_neural_plate_border": {
        "10x_neural_plate_border_EH/run_scripts_eva/NF-downstream_analysis_crick.sh": [
            "./NF-downstream_analysis/main.nf"
        ],
        "atac_neural_plate_border/NF-cellranger_align/run_scripts/run_alignment.sh": [
            "./samplesheet.csv"
        ]
    },
    "bryanchrist/llama2-70b": {
        "llama2-70b/llama_train_combined.slurm": [
            "requirements.txt",
            "qlora.py"
        ],
        "llama2-70b/llama_train.slurm": [
            "requirements.txt",
            "qlora_no_embed.py"
        ],
        "llama2-70b/solve_asdiv.slurm": [
            "requirements.txt",
            "solve_asdiv.py"
        ],
        "llama2-70b/mammoth_finetune.slurm": [
            "requirements.txt",
            "qlora_mammoth.py"
        ],
        "llama2-70b/mammoth_question_generate_topic.slurm": [
            "requirements.txt",
            "mammoth_question_topic_generate.py"
        ],
        "llama2-70b/mathwell8b_full.slurm": [
            "requirements.txt",
            "mathwell8b_full.py"
        ],
        "llama2-70b/wizard.slurm": [
            "requirements.txt",
            "wizard.py"
        ],
        "llama2-70b/llema_zero_shot.slurm": [
            "requirements.txt",
            "llema_zero_shot.py"
        ],
        "llama2-70b/perplexity.slurm": [
            "requirements.txt",
            "perplexity.py"
        ],
        "llama2-70b/llama_QA_topic_copy.slurm": [
            "requirements.txt",
            "llama_QA_topic_copy.py"
        ],
        "llama2-70b/ppo.slurm": [
            "requirements.txt",
            "ppo.py"
        ],
        "llama2-70b/llama_generate.slurm": [
            "requirements.txt",
            "generate.py"
        ],
        "llama2-70b/mammoth_generate.slurm": [
            "requirements.txt",
            "mammoth_generate.py"
        ],
        "llama2-70b/llama_generate_no_finetune.slurm": [
            "requirements.txt",
            "generate_not_finetuned.py"
        ],
        "llama2-70b/mathwell8_two_stage.slurm": [
            "requirements.txt",
            "mathwell8b_two_stage.py"
        ],
        "llama2-70b/mammoth_question_generate.slurm": [
            "requirements.txt",
            "mammoth_question_generate.py"
        ],
        "llama2-70b/push_to_hub.slurm": [
            "requirements.txt",
            "push_to_hub.py"
        ],
        "llama2-70b/mathwell_expanded.slurm": [
            "requirements.txt",
            "mathwell_expanded.py"
        ],
        "llama2-70b/phi3.slurm": [
            "requirements.txt",
            "phi3.py"
        ],
        "llama2-70b/bertscore.slurm": [
            "requirements.txt",
            "bertscore.py"
        ],
        "llama2-70b/llama_generate_8bit.slurm": [
            "requirements.txt",
            "generate_8bit.py"
        ],
        "llama2-70b/llama_QA.slurm": [
            "requirements.txt",
            "llama_QA_generate.py"
        ],
        "llama2-70b/llama3_8b.slurm": [
            "requirements.txt",
            "llama3-8b_generate.py"
        ],
        "llama2-70b/mathwell.slurm": [
            "requirements.txt",
            "mathwell.py"
        ],
        "llama2-70b/mammoth_training.slurm": [
            "requirements.txt",
            "qlora_mammoth.py"
        ],
        "llama2-70b/jobspec-cfg/qlora_no_embed.py": [
            "LICENSE"
        ],
        "llama2-70b/jobspec-cfg/qlora_mammoth.py": [
            "LICENSE"
        ],
        "llama2-70b/jobspec-cfg/qlora.py": [
            "LICENSE"
        ]
    },
    "karolpustelnik/video_gen": {
        "video_gen/style_video.sh": [
            "src/infra/launch.py"
        ],
        "video_gen/jobspec-cfg/src/infra/launch.py": [
            "src/train.py"
        ]
    },
    "AntoineDidisheim/EightK": {
        "EightK/scripts/slurm/train_tf_gpu.slurm": [
            "train_tf.py"
        ],
        "EightK/scripts/slurm/single.slurm": [
            "wip.py"
        ],
        "EightK/scripts/slurm/vec_eight_press.slurm": [
            "vec_main.py"
        ],
        "EightK/scripts/slurm/vec_news_small_ref.slurm": [
            "vec_main.py"
        ],
        "EightK/scripts/slurm/train_main.slurm": [
            "train_new.py"
        ]
    },
    "Crompulence/cpl-library": {
        "cpl-library/examples/LAMMPS_OPENFOAM/example_archer2.bat": [
            "SOURCEME.sh"
        ]
    },
    "erikwijmans/emergence-of-maps": {
        "emergence-of-maps/distrib_batch_etw.sh": [
            "nav_analysis/configs/experiments/pointnav-rgb/se-resneXt50-rgb.yaml",
            "nav_analysis/configs/experiments/transfer/flee_scratch.yaml",
            "nav_analysis/configs/experiments/transfer/use_gibson_2plus_se_resneXt50_rgb_weights.yaml",
            "nav_analysis/configs/experiments/transfer/use_policy_weights.yaml"
        ],
        "emergence-of-maps/train_driver_batch_etw.sh": [
            "nav_analysis/configs/experiments/transfer/flee_scratch.yaml"
        ],
        "emergence-of-maps/launchery/train_memory_length.sh": [
            "nav_analysis/configs/experiments/pointnav-blind.yaml",
            "nav_analysis/configs/experiments/loopnav/loopnav_sparse_pg_blind.yaml"
        ],
        "emergence-of-maps/launchery/train_base_agents.sh": [
            "nav_analysis/configs/experiments/loopnav/loopnav_sparse_pg_blind.yaml",
            "nav_analysis/configs/experiments/loopnav/stage_1.yaml"
        ]
    },
    "coxlab/connectome-tracking": {
        "connectome-tracking/test.bsub": [
            "./matlab_script.sh"
        ],
        "connectome-tracking/klt/param_search.bsub": [
            "./tracking-sift-batch.sh"
        ],
        "connectome-tracking/jobspec-cfg/tracking-sift-batch.sh": [
            "./matlab_batch.sh"
        ]
    },
    "HEP-KBFI/ml-tau-reco": {
        "ml-tau-reco/scripts/train-gpu.sh": [
            "src/endtoend_simple.py"
        ]
    },
    "JulioAPeraza/PACE": {
        "PACE/code/denoising_job.sbatch": [
            "code/denoising.py"
        ],
        "PACE/code/rsfc-seed2voxel_job.sbatch": [
            "code/rsfc-seed2voxel.py"
        ],
        "PACE/code/rsfc-group_job.sbatch": [
            "code/rsfc-group.py"
        ]
    },
    "surajpaib/bonsai": {
        "bonsai/jobscript.sh": [
            "requirements.txt",
            "application/grid_search.py"
        ]
    },
    "Anderssorby/odin": {
        "odin/mnist-wgan-sbatch.sh": [
            "./get_env.sh",
            "do.py"
        ]
    },
    "UMass-Meta-LLM-Eval/llm_eval": {
        "llm_eval/main.sh": [
            "main.py"
        ]
    },
    "MikkelGodsk/ImageClassificationWithSymbolicHints": {
        "ImageClassificationWithSymbolicHints/jobscript.sh": [
            "src/experiments/main.py"
        ],
        "ImageClassificationWithSymbolicHints/embed.sh": [
            "src/experiments/create_embedding_dataset.py"
        ]
    },
    "bfairkun/design-mpeseq-primers": {
        "ChromatinSplicingQTLs/code/snakemake.sbatch": [
            "cluster-config.json"
        ],
        "design-mpeseq-primers/snakemake.sbatch": [
            "cluster-config.json"
        ]
    },
    "LeonDeligny/FourierNet": {
        "FourierNet/run.sh": [
            "__main__.py"
        ]
    },
    "g13/patchV1": {
        "patchV1/python.slurm": [
            "getLGNsurface_I.py",
            "getLGNsurface_C.py",
            "LGN_surfaceGrid.py"
        ]
    },
    "Mjvolk3/torchcell": {
        "torchcell/experiments/smf-dmf-tmf-001/deep_set-sweep_09.slurm": [
            "torchcell/config.py"
        ]
    },
    "jlinaresb/redes-tf": {
        "redes-tf/launch.sh": [
            "pipeline_classif.py"
        ]
    },
    "davidhin/gnn-exploration": {
        "gnn-exploration/hpc/run_batch_joern.sh": [
            "Singularity",
            "gnnproject/analysis/run_batch_joern.py"
        ],
        "gnn-exploration/hpc/run_batch_make_gioj.sh": [
            "Singularity",
            "gnnproject/analysis/run_batch_make_gioj.py"
        ],
        "gnn-exploration/hpc/run_batch_old_joern.sh": [
            "Singularity",
            "gnnproject/analysis/run_batch_old_joern.py"
        ],
        "singularity-example/hpc/run_notebook.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_getgraphs.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rq1.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_empirical.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rqtest.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rq3.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_train_best.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_vis.sh": [
            "Singularity"
        ]
    },
    "davidhin/singularity-example": {
        "gnn-exploration/hpc/run_batch_joern.sh": [
            "Singularity"
        ],
        "gnn-exploration/hpc/run_batch_make_gioj.sh": [
            "Singularity"
        ],
        "gnn-exploration/hpc/run_batch_old_joern.sh": [
            "Singularity"
        ],
        "singularity-example/hpc/run_notebook.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_getgraphs.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rq1.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_empirical.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rqtest.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_rq3.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_train_best.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_vis.sh": [
            "Singularity"
        ]
    },
    "davidhin/linevd": {
        "gnn-exploration/hpc/run_batch_joern.sh": [
            "Singularity"
        ],
        "gnn-exploration/hpc/run_batch_make_gioj.sh": [
            "Singularity"
        ],
        "gnn-exploration/hpc/run_batch_old_joern.sh": [
            "Singularity"
        ],
        "singularity-example/hpc/run_notebook.sh": [
            "Singularity"
        ],
        "linevd/hpc/run_getgraphs.sh": [
            "Singularity",
            "sastvd/scripts/getgraphs.py"
        ],
        "linevd/hpc/run_rq1.sh": [
            "Singularity",
            "sastvd/scripts/rq1.py"
        ],
        "linevd/hpc/run_empirical.sh": [
            "Singularity",
            "sastvd/linevd/empirical_eval.py"
        ],
        "linevd/hpc/run_rqtest.sh": [
            "Singularity",
            "sastvd/scripts/rqtest.py"
        ],
        "linevd/hpc/run_rq3.sh": [
            "Singularity",
            "sastvd/scripts/rq3.py"
        ],
        "linevd/hpc/run_train_best.sh": [
            "Singularity",
            "sastvd/scripts/train_best.py"
        ],
        "linevd/hpc/run_vis.sh": [
            "Singularity",
            "sastvd/linevd/generate_pred_vis.py"
        ]
    },
    "arinchang/overparam_spur_corr": {
        "overparam_spur_corr/celebA_dp_w96_noise29_seed1.sh": [
            "run_expt_dp.py"
        ],
        "overparam_spur_corr/celebA_dp_32_erm.sh": [
            "run_expt_dp.py"
        ]
    },
    "davidecarlson/RNA-Seq-saturation-curve": {
        "RNA-Seq-saturation-curve/run_benchmark.slurm": [
            "snakefile-benchmark"
        ]
    },
    "sparticlesteve/pytorch-benchmarks": {
        "pytorch-benchmarks/jobspec-cfg/scripts/run_hsw.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/jobspec-cfg/scripts/run_cgpu_shifter.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/jobspec-cfg/scripts/run_cgpu.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/jobspec-cfg/scripts/run_knl.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/scripts/run_hsw.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/scripts/run_cgpu.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/scripts/submit_all.sh": [
            "scripts/run_hsw.sh",
            "scripts/run_knl.sh",
            "scripts/run_cgpu.sh",
            "scripts/run_cgpu_shifter.sh"
        ],
        "pytorch-benchmarks/scripts/run_knl.sh": [
            "train.py",
            "parse.py"
        ]
    },
    "sparticlesteve/pytorch-nccl-test": {
        "pytorch-nccl-test/batch_nccl_shifter.sh": [
            "test_nccl.py"
        ],
        "pytorch-nccl-test/batch_nccl.sh": [
            "test_nccl.py"
        ]
    },
    "denizlab/MIMICCXR-MultiModal-SelfSupervision": {
        "MIMICCXR-MultiModal-SelfSupervision/submitit.sh": [
            "./main_pretrain.py"
        ]
    },
    "avbalsam/pytorch-prednet": {
        "pytorch-prednet/plot_data.sh": [
            "plot_data.py"
        ]
    },
    "gentine/CBRAIN": {
        "CBRAIN/submit_tensorflow.sh": [
            "./main.py"
        ],
        "CBRAIN/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "rbogle/magpie": {
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-tachyon-and-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-and-mahout": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script",
            "examples/spark-example-job-script",
            "examples/storm-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark": [
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hbase-with-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-and-pig": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-yarn-and-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-with-uda": [
            "examples/hadoop-example-job-script"
        ]
    },
    "TuAnh23/E2EG": {
        "E2EG/run_bert.sh": [
            "proc_data_multi_task.sh",
            "baseline_models/bert_classifier.py"
        ],
        "E2EG/run_lisa.sh": [
            "proc_data_multi_task.sh",
            "encode_mtask.sh",
            "hyperparams_sweep.sh"
        ],
        "E2EG/jobspec-cfg/proc_data_multi_task.sh": [
            "proc_data_multi_task.py"
        ]
    },
    "emmanuj/ml-sparsifier": {
        "ml-sparsifier/jobspec-cfg/benchmark.py": [
            "./benchmark.py"
        ],
        "ml-sparsifier/run_scripts/fb-uf.pbs": [
            "benchmark.py"
        ]
    },
    "gfiameni/21CNN": {
        "21CNN/scripts/slurm/debug.slurm": [
            "run_simple.py"
        ],
        "21CNN/scripts/slurm/best_models_job.slurm": [
            "best_models.py"
        ]
    },
    "ZQiwen/specfem3d": {
        "specfem3d/EXAMPLES/meshfem3D_examples/many_interfaces/go_process_pbs.bash": [
            "DATA/Par_file",
            "DATA/CMTSOLUTION",
            "DATA/FORCESOLUTION",
            "DATA/STATIONS"
        ]
    },
    "Mouse-BB-Team/Bot-Detection": {
        "Bot-Detection/utils/prometheus_scripts/sbatch_job_config.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "AdamSimpson/WraprunParaview": {
        "WraprunParaview/batch_script.pbs": [
            "runX.sh",
            "./runX.sh",
            "app.py"
        ]
    },
    "yunzc/multi_level_weighted_additive_spanners": {
        "multi_level_weighted_additive_spanners/compute_mlst_apprx_d.sh": [
            "run_mlst_d.py"
        ],
        "multi_level_weighted_additive_spanners/compute_mlst_apprx.sh": [
            "run_mlst.py"
        ],
        "multi_level_weighted_additive_spanners/compute_mlst.sh": [
            "run_mlst.py"
        ]
    },
    "ArnovanHilten/GenNet": {
        "GenNet/Submit_HPC_train_classification_filter.sh": [
            "GenNet.py"
        ],
        "GenNet/Submit_HPC_train_regression.sh": [
            "GenNet.py"
        ],
        "GenNet/GenNet_utils/submit_SLURM_multi_transpose.sh": [
            "./GenNet_utils/Convert.py"
        ],
        "GenNet/jobspec-cfg/GenNet_utils/Convert.py": [
            "./GenNet_utils/Convert.py",
            "./GenNet_utils/submit_SLURM_multi_transpose.sh"
        ]
    },
    "yinyunie/ScenePriors": {
        "ScenePriors/slurm_jobs/scannet/svr_scannet.slurm": [
            "main.py"
        ],
        "ScenePriors/slurm_jobs/scannet/pretrain_scannet.slurm": [
            "main.py"
        ],
        "ScenePriors/slurm_jobs/front3d/preprocess.slurm": [
            "utils/threed_front/1_process_viewdata.py"
        ],
        "ScenePriors/slurm_jobs/front3d/pretrain_3dfront.slurm": [
            "main.py"
        ]
    },
    "GueroudjiAmal/MofkaDask": {
        "XPDaMoDa/Prediction/D2024-04-18_19%3A26%3A02_R9_W8/polaris.sh": [
            "producer.py",
            "consumer.py"
        ],
        "XPDaMoDa/PMDA/D2024-04-19_19%3A01%3A03_R9_W8/polaris.sh": [
            "producer.py",
            "consumer.py"
        ],
        "XPDaMoDa/ImageProcessing/D2024-04-18_15%3A54%3A02_R3_W8/polaris.sh": [
            "producer.py",
            "consumer.py"
        ],
        "XPDaMoDa/XGBoost/D2024-04-19_15%3A40%3A29_R6_W8/polaris.sh": [
            "producer.py",
            "consumer.py"
        ],
        "MofkaDask/MOFKA/D2024-04-15_23%3A54%3A29_W/polaris.sh": [
            "consumer.py"
        ],
        "MofkaDask/scripts/polaris.sh": [
            "producer.py",
            "consumer.py"
        ]
    },
    "patidarr/ngs_pipeline": {
        "ngs_pipeline/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "BartekKrzepkowski/CLPIntervention": {
        "CLPIntervention/run_all_at_once.sh": [
            "src/configs/env_variables.sh"
        ]
    },
    "RegnerM2015/scBreast_scRNA_scATAC_2024": {
        "scBreast_scRNA_scATAC_2024/scripts/Sumbit-Individual_Samples_scRNA-QC_DoubletRemoval_Preprocessing.sh": [
            "scripts/Individual_Samples_scRNA-QC_DoubletRemoval_Preprocessing.R"
        ],
        "scBreast_scRNA_scATAC_2024/scripts/Submit-Individual_Samples_scRNA-CellTypeAnnotation.sh": [
            "scripts/Individual_Samples_scRNA-CellTypeAnnotation.R"
        ],
        "scBreast_scRNA_scATAC_2024/scripts/Submit-Individual_Samples_scRNA-inferCNV_CancerCellDetection.sh": [
            "scripts/Individual_Samples_scRNA-inferCNV_CancerCellDetection.R"
        ],
        "scBreast_scRNA_scATAC_2024/scripts/Submit-Individual_Samples_scRNA-FindClusterMarkerGenes.sh": [
            "scripts/Individual_Samples_scRNA-FindClusterMarkerGenes.R"
        ],
        "scBreast_scRNA_scATAC_2024/scripts/Submit-Individual_Samples_scRNA-MultiKClustering_AlternateSeed.sh": [
            "scripts/Individual_Samples_scRNA-MultiKClustering_AlternateSeed.R"
        ]
    },
    "hurwitzlab/planet-microbe-functional-annotation": {
        "planet-microbe-functional-annotation/run_snakemake.sh": [
            "config/cluster.yml"
        ]
    },
    "howardchenhd/Syntax-awared-NMT": {
        "Syntax-awared-NMT/train.sh": [
            "./train_nmt_zh2en.py"
        ]
    },
    "geekep/VideoAnomalyRecognition": {
        "VideoAnomalyRecognition/lsf.sh": [
            "TrainingAnomalyDetector_public.py",
            "Anomaly_Detection_splits/Train_Annotation.txt",
            "Anomaly_Detection_splits/Test_Annotation.txt",
            "feature_extractor.py",
            "generate_ROC.py"
        ],
        "VideoAnomalyRecognition/jobspec-cfg/TrainingAnomalyDetector_public.py": [
            "TrainingAnomalyDetector_public.py",
            "Anomaly_Detection_splits/Train_Annotation.txt"
        ],
        "VideoAnomalyRecognition/jobspec-cfg/feature_extractor.py": [
            "feature_extractor.py"
        ],
        "VideoAnomalyRecognition/jobspec-cfg/generate_ROC.py": [
            "generate_ROC.py",
            "Anomaly_Detection_splits/Test_Annotation.txt"
        ]
    },
    "Spijkervet/Context-Aware-Sequential-Recommendation": {
        "Context-Aware-Sequential-Recommendation/baselines/SASRec/run.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "koustuvsinha/comp551_3": {
        "comp551_3/script_hel.sh": [
            "runner_lasagne.py"
        ],
        "comp551_3/script.sh": [
            "runner_lasagne.py"
        ],
        "comp551_3/script_gul.sh": [
            "runner_lasagne.py"
        ]
    },
    "linwei0763/Pointcept": {
        "Pointcept/slurm_submit_semseg-swin3d-v1m1-0-small_0.wilkes3": [
            "scripts/train.sh"
        ],
        "Pointcept/slurm_submit_semseg-spunet-v1m1-0-base_0.wilkes3": [
            "scripts/train.sh"
        ],
        "Pointcept/slurm_submit_semseg-pt-v1-0-base_0.wilkes3": [
            "scripts/train.sh"
        ],
        "Pointcept/slurm_submit_semseg-pt-v2m2-0-base_1.wilkes3": [
            "scripts/train.sh"
        ],
        "Pointcept/slurm_submit_semseg-spunet-v1m1-0-base_1.wilkes3": [
            "scripts/train.sh"
        ],
        "Pointcept/slurm_submit_semseg-pt-v2m2-0-base_0.wilkes3": [
            "scripts/train.sh"
        ]
    },
    "harttu/transformers-ner": {
        "transformers-ner/slurm-run.sh": [
            "run_tf_ner.py"
        ]
    },
    "nievergeltlab/cnv_pipeline": {
        "cnv_pipeline/starting_ipn_v4_psy4.sh": [
            "make_intensitylists_v2.r"
        ]
    },
    "nievergeltlab/tractor_haul": {
        "tractor_haul/01_train_xgmix.sh": [
            "01_train_xgmix.sh"
        ],
        "tractor_haul/jobspec-cfg/01_train_xgmix.sh": [
            "01_train_xgmix.sh"
        ]
    },
    "nievergeltlab/ipncomet": {
        "cnv_pipeline/starting_ipn_v4_psy4.sh": [
            "ipn_pbs_qsub.py"
        ],
        "ipncomet/starting_ipn_v3x.sh": [
            "ipn_pbs_qsub.py"
        ]
    },
    "infotroph/Prairie_seq": {
        "Prairie_seq/bash/pick_otu.sh": [
            "Python/assign_taxonomy_by_taxid.py"
        ]
    },
    "karafede/WRF_Chem": {
        "WRF_Chem/execute_Model.sh": [
            "./wrfpost_dust_20170927_airquality.ncl"
        ],
        "WRF_Chem/WRFChem_LinuxMachine/execute_Model_lsf_ALL_mw.sh": [
            "./wrfpost_dust_20170927_airquality.ncl"
        ],
        "WRF_Chem/WRFChem_LinuxMachine/other_files/execute_Model_lsf_ALL.sh": [
            "./wrfpost_dust_20170927_airquality.ncl"
        ]
    },
    "ashki23/fia-py-api": {
        "fia-py-api/batch_file.sh": [
            "environment.sh",
            "config.json",
            "download.sh",
            "prep_data.py",
            "fia_coordinate.py",
            "fia_county.py"
        ],
        "fia-py-api/jobspec-cfg/environment.sh": [
            "bootstrap.sh",
            "./api_py_env.txt"
        ],
        "fia-py-api/jobspec-cfg/fia_county.py": [
            "config.json"
        ],
        "fia-py-api/jobspec-cfg/fia_coordinate.py": [
            "config.json"
        ]
    },
    "qlan3/Explorer": {
        "Explorer/sbatch_s.sh": [
            "main.py"
        ],
        "Explorer/sbatch_m.sh": [
            "procfile",
            "main.py"
        ],
        "Jaxplorer/sbatch_m.sh": [
            "procfile",
            "main.py"
        ]
    },
    "qlan3/Jaxplorer": {
        "Explorer/sbatch_s.sh": [
            "main.py"
        ],
        "Explorer/sbatch_m.sh": [
            "main.py"
        ],
        "Jaxplorer/sbatch_m.sh": [
            "main.py"
        ]
    },
    "smontariol/mmsrl_constraint": {
        "mmsrl_constraint/slurmscripts/generic_features_attention.sh": [
            "configs/generic.py"
        ],
        "mmsrl_constraint/slurmscripts/ofa_seq2seq.sh": [
            "configs/ofa_vqa.py",
            "configs/ofa_seq2seq.py"
        ],
        "mmsrl_constraint/slurmscripts/ofa_seq2seq_freeze.sh": [
            "configs/ofa_vqa.py",
            "configs/ofa_seq2seq.py"
        ],
        "mmsrl_constraint/jobspec-cfg/oarscripts/train_vqa.sh": [
            "configs/ofa_vqa.py",
            "./oarscripts/train_vqa.sh"
        ],
        "mmsrl_constraint/jobspec-cfg/oarscripts/train_vqa_old.sh": [
            "configs/ofa_old_best.py",
            "./oarscripts/train_vqa_old.sh",
            "configs/ofa_vqa.py"
        ],
        "mmsrl_constraint/jobspec-cfg/oarscripts/extract_image_features.sh": [
            "./oarscripts/extract_image_features.sh"
        ],
        "mmsrl_constraint/jobspec-cfg/oarscripts/train_snli.sh": [
            "configs/ofa_vqa.py",
            "./oarscripts/train_vqa.sh",
            "./oarscripts/train_snli.sh"
        ],
        "mmsrl_constraint/oarscripts/train_vqa.sh": [
            "configs/ofa_vqa.py",
            "./oarscripts/train_vqa.sh"
        ],
        "mmsrl_constraint/oarscripts/train_vqa_old.sh": [
            "configs/ofa_old_best.py",
            "./oarscripts/train_vqa_old.sh",
            "configs/ofa_vqa.py"
        ],
        "mmsrl_constraint/oarscripts/extract_image_features.sh": [
            "./oarscripts/extract_image_features.sh"
        ],
        "mmsrl_constraint/oarscripts/train_snli.sh": [
            "configs/ofa_vqa.py",
            "./oarscripts/train_vqa.sh",
            "./oarscripts/train_snli.sh"
        ]
    },
    "see-insight/see-benchmark": {
        "see-benchmark/EXAMPLES_continuousrun.sb": [
            "./EXAMPLES_run.sh"
        ],
        "see-benchmark/KOMATSUNA_Results.sb": [
            "KOMATSUNA_Batch.ipynb"
        ],
        "see-benchmark/KOMATSUNA_Batch.sb": [
            "KOMATSUNA_Batch.py"
        ],
        "see-benchmark/jobspec-cfg/EXAMPLES_run.sh": [
            "imagefile.txt"
        ]
    },
    "ArghaSarker/rDL_Microscope": {
        "rDL_Microscope/argha_demo_train_rDL.sh": [
            "./src/demo_train_rDL_SIM_Model.sh"
        ],
        "rDL_Microscope/jobspec-cfg/src/demo_train_rDL_SIM_Model.sh": [
            "src/train_SR_Inference_Module.py",
            "src/train_rDL_Denoising_Module.py"
        ]
    },
    "NazaninMn/EMIP_data_preparation": {
        "EMIP_data_preparation/data_preparation.slurm": [
            "main.py"
        ]
    },
    "bonaventuredossou/multitask_fon": {
        "multitask_fon/run.sh": [
            "requirements.txt"
        ]
    },
    "LiamBindle/bs5-c48-s15-TT": {
        "sgv/common-rundir/run.bsub": [
            "./runConfig.sh"
        ],
        "bs5-c48-s15-TT/gchp.multirun.run": [
            "gchp.env",
            "runConfig.sh",
            "HISTORY.rc",
            "./runConfig.sh",
            "./GCHP.rc",
            "GCHP.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/GCHP.rc": [
            "input.geos",
            "HEMCO_Config.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/runConfig.sh": [
            "input.geos",
            "./runConfig.sh",
            "HISTORY.rc",
            "gchp.multirun.run",
            "runConfig.sh",
            "ExtData.rc",
            "GCHP.rc",
            "fvcore_layout.rc",
            "input.nml",
            "CAP.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/HISTORY.rc": [
            "HEMCO_Diagn.rc"
        ],
        "RestartFiles-2020-04/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "cog/example_templates/Compute1-GCHPctm/run.bsub": [
            "./runConfig.sh"
        ],
        "gchp/Run/runScriptSamples/gchp.multirun.run": [
            "gchp.env",
            "runConfig.sh",
            "HISTORY.rc",
            "./runConfig.sh",
            "GCHP.rc"
        ],
        "gchp/Run/runScriptSamples/gchp.run": [
            "runConfig.sh",
            "./runConfig.sh",
            "gchp.env",
            "GCHP.rc"
        ],
        "sg-ensemble-2/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "c360-rundir-2020-04/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "c360-rundir-2020-04/jobspec-cfg/input.geos": [
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/HEMCO_Config.rc": [
            "HEMCO_Config.rc",
            "HEMCO_Diagn.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/HEMCO_Diagn.rc": [
            "HEMCO_Diagn.rc",
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/CAP.rc": [
            "GCHP.rc",
            "HISTORY.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/ExtData.rc": [
            "HEMCO_Config.rc",
            "ExtData.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/GCHP.rc": [
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/runConfig.sh": [
            "input.geos",
            "./runConfig.sh",
            "HISTORY.rc",
            "gchp.multirun.run",
            "runConfig.sh",
            "ExtData.rc",
            "GCHP.rc",
            "fvcore_layout.rc",
            "CAP.rc"
        ],
        "SG-TROPOMI-comparison/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ]
    },
    "LiamBindle/c360-rundir-2020-04": {
        "sgv/common-rundir/run.bsub": [
            "./runConfig.sh"
        ],
        "bs5-c48-s15-TT/gchp.multirun.run": [
            "runConfig.sh",
            "HISTORY.rc",
            "./runConfig.sh",
            "./GCHP.rc",
            "GCHP.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/input.geos": [
            "HEMCO_Config.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/HEMCO_Config.rc": [
            "HEMCO_Config.rc",
            "HEMCO_Diagn.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/gchp.multirun.run": [
            "runConfig.sh",
            "HISTORY.rc",
            "./runConfig.sh",
            "./GCHP.rc",
            "GCHP.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/HEMCO_Diagn.rc": [
            "HEMCO_Diagn.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/CAP.rc": [
            "GCHP.rc",
            "HISTORY.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/ExtData.rc": [
            "HEMCO_Config.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/GCHP.rc": [
            "input.geos",
            "HEMCO_Config.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/runConfig.sh": [
            "input.geos",
            "./runConfig.sh",
            "HISTORY.rc",
            "runConfig.sh",
            "ExtData.rc",
            "GCHP.rc",
            "fvcore_layout.rc",
            "input.nml",
            "CAP.rc"
        ],
        "bs5-c48-s15-TT/jobspec-cfg/HISTORY.rc": [
            "HEMCO_Diagn.rc"
        ],
        "RestartFiles-2020-04/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "cog/example_templates/Compute1-GCHPctm/run.bsub": [
            "./runConfig.sh"
        ],
        "gchp/Run/runScriptSamples/gchp.multirun.run": [
            "runConfig.sh",
            "HISTORY.rc",
            "./runConfig.sh",
            "GCHP.rc"
        ],
        "gchp/Run/runScriptSamples/gchp.run": [
            "runConfig.sh",
            "./runConfig.sh",
            "GCHP.rc"
        ],
        "sg-ensemble-2/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "c360-rundir-2020-04/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ],
        "c360-rundir-2020-04/jobspec-cfg/input.geos": [
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/HEMCO_Config.rc": [
            "HEMCO_Config.rc",
            "HEMCO_Diagn.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/HEMCO_Diagn.rc": [
            "HEMCO_Diagn.rc",
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/CAP.rc": [
            "GCHP.rc",
            "HISTORY.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/ExtData.rc": [
            "HEMCO_Config.rc",
            "ExtData.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/GCHP.rc": [
            "HEMCO_Config.rc"
        ],
        "c360-rundir-2020-04/jobspec-cfg/runConfig.sh": [
            "input.geos",
            "./runConfig.sh",
            "HISTORY.rc",
            "runConfig.sh",
            "ExtData.rc",
            "GCHP.rc",
            "fvcore_layout.rc",
            "CAP.rc"
        ],
        "SG-TROPOMI-comparison/rundir-template/run.bsub": [
            "runConfig.sh",
            "./runConfig.sh"
        ]
    },
    "leelasd/MD_workflow": {
        "MD_workflow/Scripts/common_functions.sh": [
            ".dir_list.txt"
        ]
    },
    "cvoelcker/vagram_quadratic": {
        "vagram_quadratic/run_hopper.sh": [
            "examples/train.py"
        ],
        "vagram_quadratic/run_ant.sh": [
            "examples/train.py"
        ]
    },
    "YeTianJHU/Pesudo-3D-Applications": {
        "Pesudo-3D-Applications/run.sh": [
            "train.py"
        ]
    },
    "TurkuNLP/finngen-tools": {
        "semantic-sim/run_mmap.sbatch": [
            "requirements.txt"
        ]
    },
    "TurkuNLP/running-trankit": {
        "running-trankit/sl-run-trankit.sh": [
            "parse.py"
        ]
    },
    "TurkuNLP/class-explainer": {
        "class-explainer/sl-eval-ext.bash": [
            "run_evaluation.py"
        ],
        "class-explainer/jobspec-cfg/run_evaluation.py": [
            "kws.py"
        ]
    },
    "TurkuNLP/register-labeling": {
        "register-labeling/predict_array.sh": [
            "transformers3.4/bin/activate",
            "predict_labels.py"
        ],
        "registerlabeling/predict_array.sh": [
            "transformers3.4/bin/activate",
            "predict_labels.py"
        ]
    },
    "TurkuNLP/semantic-sim": {
        "semantic-sim/embed_sbatch.sh": [
            "embed.py",
            "embed_sbert.py"
        ],
        "semantic-sim/run_mmap.sbatch": [
            "requirements.txt",
            "mmap_index.py"
        ]
    },
    "TurkuNLP/pytorch-registerlabeling": {
        "semantic-sim/run_mmap.sbatch": [
            "requirements.txt"
        ]
    },
    "TurkuNLP/EccoBERT": {
        "EccoBERT/train_tok.sbatch": [
            "train_tokenizer.py"
        ]
    },
    "TurkuNLP/registerlabeling": {
        "register-labeling/predict_array.sh": [
            "transformers3.4/bin/activate",
            "predict_labels.py"
        ],
        "registerlabeling/predict_array.sh": [
            "transformers3.4/bin/activate",
            "predict_labels.py"
        ]
    },
    "IainHammond/NACO_pipeline": {
        "NACO_pipeline/m3_gpu_job.script": [
            "m3_gpu_job.script"
        ],
        "NACO_pipeline/jobspec-cfg/m3_gpu_job.script": [
            "m3_gpu_job.script"
        ]
    },
    "ravi-0841/spect-pitch-gan": {
        "spect-pitch-gan/evaluate.sh": [
            "main_sum_ec_f0_momenta_wasserstein.py",
            "evaluate_models.py"
        ],
        "spect-pitch-gan/gen_disc_job_joint_sum_ec_f0_momenta.sh": [
            "main_sum_ec_f0_momenta_wasserstein.py",
            "main_joint_ec_f0_momenta.py"
        ]
    },
    "DS3Lab/Decentralized-FM": {
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_ul2.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_gptj.bsub": [
            "dist_inference_server_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_t0pp.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_t5.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_gptneox.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/scripts/lsf_scripts/lsf_foo.bsub": [
            "foo.py"
        ],
        "planetml/src/agents/runner/batch_inference/t5-11b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/ul2.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/t0pp.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/gpt-j-6b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/stable_diffusion.lsf.jinja": [
            "local_latency_inference_stable_diffussion.py"
        ],
        "planetml/src/agents/runner/batch_inference/ul2.slurm.ethz.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/gpt-neox-20b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "Decentralized_FM_alpha/coordinator/lsf/lsf_scripts/lsf_opt66.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized_FM_alpha/coordinator/lsf/lsf_scripts/lsf_gpt3xl_64gpu.bsub": [
            "dist_training_runner_w_euler_coordinator.py"
        ]
    },
    "DS3Lab/Decentralized_FM_alpha": {
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_ul2.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_gptj.bsub": [
            "dist_inference_server_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_t0pp.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_t5.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/coordinator/euler/lsf_scripts/lsf_gptneox.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized-FM/scripts/lsf_scripts/lsf_foo.bsub": [
            "foo.py"
        ],
        "planetml/src/agents/runner/batch_inference/t5-11b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/ul2.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/t0pp.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/gpt-j-6b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/stable_diffusion.lsf.jinja": [
            "local_latency_inference_stable_diffussion.py"
        ],
        "planetml/src/agents/runner/batch_inference/ul2.slurm.ethz.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "planetml/src/agents/runner/batch_inference/gpt-neox-20b.lsf.jinja": [
            "dist_batch_and_latency_inference_w_httpclient.py"
        ],
        "Decentralized_FM_alpha/coordinator/lsf/lsf_scripts/lsf_opt66.bsub": [
            "dist_inference_runner_w_euler_coordinator.py"
        ],
        "Decentralized_FM_alpha/coordinator/lsf/lsf_scripts/lsf_gpt3xl_64gpu.bsub": [
            "dist_training_runner_w_euler_coordinator.py"
        ]
    },
    "ecs-vlc/iridis101": {
        "iridis101/launch.sh": [
            "cifar.py"
        ]
    },
    "andreas-theilgaard/deep-learning-in-computer-vison": {
        "deep-learning-in-computer-vison/project1.sh": [
            "src/hotdog_classifier/test.py"
        ],
        "deep-learning-in-computer-vison/jobspec-cfg/src/hotdog_classifier/test.py": [
            "src/hotdog_classifier/main.py"
        ]
    },
    "mliu0515/388_final_project": {
        "388_final_project/run.sh": [
            "video_analyzer.py",
            "construct_contents.py",
            "llama3_generation.py"
        ]
    },
    "hitz-zentroa/GoLLIE": {
        "GoLLIE/bash_scripts/GoLLIE-13B_CodeLLaMA.sh": [
            "bash_scripts/GoLLIE-13B_CodeLLaMA.sh"
        ],
        "GoLLIE/bash_scripts/GoLLIE-7B_CodeLLaMA_train_full_model.sh": [
            "bash_scripts/GoLLIE-7B_CodeLLaMA_train_full_model.sh",
            "src/run.py"
        ],
        "GoLLIE/bash_scripts/Baseline-7B_CodeLLaMA.sh": [
            "bash_scripts/Baseline-7B_CodeLLaMA.sh"
        ],
        "GoLLIE/bash_scripts/GoLLIE-34B_CodeLLaMA.sh": [
            "bash_scripts/GoLLIE-34B_CodeLLaMA.sh",
            "src/run.py"
        ],
        "GoLLIE/jobspec-cfg/bash_scripts/GoLLIE-13B_CodeLLaMA.sh": [
            "bash_scripts/GoLLIE-13B_CodeLLaMA.sh"
        ],
        "GoLLIE/jobspec-cfg/bash_scripts/GoLLIE-7B_CodeLLaMA_train_full_model.sh": [
            "bash_scripts/GoLLIE-7B_CodeLLaMA_train_full_model.sh",
            "src/run.py"
        ],
        "GoLLIE/jobspec-cfg/bash_scripts/Baseline-7B_CodeLLaMA.sh": [
            "bash_scripts/Baseline-7B_CodeLLaMA.sh"
        ],
        "GoLLIE/jobspec-cfg/bash_scripts/GoLLIE-34B_CodeLLaMA.sh": [
            "bash_scripts/GoLLIE-34B_CodeLLaMA.sh",
            "src/run.py"
        ]
    },
    "mwstroud/M1Homogenous": {
        "M1Homogenous/build_batch.sh": [
            "build_network.py"
        ],
        "M1Homogenous/batchfile_newserver.sh": [
            "run_network.py",
            "config.json"
        ],
        "M1Homogenous/jobspec-cfg/build_network.py": [
            "synapses.py"
        ]
    },
    "dtu-act/deeponet-acoustic-wave-prop": {
        "deeponet-acoustic-wave-prop/scripts/threeD/train3D_dome_quarter.sh": [
            "main3D_train.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/threeD/evaluate3D_dome_quarter.sh": [
            "main3D_eval.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/threeD/train3D_cube.sh": [
            "main3D_train.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/threeD/evaluate3D_Lshape.sh": [
            "main3D_eval.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/threeD/train3D_Lshape.sh": [
            "main3D_train.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/threeD/train3D.sh": [
            "main3D_train.py"
        ],
        "deeponet-acoustic-wave-prop/scripts/twoD/train2D.sh": [
            "main1D2D_train.py"
        ]
    },
    "dtu-act/pinn-acoustic-wave-prop": {
        "pinn-acoustic-wave-prop/scripts/run_dirichlet_1D.sh": [
            "main_train.py"
        ],
        "pinn-acoustic-wave-prop/scripts/run_freq_dep_full_model_transfer_1D.sh": [
            "main_train.py"
        ],
        "pinn-acoustic-wave-prop/scripts/run_neumann_1D.sh": [
            "main_train.py"
        ]
    },
    "hzy-hits/apma2822b-hw4": {
        "apma2822b-hw4/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err",
            "hw4.cu",
            "a.out",
            "./a.out"
        ],
        "apma2822b-hw4/jobspec-cfg/with_gpu.err": [
            "./a.out"
        ],
        "apma2822b-hw4/jobspec-cfg/with_gpu.out": [
            "cuda.sh",
            "report6.nsys-rep"
        ],
        "apma2822b_final_project/test.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b_final_project/jobspec-cfg/with_gpu.out": [
            "report1.nsys-rep"
        ],
        "floquet_topological_solver/subjob.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ]
    },
    "hzy-hits/apma2822b_final_project": {
        "apma2822b-hw4/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b-hw4/jobspec-cfg/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b_final_project/test.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b_final_project/jobspec-cfg/with_gpu.out": [
            "test.sh"
        ],
        "floquet_topological_solver/subjob.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ]
    },
    "hzy-hits/floquet_topological_solver": {
        "apma2822b-hw4/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b-hw4/jobspec-cfg/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b_final_project/test.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "apma2822b_final_project/jobspec-cfg/test.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "floquet_topological_solver/subjob.sh": [
            "with_gpu.out",
            "with_gpu.err"
        ],
        "floquet_topological_solver/jobspec-cfg/with_gpu.out": [
            "subjob.sh"
        ]
    },
    "emmay78/collective-benchmarking": {
        "collective-benchmarking/exp.sh": [
            "benchmark.py",
            "bw_benchmark_two.py",
            "bw_calculate_fast.py",
            "group_benchmark.py"
        ]
    },
    "mit-ll/robust-vision-language-finetuning": {
        "robust-vision-language-finetuning/scripts/launch_training_distributed.sh": [
            "train.py"
        ]
    },
    "TiagoFilipeSousaGoncalves/proto-counterfactuals": {
        "proto-counterfactuals/papila_train_resnet34.sh": [
            "code/baseline/models_train.py",
            "code/protopnet/models_train.py"
        ]
    },
    "ECMWFCode4Earth/diffusion-models-for-weather-prediction": {
        "diffusion-models-for-weather-prediction/submit_script_8_inference_UNet.sh": [
            "s8_write_predictions_unet.py"
        ]
    },
    "reachsumit/deep-unet-for-satellite-image-segmentation": {
        "deep-unet-for-satellite-image-segmentation/run.sbatch": [
            "train_unet.py",
            "predict.py"
        ]
    },
    "Bachelor-Tortured-Rats/TorturedRats": {
        "TorturedRats/src/HPC_scripts/train_3d_rpl.sh": [
            "src/pipelines/train_3drpl.py"
        ],
        "TorturedRats/src/HPC_scripts/finetune-kfold.sh": [
            "src/pipelines/finetune-kfold.py"
        ]
    },
    "mellis13/smartsim-openFOAM": {
        "smartsim-openFOAM/run-theta.sh": [
            "driver.py"
        ]
    },
    "bowang-lab/MedSAM": {
        "MedSAM/train_multi_gpus.sh": [
            "train_multi_gpus.py"
        ]
    },
    "bowang-lab/MEDIQA-Chat-2023": {
        "MEDIQA-Chat-2023/scripts/slurm/run_summarization.sh": [
            "./scripts/run_summarization.py"
        ],
        "MEDIQA-Chat-2023/scripts/slurm/evaluate_summarization.sh": [
            "./scripts/evaluate_summarization.py"
        ]
    },
    "MorrellLAB/BAD_Mutations": {
        "Barley_Mutated/02_analysis/bad_mutations/bad_mut_compile_predict-hyb_common.sh": [
            "BAD_Mutations.py"
        ]
    },
    "AMI-system/species_classifier": {
        "species_classifier/singapore_model.sh": [
            "01_create_dataset_split.py",
            "02_calculate_taxa_statistics.py",
            "03_create_webdataset.py",
            "04_train_model.py"
        ],
        "species_classifier/uk_model.sh": [
            "01_create_dataset_split.py",
            "02_calculate_taxa_statistics.py",
            "03_create_webdataset.py",
            "04_train_model.py"
        ]
    },
    "lucivpav/InLocCIIRC_demo": {
        "InLocCIIRC_demo/run_ciirc.sh": [
            "startup.m",
            "inloc_demo.m"
        ]
    },
    "emdodds/matching-pursuit": {
        "matching-pursuit/scripts/run_mp.sh": [
            "scripts/fit_mp.py"
        ]
    },
    "Garsdal/hybrid-power-forecasting": {
        "hybrid-power-forecasting/submit-predict.sh": [
            "env_msc/bin/activate",
            "src/predict_models.py"
        ],
        "hybrid-power-forecasting/submit-train.sh": [
            "env_msc/bin/activate",
            "src/train_models.py"
        ]
    },
    "naver/rasp": {
        "rasp/jobspec-cfg/run/run-voc-rasp.sh": [
            "run/run-voc-rasp.sh",
            "run.py"
        ],
        "rasp/jobspec-cfg/run/eval/eval-coco-to-voc.sh": [
            "run/eval/eval-coco-to-voc.sh",
            "eval.py"
        ],
        "rasp/jobspec-cfg/run/eval/eval-voc.sh": [
            "run/eval/eval-voc.sh",
            "eval.py"
        ],
        "rasp/jobspec-cfg/run/ablations/run-voc-memory.sh": [
            "run/ablations/run-voc-memory.sh",
            "run.py"
        ],
        "rasp/run/eval/eval-coco-to-voc.sh": [
            "run/eval/eval-coco-to-voc.sh",
            "eval.py"
        ],
        "rasp/run/eval/eval-voc.sh": [
            "run/eval/eval-voc.sh",
            "eval.py"
        ],
        "rasp/run/ablations/run-voc-hyperparams.sh": [
            "run/run-voc-rasp.sh",
            "run.py"
        ],
        "rasp/run/ablations/run-voc-memory.sh": [
            "run/ablations/run-voc-memory.sh",
            "run.py"
        ]
    },
    "Coldra1n/CS-Master_Thesis": {
        "CS-Master_Thesis/multi_node.slurm": [
            "llama_finetuning.py"
        ]
    },
    "fcdl94/RobotChallenge": {
        "RobotChallenge/run.job": [
            "main.py"
        ],
        "RobotChallenge/order.job": [
            "main.py"
        ],
        "RobotChallenge/frozen.job": [
            "main.py"
        ],
        "ICL/icarl.job": [
            "main.py"
        ]
    },
    "fcdl94/ICL": {
        "RobotChallenge/run.job": [
            "main.py"
        ],
        "RobotChallenge/order.job": [
            "main.py"
        ],
        "RobotChallenge/frozen.job": [
            "main.py"
        ],
        "ICL/icarl.job": [
            "main.py"
        ]
    },
    "tranquanghuy0801/drone-segment-bm": {
        "drone-segment-bm/run.sh": [
            "main_keras.py"
        ]
    },
    "gbrannigan/bdnf-val66met": {
        "bdnf-val66met/setup_scripts/02_water.sh": [
            "amber99sb-star-ildn-q.ff/tip4p-D.gro"
        ]
    },
    "JoHavel/BachelorThesis": {
        "BachelorThesis/topology-train.sh": [
            "./topology-train.sh",
            "experiment_symbols.py"
        ],
        "BachelorThesis/latent-train.sh": [
            "experiment_symbols.py"
        ],
        "BachelorThesis/jobspec-cfg/topology-train.sh": [
            "./topology-train.sh",
            "experiment_symbols.py"
        ]
    },
    "InfluenceFunctional/MXtalTools": {
        "MXtalTools/bash_sub.sh": [
            "main.py"
        ]
    },
    "InfluenceFunctional/E2EMolMats": {
        "MXtalTools/bash_sub.sh": [
            "main.py"
        ]
    },
    "hkust-nlp/PEM_composition": {
        "PEM_composition/jobspec-cfg/examples/pytorch/text-classification/run_glue.py": [
            "src/transformers/training_args.py"
        ],
        "PEM_composition/jobspec-cfg/examples/pytorch/summarization/seq2seq_lm.py": [
            "src/transformers/training_args.py"
        ],
        "PEM_composition/jobspec-cfg/examples/pytorch/summarization/prompt_run_glue.py": [
            "src/transformers/training_args.py"
        ],
        "PEM_composition/exps/run_glue.sh": [
            "examples/pytorch/text-classification/run_glue.py"
        ],
        "PEM_composition/exps/composition_for_multitasking/ia3_prompt_run_glue.sh": [
            "examples/pytorch/summarization/prompt_run_glue.py"
        ],
        "PEM_composition/exps/composition_for_multitasking/fft_prompt_run_glue.sh": [
            "examples/pytorch/summarization/prompt_run_glue.py"
        ],
        "PEM_composition/exps/composition_for_domain_transfer/ia3_polarity_lm.sh": [
            "examples/pytorch/summarization/seq2seq_lm.py"
        ]
    },
    "TjuJianyu/RRL": {
        "RRL/scripts/supervised_transfer/imagenet/to_inat18/linear_probing/inat.sh": [
            "supervised.py"
        ],
        "RRL/scripts/supervised_transfer/imagenet/to_inat18/linear_probing/rn50wide.sh": [
            "supervised.py"
        ],
        "RRL/scripts/supervised_transfer/imagenet/to_cifar/linear_probing/cifar_bn.sh": [
            "supervised.py"
        ],
        "RRL/scripts/supervised_transfer/imagenet/to_cifar/fine-tuning/finetune_wide.sh": [
            "supervised.py"
        ],
        "RRL/scripts/supervised_transfer/imagenet/to_cifar/fine-tuning/finetune.sh": [
            "supervised.py"
        ],
        "RRL/scripts/supervised_transfer/imagenet/to_cifar/fine-tuning/finetune_cat.sh": [
            "supervised.py"
        ]
    },
    "brandontrabucco/da-fusion": {
        "da-fusion/scripts/baseline_randaugment/launch_baseline_spurge.sh": [
            "train_classifier.py"
        ]
    },
    "bachvarv/NLP_Test": {
        "NLP_Test/slm_script.sh": [
            "simple_language_model_test.py"
        ]
    },
    "alexhernandezgarcia/gflownet": {
        "gflownet/mila/sbatch/main.sh": [
            "main.py"
        ]
    },
    "tphung3/colmena-xtb": {
        "colmena-xtb/nwc-submit.sh": [
            "./python_package_run",
            "./nwc-run.sh"
        ],
        "colmena-xtb/xtb-submit.sh": [
            "./python_package_run",
            "./xtb-run.sh"
        ],
        "colmena-xtb/run.sh": [
            "./xtb-run.sh"
        ],
        "colmena-xtb/jobspec-cfg/xtb-run.sh": [
            "run.py"
        ],
        "colmena-xtb/jobspec-cfg/nwc-run.sh": [
            "run.py"
        ]
    },
    "SamsungLabs/NB-MLM": {
        "NB-MLM/evaluate.sh": [
            "evaluate.py"
        ]
    },
    "Luciennnnnnn/DualFormer": {
        "DualFormer/slurm/train_esrgan_x4_dual_former.sh": [
            "options/train/train_esrgan_x4_dual_former.yml"
        ]
    },
    "sortland33/ThunderCast": {
        "ThunderCast/run_tbparse.sh": [
            "environment.yml",
            "extract_TB_data.py"
        ],
        "ThunderCast/run_model.sh": [
            "torchlightning_main.py"
        ],
        "ThunderCast/run_preds.sh": [
            "torchlightning_predict.py"
        ],
        "ThunderCast/jobspec-cfg/torchlightning_predict.py": [
            "torchlightning_predict.py"
        ]
    },
    "lhaausing/tf_icd_coding": {
        "tf_icd_coding/scripts/prince/train_ngram.s": [
            "run.py"
        ]
    },
    "alpk/tid-supervised-transfer-learning-dataset": {
        "tid-supervised-transfer-learning-dataset/scripts/truba_preprocess.sh": [
            "generate_csv_files.py"
        ],
        "tid-supervised-transfer-learning-dataset/scripts/truba_3DCNN_palamut.sh": [
            "main.py"
        ],
        "tid-supervised-transfer-learning-dataset/scripts/truba_GCN.sh": [
            "main.py"
        ]
    },
    "smaeland/ecg-heatmapping-review": {
        "ecg-heatmapping-review/train_model.sh": [
            "train_medians.py"
        ]
    },
    "pblossey/WRFwiso": {
        "WRFwiso/run_script_cheyenne.bash": [
            "run_script_cheyenne.bash"
        ],
        "WRFwiso/run_script_nudged_cheyenne.bash": [
            "run_script_cheyenne.bash",
            "run_wrf.bash"
        ],
        "WRFwiso/run_script_nudged_olympus.bash": [
            "run_script_cheyenne.bash"
        ],
        "WRFwiso/jobspec-cfg/run_script_cheyenne.bash": [
            "run_script_cheyenne.bash"
        ]
    },
    "nuthanmunaiah/attack-surface-evolution": {
        "attack-surface-evolution/ascript.sh": [
            "manage.py"
        ],
        "attack-surface-evolution/uscript.sh": [
            "manage.py"
        ],
        "attack-surface-evolution/lscript.sh": [
            "manage.py"
        ]
    },
    "MatthiasKohl/llama-recipes": {
        "llama-recipes/run_multi_cg1.sh": [
            "examples/finetuning.py"
        ]
    },
    "alexkaiser/heart_valves": {
        "heart_valves/run_watchdog.sh": [
            "main.cpp",
            "run_watchdog.sh",
            "watchdog_job_restart.py",
            "kill_all_mpi.sh"
        ],
        "heart_valves/run_cycle_N128_PERIODIC.sh": [
            "run_watchdog.sh",
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_cycle_N128_PERIODIC.sh"
        ],
        "heart_valves/jobspec-cfg/run_watchdog.sh": [
            "main.cpp",
            "run_watchdog.sh",
            "watchdog_job_restart.py",
            "kill_all_mpi.sh"
        ],
        "heart_valves/jobspec-cfg/run_cycle_N128_PERIODIC.sh": [
            "run_watchdog.sh",
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_cycle_N128_PERIODIC.sh"
        ],
        "heart_valves/scripts/run_PA_box_tester_192.sh": [
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_parallel_movie.py"
        ],
        "heart_valves/scripts/run_aortic_N192.sbatch": [
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_parallel_movie.py"
        ],
        "heart_valves/scripts/run_PA_box_tester_384.sh": [
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_parallel_movie.py"
        ],
        "heart_valves/scripts/run_aortic_384_with_aorta.sbatch": [
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_parallel_movie.py"
        ],
        "heart_valves/scripts/run_aortic_N384.sbatch": [
            "watchdog_job_restart.py",
            "kill_all_mpi.sh",
            "run_parallel_movie.py"
        ]
    },
    "DorianJoubaud/Oversampling4ITSC": {
        "Oversampling4ITSC/da.sh": [
            "main_100.py"
        ]
    },
    "idan-tankel/SemOOD": {
        "SemOOD/eval_rephrasing.sh": [
            "SEED-Bench/BLIP2_eval_reprhasing.py"
        ]
    },
    "gptune/GPTune": {
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si2.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si5H12.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Ga3As3H12.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_GaAsH6.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_benzene.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Na5.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiH4.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si10H16.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiNa.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_H2O.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiO.sh": [
            "requirements.txt"
        ]
    },
    "gptune/cGP": {
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si2.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si5H12.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Ga3As3H12.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_GaAsH6.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_benzene.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Na5.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiH4.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_Si10H16.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiNa.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_H2O.sh": [
            "requirements.txt"
        ],
        "cGP/archive/Sec3_2/superLU/run_superlu_gnu_SiO.sh": [
            "requirements.txt"
        ]
    },
    "Danfoa/DynamicsHarmonicsAnalysis": {
        "DynamicsHarmonicsAnalysis/launch/dae_state_dim.sh": [
            "train_observables.py"
        ]
    },
    "xingchenzhao/Generating-Human-Skeletons-with-Mutual-Actions-WGAN-Pytorch": {
        "Generating-Human-Skeletons-with-Mutual-Actions-WGAN-Pytorch/run.sh": [
            "vae0_train.py"
        ]
    },
    "tudoroancea/civil_459_project": {
        "civil_459_project/train.sh": [
            "MTR/tools/train.py",
            "MTR/tools/cfgs/waymo/dlav_with_dynamic_queries.yaml",
            "MTR/tools/cfgs/waymo/dlav_without_dynamic_queries.yaml"
        ]
    },
    "LLM360/amber-train": {
        "amber-train/run.sh": [
            "main.py"
        ]
    },
    "dais-ita/explanation_metric": {
        "explanation_metric/generate_pixel_lists.sh": [
            "arcca_generate_pixel_lists.py"
        ]
    },
    "djukicn/loca": {
        "loca/train_zero_shot.sh": [
            "train.py"
        ],
        "loca/train_few_shot.sh": [
            "train.py"
        ]
    },
    "stain/nanome": {
        "nanome/teradata_demo_hpc.sh": [
            "teradata_demo_hpc.sh"
        ],
        "nanome/jobspec-cfg/teradata_demo_hpc.sh": [
            "teradata_demo_hpc.sh"
        ]
    },
    "nunofonseca/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "ywangwof/mpas_runscripts": {
        "mpas_runscripts/scripts/run_mpas.sh": [
            "README",
            "templates/build_tables.slurm"
        ]
    },
    "emrysshevek/simple_hwr": {
        "simple_hwr/slurm_scripts/scripts/cnn_architecture/resnet101.sh": [
            "train.py"
        ],
        "simple_hwr/slurm_scripts/scripts/cnn_architecture/resnet.sh": [
            "train.py"
        ]
    },
    "Irisbjork04/02456_final": {
        "02456_final/submit_VAE.sh": [
            "train_VAE.py"
        ]
    },
    "yujianyuanhaha/DQN-DSA": {
        "DQN-DSA/pbs.bash": [
            "multiNodeLearning.py"
        ]
    },
    "uturuncoglu/UFS_UTILS": {
        "UFS_UTILS/ush/fv3gfs_chgres.sh": [
            "sorc/link_fixdirs.sh"
        ]
    },
    "MagnusPoppe/NAS": {
        "NAS/job-scripts/single-net-big.slurm": [
            "slurm_nodes.py",
            "start_single_net.py",
            "./configurations/cifar-10/slurm-big-single-nas.json"
        ],
        "NAS/job-scripts/ea-nas.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/cifar-10/slurm.json"
        ],
        "NAS/job-scripts/single-net-pretrain.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/pretrain/slurm.json"
        ],
        "NAS/job-scripts/ea-nas-big-no-aug.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/cifar-10/slurm-big-ea-nas-no-aug.json"
        ],
        "NAS/job-scripts/pattern-nets.slurm": [
            "slurm_nodes.py",
            "start_pattern_nets.py",
            "./configurations/cifar-10/slurm-pattern-nas.json"
        ],
        "NAS/job-scripts/exp/01.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/cifar-10/experiments/exp01.json"
        ],
        "NAS/job-scripts/exp/04.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/cifar-10/experiments/exp04.json",
            "start_pattern_nets.py"
        ],
        "NAS/job-scripts/exp/03.slurm": [
            "slurm_nodes.py",
            "start_ea_nas.py",
            "./configurations/cifar-10/experiments/exp03.json"
        ]
    },
    "smikhai1/deep-image-denoising": {
        "deep-image-denoising/run_training.sh": [
            "train.py",
            "./configs/config_train.yml",
            "./configs/path.yml"
        ]
    },
    "neuralvis/lammps": {
        "lammps/slurm/lammps_rhodo.sh": [
            "README"
        ],
        "lammps/slurm/gpc_lammps_lj.sh": [
            "README"
        ],
        "lammps/slurm/deprecated/lammps_run.sh": [
            "examples/DIFFUSE/in.msd.2d"
        ]
    },
    "maeotaku/biomachina_hierarchical_softmax": {
        "biomachina_hierarchical_softmax/scripts/run.sh": [
            "main.py"
        ]
    },
    "kcopenhagen/lammps-myxosim": {
        "lammps-myxosim/run.slurm3Dall_exp": [
            "in.spfr3Dall_exp"
        ]
    },
    "allenai/OLMo": {
        "OLMo/scripts/lumi/mitchish65-randomseed.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/mitchish65.yaml"
        ],
        "OLMo/scripts/lumi/c4-large-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/c4-large.yaml"
        ],
        "OLMo/scripts/lumi/mitchish70.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/mitchish70.yaml"
        ],
        "OLMo/scripts/lumi/v1-mix-medium-on-lumi.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1-mix-medium.yaml"
        ],
        "OLMo/scripts/lumi/llama7.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/llama7.yaml"
        ],
        "OLMo/scripts/kempner/v1-mix-small.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1-mix-small.yaml"
        ],
        "OLMo/scripts/kempner/mitch-ish-7b.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1_5-mix-medium-mitch-ish-s3.yaml"
        ],
        "OLMo/scripts/kempner/llama7.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/llama7.yaml"
        ]
    },
    "BeatsonLab-MicrobialGenomics/micropipe": {
        "micropipe/pawsey/nextflow_batch_template.sh": [
            "nextflow.config",
            "main.nf"
        ],
        "micropipe/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "lhlawson/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "madhubabuv/TightIWAE": {
        "TightIWAE/runner.run": [
            "miwae_simplified.py"
        ]
    },
    "YoussefSha3rawy/SuperResolution": {
        "SuperResolution/scripts/run_job.sh": [
            "train.py",
            "configs/SRResNet.yaml"
        ],
        "SuperResolution/scripts/run_srgan_job.sh": [
            "train_srgan.py",
            "configs/SRGAN.yaml"
        ]
    },
    "njchoma/gnn_icecube": {
        "gnn_icecube/main.sh": [
            "src/main.py"
        ]
    },
    "njchoma/transformer_image_caption": {
        "gnn_icecube/main.sh": [
            "src/main.py"
        ],
        "transformer_image_caption/evaluate.sh": [
            "src/evaluate_test.py"
        ]
    },
    "Vi-Sri/ChestXRayClassification": {
        "ChestXRayClassification/sbatch.sh": [
            "train.py",
            "config.json"
        ]
    },
    "Vi-Sri/FlexiVit-Experiments": {
        "FlexiVit-Experiments/sbatch.sh": [
            "flexivit.py"
        ]
    },
    "shashankskagnihotri/stereo-transformer": {
        "stereo-transformer/scripts/fgsm.sh": [
            "main_fgsm.py"
        ]
    },
    "ISI-MIP/attrici": {
        "attrici/config/submit.sh.jinja2": [
            "run_estimation.py"
        ]
    },
    "VladimirYugay/Gaussian-SLAM": {
        "Gaussian-SLAM/scripts/reproduce_sbatch.sh": [
            "run_slam.py"
        ]
    },
    "loperamos/UPC_Benchmark": {
        "UPC_Benchmark/bench.sh": [
            "./clean.sh",
            "./go.sh"
        ],
        "UPC_Benchmark/jobspec-cfg/go.sh": [
            "./rebuild.sh",
            "./run.sh"
        ]
    },
    "JonasSchult/dcm-net": {
        "dcm-net/inference_scripts/supplementary/activation_function/leaky_relu.sh": [
            "run.py",
            "experiments/supplementary/activation_function/leaky_relu.json"
        ]
    },
    "tfzhou/ContrastiveSeg": {
        "ContrastiveSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "ProtoSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedprox.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedsam.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedfa.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavgm.sh": [
            "main.py"
        ]
    },
    "tfzhou/ProtoSeg": {
        "ContrastiveSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "ProtoSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedprox.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedsam.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedfa.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavgm.sh": [
            "main.py"
        ]
    },
    "tfzhou/FedFA": {
        "ContrastiveSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "ProtoSeg/jobspec-cfg/main.py": [
            "LICENSE"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedprox.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedsam.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/prostate_mri/euler_train_fedfa.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavg.sh": [
            "main.py"
        ],
        "FedFA/run_scripts/euler/office/euler_train_fedavgm.sh": [
            "main.py"
        ]
    },
    "Riemer1818/MSAI6103finalAssignment": {
        "MSAI6103finalAssignment/jobspec-cfg/train.py": [
            "train.py",
            "options/base_options.py",
            "options/train_options.py"
        ],
        "MSAI6103finalAssignment/scripts/trainResNet.sh": [
            "train.py"
        ]
    },
    "NIH-NEI/variant_prioritization": {
        "NGS_genotype_calling/Snakemake.wrapper.sh": [
            "metadata_file.csv"
        ],
        "NGS_genotype_calling/jobspec-cfg/config_panel.yaml": [
            "Snakemake.wrapper.sh"
        ]
    },
    "NIH-NEI/NGS_genotype_calling": {
        "NGS_genotype_calling/Snakemake.wrapper.sh": [
            "config_panel.yaml"
        ],
        "NGS_genotype_calling/jobspec-cfg/config_panel.yaml": [
            "Snakemake.wrapper.sh"
        ]
    },
    "DeepSegment/FCN-GoogLeNet": {
        "FCN-GoogLeNet/batchpyjobunix.sh": [
            "./inception_FCN.py"
        ]
    },
    "dence/rnastar_deseq2_isoseq_trial": {
        "rnastar_deseq2_isoseq_trial/run_snakemake.slurm.sh": [
            "config.yaml",
            "Snakefile",
            "hipergator.cluster.json"
        ],
        "rnastar_deseq2_isoseq_trial/jobspec-cfg/config.yaml": [
            "samples.tsv",
            "Dec_2020_units.tsv",
            "Jan_2021_units.tsv"
        ],
        "rnastar_deseq2_MeJA_timecourse/run_snakemake.slurm.sh": [
            "config.yaml",
            "Snakefile",
            "hipergator.cluster.json"
        ],
        "rnastar_deseq2_MeJA_timecourse/jobspec-cfg/config.yaml": [
            "samples.tsv",
            "units.tsv"
        ]
    },
    "dence/rnastar_deseq2_MeJA_timecourse": {
        "rnastar_deseq2_isoseq_trial/run_snakemake.slurm.sh": [
            "config.yaml",
            "Snakefile",
            "hipergator.cluster.json"
        ],
        "rnastar_deseq2_isoseq_trial/jobspec-cfg/config.yaml": [
            "samples.tsv",
            "Dec_2020_units.tsv",
            "Jan_2021_units.tsv"
        ],
        "rnastar_deseq2_MeJA_timecourse/run_snakemake.slurm.sh": [
            "config.yaml",
            "Snakefile",
            "hipergator.cluster.json"
        ],
        "rnastar_deseq2_MeJA_timecourse/jobspec-cfg/config.yaml": [
            "samples.tsv",
            "units.tsv"
        ]
    },
    "cmdoret/master_archive": {
        "master_archive/src/archive/bwa_wgs.sh": [
            "src/misc/jobs_manager.sh",
            "src/mapping/split_sam.pl"
        ],
        "master_archive/src/wgs_wild/bwa_wgs.sh": [
            "src/misc/jobs_manager.sh",
            "src/misc/dependencies.sh"
        ],
        "master_archive/src/wgs_wild/snps_wgs.sh": [
            "src/misc/dependencies.sh",
            "src/misc/jobs_manager.sh"
        ],
        "master_archive/src/stacks_pipeline/ustacks_lsf.sh": [
            "src/misc/jobs_manager.sh",
            "src/misc/dependencies.sh"
        ],
        "master_archive/src/stacks_pipeline/pstacks_script.sh": [
            "src/misc/jobs_manager.sh",
            "src/misc/dependencies.sh"
        ],
        "master_archive/src/mapping/bwa_RADseq.sh": [
            "src/misc/jobs_manager.sh",
            "src/misc/dependencies.sh",
            "src/mapping/split_sam.pl"
        ],
        "master_archive/src/convert_coord/convert_GFF_coord.sh": [
            "src/misc/jobs_manager.sh"
        ]
    },
    "GRSEB9S/physics_gnn": {
        "physics_gnn/main_nyu_baseline.sh": [
            "script/main.py"
        ]
    },
    "GRSEB9S/DeepForest": {
        "DeepForest/HPC/submit_job.sh": [
            "train.py"
        ],
        "DeepForest/HPC/submit_eval.sh": [
            "eval.py",
            "data/training/detection.csv"
        ],
        "DeepForest/HPC/submit_cpu_job.sh": [
            "train.py"
        ]
    },
    "spborder/Collagen_Segmentation": {
        "Collagen_Segmentation/Segment_Dataset.sh": [
            "batch_predictions.py"
        ],
        "Collagen_Segmentation/Run_Collagen_Seg.sh": [
            "train_inputs_single.json"
        ]
    },
    "lunzhang1990/dsgrn_sampler": {
        "dsgrn_sampler/sample.sh": [
            "sampleRun.py"
        ]
    },
    "CohenBerkeleyLab/WRF-nco-tools": {
        "WRF-nco-tools/slurmrun_wrf_output.sh": [
            "read_wrf_output.sh"
        ],
        "WRF-nco-tools/jobspec-cfg/read_wrf_output.sh": [
            "slurmrun_wrf_output.sh"
        ]
    },
    "Pehlevan-Group/rep-spectral": {
        "rep-spectral/commands/eval_resnet.sh": [
            "src/eval_black_box_robustness.py"
        ],
        "rep-spectral/commands/train_finetune_batch_reg_nol2sp.sh": [
            "src/train_reg_finetune.py",
            "src/eval_black_box_robustness_finetune.py"
        ],
        "rep-spectral/commands/train_transfer_batch_base.sh": [
            "src/train_reg_transfer.py",
            "src/eval_black_box_robustness_contrastive.py"
        ],
        "rep-spectral/commands/train_transfer_batch_reg.sh": [
            "src/train_reg_transfer.py"
        ],
        "rep-spectral/commands/train_resnet.sh": [
            "src/train_reg_resnet.py",
            "src/eval_black_box_robustness.py"
        ]
    },
    "Pehlevan-Group/autoencoder-exp": {
        "autoencoder-exp/run_script.sbatch": [
            "auto_encoder_gd.py"
        ]
    },
    "2019-ncovgroup/MolecularAttention": {
        "MolecularAttention/qm8hyer.sh": [
            "qm8_summit_tune.py"
        ]
    },
    "ZhenluQin/Compression-Simulation-Study": {
        "Compression-Simulation-Study/run_script_cuda.sh": [
            "./build_script_cuda.sh"
        ]
    },
    "fkoehlin/montepython_2cosmos_public": {
        "montepython_2cosmos_public/pctest.sh": [
            "montepython/MontePython.py"
        ]
    },
    "rajarshi008/learning-branching-time": {
        "learning-branching-time/grid-batch.sh": [
            "learn_formulas.py"
        ]
    },
    "coreyjadams/DiffSim": {
        "DiffSim/train_diffsim.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_unsupervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_representation.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/infer_yolo.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_simclr.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_from_simclr.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_tf_a21_deterministic_singleNode.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_real_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp-a21.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_uresnet_convergence.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_tf_single_tile_hvd_synthetic.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp_real_data.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_multiGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleSPR.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp-convergence.sh": [
            "bin/exec.py"
        ]
    },
    "coreyjadams/NEXT_SparseEventID": {
        "DiffSim/train_diffsim.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_unsupervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_representation.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/infer_yolo.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_simclr.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_from_simclr.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_tf_a21_deterministic_singleNode.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_real_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp-a21.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_uresnet_convergence.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_tf_single_tile_hvd_synthetic.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp_real_data.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_multiGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleSPR.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp-convergence.sh": [
            "bin/exec.py"
        ]
    },
    "coreyjadams/CosmicTagger": {
        "DiffSim/train_diffsim.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_unsupervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_representation.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_supervised.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/infer_yolo.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_yolo_simclr.sh": [
            "bin/exec.py"
        ],
        "NEXT_SparseEventID/train_from_simclr.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_tf_a21_deterministic_singleNode.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_real_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp-a21.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_uresnet_convergence.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/polaris/run_ct_pytorch_synthetic_data_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_tf_single_tile_hvd_synthetic.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_ddp_real_data.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/aurora/train_pt_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/perf_measurement_single_node.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_multiGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_single_tile_hvd.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleGPU.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_tf_cpu.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/run_ct_tf_a21_deterministic_singleSPR.sh": [
            "bin/exec.py"
        ],
        "CosmicTagger/example_submission_scripts/sunspot/train_pt_single_tile_ddp-convergence.sh": [
            "bin/exec.py"
        ]
    },
    "MediaBrain-SJTU/MING": {
        "MING/scripts/eval/chat.sh": [
            "ming/serve/cli.py"
        ]
    },
    "Annie-Zhou1997/Quenya-TTS": {
        "Quenya-TTS/job_script.sh": [
            "run_training_pipeline.py"
        ]
    },
    "Haipeng-Chen/RL4IM-Contingency": {
        "RL4IM-Contingency/gpu_run.sh": [
            "run_interactive.sh",
            "main.py"
        ]
    },
    "voteflux/flux-website-v2": {
        "flux-website-v2/dev-docker.sh": [
            "./_docker-dev/Dockerfile"
        ]
    },
    "kidist-amde/Balanced-Face-Dataset": {
        "Balanced-Face-Dataset/vanilla-generation.sbatch": [
            "stylegan_generation/race_labeled_stylegan_face_generator.py"
        ]
    },
    "shajidmd/HPC-Instagram-Geoprocessing": {
        "HPC-Instagram-Geoprocessing/1n1cpy.slurm.sh": [
            "HPCInstagramGeoProcessingUsingMPI.py"
        ],
        "HPC-Instagram-Geoprocessing/1n8cpy.slurm.sh": [
            "HPCInstagramGeoProcessingUsingMPI.py"
        ],
        "HPC-Instagram-Geoprocessing/2n8cpy.slurm.sh": [
            "HPCInstagramGeoProcessingUsingMPI.py"
        ],
        "HPC-Instagram-Geoprocessing/jobspec-cfg/HPCInstagramGeoProcessingUsingMPI.py": [
            "HPCInstagramGeoProcessingUsingMPI.py"
        ]
    },
    "vpeddi3gmu/CS678_DLEE": {
        "CS678_DLEE/slurm.sh": [
            "./scripts/train_dlee.sh",
            "./scripts/test_dlee.sh"
        ],
        "CS678_DLEE/jobspec-cfg/scripts/train_dlee.sh": [
            "dlee_train_test_init.py"
        ],
        "CS678_DLEE/jobspec-cfg/scripts/test_dlee.sh": [
            "dlee_train_test_init.py",
            "src/accuracy_check.py"
        ]
    },
    "mixarcid/molucinate": {
        "molucinate/jobs/install.sh": [
            "cfg/platform/standard.yaml",
            "requirements-pip.txt"
        ]
    },
    "Ethical-Hacking-Tools/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "azton/Megatron-DeepSpeed": {
        "Megatron-DeepSpeed/test_perlmutter.sh": [
            "./ALCF/model.sh",
            "./ALCF/args.sh",
            "pretrain_gpt.py"
        ]
    },
    "azton/genomic-megatron": {
        "Megatron-DeepSpeed/test_perlmutter.sh": [
            "./ALCF/model.sh",
            "./ALCF/args.sh",
            "pretrain_gpt.py",
            "./ds_config-gpt.json"
        ]
    },
    "Varato/lammps-water": {
        "lammps-water/submit.pbs": [
            "in.water_vitrify"
        ],
        "lammps-water/jobspec-cfg/in.water_vitrify": [
            "data.singleSPC",
            "forcefield.SPC"
        ]
    },
    "ashiklom/goes-benchmarks": {
        "goes-benchmarks/batch-json.sh": [
            "kerchunk-dask-byhand.py"
        ]
    },
    "Tufts-University/Denoising2PImages": {
        "Denoising2PImages/run.sh": [
            "main.py",
            "config.json",
            "srgan.py"
        ],
        "Denoising2PImages/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "5roop/LanguageModels": {
        "LanguageModels/src/train_lm.sh": [
            "src/run_mlm.py"
        ]
    },
    "steven-thomas/py4dvar": {
        "py4dvar/submit.sh": [
            "submit.sh",
            "runscript.py"
        ],
        "py4dvar/jobspec-cfg/submit.sh": [
            "submit.sh",
            "runscript.py"
        ],
        "py4dvar/jobspec-cfg/runscript.py": [
            "runscript.py"
        ],
        "py4dvar/tests/submit.sh": [
            "submit.sh"
        ]
    },
    "hlmu/FRITO": {
        "FRITO/sbatch.sh": [
            "ex_nsynth.py"
        ],
        "FRITO/jobspec-cfg/ex_nsynth.py": [
            "ex_nsynth.py"
        ]
    },
    "juancprzs/TTE": {
        "TTE/slurm_template.sh": [
            "main.py"
        ]
    },
    "spdes/chirpgp": {
        "chirpgp/tetralith/run_crlb_ekf.sh": [
            "setup.py"
        ],
        "chirpgp/tetralith/run_fastf0nls.sh": [
            "setup.py"
        ],
        "chirpgp/tetralith/run_crlb_model.sh": [
            "setup.py"
        ]
    },
    "spdes/pbnn": {
        "chirpgp/tetralith/run_crlb_ekf.sh": [
            "setup.py"
        ],
        "chirpgp/tetralith/run_fastf0nls.sh": [
            "setup.py"
        ],
        "chirpgp/tetralith/run_crlb_model.sh": [
            "setup.py"
        ]
    },
    "ie3-institute/simona": {
        "simona/src/main/sh/deploy/init-run.sh": [
            "./gradlew"
        ]
    },
    "weicheny/accelerator-": {
        "accelerator-/job-julia.pbs": [
            "./julia"
        ]
    },
    "fshdnc/finbert-text-classification": {
        "finbert-text-classification/batch-run-dev.sh": [
            "run_classifier.py"
        ],
        "finbert-text-classification/electra-run-dev.sh": [
            "run_classifier.py"
        ],
        "finbert-text-classification/jobspec-cfg/run_classifier.py": [
            "run_classifier.py"
        ]
    },
    "fshdnc/align-net": {
        "align-net/eval.sh": [
            "evaluation.py"
        ]
    },
    "eriksandstroem/Point-SLAM": {
        "Point-SLAM/repro.sh": [
            "run.py"
        ]
    },
    "WebDollar/argon2-gpu": {
        "argon2-gpu/scripts/metacentrum-v2/start-benchmark-common.sh": [
            "scripts/benchmark-commits.sh"
        ]
    },
    "yonkshi/urban_dl": {
        "urban_dl/train.sbatch": [
            "train_xview2.py"
        ]
    },
    "LumiOpen/Megatron-LM-lumi": {
        "Megatron-LM-lumi/launch_scripts/pretrain_viking_7B.sh": [
            "pretrain_gpt.py",
            "./launch.sh"
        ]
    },
    "hasibzunair/thyroid-nodule-sc": {
        "thyroid-nodule-sc/job.sh": [
            "job.sh"
        ],
        "thyroid-nodule-sc/jobspec-cfg/job.sh": [
            "job.sh"
        ]
    },
    "nikosavola/NeuralNetworkQuantumState": {
        "NeuralNetworkQuantumState/run_phase_sweep.sbatch": [
            "run_phase_sweep.py"
        ],
        "NeuralNetworkQuantumState/run_tuning.sbatch": [
            "run_tuning.py"
        ]
    },
    "jbloomlab/MeV_SSPE_Dynamics": {
        "MeV_SSPE_Dynamics/run_analysis.bash": [
            "cluster.yml"
        ]
    },
    "jbloomlab/IFNsorted_flu_single_cell": {
        "MeV_SSPE_Dynamics/jobspec-cfg/cluster.yml": [
            "Snakefile"
        ]
    },
    "gremlin97/CuteNet": {
        "CuteNet/train-cn.sh": [
            "train.py"
        ]
    },
    "MathieuSeraphim/SPDTransNet_plus": {
        "SPDTransNet_plus/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_all_folds_learned_augmentation.sl": [
            "command_line_runner.py"
        ],
        "SPDTransNet/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_runs_analysis.sl": [
            "command_line_tester.py"
        ],
        "SPDTransNet/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_all_folds_full_spd_best_mf1_length_21.sl": [
            "command_line_runner.py"
        ]
    },
    "MathieuSeraphim/SPDTransNet": {
        "SPDTransNet_plus/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_all_folds_learned_augmentation.sl": [
            "command_line_runner.py"
        ],
        "SPDTransNet/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_runs_analysis.sl": [
            "command_line_tester.py"
        ],
        "SPDTransNet/_6_bash_scripts/_6_3_slurm_execution/slurm_scripts/slurm_all_folds_full_spd_best_mf1_length_21.sl": [
            "command_line_runner.py"
        ]
    },
    "UAACC/LLMR": {
        "LLMR/experiments/reinforce.sh": [
            "reinforce.py",
            "templates/dialogue_T0.txt"
        ],
        "LLMR/experiments/LLMR_1/reinforce.sh": [
            "reinforce.py",
            "templates/dialogue_T0.txt"
        ],
        "LLMR/experiments/LLMR_2/reinforce.sh": [
            "reinforce.py",
            "templates/dialogue_T0.txt"
        ],
        "LLMR/experiments/initial/train.sh": [
            "train.py"
        ],
        "LLMR/experiments/LLMR_ost/reinforce.sh": [
            "reinforce.py",
            "templates/dialogue_T0.txt"
        ]
    },
    "domejiraphon/dreambooth": {
        "dreambooth/ours_no_prior/astronaut.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/runner.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/bear_plushie.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/elephant.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/dog2.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/lion.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/pizza.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/dome.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours_no_prior/horse.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours/runner.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours/elephant.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours/dog2.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours/pizza.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/ours/dome.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/scripts/dog8.sh": [
            "train_dreambooth_lora_sdxl.py"
        ],
        "dreambooth/scripts/mona_lisa.sh": [
            "train_dreambooth_lora_sdxl.py"
        ]
    },
    "AndersenLab/Caeno_Scan": {
        "Caeno_Scan/run_alloutlier_simfiles.sh": [
            "prepare_sims.nf"
        ],
        "Caeno_Scan/run_192_tests.sh": [
            "multi_species_simfiles.nf"
        ],
        "Caeno_Scan/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "NemaScan/test_run_local.sh": [
            "main.nf"
        ],
        "NemaScan/test_run.sh": [
            "main.nf"
        ],
        "NemaScan/test_data/202320_assess_sims/test_run.sh": [
            "main.nf"
        ],
        "NemaScan/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "AndersenLab/NemaScan": {
        "Caeno_Scan/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "NemaScan/test_run_local.sh": [
            "main.nf"
        ],
        "NemaScan/test_run.sh": [
            "main.nf"
        ],
        "NemaScan/test_data/202320_assess_sims/test_run.sh": [
            "main.nf"
        ],
        "NemaScan/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "akiraawan/IDC_Group1": {
        "IDC_Group1/run.pbs": [
            "requirements.txt",
            "run.py"
        ]
    },
    "uab-cgds-worthey/DITTO": {
        "DITTO/model.job": [
            "cheaha.config",
            ".test_data/file_list.txt"
        ],
        "DITTO/jobspec-cfg/.test_data/file_list.txt": [
            ".test_data/oc_test_data.vcf.gz",
            ".test_data/testing_variants_hg38.vcf.gz"
        ]
    },
    "giaguaro/PLIF_CNN": {
        "PLIF_CNN/trial_exp_final.sh": [
            "trial_main_final.py"
        ],
        "PLIF_CNN/exp_2.sh": [
            "main_distributed.py"
        ]
    },
    "silasbrack/approximate-inference-for-bayesian-neural-networks": {
        "approximate-inference-for-bayesian-neural-networks/experiments/mnist/run_vi.sh": [
            "src/train.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/mnist/run_laplace.sh": [
            "src/train.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/active/run_nn.sh": [
            "src/train_active.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/active/run_vi.sh": [
            "src/train_active.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/active/run_laplace.sh": [
            "src/train_active.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/mura/run_vi.sh": [
            "src/train.py"
        ],
        "masters-thesis/jobspec-cfg/src/train.py": [
            "./conf/config.yaml"
        ],
        "masters-thesis/scripts/submit.sh": [
            "src/train.py"
        ]
    },
    "silasbrack/masters-thesis": {
        "approximate-inference-for-bayesian-neural-networks/experiments/mnist/run_vi.sh": [
            "src/train.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/mnist/run_laplace.sh": [
            "src/train.py"
        ],
        "approximate-inference-for-bayesian-neural-networks/experiments/mura/run_vi.sh": [
            "src/train.py"
        ],
        "masters-thesis/jobspec-cfg/src/train.py": [
            "./conf/config.yaml"
        ],
        "masters-thesis/scripts/submit.sh": [
            "src/train.py"
        ]
    },
    "linneawolniewicz/mlp-mixer-1d-classification": {
        "mlp-mixer-1d-classification/run.slurm": [
            "hyperparameter_tuning.py"
        ]
    },
    "KyuJungJun/CorrelationAnalyzer": {
        "CorrelationAnalyzer/job3.cmd": [
            "count.py"
        ],
        "CorrelationAnalyzer/rot.cmd": [
            "rots_2023.py"
        ]
    },
    "yueqiusun/RNN-CNN-based-Natural-Language-Inference": {
        "RNN-CNN-based-Natural-Language-Inference/run.s": [
            "main.py"
        ]
    },
    "SanaAwan5/transfer_learning_on_mnist_spdz": {
        "transfer_learning_on_mnist_spdz/script.sh": [
            "examples/tutorials/transfer_learning1.py"
        ]
    },
    "ska-telescope/sim-low-imaging": {
        "sim-low-imaging/golden_simulations/simulation6/submit_p3.slurm": [
            "./clean_ms.py"
        ],
        "sim-low-imaging/golden_simulations/simulation8/submit_p3.slurm": [
            "./clean_ms.py"
        ],
        "sim-low-imaging/golden_simulations/simulation7/submit_p3.slurm": [
            "./clean_ms.py"
        ],
        "sim-low-imaging/golden_simulations/simulation9/submit_p3.slurm": [
            "./clean_ms.py"
        ],
        "sim-low-imaging/golden_simulations/simulation10/submit_p3.slurm": [
            "./clean_ms.py"
        ],
        "sim-low-imaging/golden_simulations/simulation5/submit_p3.slurm": [
            "./clean_ms.py"
        ]
    },
    "ska-telescope/ska-sdp-distributed-fourier-transform": {
        "ska-sdp-distributed-fourier-transform/slurm_scripts/run_distr_single_astrolab.slurm": [
            "scripts/demo_api.py"
        ]
    },
    "emma-mens/adam-compression": {
        "adam-compression/sample_slurm.sh": [
            "train.py",
            "configs/imagenet/resnet50.py",
            "configs/dgc/wm5.py",
            "configs/dgc/fp16.py",
            "configs/dgc/int32.py"
        ]
    },
    "SACEMA/reinfectionsBelinda": {
        "reinfectionsBelinda/sbv/method_1_analysis/method_1_array_job.pbs.example": [
            "sbv/method_1_analysis/method_1_arrayjob.R"
        ],
        "reinfectionsBelinda/sbv/third_infections/l2_third_array_job.pbs.example": [
            "sbv/third_infections/third_infections_l2.R"
        ]
    },
    "jdf-prog/LLM-Gen": {
        "LLM-Gen/_generate_candidates.sh": [
            "generate_candidates.py"
        ]
    },
    "Animadversio/Neuro-ActMax-GAN-comparison": {
        "Neuro-ActMax-GAN-comparison/cluster_scripts/resnet_gradEvol_GAN_cmp.sh": [
            "insilico_experiments/BigGAN_gradEvol_cmp_O2_cluster.py"
        ],
        "Neuro-ActMax-GAN-comparison/cluster_scripts/resnet_Evol_GAN_cmp.sh": [
            "insilico_experiments/BigGAN_Evol_cmp_O2_cluster.py"
        ]
    },
    "Animadversio/FloodFillNetwork-Notes": {
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_inference_p11_6_exp1-33_batch_bash.sh": [
            "visualize_segmentation_script.py"
        ],
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_inference_p11_6_exp1_batch_bash.sh": [
            "visualize_segmentation_script.py"
        ],
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_resegment_p11_6_exp1-33-38-consens_array.sh": [
            "run_resegment.py"
        ],
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_resegment_gen_p11_6_exp1-33-38-consens_array.sh": [
            "resegment_seed_generation_Center_Mass.py"
        ],
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_inference_p11_6_exp1-38_batch_bash.sh": [
            "visualize_segmentation_script.py"
        ],
        "FloodFillNetwork-Notes/sample_bash_script/Cluster_inference_IPL_exp1_batch_bash.sh": [
            "run_inference.py",
            "visualize_segmentation_script.py"
        ]
    },
    "Animadversio/Foveated_Saccade_SimCLR": {
        "Foveated_Saccade_SimCLR/scripts/train_simclr.sh": [
            "run.py"
        ],
        "Foveated_Saccade_SimCLR/scripts/train_simclr_w_sal.sh": [
            "run_salcrop.py"
        ],
        "Foveated_Saccade_SimCLR/scripts/train_simclr_w_fov.sh": [
            "run_salcrop.py"
        ],
        "Foveated_Saccade_SimCLR/scripts/train_simclr_w_magnif.sh": [
            "run_magnif.py"
        ],
        "Foveated_Saccade_SimCLR/scripts/train_simclr_w_sal_new.sh": [
            "run_salcrop.py"
        ]
    },
    "Animadversio/Tuning-Manifold-Level-Sets": {
        "Tuning-Manifold-Level-Sets/scripts/large_scale_proto.sh": [
            "large_scale_proto_ris_cluster.py"
        ]
    },
    "Animadversio/ActMax-Optimizer-Dev": {
        "ActMax-Optimizer-Dev/scripts/ng_optim_benchmark.sh": [
            "baseline_benchmark.py"
        ],
        "ActMax-Optimizer-Dev/scripts/cma_optim_benchmark.sh": [
            "cma_benchmark.py"
        ],
        "ActMax-Optimizer-Dev/scripts/cma_optim_covmat_record.sh": [
            "cma_covmat_record.py"
        ],
        "ActMax-Optimizer-Dev/scripts/cma_noise_control.sh": [
            "cma_noise_control.py"
        ]
    },
    "Animadversio/Prototype_Distribution": {
        "Prototype_Distribution/stl10_train.sh": [
            "train/simclr_STL10train_O2.py"
        ]
    },
    "Animadversio/Visual_Neuro_InSilico_Exp": {
        "Visual_Neuro_InSilico_Exp/cluster_scripts/insilico_manifold_allchan_resnet50_robust.sh": [
            "insilico_ResizeManifold_torch_efficient_script.py"
        ],
        "Visual_Neuro_InSilico_Exp/cluster_scripts/insilico_manifold_resize_DenseNet.sh": [
            "insilico_ResizeManifold_torch_script_CLI.py"
        ],
        "Visual_Neuro_InSilico_Exp/cluster_scripts/insilico_manifold_allchan_resnet50.sh": [
            "insilico_ResizeManifold_torch_efficient_script.py"
        ],
        "Visual_Neuro_InSilico_Exp/cluster_scripts/resnet50_robust_Evol_GAN_cmp.bsub": [
            "BigGAN_Evol_cmp_RIS_cluster.py"
        ],
        "Visual_Neuro_InSilico_Exp/cluster_scripts/insilico_manifold_allchan_resnet50_Face.sh": [
            "insilico_ResizeManifold_torch_efficient_script.py"
        ],
        "Visual_Neuro_InSilico_Exp/Cosine/cosine_evol_exp.bsub": [
            "cosine_evol_RIS_cluster.py"
        ]
    },
    "aovladi/t5_11": {
        "t5_11/t5.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_slowmo_training.py",
            "./main_training.py"
        ],
        "t5_11/t5_slowmo.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_slowmo_training.py"
        ],
        "transformer_framework/trainer.slurm": [
            "./main_training.py"
        ],
        "transformer_framework/trainer_slowmo.slurm": [
            "./main_slowmo_training.py"
        ],
        "transformer_framework/trainer_gossipgrad.slurm": [
            "./main_gossipgrad_training.py"
        ]
    },
    "aovladi/transformer_framework": {
        "t5_11/t5.slurm": [
            "./main_slowmo_training.py",
            "./main_training.py"
        ],
        "t5_11/t5_slowmo.slurm": [
            "./main_slowmo_training.py"
        ],
        "transformer_framework/trainer.slurm": [
            "./main_training.py"
        ],
        "transformer_framework/trainer_slowmo.slurm": [
            "./main_slowmo_training.py"
        ],
        "transformer_framework/trainer_gossipgrad.slurm": [
            "./main_gossipgrad_training.py"
        ]
    },
    "whongzhong/GPT2LOT": {
        "GPT2LOT/sbatch.sh": [
            "test.py",
            "main.py"
        ]
    },
    "JingdiZhou/Qorl": {
        "Qorl/auto_train_cluster.sh": [
            "train.py",
            "ptq_all.sh"
        ],
        "Qorl/jobspec-cfg/ptq_all.sh": [
            "new_ptq.py",
            "collate_model.py"
        ]
    },
    "FluxionNetwork/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "jswhit/da_scripts": {
        "da_scripts/main.sh": [
            "config.sh",
            "pickinfo.sh",
            "blendinc.sh",
            "compute_ensmean_fcst.sh",
            "checkdate.py",
            "hpss.sh"
        ],
        "da_scripts/jobspec-cfg/config.sh": [
            "checkdate.py",
            "main.sh",
            "./main_controlanal.sh",
            "./main.sh"
        ]
    },
    "parvathisudha/Targeted-Panel-Analysis": {
        "Targeted-Panel-Analysis/Preprocessing.sh": [
            "./Panel_config.sh"
        ]
    },
    "AntoinePassemiers/Wynona": {
        "Wynona/job.sh": [
            "main.py"
        ],
        "Wynona/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "ut-astria/PyCIS": {
        "PyCIS/rundemo.sh": [
            "setup.sh",
            "demo.py",
            "runpycis.py"
        ],
        "PyCIS/rundaily.sh": [
            "runpycis.py",
            "setup.sh"
        ],
        "PyCIS/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ]
    },
    "ut-astria/rasr": {
        "PyCIS/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ]
    },
    "ricardobarroslourenco/pcmci_array": {
        "pcmci_array/main.sh": [
            "main.py"
        ],
        "pcmci_array/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "amvjakob/swisspv": {
        "swisspv/run_aux.sh": [
            "train_classification_tl_aux.py"
        ],
        "swisspv/run_seg.sh": [
            "train_segmentation_tl.py"
        ],
        "swisspv/run.sh": [
            "train_classification_tl.py"
        ]
    },
    "jvhs0706/QuIP": {
        "QuIP/quantize.sh": [
            "llama.py"
        ]
    },
    "ncsa/Scheduler": {
        "Scheduler/ccm/r.sh": [
            "run",
            "joblist"
        ]
    },
    "AustralianBioCommons/falcon": {
        "falcon/sbatch_nextflow.sh": [
            "main.nf"
        ]
    },
    "eshook/Forest": {
        "Forest/play_bmsb.pbs": [
            "play_bmsb.py"
        ],
        "Forest/jobspec-cfg/play_bmsb.py": [
            "LICENSE"
        ]
    },
    "geodynamics/Rayleigh": {
        "Rayleigh/job_scripts/NASA_Pleiades/pleiades_script.sh": [
            "configure",
            "./configure"
        ]
    },
    "Leirof/M2-Unveiling-3D-structure-of-pre-stellar-cores": {
        "M2-Unveiling-3D-structure-of-pre-stellar-cores/src/train_gpu.sh": [
            "Train_Model.py"
        ],
        "M2-Unveiling-3D-structure-of-pre-stellar-cores/src/generate-dataset.sh": [
            "Generate_Dataset.py"
        ],
        "M2-Unveiling-3D-structure-of-pre-stellar-cores/src/train_tesla.sh": [
            "Train_Model.py"
        ]
    },
    "thomshaw92/PialNet": {
        "PialNet/vaibhavi/slurm.sh": [
            "vaibhavi/main.py"
        ],
        "PialNet/francesco/slurm.sh": [
            "francesco/src/create_tf_records.py",
            "francesco/src/train.py",
            "francesco/src/predict.py"
        ]
    },
    "CSCfi/pytorch-ddp-examples": {
        "pytorch-ddp-examples/run-deepspeed-gpu4.sh": [
            "mnist_deepspeed.py",
            "ds_config.json"
        ],
        "pytorch-ddp-examples/run-accelerate-gpu8.sh": [
            "mnist_accelerate.py"
        ],
        "pytorch-ddp-examples/run-ddp-gpu4.sh": [
            "mnist_ddp.py"
        ],
        "pytorch-ddp-examples/run-ddp-gpu4-smi-logging.sh": [
            "mnist_ddp.py"
        ],
        "pytorch-ddp-examples/run-ddp-gpu8.sh": [
            "mnist_ddp.py"
        ]
    },
    "CSCfi/HPCS": {
        "HPCS/client/job_preparation/utils/sbatch.template": [
            "./utils/spawn_agent.py"
        ]
    },
    "MateiGrama/FLmedical": {
        "FLmedical/runExperimentGPU.sh": [
            "main.py"
        ]
    },
    "aseetharam/Maize_WGS_Build": {
        "Maize_WGS_Build/submit_nf.slurm": [
            "main.nf"
        ],
        "Maize_WGS_Build/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "closest-git/DeepFormer": {
        "DeepFormer/sbatch/longhorn/cifar_kfac.slurm": [
            "examples/pytorch_cifar10_resnet.py"
        ]
    },
    "neoamos/cf-habitat": {
        "cf-habitat/ddppo-job.sh": [
            "main.py",
            "configs/experiments/ddppo_pointnav_gibson4plus_mobilenet_lstm1.yaml",
            "configs/experiments/ddppo_pointnav_gibson0plus_resnet50.yaml"
        ],
        "cf-habitat/job.sh": [
            "main.py",
            "configs/experiments/crazyflie_baseline_rgb.yaml"
        ]
    },
    "hibagus/ECE382N-GPU-Lab": {
        "ECE382N-GPU-Lab/run_nvidiasmi.slurm": [
            "set_environment",
            "power/power_measure.sh"
        ]
    },
    "BrainModes/tvb-pipeline-converter": {
        "tvb-pipeline/src/tvb_image_processing_pipeline_v4.sh": [
            "encrypt_secret.py",
            "decrypt_data.py",
            "encrypt_results.py"
        ],
        "tvb-pipeline-converter/pipeline_onHPC.sh": [
            "tvb_converter_pipeline.sh"
        ],
        "tvb-pipeline-converter/jobspec-cfg/tvb_converter_pipeline.sh": [
            "convert2TVB_format.py"
        ]
    },
    "DOI-USGS/lake-temperature-out": {
        "lake-temperature-out/glm3pb0_singularity.slurm": [
            "glm3pb0_run.R"
        ]
    },
    "DOI-USGS/lake-temperature-lstm-static": {
        "lake-temperature-lstm-static/sn_eval.slurm": [
            "5_visualize.smk"
        ]
    },
    "omjadas/geo-processing": {
        "geo-processing/one-one.slurm": [
            "app.py"
        ]
    },
    "DuJoram/mt_mvae": {
        "mt_mvae/run_train_dsprites_classifier.sh": [
            "src/train_dsprites_classifier.py"
        ]
    },
    "QuantumMisaka/LASP_autotrain_lib": {
        "LASP_autotrain_lib/jobs_local.slurm": [
            "auto.py"
        ],
        "LASP_autotrain_lib/jobspec-cfg/auto.py": [
            "auto.py",
            "nodejob_coor.py",
            "update_patterns.py",
            "console",
            "nodejob.py",
            "allstr_new.py",
            "structure_new.py"
        ]
    },
    "ArmelRandy/Self-instruct": {
        "Self-instruct/run.slurm": [
            "main.py",
            "data/bi/code_llama_34b/output.jsonl",
            "processing.py",
            "tgi.py"
        ]
    },
    "tanwimallick/TL-DCRNN": {
        "TL-DCRNN/qsub_30e32c.sh": [
            "dcrnn_train.py"
        ]
    },
    "ORNL-QCI/ExaTENSOR": {
        "ExaTENSOR/submit_summit.pbs": [
            "./exec_exa.sh"
        ]
    },
    "mathias77515/Pipeline": {
        "Pipeline/main.sh": [
            "main.py"
        ]
    },
    "veichta/EMGRep": {
        "EMGRep/run_cv.sbatch": [
            "requirements.txt",
            "main.py"
        ]
    },
    "sbl-sdsc/df-parallel": {
        "df-parallel/solution.sh": [
            "environment.yml"
        ],
        "df-parallel/benchmark.sb": [
            "environment.yml"
        ],
        "df-parallel/problem.sh": [
            "environment.yml"
        ]
    },
    "Daria-cloud/Antibody-SARS-CoV-2-Molecular-Dynamics-setup-and-energy-estimation": {
        "Antibody-SARS-CoV-2-Molecular-Dynamics-setup-and-energy-estimation/run_on_cluster.slurm": [
            "equilibration.conf",
            "md.conf"
        ],
        "Antibody-SARS-CoV-2-Molecular-Dynamics-setup-and-energy-estimation/jobspec-cfg/md.conf": [
            "solvated_ions.psf"
        ],
        "Antibody-SARS-CoV-2-Molecular-Dynamics-setup-and-energy-estimation/jobspec-cfg/equilibration.conf": [
            "solvated_ions.psf"
        ]
    },
    "j-karls/P10-ExoskeletonTransferLearning": {
        "P10-ExoskeletonTransferLearning/slurmjob.sh": [
            "requirements.txt"
        ]
    },
    "alexrhowe/APOLLO": {
        "APOLLO/Apollo.run": [
            "Apollo.py",
            "examples/example.resolved.dat"
        ],
        "APOLLO/jobspec-cfg/Apollo.py": [
            "Apollo.py"
        ],
        "APOLLO/jobspec-cfg/examples/example.resolved.dat": [
            "examples/example.obs.dat"
        ]
    },
    "FAMILIAR-project/usampling-exp": {
        "usampling-exp/analysis/usampling-reprocess/KUS.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/analysis/usampling-reprocess/Unigen2.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/analysis/usampling-reprocess/Unigen3.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/analysis/usampling-reprocess/DBS.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/analysis/usampling-reprocess/SMARCH.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/analysis/usampling-reprocess/SPUR.sh": [
            "usampling-experiments.py"
        ],
        "usampling-exp/jobspec-cfg/usampling-experiments.py": [
            "./samplers/KUS.py",
            "./samplers/smarch_mp.py",
            "./samplers/distribution-aware/CommandLine.exe"
        ]
    },
    "sihanhuang/Tensorflow_tutorial": {
        "Tensorflow_tutorial/gpu.sh": [
            "Hello.py"
        ]
    },
    "dbirman/attfield2": {
        "attfield2/code/script/runs/210420-1000.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/210420-1028.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/fig5_sens_al_bhv.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/fig5_sna_rf.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/fig5_sna_lenc.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/fig5_sn4_rf.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ],
        "attfield2/code/script/runs/fig5_mg_lenc.sh": [
            "code/script/shrlk.bash_rc",
            "code/cornet/cornet/cornet_zr.py"
        ]
    },
    "btrantruong/Manipulating-Online-Marketplace-of-Ideas": {
        "Manipulating-Online-Marketplace-of-Ideas/sbatch/initnet.sh": [
            "workflow/rules/initnet.smk"
        ],
        "Manipulating-Online-Marketplace-of-Ideas/sbatch/strategies_shuffle.sh": [
            "workflow/rules/shuffle_network.smk"
        ],
        "Manipulating-Online-Marketplace-of-Ideas/sbatch/phigamma.sh": [
            "workflow/rules/phigamma.smk"
        ],
        "Manipulating-Online-Marketplace-of-Ideas/sbatch/strategies_gamma.sh": [
            "workflow/rules/strategies_gamma.smk"
        ]
    },
    "AlexThirty/BootSTOP_CFT": {
        "BootSTOP_CFT/activate-local.sh": [
            "run_cluster_ising2D_fix.py"
        ]
    },
    "pyf98/DPHuBERT": {
        "DPHuBERT/run.sh": [
            "distill.py",
            "prune.py",
            "final_distill.py",
            "save_final_ckpt.py"
        ]
    },
    "marksirvine/traffic-sign-detector": {
        "traffic-sign-detector/scripts/submit_job.sh": [
            "tsr.py"
        ]
    },
    "bsgarcia/SpatialEconomy": {
        "SpatialEconomy/merge_db.sh": [
            "merge_db.py"
        ]
    },
    "Tongyu-Yan/VIT-RAVQA": {
        "VIT-RAVQA/train_DPR.wilkes3": [
            "src/main.py"
        ],
        "VIT-RAVQA/prepare_static.wilkes3": [
            "src/main.py"
        ],
        "VIT-RAVQA/rag.wilkes3": [
            "src/main.py"
        ],
        "VIT-RAVQA/prepare_trainset_static.wilkes3": [
            "src/main.py"
        ]
    },
    "rajesh-lab/nurd-code-public": {
        "nurd-code-public/NURD_SCRIPTS/WB_EQUALIZED.sh": [
            "nurd_reweighting.py"
        ],
        "nurd-code-public/NURD_SCRIPTS/JOINT_FULL_RUN_GEN.sh": [
            "nurd_reweighting.py"
        ],
        "nurd-code-public/NURD_SCRIPTS/CMNIST_FULL_RUN_GEN.sh": [
            "nurd_reweighting.py"
        ],
        "nurd-code-public/NURD_SCRIPTS/JOINT_EVALUATE.sh": [
            "evaluate_model.py"
        ],
        "nurd-code-public/NURD_SCRIPTS/WATERBIRDS_FROM_CENTER.sh": [
            "nurd_reweighting.py"
        ],
        "nurd-code-public/NURD_SCRIPTS/WB_FULL_RUN.sh": [
            "nurd_reweighting.py"
        ]
    },
    "ssc-oscar/lookup": {
        "lookup/b2ob.slurm": [
            "lsort",
            "mapA.perl"
        ]
    },
    "DSC-SPIDAL/mlcommons-osmi": {
        "mlcommons-osmi/small-gregor.slurm": [
            "small-gregor.slurm"
        ],
        "mlcommons-osmi/jobspec-cfg/small-gregor.slurm": [
            "small-gregor.slurm"
        ]
    },
    "wenhao-gao/mol_opt": {
        "mol_opt/main/molpal/run_molpal.batch": [
            "run.py"
        ]
    },
    "qiuchenzhai/pmace_jax": {
        "pmace_jax/script.sh": [
            "script.sh"
        ],
        "pmace_jax/jobspec-cfg/script.sh": [
            "script.sh"
        ]
    },
    "gnanduru1/rad-attack": {
        "rad-attack/rad_training.slurm": [
            "env.sh",
            "training.py"
        ],
        "rad-attack/generate_rad_dataset.slurm": [
            "env.sh",
            "generate_rad_dataset.py"
        ],
        "rad-attack/jobspec-cfg/env.sh": [
            "requirements.txt"
        ]
    },
    "diaryw/freq_ucb": {
        "freq_ucb/MPIjob.sh": [
            "MPI.py"
        ]
    },
    "uhkniazi/BRC_SomaticMutations_PID_31": {
        "BRC_SomaticMutations_PID_31/rbatch.sh": [
            "08_shearwaterML.R"
        ],
        "BRC_SomaticMutations_PID_31/jobspec-cfg/08_shearwaterML.R": [
            "08_shearwaterML.R"
        ],
        "BRC_Somatic_Mutations_Analysis_Pipeline/jobspec-cfg/08_shearwaterML.R": [
            "08_shearwaterML.R"
        ]
    },
    "uhkniazi/BRC_Somatic_Mutations_Analysis_Pipeline": {
        "BRC_SomaticMutations_PID_31/rbatch.sh": [
            "08_shearwaterML.R"
        ],
        "BRC_SomaticMutations_PID_31/jobspec-cfg/08_shearwaterML.R": [
            "08_shearwaterML.R"
        ],
        "BRC_Somatic_Mutations_Analysis_Pipeline/jobspec-cfg/08_shearwaterML.R": [
            "08_shearwaterML.R"
        ]
    },
    "King-s-Knowledge-Graph-Lab/revont": {
        "revont/Run.sh": [
            "main-copy.py"
        ]
    },
    "RasmusNylander/guacamole": {
        "guacamole/tep.sh": [
            "train.py"
        ]
    },
    "chloechsu/combining-evolutionary-and-assay-labelled-data": {
        "combining-evolutionary-and-assay-labelled-data/scripts/evaluate_predictor.sh": [
            "src/evaluate.py"
        ]
    },
    "RulinShao/VL-Instruct": {
        "VL-Instruct/submit.sh": [
            "train_doremi.py"
        ]
    },
    "ORNL/ReSolve": {
        "ReSolve/buildsystem/spack/ascent/install.sh": [
            "buildsystem/load-spack.sh",
            "./buildsystem/configure-modules.sh"
        ],
        "ReSolve/buildsystem/spack/incline/install.sh": [
            "buildsystem/load-spack.sh",
            "./buildsystem/configure-modules.sh"
        ],
        "ReSolve/buildsystem/spack/crusher/install.sh": [
            "buildsystem/load-spack.sh",
            "./buildsystem/configure-modules.sh"
        ],
        "ReSolve/buildsystem/spack/deception/install.sh": [
            "buildsystem/load-spack.sh",
            "./buildsystem/configure-modules.sh"
        ]
    },
    "ORNL/TwoFold_DL": {
        "HydraGNN/job-frontier-preonly-nvme.sh": [
            "train.py"
        ]
    },
    "inspire-group/proxy-distributions": {
        "proxy-distributions/scripts/train.slurm": [
            "train.py"
        ]
    },
    "morawi/ClothDetect": {
        "ClothDetect/maskrcnn_run.job": [
            "mask_rcnn.py"
        ]
    },
    "chemron/Sun_GAN": {
        "Sun_GAN/Scripts/train_UV_GAN.sh": [
            "Training/train.py"
        ]
    },
    "HCYXAS/mmdetection-rocm": {
        "mmdetection-rocm/run_slurm.sh": [
            "tools/train.py",
            "configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py"
        ]
    },
    "goncamateus/agents": {
        "agents/ppo_job.sh": [
            "run_ppo.py"
        ],
        "agents/sac_job.sh": [
            "run_sac.py"
        ],
        "agents/sac_dylam_job.sh": [
            "run_sac_strat.py"
        ],
        "agents/hdddqn_job.sh": [
            "run_hdddqn.py"
        ]
    },
    "giorgioangel/myersoncoop": {
        "myersoncoop/coop_rn.sh": [
            "main.py"
        ],
        "myersoncoop/coop_ls.sh": [
            "main.py"
        ],
        "myersoncoop/coop_nn.sh": [
            "main.py"
        ],
        "myersoncoop/coop_lr.sh": [
            "main.py"
        ],
        "myersoncoop/coop_nl.sh": [
            "main.py"
        ],
        "myersoncoop/coop_sn.sh": [
            "main.py"
        ],
        "myersoncoop/coop_rl.sh": [
            "main.py"
        ]
    },
    "YJonmo/EndoMapNet": {
        "EndoMapNet/job_train.sh": [
            "test_simple.py",
            "assets/0000000000.png",
            "train.py",
            "evaluate.py"
        ],
        "EndoMapNet/jobspec-cfg/test_simple.py": [
            "LICENSE",
            "README.md"
        ],
        "EndoMapNet/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "EndoMapNet/jobspec-cfg/evaluate.py": [
            "LICENSE"
        ]
    },
    "xiaosanmeng/STOD-Net": {
        "STOD-Net/run_taxi.sh": [
            "main.py"
        ],
        "STOD-Net/run_bike.sh": [
            "main.py"
        ]
    },
    "ADevillers/SimCLR": {
        "SimCLR/run_simclr_cifar10.slurm": [
            "src/main.py"
        ],
        "SimCLR/eval_simclr_cifar10.slurm": [
            "src/eval.py"
        ],
        "SimCLR/run_simclr_imagenet.slurm": [
            "src/main.py"
        ],
        "SimCLR/eval_simclr_imagenet.slurm": [
            "src/eval.py"
        ]
    },
    "stanfordmlgroup/lca-code": {
        "lca-code/run_train.sh": [
            "train.py"
        ]
    },
    "Luca-DTU/FNO-Wake-fidelity-Enhancement": {
        "FNO-Wake-fidelity-Enhancement/jobscript_gpu.sh": [
            "main.py"
        ]
    },
    "whiteio/AmoebaNet-Evolver": {
        "AmoebaNet-Evolver/evol_job.sh": [
            "main.py"
        ],
        "AmoebaNet-Evolver/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "arsalanakhter/TOData": {
        "TOData/WIN_submit_jobs.sh": [
            "cluster_single_job.sh"
        ]
    },
    "Xiao215/LoRAniDiff": {
        "LoRAniDiff/oldcc.sh": [
            "train.py"
        ]
    },
    "RedOffset6/LebwohlLasher": {
        "LebwohlLasher/ll_numba_mpi_array.sh": [
            "LebwohlLasher_mpi_numba.py"
        ],
        "LebwohlLasher/ll_vector_array.sh": [
            "LebwohlLasher_vector.py"
        ],
        "LebwohlLasher/ll_mpi.sh": [
            "LebwohlLasher_mpi.py"
        ],
        "LebwohlLasher/jobspec-cfg/LebwohlLasher_vector.py": [
            "LebwohlLasher.py"
        ],
        "LebwohlLasher/jobspec-cfg/LebwohlLasher_mpi_numba.py": [
            "LebwohlLasher.py"
        ],
        "LebwohlLasher/jobspec-cfg/LebwohlLasher_mpi.py": [
            "LebwohlLasher.py"
        ]
    },
    "ryneches/kizuchi": {
        "kizuchi/config/pbs/submit1.sh": [
            "workflow/Snakefile"
        ],
        "kizuchi/config/pbs/submit2.sh": [
            "workflow/Snakefile2"
        ]
    },
    "rwexler/gcmc": {
        "gcmc/non_pack_submit.sh": [
            "bv.py",
            "el_list.txt",
            "io.py",
            "main.py",
            "mc.py",
            "structure.xsf"
        ],
        "gcmc/all_run.sh": [
            "bv.py",
            "el_list.txt",
            "io.py",
            "main.py",
            "mc.py",
            "structure.xsf"
        ]
    },
    "RobertHildebrand/RAVT_redistricting": {
        "RAVT_redistricting/slurm_plot.sh": [
            "plot_maps_helper.py"
        ]
    },
    "sharma-sourabh3435/visual-transformer": {
        "visual-transformer/run.sh": [
            "./cnn-cifar100.py"
        ]
    },
    "ashel65/LyricsGPT": {
        "LyricsGPT/train.pbs": [
            "run_clm.py"
        ]
    },
    "pinellolab/DNA-Diffusion": {
        "DNA-Diffusion/environments/cluster/dnadiffusion_run.sh": [
            "train.py"
        ]
    },
    "NCI-CCR-POB/fruitsc": {
        "fruitsc/run_snakemake.sh": [
            "config/multiqc_config.yaml",
            "config/cluster.yaml"
        ]
    },
    "NBISweden/workshop-scRNAseq": {
        "workshop-scRNAseq/jobspec-cfg/_quarto.yml": [
            "apa.csl",
            "assets/custom.lua"
        ],
        "workshop-scRNAseq/jobspec-cfg/home_info.qmd": [
            "_quarto.yml"
        ],
        "workshop-scRNAseq/jobspec-cfg/scripts/render-singularity.sh": [
            "./scripts/render-singularity.sh",
            "_quarto.yml",
            "labs/seurat/seurat_01_qc.qmd",
            "labs/seurat/seurat_02_dimred.qmd",
            "labs/seurat/seurat_03_integration.qmd",
            "labs/seurat/seurat_04_clustering.qmd",
            "labs/seurat/seurat_05_dge.qmd",
            "labs/seurat/seurat_06_celltyping.qmd",
            "labs/seurat/seurat_07_trajectory.qmd",
            "labs/seurat/seurat_08_spatial.qmd",
            "labs/bioc/bioc_01_qc.qmd",
            "labs/bioc/bioc_02_dimred.qmd",
            "labs/bioc/bioc_03_integration.qmd",
            "labs/bioc/bioc_04_clustering.qmd",
            "labs/bioc/bioc_05_dge.qmd",
            "labs/bioc/bioc_06_celltyping.qmd",
            "labs/bioc/bioc_08_spatial.qmd",
            "labs/scanpy/scanpy_01_qc.qmd",
            "labs/scanpy/scanpy_02_dimred.qmd",
            "labs/scanpy/scanpy_03_integration.qmd",
            "labs/scanpy/scanpy_04_clustering.qmd",
            "labs/scanpy/scanpy_05_dge.qmd",
            "labs/scanpy/scanpy_06_celltyping.qmd",
            "labs/scanpy/scanpy_07_trajectory.qmd",
            "labs/scanpy/scanpy_08_spatial.qmd",
            "lectures/dge/index.qmd",
            "lectures/gsa/index.qmd",
            "index.qmd",
            "home_contents.qmd",
            "home_info.qmd",
            "home_precourse.qmd",
            "home_schedule.qmd",
            "home_syllabus.qmd",
            "other/uppmax.qmd",
            "other/docker.qmd",
            "other/containers.qmd",
            "other/faq.qmd",
            "other/data.qmd",
            "404.md",
            "labs/index.qmd",
            "./scripts/compile-singularity.sh"
        ],
        "workshop-scRNAseq/jobspec-cfg/scripts/compile-singularity.sh": [
            "./scripts/compile.sh",
            "_quarto.yml"
        ],
        "workshop-scRNAseq/scripts/render-singularity.sh": [
            "./scripts/render-singularity.sh",
            "_quarto.yml",
            "labs/seurat/seurat_01_qc.qmd",
            "labs/seurat/seurat_02_dimred.qmd",
            "labs/seurat/seurat_03_integration.qmd",
            "labs/seurat/seurat_04_clustering.qmd",
            "labs/seurat/seurat_05_dge.qmd",
            "labs/seurat/seurat_06_celltyping.qmd",
            "labs/seurat/seurat_07_trajectory.qmd",
            "labs/seurat/seurat_08_spatial.qmd",
            "labs/bioc/bioc_01_qc.qmd",
            "labs/bioc/bioc_02_dimred.qmd",
            "labs/bioc/bioc_03_integration.qmd",
            "labs/bioc/bioc_04_clustering.qmd",
            "labs/bioc/bioc_05_dge.qmd",
            "labs/bioc/bioc_06_celltyping.qmd",
            "labs/bioc/bioc_08_spatial.qmd",
            "labs/scanpy/scanpy_01_qc.qmd",
            "labs/scanpy/scanpy_02_dimred.qmd",
            "labs/scanpy/scanpy_03_integration.qmd",
            "labs/scanpy/scanpy_04_clustering.qmd",
            "labs/scanpy/scanpy_05_dge.qmd",
            "labs/scanpy/scanpy_06_celltyping.qmd",
            "labs/scanpy/scanpy_07_trajectory.qmd",
            "labs/scanpy/scanpy_08_spatial.qmd",
            "lectures/dge/index.qmd",
            "lectures/gsa/index.qmd",
            "index.qmd",
            "home_contents.qmd",
            "home_info.qmd",
            "home_precourse.qmd",
            "home_schedule.qmd",
            "home_syllabus.qmd",
            "other/uppmax.qmd",
            "other/docker.qmd",
            "other/containers.qmd",
            "other/faq.qmd",
            "other/data.qmd",
            "404.md",
            "labs/index.qmd",
            "./scripts/compile-singularity.sh"
        ]
    },
    "ethho/DeepLabCut": {
        "DeepLabCut/jobspec-cfg/scripts/frontera.jupytersing": [
            "scripts/frontera.jupytersing"
        ],
        "DeepLabCut/jobspec-cfg/scripts/mav2.jupytersing": [
            "scripts/mav2.jupytersing"
        ],
        "DeepLabCut/scripts/frontera.jupytersing": [
            "scripts/frontera.jupytersing"
        ],
        "DeepLabCut/scripts/mav2.jupytersing": [
            "scripts/mav2.jupytersing"
        ]
    },
    "ethho/tacc-sing-jhub": {
        "tacc-sing-jhub/jobspec-cfg/scripts/jupyter-mav2.sh": [
            "scripts/jupyter-mav2.sh"
        ],
        "tacc-sing-jhub/jobspec-cfg/scripts/jupyter-frontera.sh": [
            "scripts/jupyter-frontera.sh"
        ],
        "tacc-sing-jhub/scripts/jupyter-mav2.sh": [
            "scripts/jupyter-mav2.sh"
        ],
        "tacc-sing-jhub/scripts/jupyter-frontera.sh": [
            "scripts/jupyter-frontera.sh"
        ]
    },
    "lucasliunju/bert": {
        "bert/run.sub": [
            "mounts.txt"
        ]
    },
    "StanfordVL/mini_behavior": {
        "mini_behavior/scripts/train_rl_agent.sh": [
            "train_rl_agent.py"
        ]
    },
    "dose78/CARMA": {
        "CARMA/job-hopper.pbs": [
            "./sweep.sh"
        ],
        "CARMA/jobspec-cfg/sweep.sh": [
            "data_gatherer_single.c",
            "carma_single.c",
            "mkl_single.c",
            "data_gatherer_double.c",
            "carma_double.c",
            "mkl_double.c",
            "collator.py"
        ]
    },
    "AnnikaStein/AI_Safety_2021": {
        "AI_Safety_2021/compare_weighted.sh": [
            "compare_weighted.py"
        ],
        "AI_Safety_2021/auc_compare_raw.sh": [
            "auc_compare_raw.py"
        ],
        "AI_Safety_2021/eval_hist_roc.sh": [
            "eval_hist_roc.py"
        ],
        "AI_Safety_2021/jobspec-cfg/auc_compare_raw.py": [
            "dataset_info.ipynb"
        ],
        "AI_Safety_2021/jobspec-cfg/compare_weighted.py": [
            "dataset_info.ipynb"
        ]
    },
    "mquazi/cricket_2023": {
        "cricket_2023/run10k.sh": [
            "./batch_run.sh"
        ]
    },
    "fginter/transformer-mlabel": {
        "transformer-mlabel/ftune.sh": [
            "train.py"
        ]
    },
    "EnzeXu/ATN_Beta": {
        "ATN_Beta/jobs/eta1_alpha%3D0.0001_h_dim%3D9_keep_prob%3D0.6.slurm": [
            "run.py"
        ],
        "ATN_Beta/jobs/eta1_alpha%3D0.0001_h_dim%3D9_keep_prob%3D0.9.slurm": [
            "run.py"
        ]
    },
    "hdr-bgnn/Minnow_Segmented_Traits": {
        "Minnow_Segmented_Traits/debug-workflow.sh": [
            "run-workflow.sh"
        ],
        "Minnow_Segmented_Traits/jobspec-cfg/run-workflow.sh": [
            "run-workflow.sh"
        ]
    },
    "geoschem/integrated_methane_inversion": {
        "integrated_methane_inversion/run_imi.sh": [
            "src/utilities/common.sh",
            "src/components/setup_component/setup.sh",
            "src/components/template_component/template.sh",
            "src/components/statevector_component/statevector.sh",
            "src/components/preview_component/preview.sh",
            "src/components/spinup_component/spinup.sh",
            "src/components/jacobian_component/jacobian.sh",
            "src/components/inversion_component/inversion.sh",
            "src/components/posterior_component/posterior.sh",
            "config.yml",
            "src/utilities/parse_yaml.sh",
            "src/utilities/sanitize_input_yaml.py",
            "src/utilities/download_TROPOMI.py",
            "src/utilities/test_TROPOMI_dir.py"
        ],
        "integrated_methane_inversion/jobspec-cfg/run_imi.sh": [
            "src/utilities/common.sh",
            "src/components/setup_component/setup.sh",
            "src/components/template_component/template.sh",
            "src/components/statevector_component/statevector.sh",
            "src/components/preview_component/preview.sh",
            "src/components/spinup_component/spinup.sh",
            "src/components/jacobian_component/jacobian.sh",
            "src/components/inversion_component/inversion.sh",
            "src/components/posterior_component/posterior.sh",
            "config.yml",
            "src/utilities/parse_yaml.sh",
            "src/utilities/sanitize_input_yaml.py",
            "src/utilities/download_TROPOMI.py",
            "src/utilities/test_TROPOMI_dir.py"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/components/setup_component/setup.sh": [
            "src/utilities/download_bc.py"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/components/template_component/template.sh": [
            "config.yml"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/utilities/sanitize_input_yaml.py": [
            "config.yml"
        ],
        "integrated_methane_inversion/src/inversion_scripts/run_inversion.sh": [
            "config.yml",
            "run_imi.sh"
        ]
    },
    "surajK610/simulated-annealing": {
        "simulated-annealing/jobspec-cfg/outputs/with_gpu.out": [
            "run_on_gpu.sh",
            "src/qubo/qubo.cpp",
            "src/traffic/traffic.cpp",
            "src/main.cu",
            "src/schwefel/schwefel_cuda.cu"
        ],
        "simulated-annealing/scripts/run_cuda.sh": [
            "outputs/with_gpu.out",
            "outputs/with_gpu.err",
            "./src/schwefel/schwefel_cuda.cu"
        ]
    },
    "Pereira-Luc/LSTM-AI-Stocks": {
        "LSTM-AI-Stocks/batch.sh": [
            "main.py",
            "batch.sh"
        ],
        "LSTM-AI-Stocks/jobspec-cfg/batch.sh": [
            "main.py",
            "batch.sh"
        ]
    },
    "flatironinstitute/rockstar-rusty-demo": {
        "rockstar-rusty-demo/job.sbatch": [
            "rockstar.template.cfg"
        ],
        "rockstar-rusty-demo/jobspec-cfg/rockstar.template.cfg": [
            "job.sbatch"
        ]
    },
    "charles-ison/deep_learning_final_project": {
        "deep_learning_final_project/job.sh": [
            "train_model.py"
        ]
    },
    "MurathanKurfali/ner-tagger": {
        "ner-tagger/alvis.sh": [
            "./run.sh"
        ],
        "ner-tagger/jobspec-cfg/run.sh": [
            "scripts/run_ner.py"
        ]
    },
    "YijieYin/interpret_connectome": {
        "interpret_connectome/run_act_max_hpc.sh": [
            "activation_maximisation.py"
        ]
    },
    "IanWangg/Multi-Context-RL": {
        "Multi-Context-RL/jobs.sh": [
            "test14.py"
        ]
    },
    "JohnUiterwyk/GeneticVision": {
        "GeneticVision/pbs/pbs_compile.sh": [
            "./compile.sh"
        ]
    },
    "Wayne-Mai/EgoLoc": {
        "EgoLoc/scripts/run_colmap.sh": [
            "colmap_utils/get_camera_poses_colmap.py"
        ]
    },
    "FNL-MoCha/nextgenseq_pipeline": {
        "nextgenseq_pipeline/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "zxhuang97/planet": {
        "planet/dual2.sh": [
            "--num_runs"
        ]
    },
    "SebastianBitsch/tennis-court-tracker": {
        "tennis-court-tracker/train_model.sh": [
            "tennis_court_tracker/train_model.py"
        ],
        "SRGAN-ST/jobspec-cfg/main.py": [
            "README.md"
        ]
    },
    "SebastianBitsch/2d-to-3d-transfer-learning": {
        "tennis-court-tracker/jobspec-cfg/README.md": [
            "Makefile",
            "README.md",
            "pyproject.toml",
            "requirements.txt",
            "LICENSE"
        ],
        "2d-to-3d-transfer-learning/train.sh": [
            "train.sh",
            "tl_2d3d/train_model.py"
        ],
        "2d-to-3d-transfer-learning/jobspec-cfg/train.sh": [
            "train.sh",
            "tl_2d3d/train_model.py"
        ],
        "SRGAN-ST/jobspec-cfg/main.py": [
            "README.md"
        ]
    },
    "SebastianBitsch/SRGAN-ST": {
        "tennis-court-tracker/jobspec-cfg/README.md": [
            "README.md",
            "requirements.txt",
            "model.py"
        ],
        "2d-to-3d-transfer-learning/train.sh": [
            "train.sh"
        ],
        "2d-to-3d-transfer-learning/jobspec-cfg/train.sh": [
            "train.sh"
        ],
        "2d-to-3d-transfer-learning/jobspec-cfg/README.md": [
            "README.md",
            "requirements.txt",
            "model.py"
        ],
        "SRGAN-ST/train.sh": [
            "main.py"
        ],
        "SRGAN-ST/jobspec-cfg/train.sh": [
            "main.py"
        ],
        "SRGAN-ST/jobspec-cfg/main.py": [
            "warmup.py",
            "README.md"
        ]
    },
    "ALBINPRAVEEN/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "alsmeirelles/DADA": {
        "DADA/batch_jobs/vgg16.sh": [
            "main.py"
        ]
    },
    "AlexanderFengler/LAN_scripts": {
        "LAN_scripts/sbatch_parameter_recovery.sh": [
            "scripts/run_hddm_model.py"
        ],
        "LAN_scripts/sbatch_make_parameter_recovery_configs.sh": [
            "scripts/make_param_recov_configs.py"
        ],
        "LAN_scripts/sbatch_numpyro.sh": [
            "sbatch_network_training.sh"
        ],
        "LAN_scripts/sbatch_postprocess_param_recov_data.sh": [
            "scripts/postprocess_param_recov.py"
        ],
        "LAN_scripts/sbatch_network_training.sh": [
            "sbatch_network_training.sh",
            "scripts/jax_training_script.py",
            "scripts/torch_training_script.py"
        ],
        "LAN_scripts/jobspec-cfg/sbatch_network_training.sh": [
            "sbatch_network_training.sh",
            "scripts/jax_training_script.py",
            "scripts/torch_training_script.py"
        ]
    },
    "AlexanderFengler/hierarchical_decision_making": {
        "hierarchical_decision_making/sbatch_fit_hddm.sh": [
            "fit_hddm.py",
            "fit_hddm_param_recov_single_subj.py",
            "fit_hddm_param_recov_chong.py"
        ]
    },
    "AlexanderFengler/LAN_varinf": {
        "LAN_scripts/sbatch_numpyro.sh": [
            "run_inference_numpyro.py"
        ],
        "LAN_varinf/sbatch_pyro.sh": [
            "run_inference_pyro.py"
        ],
        "LAN_varinf/sbatch_hddm.sh": [
            "run_inference_hddm.py"
        ],
        "LAN_varinf/sbatch_numpyro.sh": [
            "run_inference_numpyro.py"
        ]
    },
    "AlexanderFengler/Marijuana_Legalization_Corpus_Study": {
        "Marijuana_Legalization_Corpus_Study/sbatch_run_gru.sh": [
            "gru_language_model.py"
        ]
    },
    "NuTufts/run_bdnmc_jobs": {
        "run_bdnmc_jobs/submit.sh": [
            "run_job.sh"
        ],
        "run_bdnmc_jobs/jobspec-cfg/run_job.sh": [
            "generate_config_file.py"
        ],
        "cenns750_sterile_ana/submit.sh": [
            "run_job.sh"
        ]
    },
    "NuTufts/cenns750_sterile_ana": {
        "run_bdnmc_jobs/submit.sh": [
            "run_job.sh"
        ],
        "cenns750_sterile_ana/submit.sh": [
            "run_job.sh"
        ]
    },
    "RodolpheThienard/sudoku-solver": {
        "sudoku-solver/batch/find_seed.sh": [
            "data/empty-6x6.data"
        ]
    },
    "Szimhead/deep-driving": {
        "deep-driving/test_run.sh": [
            "test.py"
        ]
    },
    "j23414/blast_nf": {
        "blast_nf/submit_nf.slurm": [
            "main.nf"
        ]
    },
    "j23414/atlas_gatk4": {
        "atlas_gatk4/submit.slurm": [
            "04_GATK.nf"
        ]
    },
    "trivnguyen/sbi_stream": {
        "sbi_stream/slurm/submit_train.sh": [
            "train.py"
        ]
    },
    "nurit-eliash/varroa-pedigree-study": {
        "varroa-pedigree-study/snakemake.slurm": [
            "cluster.json"
        ]
    },
    "natcap/gcm-downscaling": {
        "gcm-downscaling/scripts/preprocessing/02_mswep_rechunk_to_zarr.sh": [
            "scripts/preprocessing/02_mswep_rechunk_to_zarr.py"
        ]
    },
    "hem1999/BERT-for-sentiment-analysis-from-scratch": {
        "BERT-for-sentiment-analysis-from-scratch/sst.slurm": [
            "sst-dev-output.finetune.txt",
            "sst-test-output.finetune.txt",
            "sst-dev-output.pretrain.txt",
            "sst-test-output.pretrain.txt"
        ]
    },
    "PalEON-Project/composition-eastern-moretaxa": {
        "composition-eastern-moretaxa/savio_runs/run_all_savio.sh": [
            "config",
            "./fit_eastern.R"
        ]
    },
    "TianjianNi/Optimizing-iFormer": {
        "Optimizing-iFormer/sbatch/DP.sh": [
            "main_DP.py"
        ],
        "Optimizing-iFormer/sbatch/PIPE.sh": [
            "main_PIPE.py"
        ]
    },
    "flowersteam/rl_stats": {
        "rl_stats/run_expe.sh": [
            "run_experiment.py"
        ],
        "rl_stats/jobspec-cfg/run_experiment.py": [
            "run_experiment.py",
            "plot_false_positive.py",
            "table_from_results.py"
        ]
    },
    "flowersteam/Grounding_LLMs_with_online_RL": {
        "Grounding_LLMs_with_online_RL/experiments/campaign/Mixed_training/Symbolic-PPO.slurm": [
            "experiments/slurm/train_symbolic_ppo.sh"
        ]
    },
    "ounissimehdi/WSI-OPT-registration": {
        "WSI-OPT-registration/stage1.sh": [
            "para_reg_v3.py"
        ],
        "WSI-OPT-registration/stage2.sh": [
            "reg_large.py"
        ]
    },
    "fmu2/nlos3d": {
        "nlos3d/scripts/train_joint.sh": [
            "setup.py",
            "train_joint.py"
        ],
        "nlos3d/scripts/rsd.sh": [
            "setup.py",
            "rsd.py"
        ]
    },
    "jscohen4/orca": {
        "orca/job-slurm-cc.sh": [
            "main-parallel-cc.py"
        ]
    },
    "dpfried/parsing_as_language_modeling_search": {
        "parsing_as_language_modeling_search/rescore_silver.sh": [
            "rescore.py"
        ]
    },
    "LinjianMa/t5_11": {
        "t5_11/t5.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_elastic.py"
        ]
    },
    "LinjianMa/transformer_framework": {
        "transformer_framework/trainer.slurm": [
            "./main_training.py"
        ]
    },
    "kirjner/GGS-private": {
        "GGS-private/bash/generate.sh": [
            "ggs/GWG.py"
        ]
    },
    "rishabhxpandey/cs490dsc": {
        "cs490dsc/setup_env.sh": [
            "job.sh"
        ],
        "cs490dsc/jobspec-cfg/job.sh": [
            "job.sh"
        ]
    },
    "ipc-sim/IPC": {
        "IPC/build.sh": [
            "build.sh"
        ],
        "IPC/run.sh": [
            "run.sh"
        ],
        "IPC/jobspec-cfg/build.sh": [
            "build.sh"
        ],
        "IPC/jobspec-cfg/run.sh": [
            "run.sh"
        ]
    },
    "diff7/QuanToaster": {
        "QuanToaster/exp_scripts/old/exp9.sh": [
            "batch_exp.py"
        ],
        "QuanToaster/jobspec-cfg/batch_exp.py": [
            "batch_exp.py"
        ]
    },
    "EcoJulia/EcoSISTEM.jl": {
        "EcoSISTEM.jl/examples/HPC/demo-MPI-nodes.bash": [
            "examples/HPC/MPIRun.jl"
        ],
        "EcoSISTEM.jl/examples/HPC/demo-MPI-threads.bash": [
            "examples/HPC/MPIRun.jl"
        ],
        "EcoSISTEM.jl/examples/HPC/demo-threads.bash": [
            "examples/Africa_run.jl"
        ]
    },
    "kunal-kapur/cs587project": {
        "cs587project/job.sub": [
            "job.sub",
            "avazu_train.py"
        ],
        "cs587project/jobspec-cfg/job.sub": [
            "job.sub",
            "avazu_train.py"
        ]
    },
    "Goader/ukr-lm": {
        "ukr-lm/slurm/run-lm.sh": [
            "main-ml.py"
        ]
    },
    "PhuntshoPhuntsho/GEDI-BDL": {
        "GEDI-BDL/cluster/job_array_regression_crossval_ensemble.sh": [
            "torch_code/train.py"
        ]
    },
    "Wuyoufei/ParticleFlowNetwork_DDP": {
        "ParticleFlowNetwork_DDP/run_GPU.sh": [
            "script_GPUonly/my_train_DDP.py"
        ]
    },
    "smnbl/Baysor-Vizgen": {
        "Baysor-Vizgen/run.pbs": [
            "./baysor",
            "./merfish.toml"
        ],
        "Baysor-Vizgen/run_bigger_radius.pbs": [
            "./baysor",
            "./merfish.toml"
        ]
    },
    "laetitialp/ptatin-gene": {
        "ptatin-gene/utils/batch-system-examples/dora_mfsinker_avx.slurm": [
            "src/models/viscous_sinker/examples/sinker-mfscaling.opts"
        ]
    },
    "Quentin-Anthony/BERT-PyTorch": {
        "BERT-PyTorch/run.sh": [
            "utils/build_vocab.py"
        ],
        "BERT-PyTorch/scripts/run_pretraining.sbatch": [
            "run_pretraining.py"
        ],
        "BERT-PyTorch/scripts/run_pretraining.cobalt": [
            "run_pretraining.py"
        ]
    },
    "gradonion/ATACseq_pipeline": {
        "ATACseq_pipeline/job.sbatch": [
            "config.yaml",
            "Submit_snakemake.sh"
        ],
        "ATACseq_pipeline/jobspec-cfg/Submit_snakemake.sh": [
            "cluster.json"
        ]
    },
    "gp-1108/mr_white_game": {
        "mr_white_game/training_multi_gpu.slurm": [
            "model_training/main_multi_gpu.py"
        ]
    },
    "AminAhantab/nets-1": {
        "nets-1/jobs/lenet.sh": [
            "imp_vs_nets.py"
        ]
    },
    "zhanglab/ReadsClassification": {
        "ReadsClassification/createFiles.sh": [
            "./createFiles.sh",
            "genomeSize.py"
        ],
        "ReadsClassification/jobspec-cfg/createFiles.sh": [
            "./createFiles.sh",
            "genomeSize.py"
        ]
    },
    "ohsu-comp-bio/synthesis": {
        "synthesis/HLVS.sh": [
            "HLVS.sh",
            "HLVS.py"
        ],
        "synthesis/jobspec-cfg/HLVS.sh": [
            "HLVS.sh",
            "HLVS.py"
        ]
    },
    "draskot/Vini": {
        "Vini/MD_run.mpi": [
            "npt.mdp",
            "md.mdp"
        ]
    },
    "DSochirca/codegpt-on-intel-extension-for-transformers": {
        "codegpt-on-intel-extension-for-transformers/sbatch.sh": [
            "environment.yml"
        ]
    },
    "joausaga/impact-classifier": {
        "impact-classifier/train_gb.cmd": [
            "train.py"
        ],
        "impact-classifier/train_lr.cmd": [
            "train.py"
        ],
        "impact-classifier/train_models.cmd": [
            "train.py"
        ]
    },
    "2018-BGMP/demultiplexing-MaxHills": {
        "demultiplexing-MaxHills/demulti.sh": [
            "demulti.py"
        ]
    },
    "2018-BGMP/demultiplexing-h-klein": {
        "demultiplexing-h-klein/index_1.srun": [
            "mean_per_base.py"
        ]
    },
    "2018-BGMP/demultiplexing-Psilopsych": {
        "demultiplexing-Psilopsych/BashScript.sh": [
            "posStatsN.py",
            "statsR3.txt"
        ]
    },
    "Cmell/ImplicitMeasureReliability": {
        "ImplicitMeasureReliability/rxxArray.sh": [
            "rxx031mpi.R"
        ]
    },
    "VLQuant/PTQ4CLIP": {
        "PTQ4CLIP/zerocap/mscoco_zerocap.sh": [
            "run.py"
        ]
    },
    "lsqshr/Neuveal": {
        "Neuveal/train.pbs": [
            "train.pbs",
            "cnn3d.lua"
        ],
        "Neuveal/jobspec-cfg/train.pbs": [
            "train.pbs",
            "cnn3d.lua"
        ]
    },
    "violet-zct/pytorch_NMT": {
        "pytorch_NMT/run_rl_comb.job": [
            "nmt.py",
            "./en-de/train.en-de.low.filt.de",
            "./en-de/train.en-de.low.filt.en",
            "./en-de/valid.en-de.low.de",
            "./en-de/valid.en-de.low.en",
            "./en-de/test.en-de.low.de",
            "./en-de/test.en-de.low.en"
        ],
        "pytorch_NMT/run_baseline.job": [
            "nmt.py",
            "./en-de/train.en-de.low.filt.de",
            "./en-de/train.en-de.low.filt.en",
            "./en-de/valid.en-de.low.de",
            "./en-de/valid.en-de.low.en",
            "./en-de/test.en-de.low.de",
            "./en-de/test.en-de.low.en"
        ],
        "pytorch_NMT/run_rl_bleu.job": [
            "nmt.py",
            "./en-de/train.en-de.low.filt.de",
            "./en-de/train.en-de.low.filt.en",
            "./en-de/valid.en-de.low.de",
            "./en-de/valid.en-de.low.en",
            "./en-de/test.en-de.low.de",
            "./en-de/test.en-de.low.en"
        ],
        "pytorch_NMT/run_rl_f1.job": [
            "nmt.py",
            "./en-de/train.en-de.low.filt.de",
            "./en-de/train.en-de.low.filt.en",
            "./en-de/valid.en-de.low.de",
            "./en-de/valid.en-de.low.en",
            "./en-de/test.en-de.low.de",
            "./en-de/test.en-de.low.en"
        ]
    },
    "violet-zct/fairseq-vqvae-text": {
        "fairseq-vqvae-text/pretrain_scripts/train_prior_v5.sh": [
            "train.py"
        ],
        "fairseq-vqvae-text/pretrain_scripts/train_prior.sh": [
            "train.py"
        ],
        "fairseq-vqvae-text/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "fairseq-vqvae-text/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/train.py": [
            "LICENSE",
            "fairseq_cli/train.py"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ],
        "fairseq-dro-mnmt/exps/2_erm.sh": [
            "train.py",
            "fairseq_cli/generate.py"
        ]
    },
    "violet-zct/swarm-distillation-zero-shot": {
        "fairseq-vqvae-text/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "fairseq-vqvae-text/jobspec-cfg/fairseq_cli/train.py": [
            "LICENSE"
        ],
        "fairseq-vqvae-text/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ],
        "swarm-distillation-zero-shot/exps_ttt/run_deepspeed.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py",
            "deepspeed_configs/ds_config_zero2.json"
        ],
        "swarm-distillation-zero-shot/exps_ttt/final_3B.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py"
        ],
        "swarm-distillation-zero-shot/exps_ttt/run_jh.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py",
            "deepspeed_configs/ds_config_zero2.json"
        ],
        "swarm-distillation-zero-shot/exps_ttt/run_3B.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py",
            "deepspeed_configs/ds_config_zero2.json"
        ],
        "swarm-distillation-zero-shot/exps_ttt/run.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py"
        ],
        "swarm-distillation-zero-shot/exps_ttt/t0_ds.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py",
            "deepspeed_configs/ds_config_zero2.json"
        ],
        "swarm-distillation-zero-shot/exps_t0/single_gpu.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py"
        ],
        "swarm-distillation-zero-shot/exps_t0/eval.sh": [
            "examples/pytorch/t0-zero-shot/run_t0.py"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ]
    },
    "violet-zct/fairseq-dro-mnmt": {
        "fairseq-vqvae-text/pretrain_scripts/train_prior_v5.sh": [
            "train.py"
        ],
        "fairseq-vqvae-text/pretrain_scripts/train_prior.sh": [
            "train.py"
        ],
        "fairseq-vqvae-text/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "fairseq-vqvae-text/jobspec-cfg/fairseq_cli/train.py": [
            "LICENSE"
        ],
        "fairseq-vqvae-text/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/train.py": [
            "LICENSE",
            "fairseq_cli/train.py"
        ],
        "fairseq-dro-mnmt/jobspec-cfg/fairseq_cli/generate.py": [
            "LICENSE"
        ],
        "fairseq-dro-mnmt/exps/2_erm.sh": [
            "train.py",
            "fairseq_cli/generate.py"
        ]
    },
    "sawravchy/Open3D-ML": {
        "Open3D-ML/scripts/train_scripts/randlanet_kitti.sh": [
            "scripts/run_pipeline.py",
            "ml3d/configs/randlanet_semantickitti.yml"
        ],
        "Open3D-ML/scripts/train_scripts/kpconv_toronto.sh": [
            "scripts/run_pipeline.py",
            "ml3d/configs/kpconv_toronto3d.yml"
        ],
        "Open3D-ML/scripts/train_scripts/randlanet_s3dis.sh": [
            "scripts/run_pipeline.py",
            "ml3d/configs/randlanet_s3dis.yml"
        ]
    },
    "huu4ontocord/rio": {
        "rio/vi_oscal.slurm": [
            "process.py"
        ]
    },
    "neil2001/apma2822B_final_project_vignesh_neil": {
        "apma2822B_final_project_vignesh_neil/cuda.sh": [
            "with_gpu.out",
            "with_gpu.err",
            "src/main.cu",
            "./cuda_program",
            "./a.out",
            "./ppmtojpg.py"
        ],
        "apma2822B_final_project_vignesh_neil/jobspec-cfg/with_gpu.out": [
            "cuda.sh"
        ]
    },
    "norlab-ulaval/mask_bev": {
        "mask_bev/slurm_train.sh": [
            "train_mask_bev.py"
        ],
        "mask_bev/scripts/slurm_generate_kitti_samples.sh": [
            "scripts/generate_kitti_object_sampler.py"
        ],
        "mask_bev/scripts/slurm_generate_masks.sh": [
            "scripts/generate_semantic_kitti_mask_cache.py"
        ]
    },
    "Doofenshmirtz97/augmix": {
        "augmix/run_job.slurm": [
            "cifar.py"
        ]
    },
    "ImperialCollegeLondon/covid19model": {
        "ReCoDE_rnaseq_pipeline/nextflow_job.pbs": [
            "environment.yml"
        ]
    },
    "ImperialCollegeLondon/recode-perceptions": {
        "ReCoDE_rnaseq_pipeline/nextflow_job.pbs": [
            "environment.yml"
        ]
    },
    "ImperialCollegeLondon/ReCoDE_rnaseq_pipeline": {
        "ReCoDE_rnaseq_pipeline/nextflow_job.pbs": [
            "environment.yml",
            "main.nf"
        ]
    },
    "ImperialCollegeLondon/rcs-pacemakers": {
        "ReCoDE_rnaseq_pipeline/nextflow_job.pbs": [
            "environment.yml"
        ],
        "rcs-pacemakers/pacemakers.pbs.sh": [
            "pacemakers.ipynb"
        ]
    },
    "CCBR/CCBR_SnakemakeTemplate": {
        "CCBR_tobias/run_tobias.bash": [
            "run"
        ]
    },
    "CCBR/CRISPRSeq_Screens": {
        "CCBR_tobias/run_tobias.bash": [
            "run"
        ]
    },
    "CCBR/CCBR_circRNA_AmpliconSeq": {
        "CCBR_tobias/run_tobias.bash": [
            "config/cluster.json"
        ]
    },
    "CCBR/ASCENT": {
        "CCBR_tobias/run_tobias.bash": [
            "run"
        ]
    },
    "CCBR/CCBR_tobias": {
        "CCBR_tobias/run_tobias.bash": [
            "config/uropa_base_config.yaml",
            "config/cluster.json"
        ]
    },
    "gdlg/ncc-tensorflow-example": {
        "ncc-tensorflow-example/example.slurm": [
            "example.py"
        ]
    },
    "6hris/geostat-dcgan": {
        "geostat-dcgan/script.sh": [
            "dcgan.py"
        ]
    },
    "lupoglaz/OpenFold2": {
        "OpenFold2/train.sh": [
            "training.py"
        ],
        "OpenFold2/convert_rosetta_data.sh": [
            "convert_rosetta_data.py"
        ]
    },
    "arjunsbalaji/oct": {
        "oct/caps_012.sh": [
            "pawsey/caps_012.py"
        ],
        "oct/caps_0.sh": [
            "pawsey/caps_0.py"
        ],
        "oct/caps.sh": [
            "pawsey/caps.py"
        ]
    },
    "jinhanzhang/FoV": {
        "DL_MiniProject_S24/slurm_script.s": [
            "main.py"
        ],
        "Neuro_Reconstruction/mind-vis/slurm_script.s": [
            "main.py"
        ]
    },
    "jinhanzhang/DL_MiniProject_S24": {
        "DL_MiniProject_S24/slurm_script.s": [
            "main.py"
        ],
        "Neuro_Reconstruction/mind-vis/slurm_script.s": [
            "main.py"
        ]
    },
    "eXascaleInfolab/TaxoComplete": {
        "TaxoComplete/scripts/script-cs.sh": [
            "./src/train.py",
            "./config_files/cs/config_clst20_s47.json",
            "./config_files/cs/config_clst20_s48.json",
            "./config_files/cs/config_clst20_s49.json",
            "./config_files/cs/config_clst20_s50.json",
            "./config_files/cs/config_clst20_s51.json"
        ],
        "TaxoComplete/scripts/script-psy-evaluate.sh": [
            "./src/evaluate.py",
            "./config_files_evaluate/psy/config_clst20_s47.json",
            "./config_files_evaluate/psy/config_clst20_s48.json",
            "./config_files_evaluate/psy/config_clst20_s49.json",
            "./src/train.py",
            "./config_files/psy/config_clst20_s47.json",
            "./config_files/psy/config_clst20_s48.json",
            "./config_files/psy/config_clst20_s49.json"
        ]
    },
    "samiwilf/dlrm_from_shz0116": {
        "dlrm_from_shz0116/job.all.sh": [
            "dlrm_s_pytorch.py"
        ],
        "dlrm_from_shz0116/jobspec-cfg/dlrm_s_pytorch.py": [
            "LICENSE"
        ]
    },
    "bharagvrathod/fmeg": {
        "fmeg/train.sh": [
            "run.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "fmeg/demo.sh": [
            "demo.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml"
        ],
        "fmeg-test/second_order_demo.sh": [
            "config/smic-256.yaml"
        ],
        "fmeg-test/demo.sh": [
            "demo.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml"
        ]
    },
    "bharagvrathod/fmeg-test": {
        "fmeg/train.sh": [
            "run.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "fmeg/demo.sh": [
            "demo.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml"
        ],
        "fmeg-test/second_order_demo.sh": [
            "demo_second_order.py",
            "config/smic-256.yaml"
        ],
        "fmeg-test/demo.sh": [
            "demo.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml"
        ]
    },
    "bhaskar24/magpie": {
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-tachyon-and-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script",
            "examples/spark-example-job-script",
            "examples/storm-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-yarn-and-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-with-uda": [
            "examples/hadoop-example-job-script"
        ]
    },
    "tallulandrews/scRNASeqPipeline": {
        "scRNASeqPipeline/00_LIST_OF_BSUB_COMMANDS.sh": [
            "2_MapReadsFile.sh",
            "2_DO_MapReadsFile.sh",
            "3_CLEANUP_MapReadFiles.sh",
            "3_SortBAMs.pl",
            "3_merge_dedup_MappedReads.sh",
            "4_DO_RSeQC_Multiple.sh"
        ],
        "scRNASeqPipeline/jobspec-cfg/3_CLEANUP_MapReadFiles.sh": [
            "00_LIST_OF_BSUB_COMMANDS.sh",
            "2_DO_MapReadsFile.sh"
        ],
        "scRNASeqPipeline/jobspec-cfg/3_merge_dedup_MappedReads.sh": [
            "00_LIST_OF_BSUB_COMMANDS.sh",
            "2_DO_MapReadsFile.sh"
        ],
        "scRNASeqPipeline/jobspec-cfg/4_DO_RSeQC_Multiple.sh": [
            "4_RSeQC_Multiple.sh"
        ],
        "scRNASeqPipeline/jobspec-cfg/2_DO_MapReadsFile.sh": [
            "00_LIST_OF_BSUB_COMMANDS.sh"
        ]
    },
    "stefano-camarda/DYTurbo": {
        "DYTurbo/jobspec-cfg/scripts/compile_grid.sh": [
            "./install-cuba"
        ],
        "DYTurbo/jobspec-cfg/scripts/submit_jobs.sh": [
            "./scripts/submit_jobs.sh",
            "scripts/run_prun.sh",
            "scripts/compile_grid.sh",
            "scripts/run_grid.sh",
            "scripts/setup.sh",
            "input/default.in"
        ],
        "DYTurbo/scripts/submit_jobs.sh": [
            "./scripts/submit_jobs.sh",
            "scripts/run_prun.sh",
            "scripts/compile_grid.sh",
            "scripts/run_grid.sh",
            "scripts/setup.sh",
            "input/default.in"
        ]
    },
    "ellataira/ALBERT-Pytorch": {
        "ALBERT-Pytorch/preprocess.sh": [
            "preprocess.py"
        ]
    },
    "scorreard/Variant_catalogue_pipeline": {
        "Variant_catalogue_pipeline/Variant_Catalogue_v1.sh": [
            "main.nf"
        ]
    },
    "john-hewitt/unify-parameter-efficient-tuning": {
        "unify-parameter-efficient-tuning/jobspec-cfg/examples/pytorch/translation/run_translation.py": [
            "src/transformers/training_args.py"
        ],
        "unify-parameter-efficient-tuning/exps/run_en_ro.sh": [
            "examples/pytorch/translation/run_translation.py",
            "exps/romanian_postprocess.sh"
        ]
    },
    "Hendrik1704/EBE-PREEQ-HYDRO-TRANSPORT": {
        "EBE-PREEQ-HYDRO-TRANSPORT/noctua_PrepareFrameworkProductionRun.sh": [
            "./GetModulesFromGit.sh",
            "./CompileFramework.sh"
        ],
        "EBE-PREEQ-HYDRO-TRANSPORT/noctua_script.sh": [
            "./ExecuteEBE_cluster.sh"
        ]
    },
    "NathanaelBeau/model_comparison_translation": {
        "model_comparison_translation/train_transformer.sh": [
            "train_mp_transformer.py"
        ],
        "model_comparison_translation/get_data.sh": [
            "dataset/nl/seq2seq/en2fr/prepare-wmt14en2fr.sh",
            "dataset/nl/seq2seq/en2de/prepare-wmt14en2de.sh",
            "dataset/nl/lm/en2fr/prepare-wmt14en2fr.sh",
            "dataset/nl/lm/en2de/prepare-wmt14en2de.sh"
        ]
    },
    "NathanaelBeau/LMvsSEQ2SEQ": {
        "LMvsSEQ2SEQ/train_seq2seq.sh": [
            "train_enc_dec_mp.py"
        ]
    },
    "hanseungwook/BigGAN-PyTorch": {
        "BigGAN-PyTorch/scripts/sample_BigGAN_pixel.slurm": [
            "sample_pixel.py"
        ],
        "BigGAN-PyTorch/scripts/launch_BigGAN_WT64_bs1024_hdf5.slurm": [
            "train_wt.py"
        ],
        "BigGAN-PyTorch/scripts/launch_BigGAN_deep_WT64_bs1024_hdf5.slurm": [
            "train_wt.py"
        ],
        "BigGAN-PyTorch/scripts/launch_BigGAN_deep_WT64_bs512_hdf5.slurm": [
            "train_wt.py"
        ],
        "BigGAN-PyTorch/scripts/create_hdf5_dataset_wt.slurm": [
            "create_hdf5_dataset_wt.py"
        ],
        "BigGAN-PyTorch/scripts/sample_BigGAN_wt.slurm": [
            "sample_wt.py"
        ],
        "BigGAN-PyTorch/scripts/calculate_inception_moments_baseline.slurm": [
            "calculate_inception_moments_baseline.py"
        ],
        "BigGAN-PyTorch/scripts/create_hdf5_dataset_pixel.slurm": [
            "create_hdf5_dataset_pixel.py"
        ],
        "BigGAN-PyTorch/scripts/calculate_inception_moments_wt.slurm": [
            "calculate_inception_moments_wt.py"
        ]
    },
    "hanseungwook/not-so-biggan-decoder": {
        "not-so-biggan-decoder/scripts/launch_eval_pretrained_biggan_UNet_128_256.slurm": [
            "src/eval_pretrained_biggan_unet_128_256.py"
        ],
        "not-so-biggan-decoder/scripts/launch_UNet_lsun_cat_128.slurm": [
            "src/train_unet_128.py"
        ],
        "not-so-biggan-decoder/scripts/launch_eval_UNet_256.slurm": [
            "src/eval_unet_256.py"
        ],
        "not-so-biggan-decoder/scripts/launch_UNet_256_real.slurm": [
            "src/train_unet_256_real.py"
        ],
        "not-so-biggan-decoder/scripts/launch_UNet_128_refine.slurm": [
            "src/train_unet_128_refine.py"
        ],
        "not-so-biggan-decoder/scripts/launch_resblock_128.slurm": [
            "src/train_resblock_128.py"
        ],
        "not-so-biggan-decoder/scripts/launch_eval_UNet_128_256.slurm": [
            "src/eval_unet_128_256.py"
        ]
    },
    "blastnet/blastnet2_sr_benchmark": {
        "blastnet2_sr_benchmark/sample_lsf_train.sh": [
            "find_addport.py",
            "train.py"
        ],
        "blastnet2_sr_benchmark/sample_lsf_testcubic.sh": [
            "create_cubic_files.ipynb",
            "testcubic.py"
        ]
    },
    "benjaminum/NeRD-Neural-Reflectance-Decomposition": {
        "NeRD-Neural-Reflectance-Decomposition/dtu_array_job.sh": [
            "train_nerd.py",
            "configs/nerd/real_world.txt"
        ]
    },
    "stjordanis/swav": {
        "swav/jobspec-cfg/main_swav.py": [
            "LICENSE"
        ],
        "swav/scripts/swav_RN50w2_400ep_pretrain.sh": [
            "LICENSE",
            "main_swav.py"
        ],
        "swav/scripts/swav_400ep_2x224_pretrain.sh": [
            "LICENSE",
            "main_swav.py"
        ],
        "swav/scripts/swav_400ep_pretrain.sh": [
            "LICENSE",
            "main_swav.py"
        ]
    },
    "stjordanis/petibm-examples": {
        "swav/jobspec-cfg/main_swav.py": [
            "LICENSE"
        ],
        "swav/scripts/swav_RN50w2_400ep_pretrain.sh": [
            "LICENSE"
        ],
        "swav/scripts/swav_400ep_2x224_pretrain.sh": [
            "LICENSE"
        ],
        "swav/scripts/swav_400ep_pretrain.sh": [
            "LICENSE"
        ]
    },
    "stjordanis/Auto-PyTorch": {
        "swav/jobspec-cfg/main_swav.py": [
            "LICENSE"
        ],
        "swav/scripts/swav_RN50w2_400ep_pretrain.sh": [
            "LICENSE"
        ],
        "swav/scripts/swav_400ep_2x224_pretrain.sh": [
            "LICENSE"
        ],
        "swav/scripts/swav_400ep_pretrain.sh": [
            "LICENSE"
        ]
    },
    "RuthAngus/Fakespeare": {
        "Fakespeare/job.pbs": [
            "train.py"
        ]
    },
    "jonnyhtw/scripts": {
        "scripts/peter.sl": [
            "peter.py"
        ],
        "scripts/jobspec-cfg/peter.py": [
            "files"
        ]
    },
    "FilippNikitin/10701-Dehazing": {
        "10701-Dehazing/run.slurm": [
            "lightning.py",
            "configs/hrtransformer.yaml"
        ]
    },
    "aejensen1/Large-Scale-Matrix-Multiplication": {
        "Large-Scale-Matrix-Multiplication/create-batch-job.sh": [
            "cNoThread.c",
            "cPThread.c",
            "cOpenMP.c"
        ]
    },
    "paultheron-X/MoEBERT-fork": {
        "MoEBERT-fork/jobspec-cfg/sh_scripts/new_experiments/importance_preprocess_new.sh": [
            "examples/text-classification/run_glue.py",
            "examples/question-answering/run_qa.py"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/new_experiments/base_moebert_trainer_k2_topk.sh": [
            "examples/question-answering/run_qa.py",
            "examples/text-classification/run_glue.py"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/new_experiments/base_moebert_trainer_k2.sh": [
            "examples/question-answering/run_qa.py",
            "examples/text-classification/run_glue.py"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/launch_jobs.sh": [
            "sh_scripts/experiments/hyper_param_distil_metatuner.sh",
            "sh_scripts/experiments/hyper_param_distil_metatuner_squad.sh"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/importance_preprocess.sh": [
            "examples/text-classification/run_glue.py"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/launch_jobs_perm.sh": [
            "sh_scripts/experiments/hyper_param_perm_metatuner.sh",
            "sh_scripts/experiments/hyper_param_perm_metatuner_squad.sh"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/base_moebert_hash_trainer_squad.sh": [
            "examples/question-answering/run_qa.py"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/hyperparameter_metatuner.sh": [
            "sh_scripts/experiments/base_trainer.sh",
            "sh_scripts/experiments/base_trainer_squad.sh",
            "sh_scripts/experiments/hyperparameter_metatuner.sh"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/launch_hash.sh": [
            "sh_scripts/experiments/hyper_param_hash_metatuner.sh"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/launch_more_seeds_k2.sh": [
            "sh_scripts/experiments/base_finetuning.sh",
            "sh_scripts/python_helpers/launch_job_from_grid.py",
            "sh_scripts/experiments/base_moebert_trainer_k2.sh"
        ],
        "MoEBERT-fork/jobspec-cfg/sh_scripts/experiments/hc/moebert_hash_qnli.sh": [
            "examples/text-classification/run_glue.py"
        ],
        "MoEBERT-fork/sh_scripts/supercloud/submit_importance.sh": [
            "sh_scripts/experiments/importance_preprocess.sh"
        ],
        "MoEBERT-fork/sh_scripts/supercloud/submit_hash.sh": [
            "sh_scripts/experiments/launch_hash.sh"
        ],
        "MoEBERT-fork/sh_scripts/supercloud/submit_seed_rte_k2.sh": [
            "sh_scripts/experiments/launch_more_seeds_k2.sh"
        ],
        "MoEBERT-fork/sh_scripts/supercloud/submit_moebert.sh": [
            "sh_scripts/experiments/launch_jobs.sh"
        ],
        "MoEBERT-fork/sh_scripts/supercloud/hardcoded/submit_hash_opt_qnli.sh": [
            "sh_scripts/experiments/hc/moebert_hash_qnli.sh"
        ],
        "MoEBERT-fork/sh_scripts/squad/squad_first_stage_tuner.sbatch": [
            "sh_scripts/experiments/hyperparameter_metatuner.sh"
        ],
        "MoEBERT-fork/sh_scripts/squad/submit_second_stage_tuner.sbatch": [
            "sh_scripts/experiments/launch_jobs.sh"
        ],
        "MoEBERT-fork/sh_scripts/squad/submit_second_stage_hashtuner.sbatch": [
            "sh_scripts/experiments/base_moebert_hash_trainer_squad.sh"
        ],
        "MoEBERT-fork/sh_scripts/squad/submit_second_stage_permtuner.sbatch": [
            "sh_scripts/experiments/launch_jobs_perm.sh"
        ],
        "MoEBERT-fork/sh_scripts/new_experiments/submit_importance.sh": [
            "sh_scripts/new_experiments/importance_preprocess_new.sh",
            "merge_importance.py"
        ],
        "MoEBERT-fork/sh_scripts/new_experiments/launcher.sbatch": [
            "sh_scripts/new_experiments/base_moebert_trainer_k2_topk.sh",
            "sh_scripts/new_experiments/base_moebert_trainer_k2.sh"
        ]
    },
    "DSSR2/gazecap": {
        "gazecap/train.sh": [
            "gazecap_train.py"
        ]
    },
    "FrankVerhoef/pex": {
        "pex/slurm/tunet5.job": [
            "run/main.py"
        ],
        "pex/slurm/selfchat.job": [
            "run/main.py"
        ],
        "pex/slurm/chat.job": [
            "chatstarters.txt",
            "run/main.py"
        ],
        "pex/slurm/evaldialogpt.job": [
            "run/main.py"
        ],
        "pex/slurm/evalbert.job": [
            "run/main.py"
        ],
        "pex/slurm/evalt5.job": [
            "run/main.py"
        ],
        "pex/slurm/trainbert.job": [
            "run/main.py"
        ],
        "pex/slurm/train.job": [
            "run/main.py"
        ],
        "pex/jobspec-cfg/run/main.py": [
            "run/main.py"
        ]
    },
    "chhendri/Dog_Cat_Classification": {
        "Dog_Cat_Classification/main.sh": [
            "main.py"
        ]
    },
    "asgolovin/AdaptiveHypergraphs": {
        "AdaptiveHypergraphs/jobscripts/p_sweep.sh": [
            "./scripts/main.jl"
        ],
        "AdaptiveHypergraphs/jobscripts/phase_transition.sh": [
            "./scripts/main.jl"
        ],
        "AdaptiveHypergraphs/jobscripts/rule_sweep.sh": [
            "./scripts/main.jl"
        ],
        "AdaptiveHypergraphs/jobscripts/slow_manifold_prop_voting.sh": [
            "./scripts/main.jl"
        ],
        "AdaptiveHypergraphs/jobscripts/motif_intersection.sh": [
            "./scripts/main.jl"
        ],
        "AdaptiveHypergraphs/jobscripts/slow_manifold_maj_voting.sh": [
            "./scripts/main.jl"
        ]
    },
    "memray/seq2seq-keyphrase-pytorch": {
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-presabs-kp20k.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-one2one-kptimes.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-presabs-openkp.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_tf_DA/transformer-DA-kptimes.sh": [
            "train.py"
        ]
    },
    "memray/OpenNMT-kpg-release": {
        "OpenNMT-kpg-release/script/transfer/kpeval_cpu_template.sh": [
            "kp_gen_eval_transfer.py",
            "config/transfer_kp/infer/keyphrase-one2seq.yml"
        ],
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-presabs-kp20k.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-one2one-kptimes.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_fulldata/kpgen-transformer-presabs-openkp.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/transfer/train_tf_DA/transformer-DA-kptimes.sh": [
            "train.py"
        ],
        "OpenNMT-kpg-release/script/empirical_study/srun_one2one/eval_v2/kpeval_kp20k_topmodel_gpu.sh": [
            "kp_gen_eval.py"
        ],
        "OpenNMT-kpg-release/script/empirical_study/srun_one2one/eval_v2/kpeval_kp20k.sh": [
            "kp_gen_eval.py"
        ],
        "OpenNMT-kpg-release/script/empirical_study/srun_one2one/eval/kpeval_duc.sh": [
            "kp_gen_eval.py"
        ],
        "OpenNMT-kpg-release/script/empirical_study/srun_one2one/eval/kpeval_inspec.sh": [
            "kp_gen_eval.py"
        ],
        "OpenNMT-kpg-release/script/empirical_study/srun_one2one/eval/kpeval_kp20k.sh": [
            "kp_gen_eval.py"
        ],
        "OpenNMT-kpg-release/script/release/tf/tl_gpu_template.sh": [
            "kp_gen_eval_transfer.py",
            "config/transfer_kp/infer/keyphrase-one2seq-controlled.yml"
        ]
    },
    "pvelissariou1/asgs": {
        "asgs/jobspec-cfg/asgs_main.sh": [
            "platforms.sh",
            "qscript.pl",
            "get_atcf.pl",
            "asgs_main.sh",
            "control_file_gen.pl"
        ],
        "asgs/config/2014/asgs_config_cpra_2017_NAM.sh": [
            "asgs_main.sh"
        ],
        "asgs/config/2014/asgs_config_cpra_2017_storm.sh": [
            "asgs_main.sh"
        ]
    },
    "C1510/agd_exp": {
        "agd_exp/multi-cifar.sh": [
            "main.py"
        ],
        "agd_exp/single-cifar.sh": [
            "main.py"
        ],
        "agd_exp/single-imagenet.sh": [
            "main.py"
        ],
        "agd_exp/multi-imagenet.sh": [
            "main.py"
        ]
    },
    "Scriddie/midi-rnn": {
        "midi-rnn/jobscript.sh": [
            "requirements.txt",
            "train_gpu.py",
            "sample.py"
        ],
        "midi-rnn/jobspec-cfg/train_gpu.py": [
            "sample.py"
        ]
    },
    "Naagar/Normalizing_flow_pyTorch": {
        "Normalizing_flow_pyTorch/batch_run_files/batch_gm.sh": [
            "train.py"
        ],
        "Normalizing_flow_pyTorch/batch_run_files/batch_gm_mll.sh": [
            "train.py"
        ]
    },
    "Naagar/Seeds_Classification": {
        "Seeds_Classification/batch_gm.sh": [
            "printing_the_files_name_in_the_directory.py",
            "download_images.py"
        ]
    },
    "joowkim/MSAR-core_bulkRNAseq": {
        "MSAR-core_bulkRNAseq/run_bulk_rnaseq.slurm": [
            "bulk_rnaseq.nf",
            "./bulk_rnaseq_conf/run.config"
        ]
    },
    "njkbarry/HRNet-Semantic-Segmentation-Coreset": {
        "HRNet-Semantic-Segmentation-Coreset/slurm_scripts/HRNet_dist_training_full_DS.slurm": [
            "tools/train.py",
            "experiments/cityscapes/seg_hrnet_ocr_w48_train_512x1024_sgd_lr1e-2_wd5e-4_bs_12_epoch484.yaml"
        ]
    },
    "cms-patatrack/patatrack-validation": {
        "patatrack-validation/validate.p100": [
            "./validate"
        ],
        "patatrack-validation/validate.v100": [
            "./validate"
        ]
    },
    "petehague/FRP": {
        "FRP/frp_alice.sub": [
            "./process.py"
        ]
    },
    "richelbilderbeek/ticket_287014": {
        "ticket_287014/run_rackham_richel.sh": [
            "metontiime2.nf",
            "metontiime2.conf"
        ],
        "ticket_287014/run_rackham_ida.sh": [
            "metontiime2.nf",
            "metontiime2.conf"
        ],
        "ticket_287014/continue_run_rackham_ida.sh": [
            "metontiime2.nf"
        ],
        "ticket_287014/jobspec-cfg/metontiime2.nf": [
            "metontiime2.conf",
            "metontiime2.nf"
        ]
    },
    "richelbilderbeek/ep_vs_mhcn": {
        "ep_vs_mhcn/make.sh": [
            "make.sh"
        ],
        "ep_vs_mhcn/jobspec-cfg/make.sh": [
            "make.sh"
        ]
    },
    "metomi/shumlib": {
        "shumlib/jobspec-cfg/scripts/bom_install_shumlib.sh": [
            "scripts/bom_install_shumlib.sh",
            "Makefile"
        ],
        "shumlib/scripts/bom_install_shumlib.sh": [
            "scripts/bom_install_shumlib.sh",
            "Makefile"
        ]
    },
    "willisma/text2img-DiT": {
        "text2img-DiT/scripts/t2i-training.sbatch": [
            "train.py"
        ],
        "text2img-DiT/scripts/t2i-sampling.sbatch": [
            "sample.py"
        ]
    },
    "johannesjmeyer/pqc-symmetry": {
        "pqc-symmetry/jobarray_symm_lp_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/jobarray_Nsymm_rand_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/jobarray_Nsymm_lp_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/pdg_jobarray_z_symm_sweep_rand.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/pdg_jobarray_z_symm_lp_sweep.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/pdg_jobarray_z_Nsymm_lp_sweep.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/pdg_jobarray_z_Nsymm_sweep_rand.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/jobarray_symm_rand_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_Nsymm_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_symm_sweep.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_Nsymm.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_symm.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_Nsymm_rand_symmetry.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/jobarray_symm_rand_symmetry.sh": [
            "run_ttt.py"
        ],
        "pqc-symmetry/cluster_scripts/pdg_jobarray_symm_lp_sweep.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/cluster_scripts/pdg_jobarray_symm_sweep_rand.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/cluster_scripts/pdg_jobarray_Nsymm_sweep_rand.sh": [
            "run_pdg.py"
        ],
        "pqc-symmetry/cluster_scripts/pdg_jobarray_Nsymm_lp_sweep.sh": [
            "run_pdg.py"
        ]
    },
    "NicoMandel/bitou_segmentation": {
        "bitou_segmentation/scripts/hpc_train.sh": [
            "scripts/train_model.py"
        ]
    },
    "xju2/HEP-GPT": {
        "HEP-GPT/submit_training.sh": [
            "main.py"
        ]
    },
    "lightonai/composer": {
        "composer/mamba/slurm.sh": [
            "mamba/create_mamba_config.py",
            "mamba/train.py"
        ]
    },
    "katnastou/BioBERT-based-entity-type-classifier": {
        "BioBERT-based-entity-type-classifier/slurm/slurm-run-eval-big.sh": [
            "env.yml",
            "slurm/slurm-run-eval-big.sh",
            "run_ner_consensus.py"
        ],
        "BioBERT-based-entity-type-classifier/slurm/slurm-run-predict.sh": [
            "env.yml",
            "run_ner_consensus.py"
        ],
        "BioBERT-based-entity-type-classifier/slurm/slurm-run-finetuning-big.sh": [
            "env.yml",
            "slurm/slurm-run-finetuning-big.sh",
            "run_ner_consensus.py"
        ],
        "BioBERT-based-entity-type-classifier/jobspec-cfg/slurm/slurm-run-eval-big.sh": [
            "env.yml",
            "slurm/slurm-run-eval-big.sh",
            "run_ner_consensus.py"
        ],
        "BioBERT-based-entity-type-classifier/jobspec-cfg/slurm/slurm-run-finetuning-big.sh": [
            "env.yml",
            "slurm/slurm-run-finetuning-big.sh",
            "run_ner_consensus.py"
        ]
    },
    "halli2/heart_rythm_interpretation": {
        "heart_rythm_interpretation/slurm_job_hyper.sh": [
            "src/cardiac_rythm/hyper_tune.py"
        ]
    },
    "wenx-guo/stylegan3": {
        "stylegan3/train_128px.sh": [
            "train.py"
        ],
        "stylegan3/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "Cyrilvallez/LLM_playground": {
        "LLM_playground/webapp_multi.sh": [
            "webapp_multi.py"
        ],
        "LLMs/webapp.sh": [
            "webapp.py"
        ]
    },
    "Cyrilvallez/LLMs": {
        "LLMs/webapp.sh": [
            "webapp.py"
        ],
        "LLMs/experiment_app.sh": [
            "experiment_webapp.py"
        ]
    },
    "Genera1Z/SAVi-PyTorch": {
        "SAVi-PyTorch/run_on_csc.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "NuriaVP/Transfer-Learning-EDM": {
        "Transfer-Learning-EDM/run_conda_env.sh": [
            "TFG_EMD_CV_DAonfly.py"
        ]
    },
    "slpanir/POMP": {
        "POMP/jobspec-cfg/train.py": [
            "LICENSE",
            "fairseq_cli/train.py"
        ],
        "POMP/jobspec-cfg/generate.py": [
            "LICENSE"
        ],
        "POMP/jobspec-cfg/scripts/tools/spm_decode.py": [
            "LICENSE"
        ],
        "POMP/scripts/generate.sh": [
            "train.py",
            "generate.py",
            "scripts/tools/spm_decode.py"
        ]
    },
    "alpv95/IXPEML": {
        "IXPEML/build.sh": [
            "run_build_fitsdata.py"
        ],
        "IXPEML/submit.sh": [
            "run_ensemble_eval.py"
        ]
    },
    "RichRast/SPIN": {
        "SPIN/jobspec-cfg/scripts/sbatch_image.sub": [
            "./scripts/sbatch_image.sub"
        ],
        "SPIN/scripts/sbatch_image.sub": [
            "./scripts/sbatch_image.sub"
        ]
    },
    "joel99/context_general_bci": {
        "context_general_bci/launch_3x2.sh": [
            "run.py"
        ],
        "context_general_bci/launch_4x4.sh": [
            "run.py"
        ],
        "context_general_bci/launch_3x4.sh": [
            "run.py"
        ],
        "context_general_bci/launch_4x2.sh": [
            "run.py"
        ],
        "context_general_bci/launch_2x4.sh": [
            "run.py"
        ],
        "context_general_bci/launch_multi.sh": [
            "run.py"
        ],
        "context_general_bci/launch_2x2.sh": [
            "run.py"
        ],
        "context_general_bci/jobspec-cfg/run.py": [
            "run.py"
        ]
    },
    "geraltofrivia/multitask-entitylevel-nlp": {
        "multitask-entitylevel-nlp/g5k.sh": [
            "src/run.py"
        ]
    },
    "VI4IO/io500-app-OLD": {
        "io-500-dev/jobspec-cfg/utilities/prepare.sh": [
            "./bootstrap",
            "./prepare.sh",
            "./compile.sh"
        ]
    },
    "VI4IO/io-500-dev": {
        "io-500-dev/jobspec-cfg/utilities/prepare.sh": [
            "utilities/io500_fixed.sh",
            "utilities/find/sfind.sh",
            "utilities/find/mmfind.sh"
        ],
        "io-500-dev/site-configs/dkrz/run-100.slurm": [
            "./utilities/prepare.sh"
        ]
    },
    "valiantljk/h5spark": {
        "h5spark/spark-python.sh": [
            "src/main/python/tests/single-file-test.py"
        ]
    },
    "florianwechsung/Stage-II-Optimization-With-Perturbations": {
        "Stage-II-Optimization-With-Perturbations/job_bmn.slurm": [
            "job_bmn.slurm",
            "eval_compute_bmn.py"
        ],
        "Stage-II-Optimization-With-Perturbations/job_qfm.slurm": [
            "job_qfm.slurm",
            "eval_compute_qfm.py"
        ],
        "Stage-II-Optimization-With-Perturbations/jobspec-cfg/job_bmn.slurm": [
            "job_bmn.slurm",
            "eval_compute_bmn.py"
        ],
        "Stage-II-Optimization-With-Perturbations/jobspec-cfg/job_qfm.slurm": [
            "job_qfm.slurm",
            "eval_compute_qfm.py"
        ]
    },
    "bigscience-workshop/catalogue_data": {
        "catalogue_data/pii/script/pii.slurm": [
            "pii/pii_processor.py"
        ]
    },
    "RobinWeitzel/NLPProject": {
        "NLPProject/train5.sh": [
            "training_config/bidaf_elmo_embedding.jsonnet"
        ],
        "NLPProject/train4.sh": [
            "training_config/bidaf_elmo_dropout.jsonnet"
        ]
    },
    "IfrahIdrees/rt1-pytorch": {
        "rt1-pytorch/run_rt1_main.sh": [
            "main.py"
        ]
    },
    "herptilemicrobiomes/MAG_Fecal": {
        "MAG_Fecal/pipeline/02_metashot-MAG_fastp.sh": [
            "metashot-MAG.cfg"
        ],
        "MAG_Fecal/pipeline/03_metashot-prok-qual.sh": [
            "metashot-qual.cfg"
        ],
        "MAG_Fecal/pipeline/05_metashot-prok-classify.sh": [
            "metashot-qual.cfg",
            "metashot-classify.cfg"
        ]
    },
    "miaoyin390/DNN-Compression-Tensor-Optimization": {
        "DNN-Compression-Tensor-Optimization/sbatch.sh": [
            "main.py"
        ]
    },
    "RiccoFerraro/msds_hpc_project_ricco_ferraro": {
        "msds_hpc_project_ricco_ferraro/src/project_lightning.sbatch": [
            "src/project_lightning.py"
        ]
    },
    "ggflow123/DLS_FINAL_mmdetection": {
        "DLS_FINAL_mmdetection/scripts/train_resnet.slurm": [
            "./tools/dist_train.sh",
            "./configs/mask_rcnn/mask_rcnn_r50_fpn_1x_coco_datapath.py"
        ]
    },
    "lucpaoli/SAFT_ML": {
        "SAFT_ML/multithreaded_julia_job.sh": [
            "multithreaded_job.jl"
        ],
        "SAFT_ML/gpu_julia_job.sh": [
            "gpu_job.jl"
        ],
        "SAFT_ML/julia_job.sh": [
            "job.jl"
        ],
        "SAFT_ML/jobs/4_transfer_learning_new_fp/4_attention_noise_1e-4/run_job.sh": [
            "job.jl"
        ],
        "SAFT_ML/jobs/3_gnn/2_attention_linear/run_job.sh": [
            "job.jl"
        ],
        "SAFT_ML/jobs/0_mlp/linear_alkanes_bounded_output_V2/run_job.sh": [
            "job.jl"
        ],
        "SAFT_ML/jobs/0_mlp/all_alkanes_better_fp_small_custom1/run_job.sh": [
            "job.jl"
        ],
        "SAFT_ML/jobs/7_reduced_temps/1_attention_morgan_1e-4/run_job.sh": [
            "job.jl"
        ]
    },
    "muralikrishnangm/SSL_ALPNet": {
        "SSL_ALPNet/job_example.sh": [
            "./examples/train_ssl_abdominal_mri.sh"
        ],
        "SSL_ALPNet/jobspec-cfg/examples/train_ssl_abdominal_mri.sh": [
            "training.py"
        ]
    },
    "fszatkowski/cl-teacher-adaptation": {
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_fg.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_fg_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_mc.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_tw_fg_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_tw.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_tw_fg.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwfa.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwfa_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_tw_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/jobspec-cfg/experiments/lwf_mc_ta.sh": [
            "src/main_incremental.py"
        ],
        "cl-teacher-adaptation/experiments/finegrained_aacbsf.sh": [
            "./experiments/lwf_fg.sh",
            "./experiments/lwf_fg_ta.sh",
            "./experiments/lwf_tw_fg.sh",
            "./experiments/lwf_tw_fg_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t26s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t11s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t20s10.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t20s5.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t26s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t6s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t5s20.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t6s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t11s50.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t10s10.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/cifar100t10s10.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t26s100.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t20s5.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t10s20.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t6s100.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/imagenet_subset_t5s20.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t11s100.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/finegrained_fsbcaa.sh": [
            "./experiments/lwf_fg.sh",
            "./experiments/lwf_fg_ta.sh",
            "./experiments/lwf_tw_fg.sh",
            "./experiments/lwf_tw_fg_ta.sh"
        ],
        "cl-teacher-adaptation/experiments/tinyimagenet_t5s40.sh": [
            "./experiments/lwf.sh",
            "./experiments/lwf_ta.sh",
            "./experiments/lwf_mc.sh",
            "./experiments/lwf_mc_ta.sh",
            "./experiments/lwf_tw.sh",
            "./experiments/lwf_tw_ta.sh",
            "./experiments/lwfa.sh",
            "./experiments/lwfa_ta.sh"
        ]
    },
    "CooperStansbury/ONT-single-cell": {
        "ONT-single-cell/launcher.sh": [
            "environment.yml",
            "Snakefile",
            "workflow.smk"
        ]
    },
    "manasakani/arrayKMC": {
        "arrayKMC/run_job_lumi.sh": [
            "select_gpu",
            "./select_gpu",
            "parameters.txt"
        ],
        "DeviceKMC/run_job.sh": [
            "parameters.txt"
        ]
    },
    "manasakani/DeviceKMC": {
        "arrayKMC/run_job_lumi.sh": [
            "parameters.txt"
        ],
        "arrayKMC/jobspec-cfg/parameters.txt": [
            "structures/old_structures/interstitials.xyz"
        ],
        "DeviceKMC/run_job.sh": [
            "parameters.txt"
        ],
        "DeviceKMC/jobspec-cfg/parameters.txt": [
            "structures/old_structures/interstitials.xyz"
        ]
    },
    "codebyzeb/TransformerSegmentation": {
        "TransformerSegmentation/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ],
        "TransformerSegmentation/scripts/launch_slurm.wilkes3": [
            "setup.sh",
            "train.py"
        ],
        "TransformerSegmentation/scripts/launch_slurm_agent.wilkes3": [
            "setup.sh"
        ],
        "CLIMB/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ],
        "CLIMB/scripts/launch_evaluator.wilkes3": [
            "setup.sh"
        ],
        "CLIMB/scripts/launch_slurm.wilkes3": [
            "setup.sh",
            "train.py"
        ]
    },
    "codebyzeb/CLIMB": {
        "TransformerSegmentation/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ],
        "TransformerSegmentation/scripts/launch_slurm.wilkes3": [
            "setup.sh",
            "train.py"
        ],
        "TransformerSegmentation/scripts/launch_slurm_agent.wilkes3": [
            "setup.sh"
        ],
        "CLIMB/jobspec-cfg/setup.sh": [
            "requirements.txt"
        ],
        "CLIMB/scripts/launch_evaluator.wilkes3": [
            "setup.sh",
            "evaluate.py"
        ],
        "CLIMB/scripts/launch_slurm.wilkes3": [
            "setup.sh",
            "train.py"
        ]
    },
    "jchen/colorizer": {
        "colorizer/train.sh": [
            "run.py"
        ],
        "colorizer/jobspec-cfg/run.py": [
            "run.py"
        ]
    },
    "MattKimmmm/Voice-Similarity": {
        "Voice-Similarity/cpujob.sh": [
            "main.py"
        ]
    },
    "SycuroLab/metagenotate": {
        "metagenotate/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "metagenotate_sbatch.sh",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metagenotate/jobspec-cfg/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "metagenotate_sbatch.sh",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/jobspec-cfg/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/cluster_files/slurm_files/metqc_sbatch.sh": [
            "cluster.json"
        ],
        "metannotate/cluster_files/slurm_files/metannotate_sbatch.sh": [
            "cluster.json"
        ]
    },
    "SycuroLab/metqc": {
        "metagenotate/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metagenotate/jobspec-cfg/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "metqc_sbatch.sh",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/jobspec-cfg/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile",
            "metqc_sbatch.sh",
            "utils/scripts/parse_snakemake_command_logs.py"
        ],
        "metqc/cluster_files/slurm_files/metqc_sbatch.sh": [
            "cluster.json"
        ],
        "metannotate/cluster_files/slurm_files/metannotate_sbatch.sh": [
            "cluster.json"
        ]
    },
    "SycuroLab/metannotate": {
        "metagenotate/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile"
        ],
        "metagenotate/jobspec-cfg/metagenotate_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile"
        ],
        "metqc/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile"
        ],
        "metqc/jobspec-cfg/metqc_sbatch.sh": [
            "cluster.json",
            "config.yaml",
            "Snakefile"
        ],
        "metqc/cluster_files/slurm_files/metqc_sbatch.sh": [
            "cluster.json"
        ],
        "metannotate/cluster_files/slurm_files/metannotate_sbatch.sh": [
            "cluster.json"
        ]
    },
    "COV-IRT/microbial": {
        "microbial/tacc_scripts/metscale/job.slurm": [
            "list"
        ]
    },
    "Arjung27/Hidden-Trigger-Backdoor-Attacks": {
        "Hidden-Trigger-Backdoor-Attacks/train_scripts/cifar_experiments/resnet/train_for_arjun_2.sh": [
            "generate_poison.py",
            "cfg_CIFAR/singlesource_singletarget_binary_finetune/experiment_0012.cfg",
            "finetune_and_test.py"
        ],
        "Hidden-Trigger-Backdoor-Attacks/train_scripts/cifar_experiments/resnet/train_for_arjun_3.sh": [
            "generate_poison.py",
            "cfg_CIFAR/singlesource_singletarget_binary_finetune/experiment_0013.cfg",
            "finetune_and_test.py"
        ],
        "Hidden-Trigger-Backdoor-Attacks/train_scripts/cifar_experiments/resnet/train_script_7.sh": [
            "generate_poison.py",
            "finetune_and_test.py"
        ],
        "Hidden-Trigger-Backdoor-Attacks/train_scripts/cifar_experiments/resnet/train_for_arjun_7.sh": [
            "generate_poison.py",
            "cfg_CIFAR/singlesource_singletarget_binary_finetune/experiment_0017.cfg",
            "finetune_and_test.py"
        ]
    },
    "nesi/dask_demos": {
        "dask_demos/scripts/hyperparameters_search_mpi.sl": [
            "scripts/hyperparameters_search_mpi.py"
        ],
        "dask_demos/scripts/hyperparameters_search.sl": [
            "scripts/hyperparameters_search.py"
        ]
    },
    "McWilliamsCenter/deep_galaxy_models": {
        "deep_galaxy_models/mk_plots.job": [
            "scripts/mk_plots.py"
        ]
    },
    "v-iashin/Synchformer": {
        "Synchformer/scripts/sbatch_train_sync.sh": [
            "main.py"
        ],
        "Synchformer/scripts/sbatch_train_segment_avclip.sh": [
            "main.py"
        ]
    },
    "zhejz/HPTR": {
        "HPTR/bash/pack_h5.sh": [
            "src/pack_h5_womd.py",
            "src/pack_h5_av2.py"
        ]
    },
    "lct-rug-2022/nlp-final-project": {
        "nlp-final-project/scripts/pipeline/predict.sh": [
            "scripts/pipeline/predict_classification.py",
            "scripts/pipeline/predict_generation.py"
        ]
    },
    "manasmehta18/ControlNet": {
        "ControlNet/jobs/manet.slurm": [
            "train_manet.py"
        ]
    },
    "TWWinde/Medical-Images-Synthesis": {
        "Medical-Images-Synthesis/moose.sh": [
            "train.py"
        ],
        "Medical-Images-Synthesis/batch.sh": [
            "train.py",
            "test.py"
        ]
    },
    "allynee/CS703": {
        "CS703/optim_job_fc100_rr.sh": [
            "requirements.txt",
            "train.py",
            "test.py",
            "./experiments/FC100_MetaOptNet_RR/best_model.pth",
            "optim_job_fc100_rr.sh"
        ],
        "CS703/optim_job_cifar_biondi_vanilla.sh": [
            "requirements.txt",
            "train.py",
            "optim_job_cifar.sh"
        ],
        "CS703/optim_job_mininet.sh": [
            "requirements.txt",
            "train.py",
            "optim_job_mininet.sh"
        ],
        "CS703/optim_job_cifar.sh": [
            "requirements.txt",
            "train.py",
            "optim_job_cifar.sh"
        ],
        "CS703/jobspec-cfg/optim_job_fc100_rr.sh": [
            "requirements.txt",
            "train.py",
            "test.py",
            "./experiments/FC100_MetaOptNet_RR/best_model.pth",
            "optim_job_fc100_rr.sh"
        ],
        "CS703/jobspec-cfg/optim_job_mininet.sh": [
            "requirements.txt",
            "train.py",
            "optim_job_mininet.sh"
        ],
        "CS703/jobspec-cfg/optim_job_cifar.sh": [
            "requirements.txt",
            "train.py",
            "optim_job_cifar.sh"
        ]
    },
    "colindaven/blast-example": {
        "blast-example/run_nextflow_blast_SLURM.sh": [
            "run_nextflow_blast_SLURM.sh"
        ],
        "blast-example/jobspec-cfg/run_nextflow_blast_SLURM.sh": [
            "run_nextflow_blast_SLURM.sh"
        ]
    },
    "daniel-wrench/reynolds_scales_project": {
        "reynolds_scales_project/1_process_data.sh": [
            "src/process_sunspot_data.py",
            "src/process_data.py"
        ]
    },
    "z0on/2bRAD_denovo": {
        "2bRAD_denovo/2bRAD_README.sh": [
            "2bRAD_trim_launch.pl",
            "2bRAD_trim_launch_dedup.pl",
            "2bRAD_trim_launch_dedup_old.pl",
            "2bRAD_trim_launch_dedup2.pl",
            "2bRAD_trim_launch_dedup_N2.pl",
            "mergeUniq.pl",
            "concatFasta.pl",
            "2bRAD_bowtie2_launch.pl",
            "admixturePlotting_pcangsd.R",
            "angsd_ibs_pca.R",
            "fstPerGene.R",
            "bayescan_plots.R",
            "removeBayescanOutliers.pl",
            "replicatesMatch.pl",
            "hetfilter.pl",
            "repMatchStats.pl",
            "thinner.pl",
            "vcf2dadi.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_trim_launch_dedup_old.pl": [
            "2bRAD_trim_launch_dedup.pl",
            "trim2bRAD_2barcodes_dedup.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/ls5_launcher_creator.py": [
            "launcher_creator.py"
        ],
        "2bRAD_denovo/jobspec-cfg/removeBayescanOutliers.pl": [
            "removeBayescanOutliers.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_trim_launch.pl": [
            "launcher_creator.py"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_bowtie2_launch.pl": [
            "launcher_creator.py"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_trim_launch_dedup.pl": [
            "2bRAD_trim_launch_dedup.pl",
            "trim2bRAD_2barcodes_dedup.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/thinner.pl": [
            "thinner.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_trim_launch_dedup_N2.pl": [
            "2bRAD_trim_launch_dedup_N2.pl",
            "trim2bRAD_2barcodes_dedup.pl",
            "2bRAD_trim_launch_dedup.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/hetfilter.pl": [
            "hetfilter.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/mergeUniq.pl": [
            "mergeUniq.pl",
            "uniquerOne.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/repMatchStats.pl": [
            "repMatchStats.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/vcf2dadi.pl": [
            "vcf2dadi.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/2bRAD_trim_launch_dedup2.pl": [
            "2bRAD_trim_launch_dedup.pl",
            "trim2bRAD_2barcodes_dedup.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/replicatesMatch.pl": [
            "replicatesMatch.pl"
        ],
        "2bRAD_denovo/jobspec-cfg/concatFasta.pl": [
            "concatFasta.pl"
        ],
        "Multivariate_GWAS/amil_RDA_association.sh": [
            "ls5_launcher_creator.py"
        ]
    },
    "z0on/Multivariate_GWAS": {
        "Multivariate_GWAS/amil_RDA_association.sh": [
            "bams.qc",
            "write_traits.R",
            "pd.traits",
            "bleach.traits",
            "blscore.traits",
            "mt.traits",
            "rf.traits",
            "zz8.ibsMat",
            "LDq.R",
            "RDA_GWAS.R",
            "compile_chromosomes.R"
        ],
        "Multivariate_GWAS/jobspec-cfg/compile_chromosomes.R": [
            "RDA_GWAS.R",
            "compile_replicates.R"
        ],
        "Multivariate_GWAS/jobspec-cfg/RDA_GWAS.R": [
            "LDq.R"
        ]
    },
    "AndersGiovanni/social-llama": {
        "social-llama/scripts/sft.sh": [
            "src/social_llama/training/sft.py"
        ]
    },
    "KeLiu7/Waterlogging-Barley": {
        "Waterlogging-Barley/p02.runlist.sh": [
            "p03.combin.sh"
        ]
    },
    "molikd/otb": {
        "otb/otb.lite.template.slurm": [
            "./otb.sh"
        ],
        "otb/otb.template.slurm": [
            "./otb.sh"
        ],
        "otb/jobspec-cfg/otb.sh": [
            "scr/io.sh",
            "./otb.sh",
            "run.nf",
            "otb.sh",
            "scr/check_env.sh"
        ]
    },
    "tez4/image_generator": {
        "image_generator/jobs/post_processing_job.sh": [
            "functions/post_processing.py"
        ]
    },
    "PolymathicAI/multiple_physics_pretraining": {
        "multiple_physics_pretraining/submit_batch.sh": [
            "train_basic.py"
        ]
    },
    "ultmaster/nasbench-1shot1": {
        "nasbench-1shot1/nasbench_analysis/evaluate_correlation.sh": [
            "nasbench_analysis/evaluate_one_shot_models.py"
        ]
    },
    "neuropower/neuropower-validation-prospectiveRFT": {
        "neuropower-validation-prospectiveRFT/collect.sh": [
            "./config_tacc.sh"
        ]
    },
    "juhanikataja/vq_vae": {
        "vq_vae/run_cont.sh": [
            "modules",
            "vq_vae2.py"
        ]
    },
    "dongfang91/concept_normalization": {
        "concept_normalization/rnn_character.sh": [
            "rnn_character.py"
        ],
        "concept_normalization/rnn_characters_pretrained.sh": [
            "rnn_characters_pretrained.py"
        ]
    },
    "dongfang91/domain_adaptation": {
        "domain_adaptation/joint_training_newkeras.sh": [
            "joint_training_newkeras.py"
        ]
    },
    "babrodtk/FiniteVolumeGPU": {
        "FiniteVolumeGPU/dgx-2_scaling_benchmark.job": [
            "mpiTesting.py"
        ],
        "FiniteVolumeGPU/hgx_scaling_benchmark.job": [
            "mpiTesting.py"
        ]
    },
    "adriano-poci/ALF": {
        "ALF/NGC3115/startAlf.qsys": [
            "alf_aperRead.py"
        ],
        "ALF/jobspec-cfg/alf_aperRead.py": [
            "alf_aperRead.py"
        ]
    },
    "jeph864/cemtom": {
        "cemtom/run_cluster.sbatch": [
            "main.py"
        ]
    },
    "martin-studna/deep-learning-course": {
        "deep-learning-course/metacentrum/job.sh": [
            "uppercase_test.txt"
        ]
    },
    "GiteonCaulfied/COMP4560_stokes_ml_project": {
        "COMP4560_stokes_ml_project/interpolation_job.sh": [
            "interpolation.py"
        ],
        "COMP4560_stokes_ml_project/LSTM_training_job.sh": [
            "LSTM_training.py"
        ],
        "COMP4560_stokes_ml_project/FNN_testing_job.sh": [
            "FNN_testing.py"
        ],
        "COMP4560_stokes_ml_project/LSTM_testing_job.sh": [
            "LSTM_testing.py"
        ],
        "COMP4560_stokes_ml_project/ConvAE_training_job.sh": [
            "ConvAE_training.py"
        ]
    },
    "abhisrkckl/GWecc_1psr_search": {
        "GWecc_1psr_search/fix-wn_vary-rn_no-ecw.sbatch": [
            "print_info.sh",
            "run_1psr_analysis.py",
            "fix-wn_vary-rn_no-ecw.json"
        ],
        "GWecc_1psr_search/fix-wn_vary-rn_vary-ecw.sbatch": [
            "print_info.sh",
            "run_1psr_analysis.py",
            "fix-wn_vary-rn_vary-ecw.json"
        ]
    },
    "danielazarate/Formica-Supergene-Transcriptomics": {
        "Formica-Supergene-Transcriptomics/F.Neoclara.Transcriptomics.Bioinformatic.Pipeline.sh": [
            "transcript.quant.sh",
            "UniqScaffMatchr.py"
        ]
    },
    "choderalab/espaloma_charge": {
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_tip3pFB/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_opc/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_tip3pFB/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/3/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/1/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/1/equil-lsf-1job.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/2/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t3/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t1/dry_yank_run-lsf-1job.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t1/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t2/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_opc/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_tip3p/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_tip3p/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ]
    },
    "choderalab/hx": {
        "hx/high_temp_unfold/12.sh": [
            "prepare-for-fah.py"
        ],
        "hx/high_temp_unfold/14.sh": [
            "prepare-for-fah.py"
        ],
        "hx/high_temp_unfold/19.sh": [
            "prepare-for-fah.py"
        ]
    },
    "choderalab/sake": {
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_tip3pFB/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_opc/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_tip3pFB/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/3/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/1/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/1/equil-lsf-1job.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/extra_equilibration/equilibration/2/equil-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t3/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t1/dry_yank_run-lsf-1job.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t1/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/dry_octanol_GAFF_tip3p/dry_runs/t2/dry_yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_opc/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_GAFF_tip3p/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ],
        "SAMPL6_logP_ref_calc/wet_octanol_SMIRNOFF_tip3p/t1/yank_run-lsf.sh": [
            "requirements.txt"
        ]
    },
    "OpenCFD-IMECH/OpenCFD-SCU": {
        "OpenCFD-SCU/run.sh": [
            "./single_process.sh"
        ]
    },
    "alexrs/herd": {
        "herd/jobscript.sh": [
            "config_experts.ini"
        ],
        "dtu-deep-learning/scripts/sbatch_train.sh": [
            "requirements.txt"
        ]
    },
    "jrugis/cell_sim_vcl": {
        "cell_sim_vcl/JWR_run_sim.sl": [
            "scripts/compare_bin.py",
            "c_REF.bin"
        ],
        "CellSims/slurm/run_sim_array.sl": [
            "cs.dat",
            "cs.msh"
        ]
    },
    "jrugis/cell_sim": {
        "cell_sim_vcl/JWR_run_sim.sl": [
            "c_REF.bin"
        ],
        "CellSims/slurm/run_sim_array.sl": [
            "cs.dat",
            "cs.msh"
        ]
    },
    "sjaiswal711/CMB_NN": {
        "CMB_NN/cmb.sh": [
            "cmb.py"
        ]
    },
    "LinasVidziunas/Unsupervised-lesion-detection-with-multi-view-MRI-and-autoencoders": {
        "Unsupervised-lesion-detection-with-multi-view-MRI-and-autoencoders/setup.sh": [
            "requirements.txt"
        ]
    },
    "jflournoy/hcpd_task_behavior": {
        "hcpd_task_behavior/sbatch_array_fit_behavioral_model.bash": [
            "fit_behavioral_model.R"
        ]
    },
    "YacineBelHadj/ssl_tuning_dd": {
        "ssl_tuning_dd/run_torque.sh": [
            "src/train.py",
            "./src/train.py"
        ],
        "ssl_tuning_dd/run.sh": [
            "src/train.py",
            "./src/train.py"
        ]
    },
    "tlmakinen/deep21": {
        "deep21/run.sh": [
            "train.py"
        ]
    },
    "QuKunLab/ecc_pipe": {
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_10.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_9.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_7.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_8.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_1.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/circlemap_slurm/circlemap_5.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/QC_slurm/QC_1.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/QC_slurm/QC_5.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/QC_slurm/QC_3.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/QC_slurm/QC_7.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/example/paper/Fig3/Circle-Map/downstream/QC_slurm/QC_2.sh": [
            "ecc_pipe_master.py"
        ],
        "ecc_pipe/jobspec-cfg/ecc_pipe_master.py": [
            "circlemap.py",
            "AA.py",
            "cresil.py",
            "fled.py",
            "QC.py"
        ]
    },
    "SimonSchrodi/lattice_boltzmann_parallel_solver": {
        "lattice_boltzmann_parallel_solver/run_reynold_strouhal.job": [
            "src/main.py"
        ]
    },
    "rmclarke/OptimisingWeightUpdateHyperparameters": {
        "OptimisingWeightUpdateHyperparameters/PennTreebank/PennTreebank_Part2.slurm": [
            "./configs/penn_treebank.yaml"
        ],
        "OptimisingWeightUpdateHyperparameters/PennTreebank/PennTreebank_Part1.slurm": [
            "./configs/penn_treebank.yaml"
        ],
        "OptimisingWeightUpdateHyperparameters/PennTreebank/PennTreebank_default.slurm": [
            "./configs/penn_treebank.yaml"
        ],
        "OptimisingWeightUpdateHyperparameters/CIFAR-10/CIFAR-10.slurm": [
            "./configs/cifar10.yaml"
        ],
        "SeriesOfHessianVectorProducts/partial_x50.slurm": [
            "train.py"
        ],
        "SeriesOfHessianVectorProducts/x50.slurm": [
            "train.py",
            "configs/fashion_mnist.yaml"
        ]
    },
    "rmclarke/SeriesOfHessianVectorProducts": {
        "SeriesOfHessianVectorProducts/partial_x50.slurm": [
            "train.py"
        ],
        "SeriesOfHessianVectorProducts/x50.slurm": [
            "train.py",
            "configs/fashion_mnist.yaml",
            "configs/Adam.yaml"
        ]
    },
    "qfournier/dimensionality_reduction": {
        "dimensionality_reduction/ComputeCanada/uji_dimension.sh": [
            "main.py"
        ]
    },
    "Bhanu068/ITHN": {
        "ITHN/run_mimic_cxr.sh": [
            "main.py"
        ],
        "ITHN/run_iu_xray.sh": [
            "main.py",
            "data/iu_xray/topk_pos_neg_iu_xray.json"
        ]
    },
    "nightingal3/llm-pretraining-behaviours": {
        "llm-pretraining-behaviours/jobspec-cfg/demo_scripts/train_model.sh": [
            "demo_scripts/train_model.sh"
        ],
        "llm-pretraining-behaviours/demo_scripts/train_model_arr.sh": [
            "demo_scripts/train_model.sh"
        ]
    },
    "rnabioco/morrison-lnsc": {
        "rnaroids/pipeline/snakecharmer.sh": [
            "Snakefile"
        ],
        "rhumba/haircut/snakecharmer.sh": [
            "Snakefile"
        ],
        "rhumba/spaceranger/run.sh": [
            "Snakefile"
        ],
        "rhumba/BRUseq/snakecharmer.sh": [
            "Snakefile"
        ],
        "rhumba/scRNAseq/snakecharmer.sh": [
            "Snakefile"
        ],
        "rhumba/rnaseq/snakecharmer.sh": [
            "Snakefile"
        ],
        "medulloblast/pipeline/snakecharmer.sh": [
            "Snakefile"
        ],
        "scrna-subsets/pipeline/snakecharmer.sh": [
            "Snakefile"
        ],
        "morrison-lnsc/run.sh": [
            "Snakefile",
            "src/configs/2021-01-08.yaml",
            "src/configs/2021-04-16.yaml",
            "src/configs/2021-07-16.yaml"
        ]
    },
    "zalsafwani/thesis": {
        "thesis/stat.slurm": [
            "metadata.tsv"
        ]
    },
    "jcd496/PyTorch-WaveNet": {
        "PyTorch-WaveNet/launch_multinode.s": [
            "train.py"
        ]
    },
    "anto1282/NPhAnTom": {
        "NPhAnTom/nphantom_2.sh": [
            "NPhAnToM.nf"
        ],
        "NPhAnTom/nphantom_copy.sh": [
            "NPhAnToM.nf"
        ],
        "NPhAnTom/jobspec-cfg/NPhAnToM.nf": [
            "NPhAnToM.nf"
        ]
    },
    "efirdc/Segmentation-Pipeline": {
        "Segmentation-Pipeline/jobspec-cfg/research/dmri_hippo/generate_parallel_commands.py": [
            "research/dmri_hippo/generate_parallel_commands.py"
        ],
        "Segmentation-Pipeline/research/scripts/slurm/dmri_aug_exp_array.sh": [
            "research/dmri_hippo/generate_parallel_commands.py"
        ]
    },
    "Noobtoss/pytorch-CycleGAN-and-pix2pix": {
        "pytorch-CycleGAN-and-pix2pix/train_cycleGAN.sh": [
            "train.py",
            "test.py"
        ],
        "pytorch-CycleGAN-and-pix2pix/jobspec-cfg/test.py": [
            "test.py",
            "options/base_options.py",
            "options/test_options.py"
        ],
        "pytorch-CycleGAN-and-pix2pix/jobspec-cfg/train.py": [
            "train.py",
            "options/base_options.py",
            "options/train_options.py"
        ]
    },
    "NBCLab/PACE": {
        "PACE/code/denoising_job.sbatch": [
            "code/denoising.py"
        ],
        "PACE/code/rsfc-roi2roi_job.sbatch": [
            "code/rsfc-roi2roi.py"
        ],
        "PACE/code/qcfc_job.sh": [
            "code/qcfc.py"
        ],
        "PACE/code/mriqc-group_job.sh": [
            "code/mriqc-group.py"
        ],
        "PACE/code/rsfc-seed2voxel_job.sbatch": [
            "code/rsfc-seed2voxel.py"
        ],
        "PACE/code/rsfc-group_job.sbatch": [
            "code/rsfc-group.py"
        ]
    },
    "ybgdgh/L3MVN": {
        "L3MVN/per_frontier_llm_vis.sh": [
            "main_llm_vis.py",
            "pretrained_models/llm_model.pt"
        ]
    },
    "cannin/mnist-cnn-gpu": {
        "mnist-cnn-gpu/slurm.sh": [
            "mnist_cnn_gpu.py"
        ]
    },
    "andreamiele/svdformer_": {
        "svdformer_/run_dep.slurm": [
            "pointnet2_ops_lib/setup.py",
            "metrics/CD/chamfer3D/setup.py",
            "metrics/EMD/setup.py"
        ]
    },
    "arifein/GCHP_Hg_rundir": {
        "GCHP_Hg_rundir/gchp.run": [
            "runConfig.sh",
            "GCHP.rc"
        ],
        "GCHP_Hg_rundir/jobspec-cfg/GCHP.rc": [
            "HEMCO_Config.rc"
        ],
        "GCHP_Hg_rundir/jobspec-cfg/runConfig.sh": [
            "./runConfig.sh",
            "HISTORY.rc",
            "input.geos",
            "HEMCO_Config.rc",
            "logging.yml",
            "runConfig.sh",
            "ExtData.rc",
            "GCHP.rc",
            "HEMCO_Diagn.rc",
            "input.nml",
            "CAP.rc"
        ]
    },
    "entitize/MaskGIT-PAT": {
        "MaskGIT-PAT/jobs/create_dataset.sh": [
            "create_cnn_dataset.py"
        ],
        "MaskGIT-PAT/jobs/baseline_landscape_job.sh": [
            "training_vqgan.py"
        ],
        "MaskGIT-PAT/jobs/cnn_inpainting_landscape.sh": [
            "cnn_inpainting.py"
        ],
        "MaskGIT-PAT/jobs/load_predict_cnn.sh": [
            "load_and_predict_cnn.py"
        ]
    },
    "proteanplanet/MPAS-Analysis": {
        "MPAS-Analysis/configs/alcf/job_script.cooley.30to10.bash": [
            "LICENSE"
        ],
        "MPAS-Analysis/configs/alcf/job_script.cooley.18to6.bash": [
            "LICENSE"
        ],
        "MPAS-Analysis/configs/olcf/job_script.olcf.bash": [
            "LICENSE"
        ]
    },
    "Dowell-Lab/Nascent-Flow": {
        "Nascent-Flow/fijirunexample.sh": [
            "main.nf"
        ],
        "Nascent-Flow/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "HongliMi/DistSpMV_Balanced": {
        "DistSpMV_Balanced/script/reorder%3D1_8_4.slurm": [
            "./env.sh",
            "./reorder"
        ],
        "DistSpMV_Balanced/script/spmv%3D8_64_4.slurm": [
            "./env.sh",
            "./spmv"
        ],
        "DistSpMV_Balanced/script/spmv%3D1_8_4.slurm": [
            "./env.sh",
            "./spmv"
        ],
        "DistSpMV_Balanced/script/reorder%3D8_64_4.slurm": [
            "./env.sh",
            "./reorder"
        ],
        "DistSpMV_Balanced/script/spmv%3D1_1_4.slurm": [
            "./env.sh",
            "./spmv"
        ],
        "DistSpMV_Balanced/script/spmv%3D4_32_4.slurm": [
            "./env.sh",
            "./spmv"
        ],
        "DistSpMV_Balanced/script/spmv%3D1_4_4.slurm": [
            "./env.sh",
            "./spmv"
        ],
        "DistSpMV_Balanced/script/balanced%3D2_16_4.slurm": [
            "./env.sh",
            "./balanced"
        ],
        "DistSpMV_Balanced/script/reorder%3D1_2_4.slurm": [
            "./env.sh",
            "./reorder"
        ],
        "DistSpMV_Balanced/script/balanced%3D4_32_4.slurm": [
            "./env.sh",
            "./balanced"
        ],
        "DistSpMV_Balanced/script/balanced%3D1_1_4.slurm": [
            "./env.sh",
            "./balanced"
        ],
        "DistSpMV_Balanced/script/balanced%3D1_2_4.slurm": [
            "./env.sh",
            "./balanced"
        ],
        "DistSpMV_Balanced/script/reorder%3D1_4_4.slurm": [
            "./env.sh",
            "./reorder"
        ],
        "DistSpMV_Balanced/script/balanced%3D8_64_4.slurm": [
            "./env.sh",
            "./balanced"
        ]
    },
    "rf2485/aaic_2024": {
        "aaic_2024/3_fmap_corr.sh": [
            "fmap_corr.py"
        ]
    },
    "arashb/turbulent_lbm_multigpu": {
        "turbulent_lbm_multigpu/sb_todi.sbatch": [
            "./benchmark.py"
        ]
    },
    "junkataoka/AVATAR": {
        "AVATAR/pretrain_avatar_lsf.sh": [
            "src/main.py"
        ]
    },
    "prathebaselva/Moai": {
        "Moai/moai.sh": [
            "train_multi.py"
        ]
    },
    "xiwang129/3D-Clothes-Generation": {
        "3D-Clothes-Generation/hpc/run-job.SBATCH": [
            "modelTrain.py"
        ]
    },
    "williamberman/diffusers-utils": {
        "diffusers-utils/training_loop.slurm": [
            "training_loop.py"
        ]
    },
    "williamberman/nano-diffusion": {
        "nano-diffusion/train.slurm": [
            "train.py"
        ]
    },
    "dtuzi123/InfoVAEGAN": {
        "InfoVAEGAN/my1.sh": [
            "InfoVAE_STL10.py"
        ]
    },
    "chrasa/removal-of-imaging-artifacts-NN": {
        "removal-of-imaging-artifacts-NN/train_nn_rtm.sh": [
            "train_nn.py"
        ],
        "removal-of-imaging-artifacts-NN/train_nn_rom.sh": [
            "train_nn.py"
        ]
    },
    "nextgenusfs/funannotate-paper": {
        "funannotate-paper/funannotate-neurospora.sh": [
            "maker_base_opts.ctl",
            "maker_rna_opts.ctl"
        ]
    },
    "WOnder93/argon2-gpu": {
        "argon2-gpu/scripts/metacentrum/start-benchmark.sh": [
            "scripts/run-benchmark.sh"
        ]
    },
    "RDCEP/hadisd": {
        "hadisd/hadisd.sbatch": [
            "./hadisd.sh"
        ]
    },
    "fwindolf/active-matter": {
        "active-matter/run_train.sh": [
            "train.py"
        ]
    },
    "mHead/creativeAI": {
        "creativeAI/run_legion_music2emotions.sh": [
            "run_legion_music2emotions.sh"
        ],
        "creativeAI/jobspec-cfg/run_legion_music2emotions.sh": [
            "run_legion_music2emotions.sh"
        ]
    },
    "Siddharth-Gandhi/ds": {
        "ds/jobspec-cfg/src/BERTReranker.py": [
            "scripts/bert_rerank.sh"
        ],
        "ds/scripts/bert_rerank.sh": [
            "src/BERTReranker.py"
        ],
        "ds/scripts/scrape/scrape_ramdisk.sh": [
            "misc/code_extensions.json"
        ]
    },
    "klasocha/HiggsCP": {
        "HiggsCP/slurm_scripts/train_model_CPmix_rhorho_short.sh": [
            "setup"
        ],
        "HiggsCP/slurm_scripts/train_model_CPmix_rhorho_short.sh~": [
            "setup"
        ]
    },
    "Delaunay/helios": {
        "helios/singularity.pbs": [
            "mnist.py"
        ],
        "helios/old/srun_2.pbs": [
            "mnist.py"
        ]
    },
    "wblumberg/infraGA": {
        "infraGA/run_rays.reg": [
            "modules",
            "./common.reg",
            "examples/ToyAtmo.met"
        ]
    },
    "bio-ontology-research-group/16SProcessing": {
        "16SProcessing/example_sbatch_16SProcessing.sh": [
            "16SProcessing.nf"
        ]
    },
    "aednv/conservatory-cns-tree-analysis": {
        "conservatory-cns-tree-analysis/nextflow.sh": [
            "cns_tree_generation.nf"
        ]
    },
    "pascalnotin/EVE": {
        "EVE/train_VAE_O2.sh": [
            "train_VAE.py"
        ]
    },
    "ArianaVillegas/simcov": {
        "simcov/slurm_hopper.sh": [
            "covid_default.config"
        ]
    },
    "bridget-smart/LCSFinder": {
        "LCSFinder/ru.sh": [
            "LCSFinder.i",
            "setup.py"
        ],
        "LCSFinder/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "LCSFinder/jobspec-cfg/LCSFinder.i": [
            "LCSFinder.i"
        ]
    },
    "L-KID/Full-Video-Action-Recognition": {
        "Full-Video-Action-Recognition/scripts_example/train_rgb_8c.sh": [
            "main.py"
        ]
    },
    "KLDistance/unet_collision_detector": {
        "unet_collision_detector/job1.sh": [
            "training.py"
        ]
    },
    "wencarol/dis_blip": {
        "dis_blip/blip.slurm": [
            "test.out",
            "train_retrieval.py",
            "./configs/retrieval_flickr_small6.yaml"
        ],
        "dis_blip/jobspec-cfg/train_retrieval.py": [
            "LICENSE.txt"
        ]
    },
    "caglar-hizli/dynamic-causal-mediation": {
        "dynamic-causal-mediation/triton_run_simulation_semi_synth.sh": [
            "simulate/semi_synth/simulate_observational.py",
            "models/benchmarks/fpca/R_script/simulation_fpca.R",
            "simulate/semi_synth/run_simulation.py"
        ],
        "dynamic-causal-mediation/triton_run_outcome_hier_ft.sh": [
            "train/outcome/compare_om_shared_marked_hier.py",
            "train/outcome/compare_om_shared_marked.py"
        ],
        "dynamic-causal-mediation/triton_run_rw_simulation.sh": [
            "train/outcome/compare_om_shared_marked_hier.py",
            "train/mediator/run_mm_pooled.py",
            "simulate/real_world/simulate_counterfactual.py"
        ]
    },
    "jjbrophy47/ibug": {
        "ibug/jobs/train/runner.sh": [
            "jobs/config.sh",
            "scripts/experiments/train.py"
        ],
        "tree_influence/jobs/ru/runner2.sh": [
            "jobs/config.sh"
        ]
    },
    "jjbrophy47/tree_influence": {
        "ibug/jobs/train/runner.sh": [
            "jobs/config.sh"
        ],
        "tree_influence/jobs/ru/runner2.sh": [
            "jobs/config.sh",
            "scripts/experiments/single_test/resources.py"
        ]
    },
    "tbennun/fv3core": {
        "fv3core/.jenkins/jenkins.sh": [
            ".jenkins/jenkins.sh",
            "Makefile"
        ],
        "fv3core/jobspec-cfg/.jenkins/jenkins.sh": [
            ".jenkins/jenkins.sh",
            "Makefile"
        ]
    },
    "RiverFlowsInYou98/DynG2G": {
        "DynG2G/bash_Gen.sh": [
            "Gen.py",
            "configs/config-1.yaml"
        ],
        "DynG2G/bash_Eval.sh": [
            "Eval.py",
            "configs/config-1.yaml"
        ]
    },
    "Jackal1586/dpr_xCodeEval": {
        "dpr_xCodeEval/script_dense_retriever_b32.sh": [
            "dense_retriever.py"
        ],
        "dpr_xCodeEval/script_dense_retriever_b16.sh": [
            "dense_retriever.py"
        ],
        "dpr_xCodeEval/script_dense_retriever_cross_lang.sh": [
            "dense_retriever.py"
        ],
        "dpr_xCodeEval/script_gen_emb_b16.sh": [
            "generate_dense_embeddings.py"
        ],
        "dpr_xCodeEval/script_gen_emb_b32.sh": [
            "generate_dense_embeddings.py"
        ]
    },
    "Jonalex7/Benchmark_BNNs_StructuralReliability": {
        "Benchmark_BNNs_StructuralReliability/launch.sbatch": [
            "main_train.py"
        ]
    },
    "mare5x/reiter-snowflakes": {
        "reiter-snowflakes/scripts/compare_all.sh": [
            "src/serial.c",
            "src/openmp.c"
        ]
    },
    "IloDan/GX_alBERTo": {
        "GX_alBERTo/train.sbatch": [
            "train.py"
        ]
    },
    "jsedoc/Parrot_Paraphraser": {
        "Parrot_Paraphraser/dstc11_parrot.sbatch": [
            "parrot/paraphrase.py"
        ]
    },
    "premmuvva/DOH": {
        "DOH/runCmd.sh": [
            "./pcap_split.sh"
        ]
    },
    "cwilson51/CO-Colloquium-Skorch": {
        "CO-Colloquium-Skorch/cifar10_resnet_gs.sh": [
            "cifar10_resnet.py"
        ],
        "CO-Colloquium-Skorch/cifar10_resnet_gs_parallel.sh": [
            "cifar10_resnet_parallel.py"
        ]
    },
    "raghavjajodia/unsupervised_nlu": {
        "unsupervised_nlu/sbatch.sh": [
            "LM_LatentVariable.py"
        ]
    },
    "leo-liuzy/fairseq-apollo": {
        "fairseq-apollo/run_pilot.slurm": [
            "fairseq_cli/train.py"
        ],
        "fairseq-apollo/jobspec-cfg/fairseq_cli/train.py": [
            "LICENSE"
        ],
        "fairseq-apollo/checkpoints/bszPerGPU64updateFreq1_lr1e-5_update5200_dropout0.3_XLM_pilot_run_21Langs_MCL/run.sh": [
            "fairseq_cli/train.py"
        ],
        "fairseq-apollo/checkpoints/bszPerGPU8updateFreq1_lr1e-5_update5200_dropout0.3_XLM_pilot_run_21Langs_debug_MCL/run.sh": [
            "fairseq_cli/train.py"
        ],
        "fairseq-apollo/checkpoints/bszPerGPU64_lr1e-5_update5200_dropout0.2_XLM_pilot_run_21Langs_MCL/run.sh": [
            "fairseq_cli/train.py"
        ]
    },
    "blackhatethicalhacking/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "mpg-age-bioinformatics/htseq-tools": {
        "htseq-tools/kallisto_deseq2.sh": [
            "david_to_cellplot.R"
        ],
        "htseq-tools/tuxedo_v3-slurm.sh": [
            "aDiff"
        ],
        "htseq-tools/jobspec-cfg/david_to_cellplot.R": [
            "david_to_cellplot.R",
            "CellPlot"
        ]
    },
    "davidaray/bioinfo_tools": {
        "bioinfo_tools/TEcurate.sh": [
            "TEcurate.sh",
            "rmodel.py",
            "template_extend_align.sh"
        ],
        "bioinfo_tools/TEblastp.sh": [
            "TEblastp.sh",
            "template_extend_align.sh"
        ],
        "bioinfo_tools/rmodel.sh": [
            "rmodel.py"
        ],
        "bioinfo_tools/jobspec-cfg/TEcurate.sh": [
            "TEcurate.sh",
            "rmodel.py",
            "template_extend_align.sh"
        ],
        "bioinfo_tools/jobspec-cfg/TEblastp.sh": [
            "TEblastp.sh",
            "template_extend_align.sh"
        ],
        "bioinfo_tools/jobspec-cfg/template_extend_align.sh": [
            "extract_align.py"
        ]
    },
    "LeoWood/bert-horovod": {
        "bert-horovod/cMedQA2_base.sbatch": [
            "run_classifier_hvd.py"
        ],
        "bert-horovod/Sbatch4_pre_cscd_all_128_wwm_from_scratch-bak.sbatch": [
            "Sbatch4.out"
        ],
        "bert-horovod/cMedQA2_pre_3_old.sbatch": [
            "run_classifier_hvd.py"
        ],
        "bert-horovod/Pre1_cscd_all_512_from_bert.sbatch": [
            "Pre1.out"
        ],
        "bert-horovod/Sbatch6_pre_cscd_all_128_from_bert.sbatch": [
            "Sbatch6.out"
        ],
        "bert-horovod/Pre2_cscd_all_512_from_scratch.sbatch": [
            "Pre2.out"
        ],
        "bert-horovod/Sbatch4_pre_cscd_all_128_wwm_from_scratch.sbatch": [
            "Sbatch4.out"
        ],
        "bert-horovod/Sbatch3_pre_cscd_all_128_wwm_from_bert.sbatch": [
            "Sbatch3.out"
        ]
    },
    "DhruvDh/slm-blackjack-synthetic-training": {
        "slm-blackjack-synthetic-training/new-run-eval-job.sh": [
            "new-eval.py"
        ]
    },
    "ToyHaoran/DiffusionBox": {
        "DiffusionBox/run/env.sh": [
            "setup.py",
            "requirements.txt"
        ]
    },
    "Lunaire86/targeted-sentiment-analysis": {
        "targeted-sentiment-analysis/precode/baseline_pt.slurm": [
            "precode/baseline.py"
        ]
    },
    "joshvillarreal/rfq-nn": {
        "rfq-nn/runDropoutD7TransCut_lr10.sh": [
            "scan_hyperparameters_withcellnum.jl"
        ],
        "rfq-nn/runDropoutD7TransCut_lr1.sh": [
            "scan_hyperparameters_withcellnum.jl"
        ],
        "rfq-nn/runDropoutD7TransCut_lr3.sh": [
            "scan_hyperparameters_withcellnum.jl"
        ]
    },
    "danisbet/machine-lip-reading": {
        "machine-lip-reading/train_cnn.sh": [
            "train_cnn.py"
        ]
    },
    "volodymyrss/cli-bao-ygg-unige": {
        "cli-bao-ygg-unige/bao.sh": [
            "bao.sh"
        ],
        "cli-bao-ygg-unige/jobspec-cfg/bao.sh": [
            "bao.sh"
        ]
    },
    "castorini/afriteva": {
        "afriteva/train.sh": [
            "src/trainer.py",
            "training_configs/t5_base.json"
        ]
    },
    "ThePhosphorus/Bug-Deduplication": {
        "Bug-Deduplication/S3M.sh": [
            "experiments/s3m_trainer.py"
        ]
    },
    "danxuZhang/icon-isc24": {
        "icon-isc24/scripts/exec-nvhpc-gpu.sbatch": [
            "./tasks/20k.nc"
        ],
        "icon-isc24/scripts/levante-cpu.sbatch": [
            "scripts/levante-setup.sh",
            "scripts/build.sh"
        ],
        "icon-isc24/scripts/build-run-single.sbatch": [
            "./tasks/20k.nc",
            "./reference_results/sequential_single_20k.nc"
        ],
        "icon-isc24/scripts/build-run-double.sbatch": [
            "./tasks/20k.nc",
            "./reference_results/sequential_double_20k.nc"
        ]
    },
    "lifebit-ai/splicing-pipelines-nf": {
        "splicing-pipelines-nf/main.pbs": [
            "NF_splicing_pipeline.config",
            "DAG.png"
        ]
    },
    "yogeshd21/CVPM-2023-iPPG-Paper": {
        "CVPM-2023-iPPG-Paper/Jobfaceskin.sh": [
            "TrnTstFaceSkin.py"
        ],
        "CVPM-2023-iPPG-Paper/Jobtest.sh": [
            "Testmodel.py"
        ],
        "CVPM-2023-iPPG-Paper/Jobframes1.sh": [
            "TrnTst_DeepPhys.py"
        ]
    },
    "SimonTett/aus_rain_analysis": {
        "aus_rain_analysis/submit_pbs_cmd.sh": [
            "./setup.sh"
        ],
        "aus_rain_analysis/pbs_process.sh": [
            "./setup.sh"
        ],
        "aus_rain_analysis/submit_process_reflectivity.sh": [
            "./setup.sh"
        ]
    },
    "hdacnw/4dgs": {
        "4dgs/jobspec-cfg/train.py": [
            "LICENSE.md"
        ],
        "4dgs/scripts/train_dnerf.sh": [
            "train.py",
            "arguments/dnerf/chicken_cam.py"
        ]
    },
    "kasliwalayush/SoftTissue-Tumor-Detection": {
        "SoftTissue-Tumor-Detection/pbs-petscan-seg.sh": [
            "ct-scan-seg.py"
        ]
    },
    "youngsjjn/MemSeg": {
        "MemSeg/jobspec-cfg/tool/test.sh": [
            "tool/test.sh",
            "tool/test.py"
        ],
        "MemSeg/jobspec-cfg/tool/train_mem.sh": [
            "tool/train_mem.sh",
            "tool/train_mem.py",
            "tool/test.sh",
            "tool/test_mem.py"
        ],
        "MemSeg/jobspec-cfg/tool/train_mem.py": [
            "config/ade20k/ade20k_pspnet50.yaml"
        ],
        "MemSeg/jobspec-cfg/tool/test_mem.py": [
            "config/ade20k/ade20k_pspnet50.yaml"
        ],
        "MemSeg/tool/train_mem.sh": [
            "tool/train_mem.sh",
            "tool/train_mem.py",
            "tool/test.sh",
            "tool/test_mem.py"
        ]
    },
    "INK-USC/ReCross": {
        "ReCross/jobspec-cfg/scripts/no_ret/few_shot.sh": [
            "scripts/no_ret/few_shot.sh"
        ],
        "ReCross/scripts/no_ret/few_shot.sh": [
            "scripts/no_ret/few_shot.sh"
        ]
    },
    "soichih/app-LBspectrum_matlab": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/kwyk_neuronet": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/app-conn-preprocessing": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/app-networkneuro": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/HD-BET_app": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/app-mp2rage-denoiseUNI": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/app-NODDI_AMICO": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "soichih/app-converttck2trk": {
        "app-AFQclean/submit.pbs": [
            "main"
        ],
        "app-tract-profile/submit.pbs": [
            "main"
        ]
    },
    "gouttham/LISA": {
        "LISA/inf.sh": [
            "chat.py"
        ],
        "LISA/export.sh": [
            "merge_lora_weights_and_save_hf_model.py"
        ]
    },
    "macr1408/fluxion": {
        "fluxion/fluxion.sh": [
            "./fluxion.sh"
        ],
        "fluxion/jobspec-cfg/fluxion.sh": [
            "./fluxion.sh"
        ]
    },
    "chenwuperth/claran": {
        "claran/slurm_pred.sh": [
            "train.py"
        ],
        "claran/slurm_train.sh": [
            "train.py"
        ],
        "claran/slurm_eval.sh": [
            "train.py"
        ],
        "claran/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "sebastienwood/SamsonViT": {
        "SamsonViT/run_experiment.sh": [
            "main.py"
        ]
    },
    "sebastienwood/MemSE": {
        "MemSE/experiments/paper/run_experiment.sh": [
            "experiments/paper/opt_profile.py",
            "experiments/paper/opt.py"
        ]
    },
    "Sydney-Informatics-Hub/Germline-StructuralV-nf": {
        "Germline-StructuralV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Germline-StructuralV-nf/scripts/SLURM_setonix_runpipeline.sh": [
            "main.nf",
            "config/setonix.config"
        ],
        "Germline-StructuralV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Germline-StructuralV-nf/scripts/PBS_gadi_runpipeline.sh": [
            "main.nf"
        ],
        "SomaticShortV_makePON-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ],
        "Somatic-shortV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Somatic-shortV-nf/scripts/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ]
    },
    "Sydney-Informatics-Hub/SomaticShortV_makePON-nf": {
        "Germline-StructuralV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Germline-StructuralV-nf/scripts/SLURM_setonix_runpipeline.sh": [
            "main.nf"
        ],
        "Germline-StructuralV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Germline-StructuralV-nf/scripts/PBS_gadi_runpipeline.sh": [
            "main.nf"
        ],
        "SomaticShortV_makePON-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ],
        "Somatic-shortV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Somatic-shortV-nf/scripts/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ]
    },
    "Sydney-Informatics-Hub/Scalable-DIA-NN": {
        "Scalable-DIA-NN/jobspec-cfg/Scripts/2_subsample_averages.pl": [
            "Scripts/2_preliminary_analysis_run_parallel.pbs"
        ],
        "Scalable-DIA-NN/Scripts/0_setup.sh": [
            "Scripts/0_setup_params.txt",
            "Scripts/3_assemble_empirical_lib.pbs",
            "Scripts/4_individual_final_analysis.sh",
            "Scripts/2_select_subsamples.pl",
            "Scripts/2_preliminary_analysis_make_input.sh",
            "Scripts/2_preliminary_analysis_run_parallel.pbs",
            "Scripts/2_subsample_averages.pl",
            "Scripts/4_individual_final_analysis_make_input.sh",
            "Scripts/1_generate_insilico_lib.pbs"
        ]
    },
    "Sydney-Informatics-Hub/Flashlite-Trinity": {
        "Flashlite-Trinity/trinity_2.pbs": [
            "trinity_1.pbs"
        ]
    },
    "Sydney-Informatics-Hub/Somatic-shortV-nf": {
        "Germline-StructuralV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Germline-StructuralV-nf/scripts/SLURM_setonix_runpipeline.sh": [
            "main.nf",
            "config/setonix.config"
        ],
        "Germline-StructuralV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Germline-StructuralV-nf/scripts/PBS_gadi_runpipeline.sh": [
            "main.nf"
        ],
        "SomaticShortV_makePON-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ],
        "Somatic-shortV-nf/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "Somatic-shortV-nf/scripts/pullContainers.sh": [
            "nextflow.config"
        ],
        "Somatic-shortV-nf/scripts/run_pipeline_on_gadi_script.sh": [
            "main.nf"
        ]
    },
    "JesseFarebro/PixelCNNPP": {
        "PixelCNNPP/.jobs/train-cifar10.sh": [
            "main.py",
            "experiments/cifar10.gin"
        ],
        "PixelCNNPP/.jobs/train-mnist.sh": [
            "main.py",
            "experiments/mnist.gin"
        ]
    },
    "gkwt/reinvent-benchmarking": {
        "reinvent-benchmarking/submit-train.sh": [
            "train_prior.py"
        ]
    },
    "vchuravy/slurmci": {
        "slurmci/jobspec-cfg/finalize-perf.jl": [
            "finalize-perf.jl"
        ],
        "slurmci/scripts/perf-cleanup.sh": [
            "finalize-perf.jl"
        ]
    },
    "adumit/Petteia_Player": {
        "Petteia_Player/runNetwork.slurm": [
            "NNetwork.py"
        ]
    },
    "danielmlow/reddit": {
        "reddit/run_v8_4.sh": [
            "run.py"
        ],
        "reddit/run_v8_0.sh": [
            "run.py"
        ],
        "reddit/run_v8_2.sh": [
            "run.py"
        ],
        "reddit/run_v8_1.sh": [
            "run.py"
        ]
    },
    "abaillod/csx_combined_optimization": {
        "csx_combined_optimization/run_combined_approach_pickle.sb": [
            "combined_csx_optimization.py"
        ],
        "csx_combined_optimization/run_analysis.sb": [
            "run_analysis.py"
        ],
        "csx_combined_optimization/run_combined_approach.sb": [
            "combined_csx_optimization.py"
        ],
        "csx_combined_optimization/jobspec-cfg/combined_csx_optimization.py": [
            "combined_csx_optimization.py"
        ]
    },
    "tuonglab/trust4-processing": {
        "trust4-processing/trust4batch.sh": [
            "trust4run.sh"
        ],
        "trust4-processing/trust4_run_fastq_batch.sh": [
            "trust4_run_fastq.sh"
        ]
    },
    "karanchawla/visual_navigation": {
        "visual_navigation/script.sh": [
            "model.py"
        ],
        "visual_navigation/bash.sh": [
            "model.py"
        ]
    },
    "jacquesboitreaud/vina_docking": {
        "vina_docking/job_array.sh": [
            "dock_df.py"
        ]
    },
    "eggersn/DistributedFFT": {
        "DistributedFFT/jobs/argon/pencil/slurm_scripts/run_pencil.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/krypton/slab/slurm_scripts/run_slab.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/pencil/slurm_scripts/run_pencil_4_cuda1.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/pencil/slurm_scripts/run_pencil_8_large.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/pencil/slurm_scripts/run_pencil_8_small.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/pencil/slurm_scripts/run_pencil_8_large_cuda1.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/slab/slurm_scripts/run_slab_8_small.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/slab/slurm_scripts/run_slab_8_large.sbatch": [
            "launch.py"
        ],
        "DistributedFFT/jobs/bwunicluster/slab/slurm_scripts/run_slab_8_medium.sbatch": [
            "launch.py"
        ]
    },
    "karimn/takeup": {
        "takeup/slurm_postprocess.sh": [
            "quick_postprocess.sh",
            "quick_ate_postprocess.R",
            "quick_submodel_postprocess.R",
            "quick_roc_postprocess.R"
        ],
        "takeup/postprocess.sh": [
            "./postprocess_dist_fit.R"
        ],
        "takeup/r-batch-submit.sh": [
            "run_takeup.R",
            "postprocess_dist_fit.R"
        ],
        "takeup/optim/run_acropolis_optim.sh": [
            "./optim/create-distance-data.R",
            "./optim/predict-takeup-for-optim.R",
            "./optim/create-village-target.R",
            "./optim/optimal_allocation.R",
            "./optim/postprocess_allocation.R"
        ],
        "takeup/jobspec-cfg/postprocess_dist_fit.R": [
            "postprocess_dist_fit.R"
        ],
        "takeup/jobspec-cfg/quick_ate_postprocess.R": [
            "quick_ate_postprocess.R"
        ],
        "takeup/jobspec-cfg/quick_postprocess.sh": [
            "quick_ate_postprocess.R",
            "quick_roc_postprocess.R",
            "quick_submodel_postprocess.R"
        ],
        "takeup/jobspec-cfg/quick_submodel_postprocess.R": [
            "quick_submodel_postprocess.R"
        ],
        "takeup/jobspec-cfg/quick_roc_postprocess.R": [
            "quick_roc_postprocess.R"
        ],
        "takeup/jobspec-cfg/run_takeup.R": [
            "run_takeup.R"
        ]
    },
    "TAkkerboom/DL2_socratic_models_team_2": {
        "DL2_socratic_models_team_2/lisa.job": [
            "main.py"
        ]
    },
    "KennthShang/PhaGCN_newICTV": {
        "PhaGCN_newICTV/job.sb": [
            "log.out",
            "run_Speed_up.py"
        ],
        "PhaGCN_newICTV/jobspec-cfg/run_Speed_up.py": [
            "database/Caudovirales_protein.fasta",
            "run_KnowledgeGraph.py"
        ]
    },
    "jamtrott/ex3modules": {
        "ex3modules/slurm/ex3/ex3modules_intel_xeon_gold_6130.sbatch": [
            "ex3modules",
            "slurm/ex3/ex3modules_intel_xeon_gold_6130.sbatch",
            "./ex3modules"
        ],
        "ex3modules/jobspec-cfg/slurm/ex3/ex3modules_intel_xeon_gold_6130.sbatch": [
            "ex3modules",
            "slurm/ex3/ex3modules_intel_xeon_gold_6130.sbatch",
            "./ex3modules"
        ]
    },
    "xboix/convex_adversarial": {
        "convex_adversarial/slurm/run.sh": [
            "main.py"
        ]
    },
    "xboix/insideness": {
        "convex_adversarial/slurm/run.sh": [
            "main.py"
        ]
    },
    "xboix/minimal-cifar": {
        "convex_adversarial/slurm/run.sh": [
            "main.py"
        ]
    },
    "MotasemAlfarra/federated-learning-with-pytorch": {
        "federated-learning-with-pytorch/certify_local_models.sh": [
            "certify.py"
        ],
        "federated-learning-with-pytorch/local_train_fl.sh": [
            "train_local_model.py",
            "model_averaging.py",
            "local_train_fl.sh",
            "certify_local_models.sh"
        ],
        "federated-learning-with-pytorch/initialize.sh": [
            "initialize_models_for_clients.py"
        ],
        "federated-learning-with-pytorch/jobspec-cfg/certify_local_models.sh": [
            "certify.py"
        ],
        "federated-learning-with-pytorch/jobspec-cfg/local_train_fl.sh": [
            "train_local_model.py",
            "model_averaging.py",
            "local_train_fl.sh",
            "certify_local_models.sh"
        ]
    },
    "TorAP/AML": {
        "AML/jobs/gpu.job": [
            "src/cyclegan_with_monitoring.py"
        ]
    },
    "bigcode-project/Megatron-LM": {
        "octopack/training/to_meg.sh": [
            "tools/preprocess_data.py"
        ],
        "octopack/training/preprocess.sh": [
            "tools/preprocess_data.py"
        ]
    },
    "bigcode-project/bigcode-evaluation-harness": {
        "octopack/evaluation/other/val.sh": [
            "main.py"
        ],
        "octopack/evaluation/run/eval_scripts/starcoder/eval_starcoder_humanevalfix.sh": [
            "main.py"
        ],
        "octopack/evaluation/run/eval_scripts/diffcodegen2b/eval_diffcodegen2b_humanevalfix.sh": [
            "main.py"
        ],
        "octopack/evaluation/run/eval_scripts/bloomz/eval_bloomz_humanevalfix.sh": [
            "main.py"
        ],
        "octopack/evaluation/run/eval_scripts/starchatbeta/eval_starchatbeta_humanevalfix.sh": [
            "main.py"
        ],
        "octopack/evaluation/run/eval_scripts/instructcodet5p/eval_instructcodet5p_humanevalfix.sh": [
            "main.py"
        ]
    },
    "acgoglio/tpxo2eas": {
        "tpxo2eas/tidez_dayextr.job": [
            "tpxo_dayextr.ini",
            "DATA/Model_atlas"
        ],
        "tpxo2eas/jobspec-cfg/tpxo_dayextr.ini": [
            "tidez_dayextr.job"
        ]
    },
    "kleag/HazPi": {
        "HazPi/train-fia2.slurm": [
            "train_transformer.py"
        ],
        "HazPi/train.slurm": [
            "train_transformer.py"
        ],
        "HazPi/summarize.slurm": [
            "summarize.py"
        ]
    },
    "akhilpm/DroneDetectron2": {
        "DroneDetectron2/dota_launch.sh": [
            "train_net.py",
            "configs/Dota-RCNN-FPN-CROP.yaml",
            "configs/Dota-Base-RCNN-FPN.yaml"
        ],
        "DroneSSOD/slurm_launch.sh": [
            "train_net.py",
            "configs/Base-RCNN-FPN.yaml",
            "configs/RCNN-FPN-CROP.yaml",
            "train_fcos.py",
            "configs/FCOS-CROP.yaml"
        ]
    },
    "akhilpm/DroneSSOD": {
        "DroneDetectron2/dota_launch.sh": [
            "train_net.py",
            "configs/Dota-RCNN-FPN-CROP.yaml",
            "configs/Dota-Base-RCNN-FPN.yaml"
        ],
        "DroneSSOD/slurm_launch.sh": [
            "train_net.py",
            "configs/Base-RCNN-FPN.yaml",
            "configs/visdrone/Semi-Sup-RCNN-FPN.yaml",
            "configs/RCNN-FPN-CROP.yaml",
            "configs/visdrone/Semi-Sup-RCNN-FPN-CROP.yaml",
            "train_fcos.py",
            "configs/FCOS-CROP.yaml",
            "train_qdet.py",
            "configs/query_det/QueryDet.yaml",
            "configs/query_det/QueryDet_SSOD.yaml"
        ]
    },
    "niklasbrake/EEG_modelling": {
        "EEG_modelling/simulations/synthetic_spikes/shuffle_synapses.sh": [
            "requirements.txt"
        ]
    },
    "MkramerPsych/MidwaySSD_Examples": {
        "MidwaySSD_Examples/MATLAB_parallel_example.sbatch": [
            "MATLAB_example.m"
        ],
        "MidwaySSD_Examples/matlab_example.sbatch": [
            "MATLAB_example.m"
        ],
        "MidwaySSD_Examples/jobspec-cfg/MATLAB_example.m": [
            "MATLAB_example.m"
        ]
    },
    "ducongju/Scale-sensitive-Heatmap": {
        "Scale-sensitive-Heatmap/ready.sh": [
            "requirements.txt",
            "setup.py"
        ],
        "HAE/jobspec-cfg/setup.py": [
            "setup.py"
        ]
    },
    "ducongju/HAE": {
        "Scale-sensitive-Heatmap/ready.sh": [
            "requirements.txt",
            "setup.py"
        ],
        "HAE/jobspec-cfg/requirements.txt": [
            "requirements/build.txt",
            "requirements/runtime.txt",
            "requirements/tests.txt",
            "requirements/optional.txt"
        ],
        "HAE/jobspec-cfg/setup.py": [
            "setup.py"
        ]
    },
    "IFB-ElixirFr/FAIR_EBAII_n2": {
        "FAIR_EBAII_n2/runAnalysis.slurm": [
            "demo.smk",
            "config.yml",
            "sartools.R"
        ],
        "journeeAxeBioinfo_2020/runAnalysis.slurm": [
            "demo.smk",
            "config.yml",
            "sartools.R"
        ]
    },
    "IFB-ElixirFr/journeeAxeBioinfo_2020": {
        "FAIR_EBAII_n2/runAnalysis.slurm": [
            "demo.smk",
            "config.yml",
            "sartools.R"
        ],
        "journeeAxeBioinfo_2020/runAnalysis.slurm": [
            "demo.smk",
            "config.yml",
            "sartools.R"
        ]
    },
    "ykawazura/calliope": {
        "calliope/batch/job.pbs-aoba-b": [
            "calliope.in",
            "calliope.out.std"
        ]
    },
    "af-ayala/GPTune": {
        "GPTune/examples/IMPACT-Z/run_examples.sh": [
            "run_env.sh"
        ]
    },
    "pkage/sngp-segmentation": {
        "sngp-segmentation/sngp_seg.sbatch": [
            "main_ddp.py"
        ]
    },
    "aminmalekisadr/MVTS2023": {
        "MVTS2023/mds.sh": [
            "main.py",
            "experiments/Config.yaml"
        ],
        "MVTS2023/tsne.sh": [
            "main.py",
            "experiments/Config.yaml"
        ],
        "MVTS2023/svd.sh": [
            "main.py",
            "experiments/Config.yaml"
        ]
    },
    "zbambergerNLP/depth": {
        "depth/jobspec-cfg/train_encoder_decoder.py": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_rocstory_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_arxiv_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_wiki_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_rocstory_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_arxiv_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_wiki_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_arxiv_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_rocstory_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_rocstory_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_wiki_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_wiki_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_arxiv_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_chat_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_chat_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_t5_dc_wiki_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_t5_dc_chat_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_wiki_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/ni/run_fine_tuning_t5_ni_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/ni/run_fine_tuning_depth_ni_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/stsb/run_fine_tuning_t5_stsb.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/qnli/run_fine_tuning_depth_qnli.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/qnli/run_fine_tuning_t5_qnli.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/rte/run_fine_tuning_depth_rte.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/rte/run_fine_tuning_t5_rte.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_depth_cola_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_t5_cola_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_depth_cola_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_t5_cola_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_depth_mnli_m_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_t5_mnli_m_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_t5_mnli_m.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/mnli_mm/run_fine_tuning_depth_mnli_mm.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/mnli_mm/run_fine_tuning_t5_mnli_mm_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/qqp/run_fine_tuning_t5_qqp.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_t5_sst2_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_depth_sst2_from_scratch.sh": [
            "train_encoder_decoder.py"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_depth_sst2_from_pretrained.sh": [
            "train_encoder_decoder.py"
        ]
    },
    "zbambergerNLP/principled-pre-training": {
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_rocstory_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_arxiv_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_wiki_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_rocstory_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_arxiv_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_wiki_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_arxiv_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_rocstory_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_rocstory_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_wiki_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_depth_sp_wiki_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/sp/run_fine_tuning_t5_sp_arxiv_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_chat_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_chat_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_t5_dc_wiki_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_t5_dc_chat_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/discoeval/discourse_coherence/run_fine_tuning_depth_dc_wiki_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/ni/run_fine_tuning_t5_ni_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/ni/run_fine_tuning_depth_ni_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/stsb/run_fine_tuning_t5_stsb.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/qnli/run_fine_tuning_depth_qnli.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/qnli/run_fine_tuning_t5_qnli.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/rte/run_fine_tuning_depth_rte.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/rte/run_fine_tuning_t5_rte.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_depth_cola_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_t5_cola_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_depth_cola_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/cola/run_fine_tuning_t5_cola_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_depth_mnli_m_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_t5_mnli_m_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/mnli_m/run_fine_tuning_t5_mnli_m.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/mnli_mm/run_fine_tuning_depth_mnli_mm.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/mnli_mm/run_fine_tuning_t5_mnli_mm_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/qqp/run_fine_tuning_t5_qqp.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_t5_sst2_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_depth_sst2_from_scratch.sh": [
            "run_fine_tuning_job.sh"
        ],
        "depth/run_configs/glue/sst2/run_fine_tuning_depth_sst2_from_pretrained.sh": [
            "run_fine_tuning_job.sh"
        ],
        "principled-pre-training/jobspec-cfg/run_fine_tuning_job.sh": [
            "run_fine_tuning_job.sh",
            "fine_tune_t5.py"
        ]
    },
    "RasmusJuul/yolov7_helmet": {
        "Synthetic_Context/Synthetic_Context/submit.sh": [
            "main.py"
        ],
        "yolov7_helmet/submit_train.sh": [
            "train_aux.py",
            "data/custom.yaml",
            "cfg/training/yolov7-e6e-custom.yaml",
            "data/hyp.scratch.custom.yaml",
            "train.py",
            "cfg/training/yolov7-custom.yaml"
        ],
        "yolov7_helmet/submit_detect.sh": [
            "detect.py"
        ],
        "yolov7_helmet/jobspec-cfg/train.py": [
            "test.py",
            "train.py"
        ],
        "yolov7_helmet/jobspec-cfg/train_aux.py": [
            "test.py",
            "train.py"
        ],
        "Vision-transformers-for-generative-modeling/submit_v.sh": [
            "main.py"
        ],
        "Vision-transformers-for-generative-modeling/submit_a.sh": [
            "main.py"
        ]
    },
    "RasmusJuul/Vision-transformers-for-generative-modeling": {
        "Synthetic_Context/Synthetic_Context/submit.sh": [
            "main.py"
        ],
        "Vision-transformers-for-generative-modeling/submit_v.sh": [
            "main.py"
        ],
        "Vision-transformers-for-generative-modeling/submit_a.sh": [
            "main.py"
        ]
    },
    "PanUnsw/satellite_selection": {
        "satellite_selection/job.sh": [
            "./run_train.sh"
        ]
    },
    "prehensilecode/mpibpc-gromacs-bench-utils": {
        "mpibpc-gromacs-bench-utils/gromacsbench.sh": [
            "dobenchs.sh"
        ]
    },
    "macocu/LanguageModels": {
        "LanguageModels/src/finetune.sh": [
            "src/finetune.py",
            "src/average_scores.py"
        ],
        "LanguageModels/src/train_lm.sh": [
            "src/run_mlm.py"
        ]
    },
    "FASLADODO/TrajectoryReconstruction": {
        "TrajectoryReconstruction/cluster-time.sbatch": [
            "LinearInterpolationTime.py"
        ]
    },
    "v-vietlq/thesis": {
        "thesis/scripts/train_event.sh": [
            "train.py",
            "filenames/train_single.txt",
            "filenames/val.txt"
        ]
    },
    "georgepar/grnet_guide": {
        "grnet_guide/example_job.sh": [
            "test.py"
        ]
    },
    "nokutu/MCV_CNN_framework": {
        "MCV_CNN_framework/jobs/classification/job_resnet_kitti.sh": [
            "src/main.py"
        ]
    },
    "argonne-lcf/Megatron-DeepSpeed": {
        "Megatron-DeepSpeed/train_llama_alcf_polaris_hzheng.sh": [
            "./pretrain_gpt_alcf.py"
        ]
    },
    "argonne-lcf/alcf-nccl-tests": {
        "dlio_ml_workloads/cosmoflow/qsub.sc": [
            "./setup.sh"
        ],
        "dlio_ml_workloads/cosmoflow/qsub_npy.sc": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/r2_hvd.sc": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/qsub.sc": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/test.sh": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/r2.sc": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/run.sc": [
            "./setup.sh"
        ],
        "dl_scaling/cosmoflow_pytorch/test.sc": [
            "./setup.sh"
        ],
        "alcf-nccl-tests/bench_opt.sh": [
            "./setup.sh"
        ]
    },
    "vlkofly/Fastq-to-vcf": {
        "Fastq-to-vcf/4_filter.sh": [
            "parse_variant_table3.R"
        ]
    },
    "jpchavat/ecd-uy": {
        "ecd-uy/technical-validation-total-househould-subset.slurm": [
            "technical-validation-total-househould-subset.py",
            "technical-validation-total-househould-subset.slurm"
        ],
        "ecd-uy/jobspec-cfg/technical-validation-total-househould-subset.slurm": [
            "technical-validation-total-househould-subset.py",
            "technical-validation-total-househould-subset.slurm"
        ]
    },
    "jedbrown/sweet": {
        "sweet/archive/benchmarks_plane/rexi_tests_stfc/test_nxq/test.sh": [
            "local_software/env_vars.sh"
        ]
    },
    "abhijithasokan/integrating_topics_and_syntax": {
        "integrating_topics_and_syntax/plot.sh": [
            "plot.py"
        ],
        "integrating_topics_and_syntax/data_run.sh": [
            "preprocess_data.py"
        ]
    },
    "jgblanc/polygenic_adaptation_stratification": {
        "polygenic_adaptation_stratification/submit.sbatch": [
            "snakefile"
        ],
        "polygenic_adaptation_stratification/submit_bigmem.sbatch": [
            "snakefile",
            "snakefile_2Pop"
        ],
        "polygenic_adaptation_stratification/submit_Sig.sbatch": [
            "snakefile",
            "snakefile_Sig"
        ]
    },
    "jgblanc/stratification-data_analysis": {
        "stratification-data_analysis/submit.sbatch": [
            "snakefile_main_simple"
        ]
    },
    "jgblanc/PGS-differences-confounding": {
        "PGS-differences-confounding/submit.sbatch": [
            "snakefile_4PopSplit",
            "snakefile_4PopSplit_TS"
        ],
        "PGS-differences-confounding/submit_grids.sbatch": [
            "snakefile_SimpleGrid"
        ],
        "PGS-differences-confounding/submit_2PopSplit.sbatch": [
            "snakefile_4PopSplit",
            "snakefile_2PopSplit"
        ]
    },
    "CyberKnight1803/CodeCG": {
        "CodeCG/scripts/nl2nl_train.sh": [
            "main.py"
        ],
        "codemix/scripts/train.sh": [
            "main.py"
        ]
    },
    "CyberKnight1803/codemix": {
        "CodeCG/scripts/nl2nl_train.sh": [
            "main.py"
        ],
        "codemix/scripts/train.sh": [
            "main.py"
        ]
    },
    "goja288/CAFE_pipeline": {
        "CAFE_pipeline/Variant_Catalogue_v1.sh": [
            "Variant_Catalogue_v1.nf"
        ]
    },
    "dellemc-hpc-ai/ai-radiologist-GPU": {
        "ai-radiologist-GPU/job_submissions/slurm/raw_1gpu.sh": [
            "chexnet_densenet_raw_images.py"
        ],
        "ai-radiologist-GPU/job_submissions/slurm/tfrec_8gpu.sh": [
            "chexnet_densenet_tfrec.py"
        ],
        "ai-radiologist-GPU/job_submissions/slurm/tfrec_4gpu.sh": [
            "chexnet_densenet_tfrec.py"
        ],
        "ai-radiologist-GPU/job_submissions/slurm/tfrec_1gpu.sh": [
            "chexnet_densenet_tfrec.py"
        ]
    },
    "sassy-crick/easybob": {
        "easybob/automatic-build.sh": [
            "site-config"
        ]
    },
    "minhkhoi1026/face-spoofing-dection": {
        "face-spoofing-dection/jobs/run_demo.sh": [
            "demo/app.py"
        ]
    },
    "mpkocher/MongoDB-Stress-Test": {
        "MongoDB-Stress-Test/hopper_w.pbs": [
            "./w.py"
        ],
        "MongoDB-Stress-Test/mpi_run.pbs": [
            "./mpi_stress_test.py"
        ],
        "MongoDB-Stress-Test/hopper_w.stache": [
            "./w.py"
        ]
    },
    "blekhmanlab/snakemake-template": {
        "snakemake-template/run_snakemake.slurm": [
            "requirements.txt",
            "run_snakemake.slurm"
        ],
        "snakemake-template/jobspec-cfg/run_snakemake.slurm": [
            "requirements.txt",
            "run_snakemake.slurm"
        ]
    },
    "wordebyter/ML541CLIP": {
        "ML541CLIP/cpurun.sh": [
            "requirements.txt"
        ]
    },
    "garvita-tiwari/sizer": {
        "neuralgif/neuralgif_sl.sh": [
            "trainer.py"
        ],
        "sizer/eval.sh": [
            "trainer.py"
        ]
    },
    "SECQUOIA/pyomo-MINLP-benchmarking": {
        "pyomo-MINLP-benchmarking/benchmark_example.sh": [
            "run_benchmarks.py"
        ]
    },
    "sujanamaithili/Future-Frame-Prediction": {
        "Future-Frame-Prediction/submit_job.slurm": [
            "src/mcvd/train.sh"
        ]
    },
    "adamlin120/lighteval": {
        "lighteval/eval.slurm": [
            "run_evals_accelerate.py",
            "tasks_examples/twllm_eval.txt"
        ],
        "lighteval/jobspec-cfg/run_evals_accelerate.py": [
            "run_evals_accelerate.py"
        ]
    },
    "abhishektandon/codiff": {
        "codiff/job_codiff.sh": [
            "log.log",
            "out.log",
            "environment.yaml",
            "main.py",
            "train_log_test.txt",
            "generate_512.py",
            "test_data/512_masks/27007.png",
            "out.txt"
        ],
        "codiff/jobspec-cfg/train_log_test.txt": [
            "configs/512_mask.yaml",
            "configs/512_text.yaml"
        ],
        "running_tediGAN/tediGAN/base/job_tg_base.sh": [
            "log.log",
            "out.txt"
        ]
    },
    "pierresegonne/SGGM": {
        "SGGM/run_ncp.sh": [
            "requirements.txt"
        ],
        "SGGM/run_review_boundary.sh": [
            "requirements.txt"
        ],
        "SGGM/run_review_ablation_study_pig.sh": [
            "requirements.txt"
        ],
        "SGGM/run_v3ae.sh": [
            "requirements.txt"
        ],
        "SGGM/run.sh": [
            "requirements.txt"
        ],
        "SGGM/run_review_ablation_study_gd_threshold.sh": [
            "requirements.txt"
        ]
    },
    "digitalepidemiologylab/plantvillage_deeplearning_paper_dataset": {
        "plantvillage_deeplearning_paper_dataset/generate_data_segmented-50-50.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_color-60-40.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_grayscale-60-40.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_color-40-60.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_grayscale-50-50.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_segmented-60-40.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_grayscale-20-80.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_segmented-20-80.sh": [
            "create_db.py"
        ],
        "plantvillage_deeplearning_paper_dataset/generate_data_color-50-50.sh": [
            "create_db.py"
        ]
    },
    "krishnan-Rama/transFlow": {
        "transFlow/run_nextflow.sh": [
            "main.nf"
        ]
    },
    "gvtulder/cross-view-transformers": {
        "cross-view-transformers/experiments/run-chexpert-20210218-experiments.sh": [
            "train.py"
        ],
        "cross-view-transformers/experiments/run-ddsm-20210218-5cv-warmup30-swa-ds0.125-experiments.sh": [
            "train.py"
        ]
    },
    "s183920/02514-Deep-Learning-In-Computer-Vision": {
        "02514-Deep-Learning-In-Computer-Vision/scripts/hotdog/train_resnet.sh": [
            "hotdog/cli.py"
        ]
    },
    "huji-nlp/cyber": {
        "cyber/train_all.sh": [
            "run.py"
        ]
    },
    "yichiac/torchgeo-crop-type": {
        "torchgeo-crop-type/download_china.sh": [
            "download_china.py",
            "./data/sampled_locations_75k.csv"
        ],
        "torchgeo-crop-type/jobspec-cfg/download_china.py": [
            "download_ssl4eo.py",
            "./data/sampled_locations.csv"
        ]
    },
    "YanCote/IFT6268-simclr": {
        "IFT6268-simclr/run.sh": [
            "./simclr_master/run.py"
        ],
        "IFT6268-simclr/Finetuning/ft_cc_local.sh": [
            "./Finetuning/finetuning.py"
        ],
        "IFT6268-simclr/Finetuning/ft_cc_supervised.sh": [
            "./Finetuning/finetuning_supervised.py"
        ]
    },
    "martina-torce/3D-TKA-landmark-detection": {
        "3D-TKA-landmark-detection/job.sh": [
            "train_resnet.py"
        ]
    },
    "Jafagervik/MPI_GA": {
        "MPI_GA/run_cluster.sh": [
            "./src/gahpc.jl"
        ]
    },
    "pytorch/torchtitan": {
        "torchtitan/multinode_trainer.slurm": [
            "LICENSE",
            "./train.py"
        ],
        "torchtitan/jobspec-cfg/train.py": [
            "LICENSE"
        ]
    },
    "pytorch/rl": {
        "torchtitan/multinode_trainer.slurm": [
            "LICENSE"
        ],
        "torchtitan/jobspec-cfg/train.py": [
            "LICENSE"
        ]
    },
    "ucb-rit/savio-training-intro-fall-2022": {
        "savio-training-python-jupyter-fall-2021/job.sh": [
            "calc.py"
        ],
        "savio-training-intro-fall-2022/job.sh": [
            "calc.py"
        ]
    },
    "zhaotianjing/MPI_testing": {
        "MPI_testing/submit_MPI.sbatch": [
            "reduction.jl",
            "gatherv.jl",
            "gather.jl",
            "scatterv.jl",
            "scatter.jl",
            "send_receive.jl"
        ]
    },
    "seandavi/curatedMetagenomicsNextflow": {
        "curatedMetagenomicsNextflow/submit_alpine.sh": [
            "main.nf",
            "nextflow.config"
        ]
    },
    "cidgoh/AIV_seeker": {
        "AIV_seeker/slurm_job_example.sh": [
            "main.nf"
        ]
    },
    "ContextualAI/HALOs": {
        "HALOs/jobspec-cfg/train.py": [
            "LICENSE",
            "train.py",
            "trainers.py",
            "dataloader.py"
        ],
        "HALOs/jobspec-cfg/scripts/populate_sbatch.sh": [
            "./scripts/populate_sbatch.sh",
            "LICENSE",
            "train.py"
        ],
        "HALOs/scripts/populate_sbatch.sh": [
            "./scripts/populate_sbatch.sh",
            "LICENSE",
            "train.py"
        ]
    },
    "ContextualAI/gritlm": {
        "HALOs/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "HALOs/jobspec-cfg/dataloader.py": [
            "LICENSE"
        ],
        "HALOs/jobspec-cfg/trainers.py": [
            "LICENSE"
        ],
        "HALOs/jobspec-cfg/scripts/populate_sbatch.sh": [
            "LICENSE"
        ],
        "HALOs/scripts/populate_sbatch.sh": [
            "LICENSE"
        ],
        "gritlm/scripts/raglatency.sh": [
            "rag/eval.py"
        ],
        "gritlm/scripts/eval_mteb.sh": [
            "evaluation/eval_mteb.py"
        ]
    },
    "haukurb/ponder-staircase": {
        "ponder-staircase/run_bookcorpusopen.sh": [
            "./run_bookcorpusopen.sh"
        ],
        "ponder-staircase/jobspec-cfg/run_bookcorpusopen.sh": [
            "./run_bookcorpusopen.sh"
        ]
    },
    "OSU-slatelab/RNN-T-ASR": {
        "RNN-T-ASR/run_asr.sh": [
            "decode.py"
        ],
        "RNN-T-ASR/job_submit.sh": [
            "main.py"
        ]
    },
    "ryo-kuno/dibs-g16": {
        "dibs-g16/launch_coms.sh": [
            "./launch_coms.sh"
        ],
        "dibs-g16/jobspec-cfg/launch_coms.sh": [
            "./launch_coms.sh"
        ]
    },
    "generalized-iou/g-darknet": {
        "g-darknet/jobspec-cfg/cfg/runs/coco-spp-baseline1/coco-spp-baseline1.data": [
            "data/coco.names"
        ],
        "g-darknet/batch/openimages-giou-1.sbatch": [
            "cfg/openimages-giou-1.cfg"
        ],
        "g-darknet/cfg/runs/yolov3-voc-lin-7/run.sbatch": [
            "cfg/runs/yolov3-voc-lin-7/data",
            "cfg/runs/yolov3-voc-lin-7/cfg"
        ],
        "g-darknet/cfg/runs/yolov3-voc-lin-11/run.sbatch": [
            "cfg/runs/yolov3-voc-lin-11/data",
            "cfg/runs/yolov3-voc-lin-11/cfg"
        ],
        "g-darknet/cfg/runs/yolov3-voc-lin-6/run.sbatch": [
            "cfg/runs/yolov3-voc-lin-6/data",
            "cfg/runs/yolov3-voc-lin-6/cfg"
        ],
        "g-darknet/cfg/runs/yolov3-voc-lin-8/run.sbatch": [
            "cfg/runs/yolov3-voc-lin-8/data",
            "cfg/runs/yolov3-voc-lin-8/cfg"
        ],
        "g-darknet/cfg/runs/yolov3-voc-lin-5/run.sbatch": [
            "cfg/runs/yolov3-voc-lin-5/data",
            "cfg/runs/yolov3-voc-lin-5/cfg"
        ],
        "g-darknet/cfg/runs/yolov3-hsr-mse-1/run.sbatch": [
            "cfg/runs/yolov3-hsr-mse-1/data",
            "cfg/runs/yolov3-hsr-mse-1/cfg"
        ],
        "g-darknet/cfg/runs/coco-spp-baseline1/coco-spp-baseline1.sbatch": [
            "cfg/runs/coco-spp-baseline1/coco-spp-baseline1.data",
            "cfg/runs/coco-spp-baseline1/coco-spp-baseline1.cfg"
        ]
    },
    "cooleel/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "LArbys/submit_dlana_tufts": {
        "submit_dlana_tufts/submit_batch_mc.sh": [
            "run_batch_mc.sh"
        ],
        "submit_dlana_tufts/submit_filter.sh": [
            "run_filter_test.sh"
        ]
    },
    "LArbys/ssnet-tuftscluster-scripts": {
        "submit_dlana_tufts/jobspec-cfg/run_filter_test.sh": [
            "setup_tufts_container.sh"
        ],
        "submit_dlana_tufts/jobspec-cfg/run_batch_mc.sh": [
            "setup_tufts_container.sh"
        ],
        "ssnet-tuftscluster-scripts/submit_gpu.sh": [
            "manage_tufts_gpu_jobs.py"
        ],
        "ssnet-tuftscluster-scripts/jobspec-cfg/manage_tufts_gpu_jobs.py": [
            "setup_tufts_container.sh",
            "run_single_tufts_job.sh"
        ]
    },
    "linminhtoo/megan": {
        "megan/jobspec-cfg/bin/train.py": [
            "bin/train.py"
        ],
        "megan/jobspec-cfg/bin/featurize.py": [
            "bin/featurize.py"
        ],
        "megan/jobspec-cfg/bin/eval.py": [
            "bin/eval.py"
        ],
        "megan/jobspec-cfg/bin/acquire.py": [
            "bin/acquire.py"
        ],
        "megan/jobs/train.sh": [
            "env_seed77777777.sh",
            "bin/acquire.py",
            "bin/featurize.py",
            "bin/train.py",
            "bin/eval.py"
        ]
    },
    "lohedges/taskfarmer": {
        "taskfarmer/python/examples/vulcan.sh": [
            "examples/commands.txt"
        ]
    },
    "ML4HPC/4D_fMRI_Transformer": {
        "4D_fMRI_Transformer/scripts/perlmutter/ABCD_main_step3-fluid_intel.slurm": [
            "export_DDP_vars.sh",
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/perlmutter/ABCD_main_step3-total_intel.slurm": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_mask_loss_train_with_best_hyp.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step2_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_optuna_train_with_best_hyp.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_intelligence_total_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_age_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_per_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_sex_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step2_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_optuna_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step2_con_loss_conf.pbs": [
            "main_conf.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step2_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_age_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step2.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_optuna_split2.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step3_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_intelligence_total_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step3_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step2_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_fluid_intelligence_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step2_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step3_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step2.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_ADHD_masked_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_per_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_ADHD_cleaned_split1_optuna.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_ADHD_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_mobilenetv3__optuna_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step2_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step2_conf.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/po_HCP_main_step2_per_loss.pbs": [
            "export_DDP_vars.sh",
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_ADHD_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step3_mask_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_mobilenetv2_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step2_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_sex_split3.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_optuna_ADHD_split2.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_mask_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_ASD_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_ADHD_cleaned_split1_Stella.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_total_intelligence_cleaned_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_sex_split2.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/po_HCP_main_step3.torchrun": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step3_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_optuna_ADHD.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step3_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_con_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_HCP_main_step3_mask_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step3_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_mask_loss_optuna.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_sex_masked_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_bmi_split1.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_HCP_main_step2_mask_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step2_con_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step3_con_loss_age.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/debug_ABCD_main_step2_per_loss.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/polaris/prod_ABCD_main_step0.pbs": [
            "main.py"
        ],
        "4D_fMRI_Transformer/scripts/nvidia/nvidia_Dummy_main_step2_deepspeed.slurm": [
            "export_DDP_vars.sh"
        ]
    },
    "OpenLLM-France/Lit-Claire": {
        "Lit-Claire/slurm/pretrain_falcon_fr_all_v0.1.slurm": [
            "pretrain.py"
        ],
        "Lit-Claire/slurm/pretrain_mistral_fr_all_v0.1.slurm": [
            "pretrain.py"
        ]
    },
    "poodarchu/swav": {
        "swav/jobspec-cfg/main_swav.py": [
            "LICENSE"
        ],
        "swav/scripts/swav_200ep_bs256_pretrain.sh": [
            "LICENSE",
            "main_swav.py"
        ]
    },
    "aadharna/UntouchableThunder": {
        "UntouchableThunder/jobspec-cfg/child.py": [
            "refreshWorker.sh"
        ],
        "UntouchableThunder/prince/run-workers.sbatch": [
            "child.py"
        ]
    },
    "Deepp0925/jigsaw": {
        "jigsaw/single_run.bash": [
            "conda_requisites.txt",
            "jigsaw_orgi.py"
        ],
        "jigsaw/multi_run.bash": [
            "conda_requisites.txt",
            "jigsaw_org.py"
        ],
        "jigsaw/jigsaw.bash": [
            "conda_requisites.txt",
            "jigsaw.py"
        ]
    },
    "Jostan86/detr_apple": {
        "detr_apple/modalFT_batchFile.sh": [
            "main2.py"
        ],
        "detr_apple/modalSeg_batchFile.sh": [
            "main2.py"
        ],
        "detr_apple/amodalSeg_batchFile.sh": [
            "main2.py"
        ],
        "detr_apple/modalFT_synth_batchFile.sh": [
            "main2.py"
        ],
        "detr_apple/jobspec-cfg/main2.py": [
            "main2.py"
        ]
    },
    "Xiaoyi66688/Synthesizing-Coherent-Story-via-Latent-Diffusion-Models": {
        "Synthesizing-Coherent-Story-via-Latent-Diffusion-Models/apply_GPU.sh": [
            "main.py"
        ]
    },
    "evanmunro/rdd-gan": {
        "rdd-gan/train_jl.sh": [
            "generation/estimate_jl.py"
        ],
        "rdd-gan/train_lee.sh": [
            "generation/estimate_lee.py"
        ],
        "rdd-gan/train_mats.sh": [
            "generation/estimate_mats.py"
        ],
        "rdd-gan/train_new.sh": [
            "generation/estimate_new.py"
        ]
    },
    "Maison-de-la-Simulation/bench-in-situ": {
        "bench-in-situ/envs/ruche/launcher_gpu.sh": [
            "in-situ/fft_updated.py"
        ],
        "bench-in-situ/envs/ruche/cpu/1/launcher.sh": [
            "in-situ/fft_updated.py"
        ],
        "bench-in-situ/envs/ruche/cpu/4/launcher.sh": [
            "in-situ/fft_updated.py"
        ],
        "bench-in-situ/envs/jeanzay/launcher.sh": [
            "in-situ/fft_updated.py"
        ]
    },
    "xinqi-fan/adaptive-dual-motion-model": {
        "adaptive-dual-motion-model/train.sh": [
            "run.py",
            "config/casme2-256.yaml",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "FMEG/train.sh": [
            "run.py",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "FMEG/demo.sh": [
            "demo.py",
            "config/smic-256.yaml"
        ]
    },
    "xinqi-fan/FMEG": {
        "adaptive-dual-motion-model/train.sh": [
            "run.py",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "FMEG/train.sh": [
            "run.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml",
            "config/samm-256.yaml"
        ],
        "FMEG/demo.sh": [
            "demo.py",
            "config/camse2-256.yaml",
            "config/smic-256.yaml"
        ]
    },
    "BPHL-Molecular/Daytona_dengue": {
        "Daytona_dengue/daytona_dengue.sh": [
            "./kraken2_viral.sh",
            "daytona_dengue.nf",
            "params.yaml",
            "./configs/singularity.config",
            "./configs/docker.config",
            "./table.py"
        ],
        "Daytona_dengue/jobspec-cfg/daytona_dengue.nf": [
            "params.yaml"
        ],
        "Sanibel/sanibel_illumina_docker.sh": [
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/sanibel_illumina.sh": [
            "params.yaml"
        ],
        "Sanibel/sanibel.sh": [
            "params.yaml"
        ],
        "Sanibel/sanibel_docker.sh": [
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/jobspec-cfg/flaq_amr_plus2.nf": [
            "params.yaml"
        ],
        "Pensacola/pensacola.sh": [
            "params.yaml"
        ],
        "Pensacola/jobspec-cfg/pensacola.nf": [
            "params.yaml"
        ]
    },
    "BPHL-Molecular/Sanibel": {
        "Daytona_dengue/daytona_dengue.sh": [
            "params.yaml",
            "./configs/singularity.config",
            "./configs/docker.config"
        ],
        "Daytona_dengue/jobspec-cfg/daytona_dengue.nf": [
            "params.yaml"
        ],
        "Sanibel/sanibel_illumina_docker.sh": [
            "flaq_amr_plus2.nf",
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/sanibel_illumina.sh": [
            "flaq_amr_plus2.nf",
            "params.yaml"
        ],
        "Sanibel/sanibel.sh": [
            "flaq_amr_plus2.nf",
            "params.yaml"
        ],
        "Sanibel/sanibel_docker.sh": [
            "flaq_amr_plus2.nf",
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/jobspec-cfg/flaq_amr_plus2.nf": [
            "params.yaml"
        ],
        "Pensacola/pensacola.sh": [
            "params.yaml"
        ],
        "Pensacola/jobspec-cfg/pensacola.nf": [
            "params.yaml"
        ]
    },
    "BPHL-Molecular/Pensacola": {
        "Daytona_dengue/daytona_dengue.sh": [
            "params.yaml",
            "./configs/singularity.config",
            "./configs/docker.config"
        ],
        "Daytona_dengue/jobspec-cfg/daytona_dengue.nf": [
            "params.yaml"
        ],
        "Sanibel/sanibel_illumina_docker.sh": [
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/sanibel_illumina.sh": [
            "params.yaml"
        ],
        "Sanibel/sanibel.sh": [
            "params.yaml"
        ],
        "Sanibel/sanibel_docker.sh": [
            "params.yaml",
            "./configs/docker.config"
        ],
        "Sanibel/jobspec-cfg/flaq_amr_plus2.nf": [
            "params.yaml"
        ],
        "Pensacola/pensacola.sh": [
            "pensacola.nf",
            "params.yaml"
        ],
        "Pensacola/jobspec-cfg/pensacola.nf": [
            "params.yaml"
        ]
    },
    "hongrachel/rvr": {
        "rvr/runmnist_array.sbatch": [
            "runmnist_array.sbatch"
        ],
        "rvr/jobspec-cfg/runmnist_array.sbatch": [
            "runmnist_array.sbatch"
        ]
    },
    "sylvainschmitt/DownClim": {
        "DownClim/job.sh": [
            "Snakefile"
        ],
        "detectMutations/job.sh": [
            "Snakefile"
        ],
        "troll_eval/job.sh": [
            "Snakefile"
        ],
        "ideas/job.sh": [
            "Snakefile"
        ]
    },
    "sylvainschmitt/detectMutations": {
        "DownClim/job.sh": [
            "Snakefile"
        ],
        "detectMutations/job.sh": [
            "Snakefile"
        ],
        "troll_eval/job.sh": [
            "Snakefile"
        ],
        "ideas/job.sh": [
            "Snakefile"
        ]
    },
    "sylvainschmitt/troll_eval": {
        "DownClim/job.sh": [
            "Snakefile"
        ],
        "detectMutations/job.sh": [
            "Snakefile"
        ],
        "troll_eval/job.sh": [
            "Snakefile"
        ],
        "ideas/job.sh": [
            "Snakefile"
        ]
    },
    "sylvainschmitt/ideas": {
        "DownClim/job.sh": [
            "Snakefile"
        ],
        "detectMutations/job.sh": [
            "Snakefile"
        ],
        "troll_eval/job.sh": [
            "Snakefile"
        ],
        "ideas/job.sh": [
            "Snakefile"
        ]
    },
    "igorkf/Maize_GxE_Prediction": {
        "Maize_GxE_Prediction/2-job_datasets.sh": [
            "src/create_datasets.py"
        ]
    },
    "SubstantiaNegri/meaAnalysis": {
        "meaAnalysis/nodeSubset.sh": [
            "wfNodeSubset.R"
        ],
        "meaAnalysis/wfClusterSubset.sh": [
            "wfClusterSubset.sh",
            "msCluster.R",
            "msClusterLineCountTimeCalc.pl"
        ],
        "meaAnalysis/jobspec-cfg/msCluster.R": [
            "msCluster.R"
        ],
        "meaAnalysis/jobspec-cfg/wfClusterSubset.sh": [
            "wfClusterSubset.sh",
            "msCluster.R",
            "msClusterLineCountTimeCalc.pl"
        ],
        "meaAnalysis/jobspec-cfg/wfNodeSubset.R": [
            "wfNodeSubset.R"
        ]
    },
    "jramapuram/BYOL": {
        "LifelongVAE_pytorch/run.sh": [
            "main.py"
        ]
    },
    "jramapuram/LifelongVAE_pytorch": {
        "LifelongVAE_pytorch/run.sh": [
            "main.py"
        ]
    },
    "COSIMA/01deg_jra55_iaf": {
        "01deg_jra55_iaf/sync_data.sh": [
            "metadata.yaml",
            "./run_summary.py"
        ],
        "01deg_jra55_iaf/jobspec-cfg/run_summary.py": [
            "sync_data.sh",
            "config.yaml",
            "accessom2.nml"
        ]
    },
    "okoge-kaz/turing-techblog-megatron-deepspeed": {
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt_distributed.sh": [
            "pretrain_gpt.py"
        ],
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt.sh": [
            "pretrain_gpt.py"
        ],
        "turing-techblog-megatron-deepspeed/scripts/ds_gpt2_7b.sh": [
            "pretrain_gpt.py"
        ],
        "llm-jp-Megatron-DeepSpeed/scripts/mpirun/1.3B/ylab/1.3B_dp4_tp1_pp1_zero1.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-from-fugaku.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-interactive.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/ds_gpt2_117m.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/117m_dp4_fp32_en.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp4_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp512_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ]
    },
    "okoge-kaz/llm-jp-Megatron-DeepSpeed": {
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt_distributed.sh": [
            "pretrain_gpt.py"
        ],
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt.sh": [
            "pretrain_gpt.py"
        ],
        "turing-techblog-megatron-deepspeed/scripts/ds_gpt2_7b.sh": [
            "pretrain_gpt.py"
        ],
        "llm-jp-Megatron-DeepSpeed/scripts/mpirun/1.3B/ylab/1.3B_dp4_tp1_pp1_zero1.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-from-fugaku.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-interactive.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/ds_gpt2_117m.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/117m_dp4_fp32_en.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp4_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp512_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ]
    },
    "okoge-kaz/moe-recipes": {
        "moe-recipes/tools/checkpoint-convert/scripts/ylab/convert_deepspeed.sh": [
            "tools/checkpoint-convert/zero_to_fp32.py"
        ],
        "moe-recipes/tools/checkpoint-convert/scripts/ylab/convert_ckpt.sh": [
            "tools/checkpoint-convert/convert_ckpt.py"
        ]
    },
    "okoge-kaz/Meegatron-DeepSpeed-CUDA117": {
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt_distributed.sh": [
            "pretrain_gpt.py",
            "dataset/gpt2-vocab.json",
            "dataset/gpt2-merges.txt"
        ],
        "turing-techblog-megatron-deepspeed/examples/pretrain_gpt.sh": [
            "pretrain_gpt.py",
            "dataset/gpt2-vocab.json",
            "dataset/gpt2-merges.txt"
        ],
        "turing-techblog-megatron-deepspeed/scripts/ds_gpt2_7b.sh": [
            "pretrain_gpt.py"
        ],
        "llm-jp-Megatron-DeepSpeed/scripts/mpirun/1.3B/ylab/1.3B_dp4_tp1_pp1_zero1.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-from-fugaku.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation-interactive.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/ds_gpt2_117m.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/117m_dp4_fp32_en.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp4_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/350m_dp512_fp32.sh": [
            "pretrain_gpt.py"
        ],
        "Meegatron-DeepSpeed-CUDA117/scripts/gpt-fugaku/gpt-text-generation.sh": [
            "tools/generate_samples_gpt.py"
        ]
    },
    "BobMcFry/ann-tensorflow": {
        "ann-tensorflow/grid_search/iannwtf.bash": [
            "util.py"
        ]
    },
    "madhurauk/places365_training": {
        "places365_training/train_90_epochs_overcap.sh": [
            "train_placesCNN.py"
        ]
    },
    "BYU-PCCL/Jedi": {
        "Jedi/jedi.sh": [
            "jedi.sh",
            "./.screenrc",
            "./jedi.sh",
            "main.py"
        ],
        "Jedi/jobspec-cfg/jedi.sh": [
            "jedi.sh",
            "./.screenrc",
            "./jedi.sh",
            "main.py"
        ]
    },
    "peleiden/dmiai-2023": {
        "dmiai-2023/ai_text_detector/training/job.sh": [
            "ai_text_detector/training/cv.ini",
            "ai_text_detector/training/multisplits.ini"
        ],
        "dmiai-2023/ai_text_detector/training/job-moar.sh": [
            "ai_text_detector/training/moar-epochs.ini"
        ]
    },
    "peleiden/rl-rubiks": {
        "rl-rubiks/dev/hpc_job.sh": [
            "runtrain.py",
            "runeval.py"
        ]
    },
    "SchlossLab/Topcuoglu_ML_mBio_2020": {
        "Topcuoglu_ML_mBio_2020/run_main_python.pbs": [
            "code/learning/main.py"
        ],
        "Topcuoglu_ML_mBio_2020/Decision_Tree.pbs": [
            "code/learning/main.R"
        ],
        "Topcuoglu_ML_mBio_2020/RBF_SVM.pbs": [
            "code/learning/main.R"
        ],
        "Topcuoglu_ML_mBio_2020/Random_Forest.pbs": [
            "code/learning/main.R"
        ],
        "Armour_Resolution_mBio_2021/code/pbs/L2_Logistic_Regression.pbs": [
            "code/learning/main.R"
        ]
    },
    "SchlossLab/Sovacool_OptiFit_mSphere_2022": {
        "Sovacool_OptiFit_mSphere_2022/code/slurm/test.sh": [
            "config/config_test.yaml"
        ]
    },
    "SchlossLab/mikropml-snakemake-workflow": {
        "mikropml-snakemake-workflow/jobspec-cfg/config/test.yaml": [
            "data/processed/otu-micro.csv"
        ],
        "mikropml-snakemake-workflow/workflow/scripts/submit_slurm.sh": [
            "config/test.yaml"
        ]
    },
    "SchlossLab/mothur-snakemake-workflow": {
        "mothur-snakemake-workflow/workflow/scripts/submit_slurm.sh": [
            "config/demo.yaml"
        ]
    },
    "SchlossLab/Hagan_monthly_journal_reports_2019": {
        "Hagan_monthly_journal_reports_2019/report_data.pbs": [
            "sftp_batch",
            "code/run_monthly_reports.R"
        ]
    },
    "peepkolberg/glimpse": {
        "glimpse/run.sh": [
            "main.nf"
        ]
    },
    "Chhinna/DDP": {
        "DDP/scripts/continual/slurm_run_backbone.sh": [
            "train_supervised.py"
        ]
    },
    "henriettebs/IDATT2502_project": {
        "IDATT2502_project/src/idun.slurm": [
            "src/main.py"
        ]
    },
    "twesterhout/nqs-playground": {
        "nqs-playground/cartesius/build_pytorch.sh": [
            "setup.py"
        ]
    },
    "Rj7/OpenNMT-py": {
        "OpenNMT-py/embeddings.sh": [
            "tools/embeddings_to_torch.py",
            "train.py",
            "translate.py"
        ],
        "OpenNMT-py/preprocess.sh": [
            "preprocess.py",
            "train.py",
            "translate.py"
        ],
        "OpenNMT-py/jobspec-cfg/train.py": [
            "opts.py"
        ]
    },
    "qglht/Latent-DIRE": {
        "Latent-DIRE/sbatch/train_admdire.sh": [
            "src/training.py"
        ],
        "Latent-DIRE/sbatch/train_dire.sh": [
            "src/training.py"
        ],
        "Latent-DIRE/sbatch/eval_grid.sh": [
            "src/eval.py"
        ]
    },
    "shahcompbio/bulk-illumina-rnaseq": {
        "bulk-illumina-rnaseq/launch_pipeline.sh": [
            "nf-params.json"
        ]
    },
    "mtayyab454/CNN-compression-ICIP2021": {
        "CNN-compression-ICIP2021/train_cifar.slurm": [
            "train_cifar.py"
        ]
    },
    "gautierdag/learnability-communication-tradeoff": {
        "learnability-communication-tradeoff/parallel_array.sh": [
            "grid_search_som.py",
            "communication.py",
            "process_results.py"
        ]
    },
    "dooleys/FR-NAS": {
        "FR-NAS/scripts/job_celeba.sh": [
            "src/search/search.py"
        ]
    },
    "gagan3012/AfriSenti": {
        "AfriSenti/run_mlm.sh": [
            "run_mlm.py"
        ]
    },
    "gagan3012/self_rewarding_models": {
        "self_rewarding_models/run_srm.sh": [
            "sft_train.py",
            "rank_responses.py",
            "reward_train.py"
        ]
    },
    "lessw2020/t5_11": {
        "t5_11/t5.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_training.py"
        ],
        "t5_11/t5_benchmark.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_benchmark.py"
        ],
        "t5_11/hpc-cluster/t5.slurm": [
            "job_prolog.sh",
            "job_epilog.sh"
        ]
    },
    "yoonjunglee812/cs601_hw6": {
        "cs601_hw6/sbatch.sh": [
            "base_classification.py"
        ]
    },
    "JMVCoelho/ViT-WebScreenshot": {
        "ViT-WebScreenshot/launch.sh": [
            "run.py"
        ]
    },
    "pplotn/team6": {
        "team6/multi_script.sh": [
            "main_multi.py"
        ]
    },
    "MSU-Hsu-Lab/lassoPipeline": {
        "lassoPipeline/batchLasso.sh": [
            "lasso.pysnp.py"
        ]
    },
    "jon-tow/text-sed": {
        "text-sed/train.sh": [
            "train.py"
        ],
        "text-sed/jobspec-cfg/train.py": [
            "train.py"
        ],
        "contriever/jobspec-cfg/eval_beir.py": [
            "LICENSE"
        ],
        "contriever/run_scripts/slurm_contriever_8k.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_baseline.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_tmp.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_16k.sh": [
            "train.py"
        ]
    },
    "jon-tow/contriever": {
        "text-sed/train.sh": [
            "train.py"
        ],
        "text-sed/jobspec-cfg/train.py": [
            "train.py"
        ],
        "contriever/jobspec-cfg/eval_beir.py": [
            "LICENSE"
        ],
        "contriever/run_scripts/slurm_contriever_8k.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_baseline.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_tmp.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_contriever_16k.sh": [
            "train.py"
        ],
        "contriever/run_scripts/slurm_eval_beir.sh": [
            "eval_beir.py"
        ]
    },
    "A-NGJ/deeplearning2022-footandball": {
        "deeplearning2022-footandball/run_detector.sh": [
            "run_detector.py",
            "models/model_20201019_1416_final.pth"
        ]
    },
    "igoldsteinh/ww_paper": {
        "ww_paper/jobspec-cfg/slurm_submissions/generate_ppgq_array_seirr.sh": [
            "slurm_submissions/process_results_array_seirr.sh",
            "scripts/generate_quantities/seirr_student_generate_pp_and_gq.jl"
        ],
        "ww_paper/jobspec-cfg/slurm_submissions/process_results_array_seir_cases.sh": [
            "slurm_submissions/summarise_seir_cases.sh",
            "scripts/process_results/process_results_seir_cases.R"
        ],
        "ww_paper/jobspec-cfg/slurm_submissions/process_results_array_eir_cases.sh": [
            "slurm_submissions/summarise_eir_cases.sh",
            "scripts/process_results/process_results_eir_cases.R"
        ],
        "ww_paper/jobspec-cfg/slurm_submissions/process_results_array_seirr.sh": [
            "slurm_submissions/summarise_seirr.sh",
            "scripts/process_results/process_results_seirr_student.R"
        ],
        "ww_paper/slurm_submissions/generate_ppgq_array_seirr.sh": [
            "slurm_submissions/process_results_array_seirr.sh",
            "scripts/generate_quantities/seirr_student_generate_pp_and_gq.jl"
        ],
        "ww_paper/slurm_submissions/generate_ppgq_array_eir_cases.sh": [
            "slurm_submissions/process_results_array_eir_cases.sh",
            "scripts/generate_quantities/eir_cases_generate_pp_and_gq.jl"
        ],
        "ww_paper/slurm_submissions/fit_seirr_array.sh": [
            "slurm_submissions/generate_ppgq_array_seirr.sh",
            "scripts/fit_models/fit_seirr_student.jl"
        ],
        "ww_paper/slurm_submissions/generate_ppgq_array_eirr.sh": [
            "scripts/generate_quantities/eirrc_closed_generate_pp_and_gq.jl"
        ],
        "ww_paper/slurm_submissions/generate_ppgq_array_seir_cases.sh": [
            "slurm_submissions/process_results_array_seir_cases.sh",
            "scripts/generate_quantities/seir_cases_generate_pp_and_gq.jl"
        ]
    },
    "tisabe/jraph_MPEU": {
        "jraph_MPEU/job_eval_array.slurm": [
            "scripts/plotting/error_analysis.py"
        ]
    },
    "jdonnelly36/Deformable-ProtoPNet": {
        "Deformable-ProtoPNet/run_global.sh": [
            "global_analysis.py"
        ],
        "Deformable-ProtoPNet/jobspec-cfg/global_analysis.py": [
            "global_analysis.py"
        ]
    },
    "mayo-clinic-hematology/heme-SPP": {
        "heme-SPP/submit_hemespp.sh": [
            "mforge_settings.config"
        ]
    },
    "pablo-gar/somatic_mutations_GTEx": {
        "somatic_mutations_GTEx/methodValidation/Snakefile.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/selectionAnalyses/Snakefile.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/chromatin/Snakefile.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/mutationCalling/Snakefile.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/mappingMutationCalling_pipeline/SnakefileSeqdepth.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/mappingMutationCalling_pipeline/Snakefile.sbatch": [
            "jobState"
        ],
        "somatic_mutations_GTEx/cancer/Snakefile.sbatch": [
            "jobState"
        ],
        "create_plink_bed_1000Genomes/Snakefile.sbatch": [
            "./cluster.json",
            "jobState"
        ],
        "transcriptome_diversity/pipelines/Snakefile.sbatch": [
            "jobState"
        ]
    },
    "pablo-gar/create_plink_bed_1000Genomes": {
        "create_plink_bed_1000Genomes/Snakefile.sbatch": [
            "./cluster.json"
        ]
    },
    "pablo-gar/transcriptome_diversity": {
        "create_plink_bed_1000Genomes/Snakefile.sbatch": [
            "./cluster.json"
        ]
    },
    "UW-NextGen/NextGenSSD": {
        "NextGenSSD/subSSD.sh": [
            "train.py"
        ]
    },
    "FermiQ/galyleo": {
        "galyleo/galyleo.sh": [
            "galyleo.sh",
            "galyleo"
        ],
        "galyleo/jobspec-cfg/galyleo.sh": [
            "galyleo.sh",
            "galyleo"
        ]
    },
    "Emad-COMBINE-lab/GRouNdGAN": {
        "GRouNdGAN/scripts/train.sh": [
            "src/main.py"
        ]
    },
    "HackelLab-UMN/Developability": {
        "Developability/pbs_main_GPU.pbs": [
            "main_seq_to_assay.py"
        ]
    },
    "Saladino93/qelensingcomb": {
        "qelensingcomb/joboptilc.sh": [
            "execute_opt.py",
            "configurations/configILC.yaml"
        ],
        "qelensingcomb/jobilc.sh": [
            "extract_biases.py",
            "configurations/configILC.yaml"
        ],
        "qelensingcomb/job_plotting.sh": [
            "extract_biases.py",
            "configurations/config_plotting.yaml"
        ],
        "qelensingcomb/jobspec-cfg/execute_opt.py": [
            "lmax_optimize.py"
        ]
    },
    "kyleliang919/Long-context-transformers": {
        "Long-context-transformers/slurm.sh": [
            "finetune.py",
            "ds_config.json"
        ]
    },
    "lauraaisling/direct-preference-optimization": {
        "direct-preference-optimization/launches/dpo-record.sh": [
            "launches/dpo-record.sh",
            "new_scripts/hf_download.py",
            "train.py"
        ],
        "direct-preference-optimization/jobspec-cfg/launches/dpo-record.sh": [
            "launches/dpo-record.sh",
            "new_scripts/hf_download.py",
            "train.py"
        ]
    },
    "wzh4464/LMEraser": {
        "LMEraser/run_sbatch.sh": [
            "task_adapting/main.py"
        ]
    },
    "abhi1kumar/DEVIANT": {
        "DEVIANT/run_221.sb": [
            "tools/train_val.py",
            "file"
        ]
    },
    "hunter154321/2022HPC-Genie-LAMMPS": {
        "2022HPC-Genie-LAMMPS/lammps_gran.sh": [
            "in.chute.txt"
        ],
        "2022HPC-Genie-LAMMPS/jobspec-cfg/in.chute.txt": [
            "dump.lammpstrj"
        ]
    },
    "wence-/composable-solvers": {
        "composable-solvers/rb-weak-scale.pbs": [
            "rb-weak-scale.py"
        ],
        "composable-solvers/profile-matvec.pbs": [
            "profile-matvec.py"
        ]
    },
    "JP-Xu/isec355": {
        "isec355/pairInteraction/pair_cal.slurm": [
            "pair_cal.py"
        ]
    },
    "M-Serajian/MTB-plus-plus": {
        "MTB-plus-plus/job_array.sh": [
            "31mer_analysis.pl"
        ],
        "MTB-plus-plus/jobspec-cfg/31mer_analysis.pl": [
            "src/31mer_analysis/31mer_analysis_multi_thread.py"
        ]
    },
    "lassesofus/ADLCV-AnomalyDetection": {
        "ADLCV-AnomalyDetection/run_evaluation.sh": [
            "scripts/evaluate_model.py"
        ],
        "ADLCV-AnomalyDetection/run_diffusion.sh": [
            "scripts/image_train.py"
        ],
        "ADLCV-AnomalyDetection/run_classifier.sh": [
            "scripts/classifier_train.py"
        ]
    },
    "albertsgarde/thesis": {
        "thesis/mas_gelu-1l.sub": [
            "requirements.txt"
        ]
    },
    "MadsAW/machine-learning-on-materials": {
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_13.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_9.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_14.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_11.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_8.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_12.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_data_size.sh": [
            "NN/NN_script_dataset_size.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_7.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/NN_script_03-01_2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_13.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_9.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_14.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_11.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_8.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_12.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_7.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/03-01/NN_script_03-01_2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_13.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_9.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_14.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_11.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_8.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_12.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_7.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/11-10/NN_script_03-01_2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_13.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_9.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_14.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_11.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_8.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_12.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_7.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01/NN_script_03-01_2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_11-10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_04-01.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/Old%20shellscripts/NN_script_03-01_final0.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_6.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_13.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_10.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_4.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_9.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_5.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_14.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_1.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_11.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_8.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_3.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_12.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_7.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/NN/Shellscripts/09-01-ny/NN_script_03-01_2.sh": [
            "NN/NN_script.py"
        ],
        "machine-learning-on-materials/KRR/Shellscripts/4/GP/4_lin.sh": [
            "KRR/KRR_script_4.py"
        ]
    },
    "letizialamperti/Data_Med": {
        "Data_Med/batch_script.sh": [
            "wtf_10.py"
        ],
        "Data_Med/batch_script_2.sh": [
            "wtf_9.py"
        ]
    },
    "nich-sugiarto/wanglab-pipelines": {
        "wanglab-pipelines/CR/cr_alignment.sh": [
            "move.sh"
        ]
    },
    "CarlosMoraMartinez/metagen1": {
        "metagen1/sbatch/sbatch_garnatxa.sh": [
            "all.nf",
            "config/run_samples_garnatxa.config"
        ],
        "metagen1/sbatch/sbatch_garnatxa_UPDATED.sh": [
            "all.nf",
            "config/run_samples_garnatxa_UPDATED.config"
        ],
        "metagen1/sbatch/sbatch_garnatxa_corals.sh": [
            "all.nf",
            "config/run_samples_garnatxa_corals.config"
        ],
        "metagen1/sbatch/sbatch_garnatxa_corals_PFP.sh": [
            "all.nf",
            "config/run_samples_garnatxa_corals_PFP.config"
        ],
        "metagen1/sbatch/sbatch_garnatxa_vero.sh": [
            "all.nf",
            "config/run_samples_garnatxa_vero.config"
        ],
        "metagen1/sbatch/sbatch_g4mcipf.sh": [
            "all.nf",
            "config/run_samples_g4m.config"
        ],
        "metagen1/sbatch/sbatch_garnatxa_corals_PAT.sh": [
            "all.nf",
            "config/run_samples_garnatxa_corals_PAT.config"
        ],
        "metagen1/sbatch/sbatch_test.sh": [
            "all.nf",
            "config/run_samples_cluster.config"
        ],
        "metagen1/sbatch/sbatch_g4mcipf_predikidsPFP.sh": [
            "all.nf",
            "config/run_samples_cipf_predikidsPFP.config"
        ],
        "metagen1/sbatch/sbatch_g4mcipf_onlyHumann.sh": [
            "all.nf",
            "config/run_samples_g4m_onlyHumann.config"
        ],
        "metagen1/sbatch/sbatch_g4mcipf_UPDATED.sh": [
            "all.nf",
            "config/run_samples_cipf_UPDATED.config"
        ]
    },
    "breandan/cstk": {
        "cstk/submit_job.sh": [
            "./gradlew"
        ]
    },
    "PrincetonUniversity/muchiSim": {
        "muchiSim/exp/run.sh": [
            "src/main.cpp"
        ]
    },
    "PrincetonUniversity/BrainPipe": {
        "BrainPipe/slurm_files/cnn_step3.sh": [
            "cell_detect.py"
        ],
        "BrainPipe/slurm_files/step3.sh": [
            "main.py"
        ],
        "BrainPipe/slurm_files/cnn_step1_check.sh": [
            "cell_detect.py"
        ],
        "BrainPipe/slurm_files/step2.sh": [
            "main.py"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step0.sh": [
            "cell_detect.py"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step1_check.sh": [
            "cell_detect.py"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step1.sh": [
            "cell_detect.py"
        ]
    },
    "PrincetonUniversity/3dunet": {
        "BrainPipe/tools/conv_net/run_demo.sh": [
            "setup_demo_script.py"
        ],
        "BrainPipe/slurm_files/cnn_step3.sh": [
            "cell_detect.py"
        ],
        "BrainPipe/slurm_files/cnn_step1_check.sh": [
            "cell_detect.py"
        ],
        "3dunet/cnn_preprocess.sh": [
            "slurm_scripts/cnn_step0.sh",
            "slurm_scripts/cnn_step1.sh",
            "slurm_scripts/cnn_step1_check.sh",
            "cnn_postprocess.sh"
        ],
        "3dunet/run_demo.sh": [
            "setup_demo_script.py"
        ],
        "3dunet/jobspec-cfg/cnn_postprocess.sh": [
            "slurm_scripts/cnn_step21.sh",
            "slurm_scripts/cnn_step2.sh",
            "slurm_scripts/cnn_step3.sh",
            "slurm_scripts/cnn_step4.sh",
            "cnn_postprocess.sh"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step0.sh": [
            "cell_detect.py"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step1_check.sh": [
            "cell_detect.py"
        ],
        "3dunet/jobspec-cfg/slurm_scripts/cnn_step1.sh": [
            "cell_detect.py"
        ]
    },
    "PrincetonUniversity/install_pytorch": {
        "multi_gpu_training/tensorflow/job.slurm": [
            "mnist_classify.py"
        ],
        "install_pytorch/job.slurm.ngc": [
            "mnist_classify.py"
        ]
    },
    "AyonRRahman/Thesis": {
        "Thesis/eval_depth.sh": [
            "eval_depth.py"
        ]
    },
    "richardkxu/distributed-pytorch": {
        "distributed-pytorch/ddp_apex.sb": [
            "imagenet_ddp_apex.py"
        ]
    },
    "OpenPIV/PIV": {
        "PIV/mpi_shell.sh": [
            "PIV_MPI_cluster.py",
            "errors.txt"
        ]
    },
    "kevmoor/movingairfoil": {
        "movingairfoil/runValidation_AOA2_1_Variation8_2_Freq075Cumulative.slurm": [
            "Validation_AOA2_1_Variation8_2_Freq075Cumulative.yaml"
        ],
        "movingairfoil/jobspec-cfg/Validation_AOA2_1_Variation8_2_Freq075Cumulative.yaml": [
            "hypre_file.yaml"
        ]
    },
    "rjones30/gluex-osg-jobscripts": {
        "gluex-osg-jobscripts/example1.sbatch": [
            "example1.py",
            "osg-container.sh",
            "./osg-container.sh"
        ],
        "gluex-osg-jobscripts/jobspec-cfg/osg-container.sh": [
            "osg-container.sh"
        ]
    },
    "Yasir-Ghunaim/RealtimeOCL": {
        "RealtimeOCL/experiments/CIFAR10/fast_stream/ACE.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR10/fast_stream/RWalk_T1.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR10/slow_stream/MIR_T0.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR10/slow_stream/polrs_T0.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/slow_stream/MIR_T0.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/slow_stream/ERpp_RWalk.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/slow_stream/ERpp_PoLRS.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/slow_stream/ERpp_GSS.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/slow_stream/RWalk_T0.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/fast_stream_2x/RWalk_T3.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/fast_stream_2x/naive.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/fast_stream_2x/LwF_T1_5.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CLOC/fast_stream_norm/ERmm_RWalk.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR100/fast_stream/ACE.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR100/fast_stream/GSS_T5.job": [
            "main.py"
        ],
        "RealtimeOCL/experiments/CIFAR100/slow_stream/MIR_T0.job": [
            "main.py"
        ]
    },
    "mitjanikolaus/childes-grammaticality": {
        "childes-grammaticality/sbatch_scripts/pretrain_lstm.sh": [
            "grammaticality_annotation/pretrain_lstm.py"
        ],
        "childes-grammaticality/sbatch_scripts/train.sh": [
            "grammaticality_annotation/fine_tune_grammaticality_nn.py"
        ],
        "childes-grammaticality/sbatch_scripts/annotate.sh": [
            "grammaticality_annotation/annotate_grammaticality_nn.py"
        ]
    },
    "mitjanikolaus/emergent_communication": {
        "emergent_communication/sbatch_scripts/run_imagenet.sh": [
            "train.py"
        ]
    },
    "jjastrz14/Heisenberg_code_sparse_csr_fortran": {
        "Heisenberg_code_sparse_csr_fortran/bash_job_arrray.sh": [
            "main_spin_code_feast_time_window.f90"
        ]
    },
    "joon2332/cvrl": {
        "cvrl/runcvrl.s": [
            "train_model.py"
        ]
    },
    "ddopp4877/CA1_model": {
        "CA1_model/batch_run.sh": [
            "run_network.py",
            "simulation_config.json",
            "plot.py"
        ],
        "CA1_model/jobspec-cfg/plot.py": [
            "="
        ],
        "CA1_model/jobspec-cfg/run_network.py": [
            "="
        ]
    },
    "hyunho-mo/dl_sa_tutorial": {
        "dl_sa_tutorial/optimization.sh": [
            "pytorch_hyperparams_opt.py"
        ],
        "dl_sa_tutorial/whas500.sh": [
            "deepsurv_pytorch.py"
        ],
        "dl_sa_tutorial/tutorial_job.sh": [
            "deepsurv_tutorial.py"
        ],
        "dl_sa_tutorial/whas500_default.sh": [
            "deepsurv_pytorch.py"
        ]
    },
    "naokiyokoyama/ovon": {
        "ovon/scripts/train/2-imagenav-ver.sh": [
            "config/experiments/ver_imagenav.yaml"
        ],
        "ovon/scripts/dataset/clean_scene_dataset.sh": [
            "ovon/dataset/clean_episodes.py"
        ],
        "ovon/scripts/dataset/generate_dataset.sh": [
            "ovon/dataset/objectnav_generator.py"
        ]
    },
    "tahia/SNP_calling_GATK": {
        "SNP_calling_GATK/17-GATK-GenotypeGVCFBSQR.sh": [
            "slurm.sh"
        ]
    },
    "shalei120/OxVf": {
        "OxVf/submit.sh": [
            "main.py"
        ],
        "OxVf/submitjade/li2016.sh": [
            "main.py"
        ],
        "OxVf/submitjade/bart.sh": [
            "main.py"
        ],
        "HopfieldLM/submitjade/lstm1mb.sh": [
            "main.py"
        ],
        "HopfieldLM/submitjade/tfdeen.sh": [
            "requirements.txt"
        ],
        "OxLegalReasoning/submit.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmgmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmibgan_devel.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitjade/lstmibgan.sh": [
            "main.py"
        ]
    },
    "shalei120/HopfieldLM": {
        "OxVf/submit.sh": [
            "main.py"
        ],
        "OxVf/submitjade/li2016.sh": [
            "main.py"
        ],
        "OxVf/submitjade/bart.sh": [
            "main.py"
        ],
        "HopfieldLM/submitjade/lstm1mb.sh": [
            "main.py"
        ],
        "HopfieldLM/submitjade/tfdeen.sh": [
            "requirements.txt",
            "main_mt.py"
        ],
        "OxLegalReasoning/submit.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmgmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmibgan_devel.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/LM.sh": [
            "LanguageModel.py"
        ],
        "OxLegalReasoning/submitjade/lstmibgan.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitjade/LM_small.sh": [
            "LanguageModel.py"
        ]
    },
    "shalei120/OxLegalReasoning": {
        "OxVf/submit.sh": [
            "main.py"
        ],
        "OxVf/submitjade/li2016.sh": [
            "main.py"
        ],
        "OxVf/submitjade/bart.sh": [
            "main.py"
        ],
        "HopfieldLM/submitjade/lstm1mb.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submit.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmgmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmibgan_beer2.sh": [
            "main_beer.py"
        ],
        "OxLegalReasoning/submitarc/lstmibgan_devel.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/lstmibgan_small.sh": [
            "main_small.py"
        ],
        "OxLegalReasoning/submitarc/lstmib.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitarc/LM.sh": [
            "LanguageModel.py"
        ],
        "OxLegalReasoning/submitjade/lstmibgan.sh": [
            "main.py"
        ],
        "OxLegalReasoning/submitjade/LM_small.sh": [
            "LanguageModel.py"
        ]
    },
    "sakshisaraff/ADL2023": {
        "ADL2023/endtoend.sh": [
            "endtoend.py"
        ]
    },
    "parasj/contracode": {
        "contracode/scripts/slurm/evaluate_f1.sh": [
            "representjs/main.py"
        ],
        "contracode/scripts/slurm/supervised_baseline.sh": [
            "representjs/main.py"
        ],
        "contracode/scripts/slurm/pretrain_dist.sh": [
            "representjs/pretrain_distributed.py"
        ],
        "contracode/scripts/slurm/supervised_augment.sh": [
            "representjs/main.py"
        ],
        "contracode/scripts/slurm/hf_pretrain.sh": [
            "scripts/download_data.py",
            "representjs/hugging_face/run_language_modeling.py"
        ],
        "contracode/scripts/slurm/supervised_hybrid_finetune.sh": [
            "representjs/main.py"
        ],
        "contracode/scripts/slurm/pretrain_bert.sh": [
            "representjs/pretrain_distributed.py"
        ],
        "contracode/scripts/slurm/supervised_type_eval.sh": [
            "representjs/type_prediction.py"
        ],
        "contracode/scripts/slurm/pretrain_hybrid_horovod.sh": [
            "representjs/pretrain_horovod.py"
        ],
        "contracode/scripts/slurm/supervised_infonce_finetune.sh": [
            "representjs/main.py"
        ]
    },
    "xuhuali-mxj/IM-DCL": {
        "IM-DCL/run.sh": [
            "configs.py",
            "./adapt_da.py"
        ]
    },
    "pstjohn/uniparc_modeling": {
        "uniparc_modeling/submit_multi_test.lsf": [
            "run_model_multi_worker.py"
        ],
        "uniparc_modeling/submit.lsf": [
            "run_model.py"
        ],
        "uniparc_modeling/submit_wd_12layer.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_wd_12layer_rel2.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_wd_12layer_rel_1024.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_1024_test.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_wd_12layer_rel.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_wd_test.lsf": [
            "run_model_wd_at.py"
        ],
        "uniparc_modeling/submit_multi_12_layer.lsf": [
            "run_model_multi_worker.py"
        ]
    },
    "dimarapis/WarehouseSIM": {
        "WarehouseSIM/hpc_job.sh": [
            "train_model.py"
        ],
        "mtl-world/hpc_job.sh": [
            "train_model.py"
        ]
    },
    "dimarapis/mtl-world": {
        "WarehouseSIM/hpc_job.sh": [
            "train_model.py"
        ],
        "mtl-world/hpc_job.sh": [
            "train_model.py"
        ]
    },
    "jasonriesa/nile": {
        "nile/train.sh": [
            "nile.py"
        ],
        "nile/jobspec-cfg/nile.py": [
            "Features.py"
        ]
    },
    "DriftingPig/obiwan_wise": {
        "obiwan_wise/launch.sh": [
            "./run.sh",
            "mpi.py"
        ],
        "obiwan_wise/slurm.sh": [
            "./run.sh",
            "mpi.py"
        ],
        "obiwan_wise/jobspec-cfg/run.sh": [
            "runbrick_sim.py"
        ]
    },
    "eastjames/integrated_methane_inversion": {
        "integrated_methane_inversion/run_imi.sh": [
            "src/utilities/common.sh",
            "src/components/setup_component/setup.sh",
            "src/components/template_component/template.sh",
            "src/components/statevector_component/statevector.sh",
            "src/components/preview_component/preview.sh",
            "src/components/spinup_component/spinup.sh",
            "src/components/jacobian_component/jacobian.sh",
            "src/components/inversion_component/inversion.sh",
            "src/components/posterior_component/posterior.sh",
            "src/components/kalman_component/kalman.sh",
            "config.yml",
            "src/utilities/parse_yaml.sh",
            "src/utilities/sanitize_input_yaml.py",
            "src/utilities/download_TROPOMI.py",
            "src/utilities/test_TROPOMI_dir.py",
            "src/utilities/s3_upload.py"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/components/setup_component/setup.sh": [
            "src/utilities/download_bc.py"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/components/template_component/template.sh": [
            "config.yml"
        ],
        "integrated_methane_inversion/jobspec-cfg/src/utilities/sanitize_input_yaml.py": [
            "config.yml"
        ]
    },
    "RasmitDevkota/MFC": {
        "MFC/jobspec-cfg/mfc.sh": [
            "toolchain/modules",
            "CMakeLists.txt",
            "mfc.sh",
            "./mfc.sh"
        ],
        "MFC/misc/run-phoenix-release-gpu.sh": [
            "./mfc.sh"
        ]
    },
    "paulvantieghem/curla": {
        "curla/jobspec-cfg/jobs/conda_carla.def": [
            "environment.yml"
        ],
        "curla/jobs/install_carla_img.slurm": [
            "./jobs/conda_carla.def"
        ]
    },
    "chenxwh/OFA": {
        "OFA/chenxi_run.sh": [
            "train_ok.py"
        ],
        "OFA/chenxi_run_large.sh": [
            "train_ok.py"
        ],
        "OFA/jobspec-cfg/train_ok.py": [
            "LICENSE"
        ]
    },
    "normundsneimanis/emotion-gait": {
        "emotion-gait/start.sh": [
            "./emotion-gait.py",
            "taskgen.py",
            "emotion-gait.py",
            "template_hpc.sh",
            "./taskgen.py"
        ]
    },
    "zmhammedi/Orthogonal_RNN": {
        "Orthogonal_RNN/job.sh": [
            "train.py"
        ]
    },
    "amennen/greenEyes_BIDS": {
        "greenEyes_BIDS/slurm_deface.sh": [
            "slurm_deface.sh",
            "./deface.sh"
        ],
        "greenEyes_BIDS/jobspec-cfg/slurm_deface.sh": [
            "slurm_deface.sh",
            "./deface.sh"
        ],
        "greenEyes_BIDS/jobspec-cfg/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh",
            "./run_fmriprep_day2.sh"
        ],
        "greenEyes_offline/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh"
        ],
        "greenEyes_offline/jobspec-cfg/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh"
        ],
        "greenEyes_offline/jobspec-cfg/run_fmriprep.sh": [
            "./run_fmriprep.sh"
        ]
    },
    "amennen/greenEyes_offline": {
        "greenEyes_BIDS/jobspec-cfg/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh"
        ],
        "greenEyes_offline/slurm_glm.sh": [
            "slurm_glm.sh",
            "./run_glm.py"
        ],
        "greenEyes_offline/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh"
        ],
        "greenEyes_offline/jobspec-cfg/slurm_glm.sh": [
            "slurm_glm.sh",
            "./run_glm.py"
        ],
        "greenEyes_offline/jobspec-cfg/slurm_fmriprep.sh": [
            "slurm_fmriprep.sh",
            "./run_fmriprep.sh"
        ],
        "greenEyes_offline/jobspec-cfg/run_fmriprep.sh": [
            "./run_fmriprep.sh"
        ]
    },
    "league/Radio-Transient-Search": {
        "Radio-Transient-Search/ft.sh": [
            "ft.py"
        ]
    },
    "pitt-cosmos/frb-analysis": {
        "frb-analysis/clustering.sh": [
            "clustering.py"
        ]
    },
    "mrknight21/spartan_test": {
        "spartan_test/pytorch.slurm": [
            "quickstart_tutorial.py",
            "tensorqs_tutorial.py"
        ]
    },
    "PurdueRCAC/ApplicationDocs": {
        "ApplicationDocs/jobspec-cfg/index.rst": [
            "images/anvil.jpg",
            "images/negishi.jpg"
        ],
        "ApplicationDocs/Scripts/generaterocmdocumentationallclusters.sh": [
            "index.rst",
            "Application_category.tsv",
            "listofcategories2.txt"
        ],
        "ApplicationDocs/Scripts/generatengcdocumentationallclusters.sh": [
            "index.rst",
            "Application_category.tsv",
            "listofcategories2.txt"
        ]
    },
    "CERC-Genomic-Medicine/SV_calling_pipeline": {
        "SV_calling_pipeline/sbatchscript.sh": [
            "pipeline.nf"
        ]
    },
    "andreaskuster/ner-and-pos-when-nothing-is-capitalized": {
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmu_1.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp4_brown.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_uu_2.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp12_conll.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_cuc_2.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp5_ptb.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmc_2.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_cu_1.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_cuu_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp11_brown.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmc_1.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmu_2.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp12_brown.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmu_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp32_brown.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp31_conll.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_ct_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp2_ptb.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp2_conll.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_uu_1.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_hmc_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_cuc_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_uu_3.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp32_conll.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp4_ptb.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp_add_cc_2.sh": [
            "pos/pos.py"
        ],
        "ner-and-pos-when-nothing-is-capitalized/pos/scripts/exp4_conll.sh": [
            "pos/pos.py"
        ]
    },
    "MirenLurBarquin/AxonSeg-3D-CNN": {
        "AxonSeg-3D-CNN/jobfile_gpu.sh": [
            "train.py"
        ],
        "AxonSeg-3D-CNN/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "lilhuang/anim_inb": {
        "anim_inb/scripts/old_scripts/final_pt_JamesBaxterThumper.sh": [
            "train_anime_sequence_2_stream.py"
        ]
    },
    "Zafirmk/miniGPT": {
        "miniGPT/single_node_multi_gpu.sh": [
            "main.py"
        ]
    },
    "StijnVerdenius/BoostingTextClassifiersByGenerativeModelling": {
        "BoostingTextClassifiersByGenerativeModelling/jobs/train_lstm.sh": [
            "main.py"
        ],
        "BoostingTextClassifiersByGenerativeModelling/jobs/tune_lstm.sh": [
            "main.py"
        ],
        "BoostingTextClassifiersByGenerativeModelling/jobs/train_sentence_vae.sh": [
            "main.py"
        ],
        "BoostingTextClassifiersByGenerativeModelling/jobs/tune_sentence_vae.sh": [
            "main.py"
        ]
    },
    "fmidev/deuce-nowcasting": {
        "deuce-nowcasting/predict_model.sh": [
            "predict_model.py"
        ],
        "deuce-nowcasting/train_model.sh": [
            "train_model.py"
        ]
    },
    "dhgottesman/RESNET_OCD": {
        "RESNET_OCD/train.slurm": [
            "run_func_OCD.py",
            "./base_models/resnet20.pt",
            "./configs/train_resnet.json"
        ]
    },
    "mortonjt/ferrets": {
        "ferrets/nb_run.sh": [
            "scripts/single_nb_fit.py",
            "data/File_1_TaoDing_microbiome.biom",
            "data/File_3_FerretMicrobiomeMetadata.xlxs.xlsx",
            "models/nb-single-regression.stan"
        ]
    },
    "yamaceay/gomoku": {
        "gomoku/fit.sh": [
            "fit.sh"
        ],
        "gomoku/jobspec-cfg/fit.sh": [
            "fit.sh"
        ]
    },
    "sara-nl/PraceHPML2021": {
        "DDLBench/run/summary/run.sh": [
            "requirements.txt"
        ],
        "DDLBench/run/run/run_template.sh": [
            "env",
            "requirements.txt"
        ],
        "3D-VQ-VAE-2/slurm-jobs/sample_embeddings_mid.job": [
            "env"
        ],
        "3D-VQ-VAE-2/slurm-jobs/train_pixelsnail_bottom.job": [
            "env"
        ],
        "3D-VQ-VAE-2/slurm-jobs/train_pixelcnn_top.job": [
            "env"
        ],
        "3D-VQ-VAE-2/slurm-jobs/train_vqvae_3d.job": [
            "env"
        ],
        "energy-efficient-computing/tutorials/monitoring_ear/GROMACS_SINGULARITY_GPU.sh": [
            "env"
        ]
    },
    "sara-nl/nvidia_amd_gpu_comparison": {
        "nvidia_amd_gpu_comparison/benchmark_CUDA.sh": [
            "init_lisa.sh",
            "main.py"
        ],
        "nvidia_amd_gpu_comparison/benchmark_ROCm.sh": [
            "init_lisa.sh",
            "main.py"
        ],
        "DDLBench/run/run/run_template.sh": [
            "main.py"
        ],
        "saraGAN/pgan_pytorch/train.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_2D/scripts/run_broadwell.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_128_to_256_npernode1.jb": [
            "main.py",
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_gpu.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_128_to_256.jb": [
            "main.py",
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/example_run_from_best_trial.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_optuna.jb": [
            "main.py",
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/example_normal_run.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/example_hyperparam_opt_inter_trial.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_gpu_vali.jb": [
            "main.py",
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/example_hyperparam_opt_intra_trial.jb": [
            "main.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_ccl.jb": [
            "main.py"
        ],
        "stylegan3/jobspec-cfg/train.py": [
            "train.py"
        ],
        "stylegan3/scripts/batch.sh": [
            "train.py"
        ],
        "Covid19-HPML/CT/classification/job.sh": [
            "main.py"
        ],
        "SURF-segmentation/deeplab/run_train.sh": [
            "train.py"
        ],
        "SURF-segmentation/deeplab/run_endeavor.sh": [
            "train.py"
        ],
        "SURF-segmentation/DCGMM_TF2.1%5BDeprecated%5D/train.sh": [
            "main.py"
        ]
    },
    "sara-nl/stylegan3": {
        "saraGAN/SURFGAN_3D/scripts/run_128_to_256_npernode1.jb": [
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_128_to_256.jb": [
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_optuna.jb": [
            "train.py"
        ],
        "saraGAN/SURFGAN_3D/scripts/run_gpu_vali.jb": [
            "train.py"
        ],
        "stylegan3/jobspec-cfg/train.py": [
            "train.py"
        ],
        "stylegan3/scripts/batch.sh": [
            "load_env.sh",
            "train.py"
        ],
        "SURF-segmentation/deeplab/run_train.sh": [
            "train.py"
        ],
        "SURF-segmentation/deeplab/run_endeavor.sh": [
            "train.py"
        ]
    },
    "sara-nl/SURF-segmentation": {
        "DDLBench/run/summary/run.sh": [
            "requirements.txt"
        ],
        "DDLBench/run/run/run_template.sh": [
            "requirements.txt"
        ]
    },
    "albazarova/sbi_intro": {
        "sbi_intro/run_ray.sh": [
            "pyross_example_script.py"
        ]
    },
    "FlexTRKR/PyFLEXTRKR": {
        "PyFLEXTRKR/slurm/slurm_dask_multinode_example.sh": [
            "./runscripts/run_mcs_tbpf.py",
            "./config/config_imerg_mcs_tbpf_example.yml"
        ],
        "PyFLEXTRKR/slurm/slurm_dask_example.sh": [
            "./runscripts/run_celltracking.py",
            "./config/config_csapr500m_example.yml"
        ]
    },
    "t3hseus/ariadne": {
        "ariadne/scripts/hydra_slurm/govorun_gpu.sh": [
            "environment_gpu.yml"
        ]
    },
    "susmiranda/avs8-840-deep-learning-mini-project": {
        "avs8-840-deep-learning-mini-project/trainFromConfig.sh": [
            "trainFromConfig.sh",
            "train.py"
        ],
        "avs8-840-deep-learning-mini-project/jobspec-cfg/train.py": [
            "train.py",
            "KWT_configs/KWT_config.cfg"
        ],
        "avs8-840-deep-learning-mini-project/jobspec-cfg/trainFromConfig.sh": [
            "trainFromConfig.sh",
            "train.py"
        ]
    },
    "siamakz/iVAE": {
        "iVAE/slurm_script_gpu.sbatch": [
            "main.py"
        ]
    },
    "mkuiper/MD_workflow_py": {
        "MD_workflow_py/Setup_and_Config/sbatch_production_script.template": [
            "master_config_file",
            "./mdwf"
        ],
        "MD_workflow_py/Setup_and_Config/sbatch_start_script.template": [
            "master_config_file",
            "./mdwf"
        ],
        "MD_workflow_py/Setup_and_Config/MolecularSoup/sbatch_production_script.template": [
            "master_config_file",
            "./mdwf"
        ],
        "MD_workflow_py/Setup_and_Config/MolecularSoup/sbatch_start_script.template": [
            "master_config_file",
            "./mdwf"
        ]
    },
    "wecacuee/openai-baselines": {
        "openai-baselines/pbs/fwrl-her-train-path-rewards-low-thresh-alt.sh": [
            "setup.sh"
        ],
        "openai-baselines/pbs/fwrl-her-train-path-rewards-goal-noise.sh": [
            "setup.sh"
        ],
        "openai-baselines/pbs/fwrl-her-train-path-rewards-low-thresh.sh": [
            "setup.sh"
        ]
    },
    "flahertylab/dncb-matrix-fac": {
        "dncb-matrix-fac/src/scripts/submit_heldout_experiment_prbgnmf.j2": [
            "src/dncbfac/heldout_experiment_prbgnmf.py"
        ],
        "dncb-matrix-fac/src/scripts/submit_heldout_experiment.j2": [
            "src/dncbfac/heldout_experiment.py"
        ],
        "dncb-matrix-fac/src/scripts/submit_stability_experiment_prbgnmf.j2": [
            "src/dncbfac/stability_experiment_prbgnmf.py"
        ],
        "dncb-matrix-fac/src/scripts/submit_stability_experiment_bgnmf.j2": [
            "src/dncbfac/stability_experiment_bgnmf.py"
        ],
        "dncb-matrix-fac/src/scripts/submit_heldout_experiment_bgnmf.j2": [
            "src/dncbfac/heldout_experiment_bgnmf.py"
        ],
        "dncb-matrix-fac/src/scripts/submit_experiment1.j2": [
            "src/dncbfac/api.py"
        ]
    },
    "jhoffe/dl_sbert": {
        "dl_sbert/scripts/train_scripts/bert.sh": [
            "main.py"
        ]
    },
    "jhoffe/fagprojekt": {
        "fagprojekt/batch_jobs/evaluate_finetuned_model.sh": [
            "asr_model/load_model.py"
        ],
        "fagprojekt/batch_jobs/train_asr_synthetic.sh": [
            "asr_model/experiment_uniform_batching.py"
        ]
    },
    "NDCLab/pepper-pipeline": {
        "pepper-pipeline/hpc_run.sub": [
            "run.py"
        ]
    },
    "changyliu/1666Project": {
        "1666Project/run_all_mip.sh": [
            "runMIPall.py"
        ]
    },
    "bresmegroup/SAP_bare-protein": {
        "SAP_bare-protein/sap-submit.sh": [
            "./gen-frame.sh",
            "./sed.sh",
            "sap.f",
            "./input-filename.sh",
            "./output-filename.sh",
            "sequence.f",
            "ressize.dat",
            "./lines.sh",
            "gen-index.f",
            "./lines-tracefile.sh",
            "gen-sasa-input.f",
            "./cat-index.sh",
            "./sasa.sh",
            "./sed-sasa.sh",
            "seggregate-framewise.f",
            "seggregate-atomwise-2.f",
            "./lines-atomsfile.sh",
            "seggregate-atomwise.f",
            "modify-atomfiles.f",
            "hydrophobicity.dat",
            "sap-residuewise.f"
        ]
    },
    "cdt-data-science/cluster-scripts": {
        "cluster-scripts/experiments/slurm_arrayjob.sh.template": [
            "interactive"
        ],
        "cluster-scripts/experiments/examples/simple/slurm_arrayjob.sh": [
            "interactive"
        ]
    },
    "trevor-yu-087/syde770-project": {
        "syde770-project/tune.sh": [
            "tune.py"
        ],
        "syde770-project/train_job.sh": [
            "run.py"
        ]
    },
    "alexandre-eymael/CropMAE": {
        "CropMAE/scripts/train_siammae_k400.sh": [
            "train_siammae_k400.py"
        ],
        "CropMAE/scripts/train_cropmae_in.sh": [
            "train_cropmae_in.py"
        ],
        "CropMAE/scripts/train_cropmae_k400.sh": [
            "train_cropmae_k400.py"
        ]
    },
    "seoseongseoseong/RL_HEV": {
        "RL_HEV/HEV.sh": [
            "main.py"
        ]
    },
    "sanaAyrml/GenerativeSSL_Submission": {
        "GenerativeSSL_Submission/scripts/solo_learn/train_solo_learn.slrm": [
            "solo-learn/main_pretrain.py"
        ]
    },
    "sanaAyrml/SVGNet": {
        "SVGNet/infer.sh": [
            "inference.py"
        ]
    },
    "KumarLabJax/visual-mouse-weight": {
        "visual-mouse-weight/PixelAnalysis.sh": [
            "./PixelAnalysis.sh"
        ],
        "visual-mouse-weight/jobspec-cfg/PixelAnalysis.sh": [
            "./PixelAnalysis.sh"
        ]
    },
    "ajaymur91/enhanced-sampling": {
        "Nucleation/sample_n/run_hrex.sh": [
            "mdp/npt.mdp",
            "mdp/md.mdp"
        ]
    },
    "ishine/speech_autoencoder": {
        "DeepFilterNet/scripts/sbatch_train.sh": [
            "train.py"
        ],
        "gramophone_noise_synth/train.sh": [
            "train.py"
        ],
        "StyleFormant/run1.sh": [
            "train.py"
        ]
    },
    "ishine/gramophone_noise_synth": {
        "DeepFilterNet/scripts/sbatch_train.sh": [
            "train.py"
        ],
        "gramophone_noise_synth/train.sh": [
            "train.py"
        ],
        "StyleFormant/run1.sh": [
            "train.py"
        ]
    },
    "ishine/StyleFormant": {
        "DeepFilterNet/scripts/sbatch_train.sh": [
            "train.py"
        ],
        "gramophone_noise_synth/train.sh": [
            "train.py"
        ],
        "StyleFormant/run1.sh": [
            "train.py",
            "config/LibriTTS/preprocess.yaml",
            "config/LibriTTS/model.yaml",
            "config/LibriTTS/train.yaml"
        ]
    },
    "wielandbrendel/ImageNet-Adversarial-Training": {
        "ImageNet-Adversarial-Training/slurm/train.sh": [
            "LICENSE",
            "./third_party/serve-data.py",
            "./main.py"
        ],
        "ImageNet-Adversarial-Training/jobspec-cfg/main.py": [
            "LICENSE"
        ]
    },
    "pseudotensor/harm_harmgit": {
        "harm_harmgit/batches/batch.qsub.pfe.thickdiskfull3d7tilt1.5708": [
            "long"
        ]
    },
    "smped/snakemake_rnaseq_pe": {
        "snakemake_rnaseq_pe/scripts/run_snakemake.sh": [
            "output/rulegraph.dot",
            "output/rulegraph.pdf"
        ]
    },
    "tomas-fer/HybPhyloMaker": {
        "HybPhyloMaker/HybPhyloMaker8l_SNaQ.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker7_roottrees.sh",
            "HybPhyloMaker8a_astral.sh",
            "settings.cfg",
            "HybPhyloMaker8l_SNaQ.sh"
        ],
        "HybPhyloMaker/HybPhyloMaker8m2_PhyloNet_summary.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/HybPhyloMaker8b_astrid.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "HybPhyloMaker7_roottrees.sh",
            "HybPhyloMaker9_update_trees.sh",
            "settings.cfg"
        ],
        "HybPhyloMaker/HybPhyloMaker2a_readmappingParallel.sh": [
            "settings.cfg",
            "HybPhyloMaker1_rawprocess.sh",
            "HybPhyloMaker2_readmapping.sh",
            "HybPhyloMaker0b_preparereference.sh"
        ],
        "HybPhyloMaker/HybPhyloMaker8i_Dsuite.sh": [
            "HybPhyloMaker8a_astral.sh",
            "settings.cfg"
        ],
        "HybPhyloMaker/HybPhyloMaker0d_julia_setup_MetaCentrum.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/HybPhyloMaker8m_PhyloNet.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker7_roottrees.sh",
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker2_readmapping.sh": [
            "settings.cfg",
            "HybPhyloMaker0b_preparereference.sh"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker0b_preparereference.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker6a_RAxML_for_selected.sh": [
            "settings.cfg",
            "HybPhyloMaker6a2_RAxML_trees_summary.sh"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker8l_SNaQ.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker7_roottrees.sh",
            "HybPhyloMaker8a_astral.sh",
            "settings.cfg",
            "HybPhyloMaker8l_SNaQ.sh"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker6b_FastTree_for_selected.sh": [
            "settings.cfg",
            "HybPhyloMaker5_missingdataremoval.sh"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker9_update_trees.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker1_rawprocess.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker5_missingdataremoval.sh": [
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker8a_astral.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "HybPhyloMaker7_roottrees.sh",
            "HybPhyloMaker9_update_trees.sh",
            "settings.cfg"
        ],
        "HybPhyloMaker/jobspec-cfg/HybPhyloMaker7_roottrees.sh": [
            "HybPhyloMaker5_missingdataremoval.sh",
            "HybPhyloMaker6a_RAxML_for_selected.sh",
            "HybPhyloMaker6b_FastTree_for_selected.sh",
            "settings.cfg"
        ]
    },
    "alimirzazadeh/SemisupervisedAttention": {
        "SemisupervisedAttention/script_resnet.sh": [
            "main.py"
        ]
    },
    "ccme-tmc/tmckit": {
        "tmckit/qw2k-b.sh": [
            "qw2k.sh"
        ],
        "tmckit/qw2k.sh": [
            "qw2k.sh"
        ],
        "tmckit/jobspec-cfg/qw2k.sh": [
            "qw2k.sh"
        ]
    },
    "snehil1703/Driver-Distraction-Detection": {
        "Driver-Distraction-Detection/visualize_job.sh": [
            "python/visualize.py"
        ],
        "Driver-Distraction-Detection/job.sh": [
            "./train_fp1.sh"
        ]
    },
    "HamidShojanazeri/LLM_fine_tuning": {
        "LLM_fine_tuning/multi_node.slurm": [
            "llama_finetuning.py"
        ]
    },
    "flowpoint/secora": {
        "secora/environments/cluster/cluster_debug_gpu4.sh": [
            "secora/train.py",
            "configs/cluster.yml"
        ],
        "secora/environments/cluster/cluster_profile_gpu.sh": [
            "secora/profiling.py",
            "configs/cluster.yml"
        ],
        "secora/environments/cluster/cluster_profile_wr14.sh": [
            "secora/profiling.py",
            "configs/cluster.yml"
        ],
        "secora/environments/cluster/cluster_profile_gpu4.sh": [
            "secora/profiling.py",
            "configs/cluster.yml"
        ],
        "secora/jobspec-cfg/secora/profiling.py": [
            "secora/profiling.py"
        ]
    },
    "nicolasvasilache/TensorComprehensions": {
        "TensorComprehensions/jobspec-cfg/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ],
        "TensorComprehensions/tc/benchmarks/scripts/autotuner_parallel.sh": [
            "./tc/benchmarks/scripts/autotuner_parallel.sh"
        ]
    },
    "bajajahsaas/knn-srl-procedural-text": {
        "knn-srl-procedural-text/temp.sh": [
            "copy_model/prepare_context.py"
        ]
    },
    "franroldans/real_robot_challenge": {
        "real_robot_challenge/train.sh": [
            "run"
        ]
    },
    "ali1naqvi/TPG-Creativity-Music": {
        "TPG-Creativity-Music/tpg-slurm.sh": [
            "models/generator_TPG.PY"
        ]
    },
    "QY1994-0919/CFPNet": {
        "CFPNet/cfp_train.sh": [
            "tools/demo.py",
            "exps/default/yolox_s.py",
            "assets/dog.jpg",
            "tools/train.py",
            "exps/example/custom/cfp_s.py"
        ],
        "CFPNet/jobspec-cfg/tools/demo.py": [
            "tools/trt.py"
        ]
    },
    "AlaaLab/InstructCV": {
        "InstructCV/scripts/slurm_inference.sh": [
            "edit_cli.py"
        ]
    },
    "metno/maelstrom-train": {
        "maelstrom-train/vef/run.sh": [
            "etc/d1-4/opt1_e1.yml",
            "etc/d1-4/loader_debug.yml",
            "etc/d1-4/common.yml"
        ]
    },
    "sbarwey/DDP_PyGeom": {
        "DDP_PyGeom/submit_2.sh": [
            "./set_affinity_gpu_polaris.sh",
            "main.py"
        ],
        "DDP_PyGeom/submit_4.sh": [
            "./set_affinity_gpu_polaris.sh",
            "main.py"
        ],
        "DDP_PyGeom/submit_1.sh": [
            "./set_affinity_gpu_polaris.sh",
            "main.py"
        ],
        "DDP_PyGeom/submit_3.sh": [
            "./set_affinity_gpu_polaris.sh",
            "main.py"
        ],
        "DDP_PyGeom/submit_postproc.sh": [
            "postprocess.py"
        ],
        "DDP_PyGeom/submit.sh": [
            "./set_affinity_gpu_polaris.sh",
            "main.py"
        ]
    },
    "fvlieshout/ATCS_group1": {
        "ATCS_group1/train.job": [
            "train.py"
        ]
    },
    "samuelebortolotti/C-HMCNN": {
        "C-HMCNN/debug.sh": [
            "run.sh"
        ],
        "C-HMCNN/jobspec-cfg/run.sh": [
            "run.sh"
        ]
    },
    "askemottelson/replication-psych": {
        "replication-psych/gpu.job": [
            "requirements.txt",
            "go.py"
        ]
    },
    "QingquanBao/Image-Captioning": {
        "Image-Captioning/run.sh": [
            "main.py",
            "configs/resnet101_attention_schedule.yaml",
            "evaluate.py"
        ],
        "Image-Captioning/jobspec-cfg/configs/resnet101_attention_schedule.yaml": [
            "utils/vocab_set.pkl"
        ]
    },
    "compSPI/aNiMAte": {
        "aNiMAte/scripts/submit_job.sh": [
            "src/experiment_scripts/main.py"
        ],
        "aNiMAte/scripts/submit_job_eval.sh": [
            "src/experiment_scripts/eval.py"
        ]
    },
    "Petru-Milev/Pegas": {
        "Pegas/main.job": [
            "./make_geom.sh",
            "./scripts/organize_data_after_calcul.sh",
            "./scripts/get_data_RR_eng_df.sh",
            "./scripts/get_data_RR_miu_dr.sh",
            "./scripts/get_energy_zero_field.sh",
            "./scripts/calc_RR_energy_zero_field.sh"
        ]
    },
    "ModelDBRepository/194897": {
        "194897/comet_batch.run": [
            "evol_islands.py"
        ],
        "194897/jobspec-cfg/evol_islands.py": [
            "main.py"
        ],
        "232023/simulation_job.slurm": [
            "main.py"
        ],
        "232023/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "ModelDBRepository/232023": {
        "194897/jobspec-cfg/evol_islands.py": [
            "main.py"
        ],
        "232023/simulation_job.slurm": [
            "main.py"
        ],
        "232023/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "jsivaku1/GenerativeMTD": {
        "GenerativeMTD/ctgan.sh": [
            "train.py"
        ],
        "GenerativeMTD/TVAE.sh": [
            "train.py"
        ],
        "GenerativeMTD/veegan.sh": [
            "train.py"
        ]
    },
    "shuozhixu/Materials_2024": {
        "Materials_2024/lmp.batch": [
            "lmp.in"
        ],
        "Materials_2024/jobspec-cfg/lmp.in": [
            "AgCu.eam.alloy"
        ]
    },
    "lyncch01/rts_imaging_pipeline": {
        "rts_imaging_pipeline/qsetup.sh": [
            "run_rts.sh",
            "edit_rts.py"
        ]
    },
    "zhangchaosd/DeepfakeDatasetsParser": {
        "DeepfakeDatasetsParser/fvl.sh": [
            "ForgeryNet.py"
        ],
        "DeepfakeDatasetsParser/jobspec-cfg/ForgeryNet.py": [
            "ForgeryNet.py"
        ]
    },
    "soniajoseph/clip_investigation": {
        "clip_investigation/automate_ablations.sh": [
            "automate_ablations.py"
        ],
        "clip_investigation/get_activations.sh": [
            "get_activations.py"
        ]
    },
    "sweatybridge/text-to-anime": {
        "text-to-anime/slurm.sh": [
            "train.py"
        ]
    },
    "selvaje/ONCHO": {
        "YaleRep/NHDplus/sc31_reproject_stream_basin.sh": [
            "getCorners4Gwarp"
        ],
        "YaleRep/NITRO/sc05_Nemision_table.sh": [
            "getCorners4Gtranslate"
        ]
    },
    "chewyiting/Bioproj2Lineage": {
        "Bioproj2Lineage/slurm_Accs2Runaccs.sh": [
            "Snakefile"
        ],
        "Bioproj2Lineage/slurm_Runacc2Fasta.sh": [
            "Snakefile"
        ]
    },
    "olcf/AlphaFold_on_Summit": {
        "AlphaFold_on_Summit/batch_submit.sh": [
            "./run_af_summit_dl.sh"
        ]
    },
    "joaquinpelle/BosonStars": {
        "BosonStars/submit_serafin.sh": [
            "main.jl"
        ]
    },
    "baldikacti/chienlab-tnseq": {
        "chienlab-rnaseq/main_slurm.sh": [
            "references/NC_011916.fasta"
        ]
    },
    "baldikacti/chienlab-rnaseq": {
        "chienlab-rnaseq/main_slurm.sh": [
            "references/NC_011916.fasta",
            "references/ccna.gff"
        ]
    },
    "adriankoering/luokitin": {
        "luokitin/slurm/dgx/invvis.sh": [
            "train.py"
        ]
    },
    "ntblab/infant_neuropipe": {
        "infant_neuropipe/prototype/link/scripts/run_preprocess_FIR.sh": [
            "globals.sh"
        ]
    },
    "fazalul92/RL4CARP": {
        "RL4CARP/batch.sh": [
            "trainer.py"
        ]
    },
    "vasudev-io/AudioTag-CNN": {
        "AudioTag-CNN/main.sh": [
            "main.py"
        ],
        "AudioTag-CNN/jobspec-cfg/main.py": [
            "min_max_values.json"
        ]
    },
    "wschreyer/PENTrack": {
        "PENTrack/slurm.sh": [
            "./in/config.in"
        ]
    },
    "rvr-account/rvr": {
        "rvr/runpacs_array.sbatch": [
            "runpacs_array.sbatch"
        ],
        "rvr/jobspec-cfg/runpacs_array.sbatch": [
            "runpacs_array.sbatch"
        ]
    },
    "sctmic015/neat-python": {
        "neat-python/generate.pbs": [
            "mapElitesNEAT2.py"
        ]
    },
    "milinda/magpie": {
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-tachyon-and-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script",
            "examples/spark-example-job-script",
            "examples/storm-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hbase-with-hdfs": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-and-pig": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hbase-with-hdfs-with-phoenix": [
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop": [
            "examples/hadoop-example-job-script"
        ],
        "magpie/submission-scripts/script-sbatch-srun-juliet/magpie.sbatch-srun-hadoop": [
            "examples/hadoop-example-job-script"
        ]
    },
    "ilkhem/icebeem": {
        "icebeem/slurm_main_cpu.sbatch": [
            "main.py"
        ]
    },
    "sapountzis/thesis": {
        "thesis/thesis.sh": [
            "requirements.txt",
            "train.py"
        ]
    },
    "nihalsid/sdf-gen": {
        "sdf-gen/slurm_mp.sh": [
            "process_meshes_matterport.py"
        ],
        "sdf-gen/slurm.sh": [
            "process_meshes.py"
        ]
    },
    "jinwchoi/TA3N": {
        "TA3N/script_train_val.sh": [
            "main.py",
            "test_models.py"
        ],
        "TA3N/script_train_val_u2h.sh": [
            "main.py",
            "test_models.py"
        ],
        "TA3N/i3d_script_train_val_h2u.sh": [
            "main.py",
            "test_models.py"
        ]
    },
    "houqb/SPNet": {
        "SPNet/jobspec-cfg/tool/train.sh": [
            "tool/train.sh",
            "tool/train.py",
            "tool/test.py"
        ],
        "SPNet/jobspec-cfg/tool/train.py": [
            "config/ade20k/ade20k_spnet50.yaml"
        ],
        "SPNet/tool/train.sh": [
            "tool/train.sh",
            "tool/train.py",
            "tool/test.py"
        ]
    },
    "chengzegang/multi-path-transformer": {
        "multi-path-transformer/train4.sbatch": [
            "cli.py"
        ]
    },
    "ccccclw/NFold": {
        "NFold/job_meld.sh": [
            "setup_Meld.py",
            "prepare_restart"
        ]
    },
    "seawatcher/Extract-Lyrics": {
        "Extract-Lyrics/dataset.sh": [
            "data_lyrics.py"
        ],
        "Extract-Lyrics/data_time.sh": [
            "data_lyrics.py"
        ]
    },
    "eQTL-Catalogue/qtlmap": {
        "qtlmap/submit_nf_job_GEUVADIS_hisat.sh": [
            "main.nf"
        ]
    },
    "FLAMEGPU/FLAMEGPU2-CINECA": {
        "FLAMEGPU2-CINECA/profile.sh": [
            "profile.sh"
        ],
        "FLAMEGPU2-CINECA/jobspec-cfg/profile.sh": [
            "profile.sh"
        ]
    },
    "mahad852/CAP6411_Ass2": {
        "CAP6411_Ass2/script.slurm": [
            "train.py",
            "eval.py",
            "generate_outputs.py"
        ]
    },
    "intervene-EU-H2020/prspipe": {
        "prspipe/run_cluster.sh": [
            "workflow/Snakefile"
        ]
    },
    "luohongyin/EntST": {
        "EntST/prompt_script.sh": [
            "eval_prompt.py",
            "proc_data.py",
            "prompt_cst.py"
        ]
    },
    "cieb-unibas/jpap": {
        "jpap/examples/ex_scicore.sh": [
            "examples/ex.py"
        ]
    },
    "THUDM/open_clip_pix2struct": {
        "open_clip_pix2struct/sl.sh": [
            "sl.sh",
            "src/training/main.py"
        ],
        "open_clip_pix2struct/jobspec-cfg/sl.sh": [
            "sl.sh",
            "src/training/main.py"
        ]
    },
    "nuclear-multimessenger-astronomy/nmma": {
        "nmma/slurm.sub": [
            "tools/analysis_slurm.py"
        ]
    },
    "nuclear-multimessenger-astronomy/GRB230812B": {
        "GRB230812B/Run3/GRBTophat/slurmGRBtophat.sub": [
            "./TrPi2018GRB230812B.prior"
        ],
        "GRB230812B/Xritest/00GRB/Tophat/slurmGRBtophat.sub": [
            "./TrPi2018GRB230812B.prior"
        ],
        "GRB230812B/Fullrun2/00GRB/Tophat/slurmGRBtophat.sub": [
            "./TrPi2018GRB230812B.prior"
        ]
    },
    "nozerorma/nf_caastools": {
        "nf_caastools/SBATCH.sh": [
            "main.nf"
        ],
        "nf_caastools/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "PhyloPhere/example_discovery-array.sh": [
            "main.nf"
        ],
        "PhyloPhere/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "nozerorma/PhyloPhere": {
        "nf_caastools/SBATCH.sh": [
            "main.nf"
        ],
        "nf_caastools/jobspec-cfg/main.nf": [
            "main.nf"
        ],
        "PhyloPhere/example_discovery-array.sh": [
            "main.nf"
        ],
        "PhyloPhere/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "brunovi/cholla_cosmology": {
        "cholla_cosmology/extras/send_jobs_titan.pbs": [
            "tests/3D/Cosmological_hydro_1024.txt"
        ]
    },
    "joe5saia/Hmc.jl": {
        "Hmc.jl/slurmscripts/run_dispersion.sh": [
            "code/dispersion.jl"
        ]
    },
    "AndreasLH/ProtoPNet": {
        "ProtoPNet/submit_main.sh": [
            "main.py"
        ],
        "ProtoPNet/jobspec-cfg/main.py": [
            "main.py"
        ]
    },
    "eelregit/map2map": {
        "map2map/scripts/example-train.slurm": [
            "m2m.py"
        ]
    },
    "Karlinator/vi_mini_project": {
        "vi_mini_project/train.slurm": [
            "main.py"
        ]
    },
    "wamiq-reyaz/floorplan": {
        "floorplan/slurm_doors.sh": [
            "train_walls.py"
        ],
        "floorplan/train_lifull3_cond_doors.sh": [
            "train_conditional_doors.py"
        ],
        "floorplan/train_rplan3_cond_walls.sh": [
            "train_conditional_walls.py"
        ]
    },
    "imraunav/LipNet": {
        "LipNet/job-uni.sh": [
            "train-uni.py"
        ],
        "LipNet/jobscript.sh": [
            "train_ddp.py"
        ],
        "LipNet/testjob.sh": [
            "test.py"
        ]
    },
    "RANDCorporation/covid-19-reopening-california": {
        "covid-19-reopening-california/hpc_run_experiments.sbatch": [
            "02_future_runs/hpc_run_experiments.R"
        ]
    },
    "Hamedhoorijani/MFC": {
        "MFC/jobspec-cfg/mfc.sh": [
            "CMakeLists.txt",
            "mfc.sh",
            "./mfc.sh"
        ],
        "MFC/toolchain/templates/pbs.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC/toolchain/templates/slurm.sh": [
            "./mfc.sh",
            "mfc.sh"
        ],
        "MFC/toolchain/templates/lsf.sh": [
            "./mfc.sh",
            "mfc.sh"
        ]
    },
    "AruniRC/detectron-self-train": {
        "detectron-self-train/gypsum/scripts/train/bdd_DA_and_distill.sh": [
            "tools/train_net_step.py",
            "configs/baselines/bdd_DA_and_distill.yaml",
            "configs/cs6/e2e_faster_rcnn_R-50-C4_1x_quick.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/bdd_scripts/bdd_source_and_HP18k_remap_random.sh": [
            "tools/train_net_step.py",
            "configs/baselines/bdd_distill100.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/kitti_cityscapes/kitti_cityscapes_HPlen3_domain_im.sh": [
            "tools/train_net_step.py",
            "configs/baselines/kitti_domain_im.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/kitti_cityscapes/kitti_cityscapes_HPlen3.sh": [
            "tools/train_net_step.py",
            "configs/baselines/kitti_HP.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/kitti_cityscapes/kitti_cityscapes_HPlen5.sh": [
            "tools/train_net_step.py",
            "configs/baselines/kitti_HP.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/bdd_vary_pure_target/bdd_source_and_labeled_005.sh": [
            "tools/train_net_step.py",
            "configs/baselines/bdd_peds_dets_bs64_4gpu.yaml"
        ],
        "detectron-self-train/gypsum/scripts/train/bdd_vary_pure_target/bdd_source_and_labeled_075.sh": [
            "tools/train_net_step.py",
            "configs/baselines/bdd_peds_dets_bs64_4gpu.yaml"
        ]
    },
    "HIDA-Datathon/HIDA-Neurones": {
        "HIDA-Neurones/run_cluster.sh": [
            "main.py"
        ]
    },
    "TovlyDeutsch/Linguistic-Features-for-Readability": {
        "Linguistic-Features-for-Readability/bash_scripts/runexp_gpu.sh": [
            "runner.py"
        ],
        "Linguistic-Features-for-Readability/jobspec-cfg/runner.py": [
            "runner.py"
        ]
    },
    "HelmholtzAI-Consultants-Munich/oligo-designer-toolsuite-AI-filters": {
        "oligo-designer-toolsuite-AI-filters/lstm.sbatch": [
            "oligo_designer_toolsuite_ai_filters/hybridization_probability/train_model.py",
            "configs/hybridization_probability/train_LSTM.yaml"
        ],
        "oligo-designer-toolsuite-AI-filters/jobspec-cfg/configs/hybridization_probability/train_LSTM.yaml": [
            "data/hybridization_probability/datasets/artificial_dataset_15_100_325000_train.csv",
            "data/hybridization_probability/datasets/artificial_dataset_15_100_325000_validation.csv",
            "data/hybridization_probability/datasets/artificial_dataset_15_100_325000_test.csv"
        ]
    },
    "mr-sarthakgupta/efficient_road_damage_detection": {
        "efficient_road_damage_detection/submit_1.sh": [
            "kd.py"
        ]
    },
    "uthpalaherath/dotfiles": {
        "dotfiles/locations/thorny/.bashrc": [
            "cleanvasp.sh"
        ]
    },
    "frohlich-lab/PierreDeMetz": {
        "PierreDeMetz/submitcluster_2.sh": [
            "snakelog.out",
            "snakelog.err",
            "environement.yml"
        ]
    },
    "LBNL-ETA/FlexDRL": {
        "FlexDRL/lrc_run_DRL_FLEXLAB.sh": [
            "simulation/rl_train_ddpg.py"
        ]
    },
    "happen2me/cross-gnn": {
        "cross-gnn/scripts/ft-gqa.sh": [
            "train.py",
            "configs/gqa.yaml",
            "eval.py"
        ]
    },
    "edwardjkim/enhance": {
        "enhance/tf.job": [
            "sres_multi_gpu_train.py"
        ]
    },
    "phil-hawkins/text_objseg": {
        "text_objseg/exp_train_referit_det.sh": [
            "exp-referit/exp_train_referit_det.py"
        ],
        "text_objseg/exp_train_lowres.sh": [
            "exp-referit/init_referit_seg_lowres_from_det.py",
            "exp-referit/exp_train_referit_seg_lowres.py"
        ],
        "text_objseg/build_training_batches_seg.sh": [
            "exp-referit/build_training_batches_seg.py"
        ],
        "text_objseg/exp_train_hires.sh": [
            "exp-referit/init_referit_seg_highres_from_lowres.py",
            "exp-referit/exp_train_referit_seg_highres.py"
        ]
    },
    "nansencenter/NERSC-HYCOM-CICE": {
        "NERSC-HYCOM-CICE/TP0a1.00/expt_01.1/slurm_cr.sh": [
            "./bin/atmo_synoptic.sh",
            "./bin/expt_preprocess.sh"
        ]
    },
    "saandeepa93/face_test": {
        "face_test/ds_run.sh": [
            "./trainer/filter_tars.py",
            "./trainer/extract_chips.py",
            "./process/extract_chips.py",
            "./trainer/read_chips.py"
        ]
    },
    "LeonPeric/bias-in-multilingual-dialogue-generations": {
        "bias-in-multilingual-dialogue-generations/main.job": [
            "run.py"
        ]
    },
    "pinin4fjords/irap": {
        "irap/scripts/irap_install.sh": [
            "version"
        ]
    },
    "fnothaft/v2g_data": {
        "v2g_data/master.sh": [
            "scripts/sun2018_pqtl.make_manifest.Snakefile",
            "sun2018_pqtl.Snakefile",
            "gtex7_eqtl.Snakefile",
            "andersson2014_fantom5.Snakefile",
            "thurman2012_dhscor.Snakefile",
            "javierre2016_pchic.Snakefile",
            "nearest_gene.Snakefile"
        ],
        "v2g_data/jobspec-cfg/thurman2012_dhscor.Snakefile": [
            "scripts/thurman2012_to_final.py"
        ],
        "v2g_data/jobspec-cfg/nearest_gene.Snakefile": [
            "scripts/vcf_to_bed.py"
        ],
        "v2g_data/jobspec-cfg/javierre2016_pchic.Snakefile": [
            "scripts/javierre2016_to_bed.py",
            "scripts/javierre2016_to_final.py"
        ],
        "v2g_data/jobspec-cfg/sun2018_pqtl.Snakefile": [
            "scripts/sun2018_extract_cis_data.py"
        ],
        "v2g_data/jobspec-cfg/andersson2014_fantom5.Snakefile": [
            "scripts/andersson2014_to_final.py"
        ],
        "v2g_data/jobspec-cfg/gtex7_eqtl.Snakefile": [
            "scripts/gtex7_format_cisreg.py"
        ],
        "v2g_data/jobspec-cfg/scripts/sun2018_pqtl.make_manifest.Snakefile": [
            "scripts/sun2018_map_manifest.py"
        ]
    },
    "JulieKeisler/automl": {
        "automl/script_autopytorch.sh": [
            "main.py",
            "dataset/data.csv"
        ]
    },
    "drunkcoding/model-inference": {
        "model-inference/jobspec-cfg/ray/run_serve.sh": [
            "ray/t5_sst2_composed.py",
            "ray/meta.json"
        ],
        "model-inference/ray/slurm_batch.sh": [
            "ray/run_serve.sh",
            "tests/test_cost_model.py",
            "ray/kill_serve.sh"
        ]
    },
    "bohniti/jigsaw-puzzle-solver": {
        "jigsaw-puzzle-solver/basic_gpu.sh": [
            "basic_gpu.sh",
            "main.py",
            "./main.py"
        ],
        "jigsaw-puzzle-solver/jobspec-cfg/basic_gpu.sh": [
            "basic_gpu.sh",
            "main.py",
            "./main.py"
        ]
    },
    "tjlogue4/Wildfire-Prediction": {
        "Wildfire-Prediction/l1c.sh": [
            "process_l1c.py"
        ]
    },
    "wagner-group/demystify-random-transform": {
        "demystify-random-transform/jobspec-cfg/configs/train_img_pgd.yml": [
            "train_ray.py"
        ],
        "demystify-random-transform/jobspec-cfg/configs/train_img_pgd-rand.yml": [
            "train_ray.py"
        ],
        "demystify-random-transform/jobspec-cfg/configs/train_cifar_pgd-rand.yml": [
            "train_ray.py"
        ],
        "demystify-random-transform/scripts/run_slurm.sh": [
            "test.py",
            "configs/test_img_rand.yml",
            "train.py",
            "configs/train_img_pgd-rand.yml",
            "configs/train_img_pgd.yml",
            "configs/train_cifar_pgd-rand.yml",
            "configs/test_cifar_rand.yml",
            "configs/test_img_rand_normal.yml",
            "configs/test_img_rand_fixed.yml"
        ]
    },
    "hirenkumawat/latent-diffusion-MIDI": {
        "latent-diffusion-MIDI/h.sbatch": [
            "main.py",
            "configs/latent-diffusion/midi-vq-4-b.yaml"
        ]
    },
    "lezhang7/Retrieval_MuGI": {
        "Retrieval_MuGI/mugi.sh": [
            "mugi.py"
        ]
    },
    "rajanisamir/anomaly_bird": {
        "anomaly_bird/train.sh": [
            "ae_train.py"
        ]
    },
    "mayanagarwal/yolov5": {
        "yolov5/runfs.slurm": [
            "train.py",
            "custom_train/dataset_fs.yaml"
        ],
        "yolov5/rundf.slurm": [
            "train.py",
            "custom_train/dataset_df.yaml"
        ],
        "yolov5/runnt.slurm": [
            "train.py",
            "custom_train/dataset_nt.yaml"
        ],
        "yolov5/run_final.slurm": [
            "train.py",
            "custom_train/dataset.yaml"
        ],
        "yolov5/jobspec-cfg/train.py": [
            "test.py",
            "train.py"
        ],
        "yolov5/jobspec-cfg/custom_train/dataset_df.yaml": [
            "./custom_train/traindf.txt",
            "./custom_train/validdf.txt"
        ],
        "yolov5/jobspec-cfg/custom_train/dataset.yaml": [
            "./custom_train/train_final.txt",
            "./custom_train/valid_final.txt"
        ],
        "yolov5/jobspec-cfg/custom_train/dataset_nt.yaml": [
            "./custom_train/trainnt.txt",
            "./custom_train/validnt.txt"
        ],
        "yolov5/jobspec-cfg/custom_train/dataset_fs.yaml": [
            "./custom_train/trainfs.txt",
            "./custom_train/validfs.txt"
        ]
    },
    "AlphaGoat/tensorflow-zoo": {
        "tensorflow-zoo/queue_exhaustion_experiment.pbs": [
            "queue_exhaustion_experiment.py"
        ]
    },
    "geopm/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "greenelab/mousiplier": {
        "mousiplier/src/run_transformation.sh": [
            "data/NAc_PFC_VTA_counts.txt",
            "src/3_preprocess_expression.py",
            "output/Z.tsv",
            "output/lambda.txt",
            "src/12_differential_LVs.R"
        ]
    },
    "PengZhai-07/Nucleation_style": {
        "Nucleation_style/velocity_ground.sh": [
            "testMPI.jl"
        ],
        "Nucleation_style/testMPI.sh": [
            "testMPI.jl"
        ],
        "Nucleation_style/Python/florence_ncf.sh": [
            "florence_ncf.py"
        ]
    },
    "fudickar-lab/NLP_Triaging": {
        "NLP_Triaging/triagingNNTuner.job": [
            "nn.py"
        ]
    },
    "lunjohnzhang/ggo_public": {
        "ggo_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ]
    },
    "lunjohnzhang/warehouse_env_gen_nca_public": {
        "ggo_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ]
    },
    "lunjohnzhang/warehouse_env_gen_public": {
        "ggo_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "ggo_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_nca_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/slurm_cancel.sh": [
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/jobspec-cfg/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ],
        "warehouse_env_gen_public/scripts/run_slurm.sh": [
            "scripts/run_slurm.sh",
            "env_search/main.py",
            "scripts/slurm_cancel.sh"
        ]
    },
    "varun-v-rao/ACL-RadSum23-Challenge": {
        "ACL-RadSum23-Challenge/train.sbat": [
            "train_bert2bert.py"
        ]
    },
    "xuetaowave/FourCastNetTEC": {
        "FourCastNetTEC/submit_batch.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ]
    },
    "montehoover/.dotfiles": {
        ".dotfiles/sbatch_template.sh": [
            "profile_shared"
        ]
    },
    "songleee/LS-MolGen": {
        "LS-MolGen/get_eval_results.pbs": [
            "calc_metrics.py"
        ],
        "LS-MolGen/run.pbs": [
            "pre_train.py",
            "transfer_learning.py",
            "reinforcement_learning.py",
            "data/EGFR/reinvent/rl.log"
        ]
    },
    "juergenknauer/CABLE_files": {
        "CABLE_files/run_cable_casa_array_original.slurm": [
            "./run_cable_site_CNP_meta.py"
        ]
    },
    "rpartsey/pointgoal-navigation": {
        "pointgoal-navigation/odometry/experiments/run_experiment_rn50.sh": [
            "config_files/odometry/resnet18_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_2m_fair.yaml",
            "config_files/odometry/resnet50_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_3m_fair.yaml"
        ],
        "pointgoal-navigation/odometry/experiments/run_experiment.sh": [
            "config_files/odometry/resnet18_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_2m_fair.yaml",
            "config_files/odometry/resnet18_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_3m_fair.yaml"
        ],
        "pointgoal-navigation/odometry/experiments/run_experiment_rn50_8n.sh": [
            "config_files/odometry/resnet18_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_2m_fair.yaml",
            "config_files/odometry/resnet50_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_3m_fair_8n.yaml"
        ],
        "pointgoal-navigation/odometry/experiments/run_experiment_eval.sh": [
            "config_files/ddppo/ddppo_pointnav_2021.yaml"
        ],
        "pointgoal-navigation/odometry/experiments/run_experiment_rn50_8n_sim2real.sh": [
            "config_files/odometry/resnet18_bs16_ddepth5_maxd0.5_randomsampling_dropout0.2_poselossv2_1._1._180x320_embedd_act_vflip_hc2021_vo3_bigdata_2m_fair.yaml",
            "config_files/odometry/paper/sim2real/fair_sim2real_resnet50_bs32_rgbd_actemb2_flip_invrot.yaml"
        ],
        "pointgoal-navigation/jobspec-cfg/navigation/experiments/run_experiment_eval.sh": [
            "navigation/experiments/run_experiment_eval.sh",
            "config_files/ddppo/ddppo_pointnav_2021.yaml",
            "run_ddppo.py"
        ],
        "pointgoal-navigation/navigation/experiments/run_experiment.sh": [
            "config_files/ddppo/ddppo_pointnav_2021.yaml",
            "run_ddppo.py"
        ],
        "pointgoal-navigation/navigation/experiments/run_experiment_eval.sh": [
            "navigation/experiments/run_experiment_eval.sh",
            "config_files/ddppo/ddppo_pointnav_2021.yaml",
            "run_ddppo.py"
        ]
    },
    "kostrzewa/cvc_depgraph": {
        "jobscripts/generators/zero_up_quark_mass/cA211a.40.24/templates/job.cmd.template": [
            "cpff.input"
        ],
        "jobscripts/generators/zero_up_quark_mass/cB211b.25.48/templates/job.cmd.template": [
            "cpff.input"
        ],
        "jobscripts/generators/zero_up_quark_mass/cA211b.30.32/templates/job.cmd.template": [
            "cpff.input"
        ],
        "cvc_depgraph/example_input_files/correlators_scalar_vector_ff_averx_averxsq/templates/job_pascal.cmd.template": [
            "cpff.input"
        ],
        "cvc_depgraph/example_input_files/correlators_scalar_vector_ff_averx_averxsq/templates/job_kepler.cmd.template": [
            "cpff.input"
        ],
        "cvc_depgraph/example_input_files/correlators_eta_etaprime_OS_twopt_funs/templates/job_pascal.cmd.template": [
            "cpff.input"
        ],
        "cvc_depgraph/example_input_files/correlators_eta_etaprime_OS_twopt_funs/templates/job_kepler.cmd.template": [
            "cpff.input"
        ]
    },
    "bmperrea/KitaevSL": {
        "KitaevSL/supercomputer/setup.pbs": [
            "do_some_mcmc.m"
        ]
    },
    "egeza/shortread_denovo_assembly": {
        "shortread_denovo_assembly/denovo_assembly.sh": [
            "main.nf"
        ]
    },
    "wouterz/HackingLab": {
        "HackingLab/jobscript_opt.sbatch": [
            "./adv_model_script.py"
        ],
        "HackingLab/jobscript_random2.sbatch": [
            "./random_adv_script.py"
        ]
    },
    "rahulgaur104/ideal-ballooning-solver": {
        "ideal-ballooning-solver/slurm_x0.sl": [
            "set_x0.py"
        ]
    },
    "BellGeorge/stable-diffusion": {
        "stable-diffusion/paras_scripts/eval.sh": [
            "scripts/txt2img.py"
        ]
    },
    "c00cjz00/pdf_chatbot_llama2_vectorstore_chainlit": {
        "pdf_chatbot_llama2_vectorstore_chainlit/genai.slurm": [
            "requirements.txt",
            "model_gptq.py"
        ],
        "pdf_chatbot_llama2_vectorstore_chainlit/genai_ur_pdf.slurm": [
            "requirements.txt",
            "model_gptq.py"
        ],
        "pdf_chatbot_llama2_vectorstore_chainlit/jobspec-cfg/model_gptq.py": [
            "model.py"
        ]
    },
    "MLNeurosurg/stable-diffusion": {
        "stable-diffusion/check.sh": [
            "check_data.py"
        ]
    },
    "StarQuest-AI/llama-recipes-public": {
        "llama-recipes-public/examples/multi_node_7b.slurm": [
            "examples/finetuning.py"
        ],
        "llama-recipes-public/examples/multi_node_13b.slurm": [
            "examples/finetuning.py"
        ],
        "llama-recipes-public/examples/multi_node_70b.slurm": [
            "examples/finetuning.py"
        ]
    },
    "blazerzar/zarko": {
        "zarko/setup_scripts/run.sh": [
            "code/arso_to_dataframe.py"
        ]
    },
    "klxu03/godcaster": {
        "godcaster/rockfish/whisper.sh": [
            "main.py"
        ]
    },
    "perry-C/deeplearning-cw-y4": {
        "deeplearning-cw-y4/train_gtzan.sh": [
            "src/core/train_gtzan.py"
        ]
    },
    "AI-multimodal/XAS-NNE": {
        "XAS-NNE/.02_qm9_train.sbatch.sh": [
            "02_qm9_train.py"
        ]
    },
    "ialab-puc/pytorch-segmentation-toolbox": {
        "pytorch-segmentation-toolbox/slurm_run.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/sgrb_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/segattn_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/att_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/segrank_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/rcnn_train.sh": [
            "train.py"
        ]
    },
    "ialab-puc/segmentation_guided_attention": {
        "pytorch-segmentation-toolbox/slurm_run.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/sgrb_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/segattn_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/att_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/segrank_train.sh": [
            "train.py"
        ],
        "segmentation_guided_attention/slurm_scripts/rcnn_train.sh": [
            "train.py"
        ]
    },
    "MustafaMustafa/stylegan": {
        "stylegan/submit.sbatch": [
            "train.py"
        ]
    },
    "MLGlobalHealth/bayes-rate-consistency": {
        "bayes-rate-consistency/hpc_scripts/simulation-fullproc.sh": [
            "scripts/sim-dataset.R",
            "scripts/sim-run-stan.R",
            "scripts/sim-postprocess.R"
        ]
    },
    "taisazero/socratic-debugging-benchmark": {
        "socratic-debugging-benchmark/launch_runs.sh": [
            "run_socratic_benchmark_metrics.py"
        ],
        "socratic-debugging-benchmark/jobspec-cfg/run_socratic_benchmark_metrics.py": [
            "run_socratic_benchmark_metrics.py"
        ]
    },
    "AdDevSan/CRPEC": {
        "CRPEC/CRPEC.sh": [
            "initialize_directories.sh",
            "trident_preprocess_to_h5ad_barcodes.py",
            "sample_200.py",
            "preprocess_sc3.R",
            "refine_clusters.sh",
            "template_structure.yaml",
            "refine_clusters.py"
        ],
        "CRPEC/jobspec-cfg/refine_clusters.py": [
            "refine_clusters.py"
        ],
        "CRPEC/jobspec-cfg/refine_clusters.sh": [
            "refine_clusters.sh",
            "python",
            "refine_clusters.py"
        ],
        "CRPEC2/CRPEC.sh": [
            "initialize_directories.sh",
            "trident_preprocess_to_h5ad_barcodes.py",
            "sample_200.py",
            "R_scripts/h5ad_to_h5seurat.R",
            "preprocess_sc3.R",
            "refine_clusters.sh",
            "python"
        ],
        "CRPEC2/jobspec-cfg/refine_clusters.py": [
            "refine_clusters.py"
        ],
        "CRPEC2/jobspec-cfg/predict_clusters.sh": [
            "python"
        ],
        "CRPEC2/jobspec-cfg/refine_clusters.sh": [
            "refine_clusters.sh",
            "python",
            "refine_clusters.py"
        ]
    },
    "AdDevSan/CRPEC2": {
        "CRPEC/CRPEC.sh": [
            "initialize_directories.sh",
            "trident_preprocess_to_h5ad_barcodes.py",
            "sample_200.py",
            "preprocess_sc3.R",
            "refine_clusters.sh",
            "template_structure.yaml",
            "refine_clusters.py"
        ],
        "CRPEC/jobspec-cfg/refine_clusters.py": [
            "refine_clusters.py"
        ],
        "CRPEC/jobspec-cfg/refine_clusters.sh": [
            "refine_clusters.sh",
            "python",
            "refine_clusters.py"
        ],
        "CRPEC2/CRPEC.sh": [
            "initialize_directories.sh",
            "trident_preprocess_to_h5ad_barcodes.py",
            "sample_200.py",
            "R_scripts/h5ad_to_h5seurat.R",
            "preprocess_sc3.R",
            "refine_clusters.sh",
            "predict_clusters.sh",
            "get_consensus_final_cluster_dict.py",
            "get_ensemble_adatas.py",
            "python",
            "get_gene_profiles_dtf.py"
        ],
        "CRPEC2/jobspec-cfg/refine_clusters.py": [
            "refine_clusters.py"
        ],
        "CRPEC2/jobspec-cfg/predict_clusters.sh": [
            "predict_clusters.sh",
            "python",
            "predict_clusters.py"
        ],
        "CRPEC2/jobspec-cfg/refine_clusters.sh": [
            "refine_clusters.sh",
            "python",
            "refine_clusters.py"
        ]
    },
    "ydtydr/HyperbolicTiling_Learning": {
        "HyperbolicTiling_Learning/train-grqc.sh": [
            "embed.py",
            "wordnet/grqc.csv"
        ]
    },
    "cea-trust-platform/trust-code": {
        "trust-code/env_src/HOST_LSF.sh": [
            "configure"
        ],
        "trust-code/env_src/HOST_SLURM.sh": [
            "configure"
        ],
        "trust-code/env_src/HOST_PBS.sh": [
            "configure"
        ],
        "trust-code/env_src/HOST_sagittarius.sh": [
            "configure"
        ]
    },
    "HectorAnadon/SeaLionsDetectionClassification": {
        "SeaLionsDetectionClassification/run.sh": [
            "requirements3.txt",
            "make_datasets.py"
        ],
        "SeaLionsDetectionClassification/jobspec-cfg/make_datasets.py": [
            "make_datasets.py"
        ]
    },
    "clu5/federated-conformal": {
        "federated-conformal/scripts/fashion.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/pathmnist.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/fedprox.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/tissuemnist.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/cifar10-hetero.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/dermamnist.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/svhn.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/mnist.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/cifar10.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/cifar100.sh": [
            "src/run_TCT.py"
        ],
        "federated-conformal/scripts/fitzpatrick-three.sh": [
            "src/run_TCT.py"
        ]
    },
    "JuliaLabs/DaggerDiffusion": {
        "DaggerDiffusion/mpi-run.sh": [
            "main.jl"
        ]
    },
    "susmarb/LAO_multiomics_CRISPR_iMGEs": {
        "LAO_multiomics_CRISPR_iMGEs/launchers/mgeDereplication.sh": [
            "workflows/MgeDereplication"
        ],
        "LAO_multiomics_CRISPR_iMGEs/launchers/crisprPrediction.sh": [
            "workflows/CrisprPrediction"
        ],
        "LAO_multiomics_CRISPR_iMGEs/launchers/mgeRemapping.sh": [
            "workflows/MgeRemapping"
        ],
        "LAO_multiomics_CRISPR_iMGEs/launchers/mgePrediction.sh": [
            "workflows/MgePrediction"
        ],
        "LAO_multiomics_CRISPR_iMGEs/launchers/mgeHostLink.sh": [
            "workflows/MgeHostLink"
        ]
    },
    "fracz/code-quality-tensorflow": {
        "code-quality-tensorflow/batch-model2.sh": [
            "model2.py"
        ],
        "code-quality-tensorflow/batch-model4.sh": [
            "model4.py"
        ]
    },
    "whshty/Gaussian-Blur": {
        "Gaussian-Blur/openacc.slurm": [
            "openacc.c"
        ]
    },
    "maxzw/QASE_baselines_cqd": {
        "QASE_baselines_cqd/cqd_3i.sh": [
            "main.py"
        ],
        "QASE_baselines_cqd/cqd_pi.sh": [
            "main.py"
        ],
        "QASE_baselines_cqd/cqd_2i.sh": [
            "main.py"
        ],
        "QASE_baselines_cqd/cqd_3p.sh": [
            "main.py"
        ]
    },
    "J22Melody/sed_great_ape": {
        "sed_great_ape/job.sh": [
            "model.py"
        ]
    },
    "xyzysz/Bandwidth_efficient_nic": {
        "Bandwidth_efficient_nic/train.sh": [
            "train.py"
        ]
    },
    "reidmcy/subject_cross_section": {
        "subject_cross_section/tokenize.sbatch": [
            "tokenizing.py"
        ]
    },
    "aanjaa/gflownet": {
        "gflownet/run_exp.sh": [
            "raytune.py"
        ]
    },
    "HPCForge/BubbleML": {
        "BubbleML/submit/basic.sh": [
            "sciml/train.py"
        ],
        "BubbleML/submit/cross_val.sh": [
            "sciml/train.py"
        ]
    },
    "fyshelab/QA-ZRE": {
        "QA-ZRE/question_gen_train.sh": [
            "src/re_gold_qa_train.py",
            "zero-shot-extraction/relation_splits/train.very_small.0"
        ],
        "QA-ZRE/train_re_gold_qa.sh": [
            "src/re_gold_qa_train.py"
        ],
        "QA-ZRE/wikizsl_mml_pgg_off_sim.sh": [
            "src/re_gold_qa_train.py"
        ],
        "QA-ZRE/fewrl_mml_pgg_off_sim.sh": [
            "src/re_gold_qa_train.py"
        ],
        "QA-ZRE/train_re_lm.sh": [
            "src/re_gold_qa_train.py"
        ]
    },
    "phdfar/Segmentation": {
        "Segmentation/myrun.sh": [
            "iplvisgpu.py",
            "output.txt"
        ]
    },
    "RolnickLab/SatBird": {
        "SatBird/jobspec-cfg/train.py": [
            "train.py"
        ],
        "SatBird/run_files/multiple_runs.sh": [
            "train.py"
        ]
    },
    "Mercerai/PAEv3d": {
        "PAEv3d/scripts/train/EV3D/EV3D_Bunny.sh": [
            "ddp_train_nerf.py",
            "configs/EV3D/Bunny.txt",
            "ddp_test_nerf.py"
        ]
    },
    "vaishnavmohit/GAMR_OVR": {
        "GAMR_OVR/scripts/run_op_freeze.sh": [
            "train_v3.py"
        ],
        "GAMR_OVR/scripts/run_op.sh": [
            "train_v3.py"
        ],
        "GAMR_OVR/scripts/run_freeze.sh": [
            "train_v3.py"
        ],
        "GAMR_OVR/scripts/run_op_all_freeze.sh": [
            "train_v3.py"
        ],
        "GAMR_OVR/scripts/run_op_all.sh": [
            "train_v3.py"
        ]
    },
    "CyprienQuemeneur/fedpylot": {
        "fedpylot/run_centralized.sh": [
            "run_centralized.sh",
            "weights/get_weights.sh",
            "yolov7/train.py",
            "data/nuimages10.yaml",
            "yolov7/cfg/training/yolov7.yaml",
            "data/hyps/hyp.scratch.clientopt.nuimages.yaml"
        ],
        "fedpylot/run_federated.sh": [
            "run_federated.sh",
            "federated/scatter_data.py",
            "weights/get_weights.sh",
            "federated/main.py",
            "data/nuimages10.yaml",
            "yolov7/cfg/training/yolov7.yaml",
            "data/hyps/hyp.scratch.clientopt.nuimages.yaml"
        ],
        "fedpylot/jobspec-cfg/run_centralized.sh": [
            "run_centralized.sh",
            "weights/get_weights.sh",
            "yolov7/train.py",
            "data/nuimages10.yaml",
            "yolov7/cfg/training/yolov7.yaml",
            "data/hyps/hyp.scratch.clientopt.nuimages.yaml"
        ],
        "fedpylot/jobspec-cfg/run_federated.sh": [
            "run_federated.sh",
            "federated/scatter_data.py",
            "weights/get_weights.sh",
            "federated/main.py",
            "data/nuimages10.yaml",
            "yolov7/cfg/training/yolov7.yaml",
            "data/hyps/hyp.scratch.clientopt.nuimages.yaml"
        ],
        "fedpylot/jobspec-cfg/weights/get_weights.sh": [
            "weights/get_weights.sh"
        ]
    },
    "CAMeL-Lab/gender-reinflection": {
        "gender-reinflection/scripts/train_seq2seq.sh": [
            "main.py",
            "saved_models/vectorizer.json",
            "saved_models/morph_features_top_1_analyses.json",
            "saved_models/joint_models/joint+morph.pt"
        ],
        "gender-reinflection/scripts/inference_seq2seq.sh": [
            "main.py",
            "saved_models/joint_models/joint+morph.pt"
        ]
    },
    "CAMeL-Lab/qalb": {
        "qalb/full.slurm": [
            "ai/tests/m2scripts/m2scorer.py",
            "analysis.py"
        ],
        "qalb/jobspec-cfg/analysis.py": [
            "analysis.py"
        ]
    },
    "CAMeL-Lab/seq2seq-transliteration-tool": {
        "seq2seq-transliteration-tool/dalma_scripts.sh": [
            "transliterate.py"
        ],
        "seq2seq-transliteration-tool/jobspec-cfg/transliterate.py": [
            "ai/tests/seq2seq.py",
            "ai/tests/bleu/multi-bleu.perl"
        ]
    },
    "nateburley/A3C_TB_Research": {
        "A3C_TB_Research/submit_a3c_tb.sh": [
            "DeepRL/run_experiment.py"
        ],
        "A3C_TB_Research/submit_a3c.sh": [
            "DeepRL/run_experiment.py"
        ]
    },
    "pratik11jain/Distracted-Driver-Detection": {
        "Distracted-Driver-Detection/jobspec-cfg/main.py": [
            "main.py"
        ],
        "Distracted-Driver-Detection/jobs/vgg_bn_20.pbs": [
            "main.py"
        ],
        "Distracted-Driver-Detection/jobs/my_model_20_NoMem.pbs": [
            "main.py"
        ],
        "Distracted-Driver-Detection/jobs/vgg_16_5.pbs": [
            "main.py"
        ],
        "Distracted-Driver-Detection/jobs/le_net_5.pbs": [
            "main.py"
        ]
    },
    "AMDonati/backward-IS": {
        "backward-IS/src/sh/h32_S100.sh": [
            "src/estimate.py"
        ],
        "backward-IS/src/sh/h64_S200.sh": [
            "src/estimate.py"
        ],
        "backward-IS/src/sh/h64_S24.sh": [
            "src/estimate.py"
        ],
        "backward-IS/src/sh/try.sh": [
            "src/estimate.py"
        ],
        "backward-IS/src/sh/h32_S24.sh": [
            "src/estimate.py"
        ],
        "backward-IS/src/sh/h32_S200.sh": [
            "src/estimate.py"
        ]
    },
    "AMDonati/RL-NLP": {
        "RL-NLP/src/scripts/sh/slurm/vqav2/trunc_policy/pth0.005_pretrain.sh": [
            "src/scripts/run.py"
        ],
        "RL-NLP/src/scripts/sh/slurm/vqav2/trunc_policy/pth0.005_tempsch3.sh": [
            "src/scripts/run.py"
        ],
        "RL-NLP/src/scripts/sh/slurm/clevr_BLEU/clevr_scratch_KL_lmext.sh": [
            "src/scripts/run.py"
        ],
        "RL-NLP/src/scripts/sh/slurm/clevr_BLEU/clevr_scratch.sh": [
            "src/scripts/run.py"
        ],
        "RL-NLP/src/scripts/sh/slurm/clevr_trunc_policy/clevr_pth1%3AV.sh": [
            "src/scripts/run.py"
        ]
    },
    "JJuOn/Few-shot_Class_Incremental_Learning": {
        "Few-shot_Class_Incremental_Learning/scripts/continual/slurm_semantic_subspace_reg.sh": [
            "eval_incremental.py"
        ],
        "Few-shot_Class_Incremental_Learning/scripts/continual/slurm_run_backbone.sh": [
            "train_supervised.py"
        ],
        "Few-shot_Class_Incremental_Learning/scripts/continual/slurm_subspace_reg.sh": [
            "eval_incremental.py"
        ]
    },
    "desireetillo/CTCF_CutAndRun21": {
        "CTCF_CutAndRun21/run_analysis.sh": [
            "cluster.json"
        ]
    },
    "LuCeHe/covid19_gpt2": {
        "covid19_gpt2/covid.sh": [
            "main.py"
        ],
        "covid19_gpt2/jobspec-cfg/main.py": [
            "run_language_modeling.py",
            "run_generation.py"
        ]
    },
    "jl14310/nanoGPT": {
        "nanoGPT/gpt.SBATCH": [
            "train.py"
        ],
        "nanoGPT/jobspec-cfg/train.py": [
            "train.py"
        ]
    },
    "kaplanlior/cortx": {
        "cortx/doc/integrations/pytorch/projects/babi/memnn/memnn_bAbI_1k_task_parameter_sweep.sh": [
            "LICENSE"
        ]
    },
    "fischer-sw/instability-processing": {
        "instability-processing/job_template.sh": [
            "./requirements.txt",
            "./methods.py",
            "./fingers.py"
        ]
    },
    "varshini712/mutect2-nf": {
        "mutect2-nf/submit.bigpurple.sh": [
            "main.nf"
        ]
    },
    "Charithaakula/PatchAttacks_Transformers": {
        "PatchAttacks_Transformers/evalattacks11.sh": [
            "attacks_optimized.py"
        ],
        "PatchAttacks_Transformers/evalattacks3.sh": [
            "patchattackgrad_multi.py"
        ],
        "PatchAttacks_Transformers/evalattacks9.sh": [
            "attacks_optimized.py"
        ],
        "PatchAttacks_Transformers/evalattacks10.sh": [
            "attacks_optimized.py"
        ]
    },
    "robertu94/libpressio_opt_experiments": {
        "libpressio_opt_experiments/run_climate.sh": [
            "./run_climate.py"
        ],
        "libpressio_opt_experiments/run_evaluation.sh": [
            "./run_evaluation.py"
        ],
        "libpressio_opt_experiments/run_mgard.sh": [
            "./extract_slice.py"
        ],
        "libpressio_opt_experiments/run_mgard_qoi.sh": [
            "./extract_slice.py",
            "./run_mgard_qoi_impl.sh"
        ],
        "libpressio_opt_experiments/run_mgard_noearly.sh": [
            "./extract_slice.py"
        ]
    },
    "robertu94/roibin-sz3-experiments": {
        "roibin-sz3-experiments/run_all.sh": [
            "share/roibin_sz3.json",
            "share/roibin_sz.json",
            "share/roibin_mgard.json",
            "share/roibin_blosc-9.json"
        ]
    },
    "k4black/JB-internship-2023-internal-representations": {
        "JB-internship-2023-internal-representations/train.sh": [
            "train.py"
        ]
    },
    "joycedh/MDM-SWDance": {
        "MDM-SWDance/train/run_training.sh": [
            "train/train_mdm.py"
        ]
    },
    "kazukiosawa/pipe-fisher": {
        "pipe-fisher/scripts/prof_steps.sh": [
            "scripts/nsys_wrap.sh",
            "main_bert.py",
            "./bert_data/bert-large-uncased-vocab.txt"
        ]
    },
    "tbehrenso/InversionThesis": {
        "InversionThesis/Rep_DoAll.sh": [
            "R_scripts/Inversion_Rep_General.R"
        ]
    },
    "OSC/vftwebapp": {
        "phylogatr-web/download_genbank_data.sbatch": [
            "bin/bundle"
        ]
    },
    "OSC/planet_mosaicking": {
        "planet_mosaicking/run.slurm": [
            "./mosaic.py"
        ]
    },
    "OSC/phylogatr-web": {
        "phylogatr-web/download_genbank_data.sbatch": [
            "bin/bundle",
            "bin/db"
        ]
    },
    "dunnlab/isoseq": {
        "isoseq/batch_isoseq.sh": [
            "isoseq.smk"
        ],
        "isoseq/batch_translate.sh": [
            "translate.smk"
        ],
        "isoseq/jobspec-cfg/isoseq.smk": [
            "scripts/treeinform_collapse.py"
        ]
    },
    "willding123/Shift-Equivariant-Vision-Transformers": {
        "Shift-Equivariant-Vision-Transformers/eval.sh": [
            "eval.py"
        ],
        "Shift-Equivariant-Vision-Transformers/submit.sh": [
            "main.py"
        ],
        "Shift-Equivariant-Vision-Transformers/jobspec-cfg/main.py": [
            "LICENSE"
        ]
    },
    "avivajpeyi/bh_getting_kicks": {
        "bh_getting_kicks/slurm_submissions/plot_kick_corners.sh": [
            "plot_corner_weighted_with_kick.py",
            "datafiles/injections.csv"
        ]
    },
    "maxkulicki/maskblip": {
        "maskblip/cluster_tuning.sh": [
            "clustering_tuning.py"
        ],
        "maskblip/full_pipeline_eval.sh": [
            "evaluate_xdecoder.py"
        ]
    },
    "lmeraser/lmeraser": {
        "lmeraser/scripts/run_sbatch.sh": [
            "eraser/main.py"
        ]
    },
    "paviudes/bmark": {
        "bmark/launch.sh": [
            "input.txt",
            "./instances.sh"
        ]
    },
    "paviudes/chflow": {
        "chflow/run_partial.sh": [
            "./chflow.sh",
            "partial_decoders.log",
            "input/cedar/partial_decoders.sh"
        ],
        "chflow/jobspec-cfg/input/cedar/partial_decoders.sh": [
            "partial_decoders.log",
            "./chflow.sh"
        ],
        "chflow/input/beluga/19_06_2020_12_06_16.sh": [
            "./chflow.sh"
        ],
        "chflow/input/cedar/16_07_2020_18_17_53.sh": [
            "./chflow.sh"
        ],
        "chflow/input/cedar/12_06_2020_22_26_12.sh": [
            "./chflow.sh"
        ],
        "chflow/input/cedar/16_07_2020_18_17_36.sh": [
            "./chflow.sh"
        ],
        "chflow/input/cedar/16_07_2020_18_16_04.sh": [
            "./chflow.sh"
        ],
        "chflow/input/graham/16_07_2020_18_01_42.sh": [
            "./chflow.sh"
        ],
        "chflow/input/graham/16_07_2020_18_08_08.sh": [
            "./chflow.sh"
        ]
    },
    "yfwang09/pyDFXM": {
        "pyDFXM/submit_DFXM.sh": [
            "test_diamond_DFXM_mpi_workflow.py"
        ]
    },
    "ericbrine/bayes-rate-consistency": {
        "bayes-rate-consistency/hpc_scripts/simulation-fullproc.sh": [
            "scripts/sim-dataset.R",
            "scripts/sim-run-stan.R",
            "scripts/sim-postprocess.R"
        ]
    },
    "cemac/VP_Extraction": {
        "VP_Extraction/RunVP.sh": [
            "./vp_params.py",
            "VP_Main.py"
        ]
    },
    "bennywee/stochastic_volatility_workflow": {
        "stochastic_volatility_workflow/jobs/ksc.sh": [
            "sim_ksc.py",
            "scripts/sim_ksc_results.r"
        ]
    },
    "shijun18/kfac_pytorch": {
        "kfac_pytorch/scripts/slurm/horovod_imagenet_kfac.slurm": [
            "./scripts/cp_imagenet_to_temp.sh",
            "examples/horovod_imagenet_resnet.py"
        ],
        "kfac_pytorch/scripts/slurm/torch_cifar_kfac.slurm": [
            "examples/torch_cifar10_resnet.py"
        ],
        "kfac_pytorch/scripts/slurm/horovod_cifar_kfac.slurm": [
            "examples/horovod_cifar10_resnet.py"
        ]
    },
    "ppirch/mlt-food": {
        "mlt-food/scripts/train_purpose.sub": [
            "training.py"
        ]
    },
    "tjbencomo/bulk-rnaseq": {
        "bulk-rnaseq/run_pipeline.sh": [
            "cluster.json"
        ]
    },
    "tjbencomo/ngs-pipeline": {
        "bulk-rnaseq/run_pipeline.sh": [
            "cluster.json"
        ],
        "ngs-pipeline/run_pipeline.sh": [
            "cluster.wes.json"
        ]
    },
    "tjbencomo/nmsc-star": {
        "bulk-rnaseq/run_pipeline.sh": [
            "cluster.json"
        ]
    },
    "msboeg/02476_ml_ops_project": {
        "02476_ml_ops_project/bsub_script.sh": [
            "src/models/train_model.py"
        ]
    },
    "CultOfCoding/KALI-edge-arm64": {
        "KALI-edge-arm64/install.sh": [
            "etc/default/locale",
            "usr/bin/spinner",
            "usr/bin/wait-online",
            "usr/bin/fanfix.sh",
            "etc/resolv.conf",
            "etc/lightdm/lightdm.conf",
            "opt/p10k.zsh",
            "opt/zshrc",
            "usr/bin/hidemyass",
            "usr/share/check_reputation/requirements.txt",
            "opt/rules.tar",
            "opt/opensnitch-ui.deb",
            "opt/icons.tar",
            "opt/config.tar",
            "opt/zsh-x",
            "opt/bashrc"
        ]
    },
    "CS-433/cs-433-project-2-drop_table": {
        "cs-433-project-2-drop_table/run_light.sh": [
            "train.py"
        ]
    },
    "bradkav/verne": {
        "verne/SubmitVerne.sh": [
            "RunMPI_verne.py"
        ],
        "verne/jobspec-cfg/RunMPI_verne.py": [
            "src/CalcVelDist.py"
        ],
        "verne/src/SubmitVerne.sh": [
            "RunMPI_verne.py"
        ]
    },
    "CodaP/isccp_l1g_prototype": {
        "isccp_l1g_prototype/timing.sh": [
            "make_timing.py"
        ],
        "isccp_l1g_prototype/unshuffle.sh": [
            "unshuffle.py"
        ]
    },
    "dushoff/diversity_metrics": {
        "diversity_metrics/baseline.sh": [
            "scripts/actual_diversity_coverage.R"
        ]
    },
    "hsiuhsil/DM-power": {
        "DM-power/submit.sh": [
            "DM_power.py",
            "DM_phase_test.py"
        ]
    },
    "BenJamesMetcalf/Sanger_SPN_Scripts-Ref": {
        "Sanger_SPN_Scripts-Ref/Sanger-JanOw_SPN-wrapr.sh": [
            "./Sanger-JanOw_SPN-Typer.sh",
            "Sanger-JanOw_SPN-Typer.sh"
        ],
        "Sanger_SPN_Scripts-Ref/jobspec-cfg/Sanger-JanOw_SPN-Typer.sh": [
            "SPN_PBP-Gene_Typer.pl",
            "SPN_miscRes_Typer.pl"
        ]
    },
    "rohan-varma/t5_11": {
        "t5_11/t5.slurm": [
            "job_prolog.sh",
            "job_epilog.sh",
            "./main_elastic.py"
        ]
    },
    "sdrangan/mmwchanmod": {
        "mmwchanmod/hpc_train.sh": [
            "train_mod.py"
        ]
    },
    "IBG4-CBCLab/TopEC": {
        "TopEC/train.sbatch": [
            "train.py"
        ]
    },
    "Kyeongman-header/openai_test": {
        "openai_test/gpt.sh": [
            "main_gpt_embedding_savedir_logdir_isconti_laststep_usemem_usecumul_usegamma_userake_usealpha_usefusion_cumulnum_noibt_nofme_datadir_nepoch_gpuname_batch_istest_debug.py",
            "test_longformer_filename_savedir_logdir_gpu_debug.py"
        ]
    },
    "enviro-lab/benchmark-deconvolute": {
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs_3.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ],
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs_4.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ],
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs_2.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ],
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs_6.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ],
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs_5.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ],
        "benchmark-deconvolute/tools/lcs/scripts/run_lcs.sh": [
            "tools/lcs/scripts/link_samples.sh",
            "tools/lcs/scripts/move_out_old_run.sh",
            "tools/lcs/scripts/aggregate_predictions.py"
        ]
    },
    "matteorossil/mae_ssl": {
        "mae_ssl/linprobe4_fract1.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe3_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe8_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe10_fract1.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/train_meta_.SBATCH": [
            "main_pretrain_.py"
        ],
        "mae_ssl/linprobe7_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe12_fract1.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe5_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/linprobe4_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/train_meta_2.SBATCH": [
            "main_pretrain_2.py"
        ],
        "mae_ssl/linprobe9_fract1.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/train_meta.SBATCH": [
            "main_pretrain.py"
        ],
        "mae_ssl/linprobe11_fract1.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/train2.SBATCH": [
            "train_mae_nowds.py"
        ],
        "mae_ssl/linprobe6_fract10.SBATCH": [
            "main_linprobe.py"
        ],
        "mae_ssl/train.SBATCH": [
            "train_mae_nowds.py"
        ],
        "mae_ssl/eval_linear.SBATCH": [
            "eval_linear.py"
        ],
        "mae_ssl/jobspec-cfg/train_mae_nowds.py": [
            "LICENSE"
        ],
        "mae_ssl/jobspec-cfg/eval_linear.py": [
            "LICENSE"
        ],
        "mae_ssl/jobspec-cfg/main_pretrain_.py": [
            "LICENSE"
        ],
        "mae_ssl/jobspec-cfg/main_linprobe.py": [
            "LICENSE"
        ],
        "mae_ssl/jobspec-cfg/main_pretrain_2.py": [
            "LICENSE"
        ],
        "mae_ssl/jobspec-cfg/main_pretrain.py": [
            "LICENSE"
        ]
    },
    "desihub/timedomain": {
        "imaginglss/nersc/select_objs.job": [
            "setup.py"
        ],
        "imaginglss/nersc/make_rans.job": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/README.rst": [
            "setup.py"
        ]
    },
    "desihub/desitarget": {
        "desitarget/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "README.rst"
        ],
        "imaginglss/nersc/select_objs.job": [
            "setup.py"
        ],
        "imaginglss/nersc/make_rans.job": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "MANIFEST.in",
            "README.rst"
        ],
        "desisim/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "MANIFEST.in",
            "README.rst"
        ],
        "desisim/jobspec-cfg/MANIFEST.in": [
            "LICENSE.rst",
            "README.rst",
            "requirements.txt"
        ]
    },
    "desihub/imaginglss": {
        "desitarget/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "desitarget/jobspec-cfg/setup.py": [
            "README.rst"
        ],
        "desitarget/jobspec-cfg/MANIFEST.in": [
            "README.rst"
        ],
        "imaginglss/nersc/select_objs.job": [
            "setup.py"
        ],
        "imaginglss/nersc/make_rans.job": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/setup.py": [
            "README.rst"
        ],
        "desisim/jobspec-cfg/setup.py": [
            "README.rst"
        ],
        "desisim/jobspec-cfg/MANIFEST.in": [
            "README.rst"
        ]
    },
    "desihub/LSS": {
        "desitarget/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "desitarget/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "README.rst"
        ],
        "desitarget/jobspec-cfg/MANIFEST.in": [
            "LICENSE.rst",
            "README.rst"
        ],
        "imaginglss/nersc/select_objs.job": [
            "setup.py"
        ],
        "imaginglss/nersc/make_rans.job": [
            "setup.py"
        ],
        "LSS/Sandbox/testsubmit4blind.sh": [
            "scripts/main/apply_blinding_main_fromfile_fcomp.py"
        ],
        "LSS/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "README.rst"
        ],
        "LSS/jobspec-cfg/scripts/mock_tools/run1_AMTLmock_LSS_v4_1fixran.sh": [
            "scripts/mock_tools/mkCat_SecondGen_amtl.py"
        ],
        "LSS/jobspec-cfg/scripts/main/apply_blinding_main_fromfile_fcomp.py": [
            "scripts/main/apply_blinding_main_fromfile_fcomp.py"
        ],
        "LSS/scripts/mock_tools/abv41fixranamtl_cat_sbatch.sh": [
            "scripts/mock_tools/run1_AMTLmock_LSS_v4_1fixran.sh"
        ],
        "desisim/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "README.rst"
        ],
        "desisim/jobspec-cfg/MANIFEST.in": [
            "LICENSE.rst",
            "README.rst",
            "requirements.txt"
        ]
    },
    "desihub/desisim": {
        "desitarget/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "desitarget/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "README.rst"
        ],
        "desitarget/jobspec-cfg/MANIFEST.in": [
            "LICENSE.rst",
            "README.rst"
        ],
        "imaginglss/nersc/select_objs.job": [
            "setup.py"
        ],
        "imaginglss/nersc/make_rans.job": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/README.rst": [
            "setup.py"
        ],
        "LSS/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "MANIFEST.in",
            "README.rst"
        ],
        "desisim/jobspec-cfg/setup.py": [
            "LICENSE.rst",
            "MANIFEST.in",
            "README.rst"
        ],
        "desisim/jobspec-cfg/MANIFEST.in": [
            "LICENSE.rst",
            "README.rst",
            "requirements.txt"
        ]
    },
    "ffarzat/JavaScriptHeuristicOptmizer": {
        "JavaScriptHeuristicOptmizer/ramda/run.0.sh": [
            "ramda/ramda.json"
        ]
    },
    "zsteve/reprogramming_batch": {
        "reprogramming_batch/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.04_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.01_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.0025_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.005_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.02_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.64_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.16_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.32_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_0.08_dirichlet5/run.sh": [
            "batch.py"
        ],
        "reprogramming_batch/run_1.28_dirichlet5/run.sh": [
            "batch.py"
        ]
    },
    "j-petit/temporal_graph": {
        "temporal_graph/run_clara.job": [
            "run.py"
        ]
    },
    "sjfandrews/MitoImputePrep": {
        "MitoImputePrep/jobspec-cfg/ReferencePanel_v2.smk": [
            "ReferencePanel_v2.smk"
        ],
        "MitoImputePrep/jobspec-cfg/PlatformStrandFiles.smk": [
            "PlatformStrandFiles.smk"
        ],
        "MitoImputePrep/scripts/BASH/DATA_PROCESSING/SnakeMake_tests/Reference_panel_v2_Raijin.sh": [
            "ReferencePanel_v2.smk"
        ],
        "MitoImputePrep/scripts/BASH/DATA_PROCESSING/SnakeMake_tests/PlatformStrandFiles_Raijin.sh": [
            "PlatformStrandFiles.smk"
        ]
    },
    "ejduwell/TextyBeast": {
        "TextyBeast/textyBeast_v1_slurm.sh": [
            "WhsprOcrCombine.py",
            "./WhsprOcrCombine.py"
        ]
    },
    "AhmedHussKhalifa/DPR": {
        "DPR/pyTorch_DPR.sh": [
            "data/download_data.py",
            "train_dense_encoder.py",
            "generate_dense_embeddings.py",
            "dense_retriever.py"
        ],
        "DPR/pytourch_download.sh": [
            "data/download_data.py",
            "train_dense_encoder.py",
            "generate_dense_embeddings.py",
            "dense_retriever.py"
        ],
        "DPR/ctx_1.sh": [
            "generate_dense_embeddings.py"
        ],
        "DPR/jobspec-cfg/dense_retriever.py": [
            "LICENSE"
        ],
        "DPR/jobspec-cfg/generate_dense_embeddings.py": [
            "LICENSE"
        ],
        "DPR/jobspec-cfg/train_dense_encoder.py": [
            "LICENSE",
            "generate_dense_embeddings.py",
            "dense_retriever.py"
        ],
        "DPR/jobspec-cfg/data/download_data.py": [
            "LICENSE"
        ],
        "Dense_Passage_Retrieval_in_Conversational_Search/ComputeCanada/pyTorch_DPR.sh": [
            "data/download_data.py",
            "train_dense_encoder.py",
            "generate_dense_embeddings.py",
            "dense_retriever.py"
        ]
    },
    "ferreirafabio/metassl-dino-rpn": {
        "metassl-dino-rpn/cluster/submit_dino_neps_fabio_sam.sh": [
            "main_dino.py"
        ],
        "metassl-dino-rpn/cluster/submit_evaluate_dino.sh": [
            "eval_linear.py"
        ],
        "metassl-dino-rpn/cluster/run_rpn_deep.sh": [
            "main_dino.py"
        ],
        "metassl-dino-rpn/cluster/run_rpn_3080.sh": [
            "main_dino.py"
        ]
    },
    "TingtingS123/Robust-Prediction-Intervals-for-Valuation-of-Large-Portfolios-of-Variable-Annuities": {
        "Robust-Prediction-Intervals-for-Valuation-of-Large-Portfolios-of-Variable-Annuities/run_mpi4.sh": [
            "OLS.py"
        ]
    },
    "UVA-MLSys/COVID-19-age-groups": {
        "COVID-19-age-groups/scripts/rivanna_slurm.sh": [
            "run.py",
            "interpret_without_ground_truth.py",
            "interpret_with_ground_truth.py"
        ]
    },
    "ucbrise/graphtrans": {
        "graphtrans/run.sh": [
            "main.py"
        ]
    },
    "MarcNairn/SpinSelforg": {
        "SpinSelforg/run/phase_diagram.sh": [
            "run/phase_diagram.jl"
        ]
    },
    "kyoheikoyama/TCRPrediction": {
        "TCRPrediction/scripts/dir_kicker/kicker_dev_gpu.sh": [
            "scripts/main.py"
        ]
    },
    "yongchanghao/OptimLoP": {
        "OptimLoP/slurm.sh": [
            "requirements.txt",
            "rainbow.py"
        ]
    },
    "tejasr112002/Gender_recognition": {
        "Gender_recognition/job2.sh": [
            "main.py"
        ]
    },
    "jlrussin/prednet_pytorch": {
        "prednet_pytorch/jobspec-cfg/main.py": [
            "train.py"
        ],
        "prednet_pytorch/scripts/blanca/mp_train_n10_c16_b1_prednet_defaults_ccn.sh": [
            "main.py"
        ],
        "prednet_pytorch/scripts/blanca/mp_train_n10_c16_b1_prednet_Ahatsigmoid_ccn.sh": [
            "main.py"
        ],
        "prednet_pytorch/scripts/blanca/mp_train_n30_c14_b1_prednet_defaults_ccn.sh": [
            "main.py"
        ]
    },
    "jlrussin/syntactic_attention": {
        "syntactic_attention/scripts/blanca/train_synact_MT.sh": [
            "train_test.py",
            "data/MT/train.daxy",
            "data/MT/test.daxy",
            "vocab_fra_MT_daxiste.json"
        ],
        "syntactic_attention/scripts/blanca/train_defaults.sh": [
            "train_test.py"
        ]
    },
    "cauliyang/tools-compare": {
        "tools-compare/script.slurm": [
            "workflow/scripts/simulator.py",
            "workflow/Snakefile"
        ]
    },
    "pedrycz/keras-hyperparameter-optimizer": {
        "keras-hyperparameter-optimizer/slurm.sh": [
            "optimizer_genetic.py"
        ]
    },
    "TalnUPF/UniParse": {
        "UniParse/analyze_models_and_vocabs.sl": [
            "analyze_models_and_vocabs.py"
        ],
        "UniParse/models/kiperwasser/1b/bpe/small/only_words_true/run3/train.sl": [
            "setup.py",
            "kiperwasser_main.py"
        ],
        "UniParse/models/kiperwasser/ud/train.sl": [
            "setup.py",
            "kiperwasser_main.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ptb/only_words_true/torch100/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ptb/only_words_false/torch350/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ptb/only_words_false/torch750/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ptb/only_words_false/torch500/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ud/only_words_true/torch500/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ud/only_words_true/torch200/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ud/only_words_false/torch750/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/models/kiperwasser_pytorch/ud/only_words_false/torch500/train.sl": [
            "setup.py",
            "kiperwasser_main_pytorch.py"
        ],
        "UniParse/jobspec-cfg/setup.py": [
            "setup.py"
        ]
    },
    "NSBLab/DiCER": {
        "DiCER/carpetCleaner.sh": [
            "fmriprepProcess/preprocess_fmriprep.sh",
            "fmriprepProcess/gsReorder.py",
            "carpetCleaning/clusterCorrect.py",
            "carpetCleaning/vacuum_dbscan.py",
            "fmriprepProcess/clusterReorder.py",
            "carpetReport/tapestry.py"
        ]
    },
    "AsimPoptani/neural_network_art_transfer": {
        "neural_network_art_transfer/job.sh": [
            "log",
            "requirements.txt",
            "index.py"
        ]
    },
    "matt-welch/macsim_bip": {
        "macsim_bip/run_macsim.pbs": [
            "run_macsim.pbs"
        ],
        "macsim_bip/jobspec-cfg/run_macsim.pbs": [
            "run_macsim.pbs"
        ]
    },
    "simone-silvestri/OceanScalingTests.jl": {
        "OceanScalingTests.jl/satori_job.sh": [
            "satori/setup_satori.sh",
            "experiments/run.jl"
        ],
        "OceanScalingTests.jl/perlmutter_job.sh": [
            "experiments/run.jl"
        ],
        "OceanScalingTests.jl/satori_cache.sh": [
            "experiments/run.jl"
        ]
    },
    "cc-ai/climategan": {
        "climategan/shared/template/mila_victor.sh": [
            "train.py"
        ],
        "climategan/jobspec-cfg/train.py": [
            "shared/trainer/defaults.yaml",
            "train.py"
        ]
    },
    "lorraine2/implicit-hyper-opt": {
        "implicit-hyper-opt/srun_script.sh": [
            "train_augment_net_slurm.py",
            "srun_script.sh"
        ],
        "implicit-hyper-opt/jobspec-cfg/srun_script.sh": [
            "train_augment_net_slurm.py",
            "srun_script.sh"
        ]
    },
    "Demosthen/ActiveRL": {
        "ActiveRL/sbatch_scripts/singularity_sbatch_script_nonsweep.sh": [
            "sbatch_scripts/singularity_preamble_new.sh"
        ],
        "ActiveRL/sbatch_scripts/singularity_sbatch_script.sh": [
            "sbatch_scripts/singularity_preamble_new.sh"
        ]
    },
    "Living-Technologies/OrgaSegment": {
        "OrgaSegment/train.sh": [
            "train_mrcnn.py",
            "eval_mrcnn.py"
        ],
        "OrgaSegment/predict.sh": [
            "predict_mrcnn.py",
            "track.py"
        ]
    },
    "johanlaursen/lmeval": {
        "explainabloomity/lmeval.job": [
            "eval.py"
        ]
    },
    "johanlaursen/explainabloomity": {
        "explainabloomity/prune.job": [
            "main.py"
        ],
        "explainabloomity/lmeval.job": [
            "eval.py"
        ],
        "explainabloomity/lmeval_mask.job": [
            "eval_mask.py"
        ]
    },
    "kaselby/stylegan-xl": {
        "stylegan-xl/preproc.sh": [
            "dataset_tool.py"
        ],
        "stylegan-xl/jobspec-cfg/dataset_tool.py": [
            "dataset_tool.py"
        ]
    },
    "karlstratos/OLMo": {
        "OLMo/jobspec-cfg/configs/v1_5-mix-medium-mitch-ish-s3.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/jobspec-cfg/configs/llama7.yaml": [
            "tokenizers/allenai_eleuther-ai-gpt-neox-20b-pii-special.json"
        ],
        "OLMo/scripts/kempner/mitch-ish-7b.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/v1_5-mix-medium-mitch-ish-s3.yaml"
        ],
        "OLMo/scripts/kempner/llama7.sh": [
            "scripts/run_with_environment.sh",
            "scripts/train.py",
            "configs/llama7.yaml"
        ]
    },
    "gis-rpd/pipelines": {
        "pipelines/lib/run.template.NSCC.sh": [
            "run"
        ]
    },
    "aalto-cbir/DeepCaption": {
        "DeepCaption/jobspec-cfg/train.py": [
            "model_update.py"
        ],
        "DeepCaption/scripts/submit_train.sh": [
            "train.py"
        ],
        "AIROBEST/source/cnn/strain.sh": [
            "train.py"
        ]
    },
    "NCI-CGR/TriosCompass_v2": {
        "TriosCompass_v2/run_dnSV.sh": [
            "Snakefile_dnSV"
        ],
        "TriosCompass_v2/run_it_cgrv2.sh": [
            "Snakefile_CGRv2"
        ]
    },
    "drvinceknight/testing_for_ZD": {
        "testing_for_ZD/data/raw/std.pbs": [
            "setup.py"
        ],
        "testing_for_ZD/data/raw/probend.pbs": [
            "setup.py"
        ],
        "testing_for_ZD/data/raw/noisy.pbs": [
            "setup.py"
        ]
    },
    "melmel6/DeepLearning": {
        "DeepLearning/scripts/jobscript.sh": [
            "scripts/runner.py"
        ]
    },
    "MFlowCode/MFC": {
        "MFC/toolchain/templates/delta.mako": [
            "./mfc.sh"
        ],
        "MFC/misc/run-phoenix-release-gpu.sh": [
            "./mfc.sh"
        ]
    },
    "bradford415/low-power-segmentation": {
        "low-power-segmentation/run.pbs": [
            "train.py",
            "configs/deeplabv3/deeplabv3_lpcvc_palmetto.yaml"
        ]
    },
    "ChuiyuWang1/quantized-stable-diffusion": {
        "quantized-stable-diffusion/submit_script.sh": [
            "main.py",
            "models/ldm/cin256/config.yaml",
            "scripts/sample_diffusion_classcond.py",
            "scripts/sample_diffusion.py"
        ]
    },
    "knappa/an-cockrell": {
        "an-cockrell/slurm-job.sh": [
            "an-cockrell-runner.py"
        ]
    },
    "gist-ailab/probability-propagation": {
        "probability-propagation/jobspec-cfg/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ],
        "probability-propagation/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ]
    },
    "louiskirsch/vsml-neurips2021": {
        "vsml-neurips2021/slurm/job.sh": [
            "wandb/settings"
        ]
    },
    "ofmla/RTM----segyio-devito-": {
        "RTM----segyio-devito-/dask_launcher.job": [
            "RTM_BP_2007_repo.py"
        ]
    },
    "zhazhajust/pku": {
        "pku/txtbak.sh": [
            "txtbak.py"
        ]
    },
    "skurvits/NN-for-virus-prediction": {
        "NN-for-virus-prediction/runGPU.sh": [
            "runGPU.sh",
            "frequency_branch.py"
        ],
        "NN-for-virus-prediction/jobspec-cfg/runGPU.sh": [
            "runGPU.sh",
            "frequency_branch.py"
        ]
    },
    "aplesner/Thesis": {
        "Thesis/run_train9.sh": [
            "train.py"
        ],
        "DeepLearning02456/Poster_networks/pytorch_sac_ae_before_keynet/run_before_keynet.sh": [
            "train.py"
        ],
        "DeepLearning02456/Poster_networks/pytorch_sac_ae_only_keypoints/run_only_keypoints.sh": [
            "train.py"
        ],
        "DeepLearning02456/Poster_networks/pytorch_sac_ae_modified/run_modified.sh": [
            "train.py"
        ],
        "DeepLearning02456/Parallel_keynets/SAC%2BAE%2BKeyNet9/run_SAC%2BAE%2BKeyNet9.sh": [
            "train.py"
        ]
    },
    "kramundson/snakemake_chrom_dosage": {
        "snakemake_chrom_dosage/runSnakes.slurm": [
            "1_init_genome_fofn.snakes",
            "cluster.yaml"
        ],
        "snakemake_chrom_dosage/jobspec-cfg/1_init_genome_fofn.snakes": [
            "runSnakes.slurm"
        ]
    },
    "luke-avionics/kernel-prediction-networks-PyTorch": {
        "kernel-prediction-networks-PyTorch/gen_image.sh": [
            "dataset_test.py"
        ],
        "kernel-prediction-networks-PyTorch/run.sh": [
            "dataset_test.py",
            "train_eval_syn.py",
            "kpn_specs/kpn_config-6.conf",
            "kpn_specs/kpn_config-3.conf"
        ],
        "kernel-prediction-networks-PyTorch/jobspec-cfg/train_eval_syn.py": [
            "kpn_data_provider.py"
        ],
        "kernel-prediction-networks-PyTorch/jobspec-cfg/kpn_specs/kpn_config-3.conf": [
            "dataset_specs/full_dataset-3.conf"
        ],
        "kernel-prediction-networks-PyTorch/jobspec-cfg/kpn_specs/kpn_config-6.conf": [
            "dataset_specs/full_dataset-6.conf"
        ]
    },
    "santi-pdp/pase": {
        "pase/template_scripts/train_dropout.sh": [
            "train.py"
        ],
        "pase/template_scripts/train_aspp_res.sh": [
            "train.py",
            "cfg/distortions/half.cfg",
            "data/librispeech_50h_stats.pkl"
        ],
        "pase/template_scripts/train_aspp_base.sh": [
            "train.py",
            "data/librispeech_50h_stats.pkl"
        ],
        "pase/template_scripts/train_hyper_volume.sh": [
            "train.py",
            "cfg/distortions/overlap.cfg",
            "data/librispeech_50h_stats.pkl"
        ],
        "pase/template_scripts/train_resnet50.sh": [
            "train.py",
            "cfg/distortions/overlap.cfg",
            "data/librispeech_50h_stats.pkl"
        ]
    },
    "rajewski/SolTranscriptomes": {
        "SolTranscriptomes/1_SRATrim.sh": [
            "SRA_IDs.tsv"
        ]
    },
    "Izar-de-villasante/SG0002": {
        "SG0002/targets_batch.job": [
            "./run.R"
        ],
        "SG0002/jobspec-cfg/run.R": [
            "run.R"
        ],
        "ARMSNBL/targets_batch.job": [
            "./run.R"
        ],
        "ARMSNBL/jobspec-cfg/run.R": [
            "run.R"
        ]
    },
    "Izar-de-villasante/ARMSNBL": {
        "SG0002/targets_batch.job": [
            "./run.R"
        ],
        "SG0002/jobspec-cfg/run.R": [
            "run.R"
        ],
        "ARMSNBL/targets_batch.job": [
            "./run.R"
        ],
        "ARMSNBL/jobspec-cfg/run.R": [
            "run.R"
        ]
    },
    "EashanVytla/DreamingFalcon": {
        "DreamingFalcon/val.sh": [
            "valid_dynamics.py",
            "test_dynamics.py"
        ]
    },
    "RealRui/FL_partial_personalization": {
        "FL_partial_personalization/jobspec-cfg/train_finetune.py": [
            "LICENSE"
        ],
        "FL_partial_personalization/jobspec-cfg/train_pfl.py": [
            "LICENSE"
        ],
        "FL_partial_personalization/scripts/finetune/generalization_L2/gldv2.sh": [
            "LICENSE",
            "train_finetune.py"
        ],
        "FL_partial_personalization/scripts/federated/pfedme/emnist.sh": [
            "LICENSE",
            "train_pfl.py"
        ],
        "FL_partial_personalization/scripts/federated/generalization_L2/gldv2.sh": [
            "LICENSE",
            "train_pfl.py"
        ]
    },
    "userr2232/first-julia-nn": {
        "first-julia-nn/scripts/slurm.sh": [
            "main.py"
        ]
    },
    "emc2cube/Bioinformatics": {
        "Bioinformatics/sh_CRISPR.sh": [
            "sh_CRISPR.sh"
        ],
        "Bioinformatics/sh_RNAseq.sh": [
            "sh_RNAseq.sh"
        ],
        "Bioinformatics/jobspec-cfg/sh_CRISPR.sh": [
            "sh_CRISPR.sh"
        ],
        "Bioinformatics/jobspec-cfg/sh_RNAseq.sh": [
            "sh_RNAseq.sh"
        ]
    },
    "JihedC/ATAC_seq_singularity": {
        "ATAC_seq_singularity/slurm_snakemake.sh": [
            "Snakefile"
        ],
        "ChIP_seq_singularity/slurm_snakemake.sh": [
            "Snakefile"
        ]
    },
    "JihedC/ChIP_seq_singularity": {
        "ATAC_seq_singularity/slurm_snakemake.sh": [
            "Snakefile"
        ],
        "ChIP_seq_singularity/slurm_snakemake.sh": [
            "Snakefile"
        ]
    },
    "ESiWACE/esdm": {
        "esdm/dev/archer2.sh": [
            "./configure"
        ]
    },
    "GeoscienceAustralia/wistl": {
        "wistl/run_batch_dask.sh": [
            "./wistl/tests/test_memory.cfg",
            "./batch_dask.sh"
        ],
        "wistl/jobspec-cfg/batch_dask.sh": [
            "wistl/main.py"
        ]
    },
    "GeoscienceAustralia/EQIAT": {
        "EQIAT/run_n.sh": [
            "estimate_magnitude.py"
        ],
        "EQIAT/run_est_magnitude.sh": [
            "estimate_magnitude.py",
            "data/1699slab_params.txt",
            "data/1699megathrust_params.txt"
        ]
    },
    "mriedel56/cis-processing": {
        "cis-processing/example_lsf_job.sub": [
            "cis_proc.py"
        ]
    },
    "DuhaimeLab/global_drinking_water_viromes_Hegarty_et_al_2022": {
        "global_drinking_water_viromes_Hegarty_et_al_2022/slurm_snakefile_virfinder.sh": [
            "Snakefile_virfinder"
        ],
        "global_drinking_water_viromes_Hegarty_et_al_2022/slurm_snakefile_virsorter.sh": [
            "Snakefile_virsorter"
        ],
        "global_drinking_water_viromes_Hegarty_et_al_2022/slurm_snakefile_checkv.sh": [
            "Snakefile_checkv"
        ]
    },
    "BaptisteFrc/SeismicRepGAN-filippo": {
        "SeismicRepGAN-filippo/run_stead.sh": [
            "RepGAN_drive.py",
            "post_processing.py"
        ],
        "SeismicRepGAN-filippo/run_TF.sh": [
            "post_processing.py"
        ],
        "SeismicRepGAN-filippo/run.sh": [
            "RepGAN_drive.py",
            "post_processing.py"
        ],
        "SeismicRepGAN-filippo/run_plot.sh": [
            "RepGAN_drive.py",
            "post_processing.py"
        ]
    },
    "Streit-lab/otic-reprogramming": {
        "otic-reprogramming/NF-ChIP_alignment.sh": [
            "./configs/crick.config",
            "./NF-ChIP_alignment/crick_samplesheet.csv"
        ],
        "otic-reprogramming/NF-ATAC_alignment.sh": [
            "./configs/crick.config",
            "./NF-ATAC_alignment/crick_samplesheet.csv"
        ],
        "otic-reprogramming/NF-smartseq2_alignment.sh": [
            "./NF-smartseq2_alignment/main.nf",
            "./configs/crick.config",
            "./NF-smartseq2_alignment/crick_samplesheet.csv"
        ],
        "otic-reprogramming/NF-downstream_analysis.sh": [
            "./NF-downstream_analysis/main.nf",
            "./configs/crick.config",
            "./NF-downstream_analysis/crick_samplesheet.csv"
        ],
        "otic-reprogramming/NF-sox8_alignment.sh": [
            "./configs/crick.config",
            "./NF-sox8_alignment/crick_samplesheet.csv"
        ],
        "otic-reprogramming/NF-lmx1a_alignment.sh": [
            "./configs/crick.config",
            "./NF-lmx1a_alignment/crick_samplesheet.csv"
        ]
    },
    "cjlovering/predicting-inductive-biases": {
        "predicting-inductive-biases/datasets.sh": [
            "sva.py",
            "npi.py",
            "toy.py",
            "gap.py"
        ]
    },
    "OPPO-Mente-Lab/GlyphDraw": {
        "GlyphDraw/train_lgp.sh": [
            "train_lgp.py"
        ]
    },
    "OPPO-Mente-Lab/Subject-Diffusion": {
        "Subject-Diffusion/train.sh": [
            "train.py"
        ]
    },
    "Biodiversity-CatTracker2/megadetector-HPC": {
        "megadetector-HPC/slurm/megadetector_job.sh": [
            "megadetector-lite.py",
            "filter_megadetector_output.py"
        ]
    },
    "mlfoundations/datacomp": {
        "datacomp/slurm_train.sh": [
            "slurm_train.sh",
            "train.py"
        ],
        "datacomp/jobspec-cfg/slurm_train.sh": [
            "slurm_train.sh",
            "train.py"
        ]
    },
    "jostosh/lateral-line": {
        "lateral-line/sweep.sh": [
            "./generate_data.py",
            "./sweep.py"
        ],
        "lateral-line/jobspec-cfg/generate_data.py": [
            "train.py"
        ]
    },
    "IVUL-KAUST/VQABQ": {
        "VQABQ/run.sh": [
            "solve.py"
        ]
    },
    "kylehilburn/conus2_ml": {
        "conus2_ml/run_TRAIN.sh": [
            "stage_code.sh",
            "MAIN_TRAIN_and_SAVE_MODEL.py"
        ]
    },
    "negrinho/deep_architect": {
        "deep_architect/utils.sh": [
            "docs/main_get_code_from_docs.py",
            "docs/main_update_code_in_docs.py",
            "README.md",
            "docs/source/readme.rst",
            "CONTRIBUTING.md",
            "docs/source/contributing.rst",
            "containers/main.py",
            "examples/mnist/main.py",
            "examples/mnist_with_logging/main.py",
            "examples/mnist_with_logging/configs/debug.json",
            "examples/benchmarks/main.py",
            "./examples/simplest_multiworker/run.sh",
            "examples/framework_starters/main_keras.py",
            "examples/framework_starters/main_tensorflow.py",
            "docs/source/tutorials/search_space_constructs.rst",
            "docs/source/tutorials/new_frameworks.rst",
            "docs/source/tutorials/new_modules.rst",
            "docs/source/tutorials/new_searchers.rst"
        ],
        "deep_architect/jobspec-cfg/README.md": [
            "examples/mnist_with_logging/main.py"
        ],
        "deep_architect/jobspec-cfg/docs/source/readme.rst": [
            "examples/mnist_with_logging/main.py"
        ],
        "deep_architect/jobspec-cfg/examples/simplest_multiworker/run.sh": [
            "examples/simplest_multiworker/master.py",
            "examples/simplest_multiworker/worker.py"
        ]
    },
    "negrinho/research_toolbox": {
        "deep_architect/utils.sh": [
            "README.md",
            "CONTRIBUTING.md"
        ]
    },
    "tomov/VGDL-fMRI-Data-Analysis": {
        "VGDL-fMRI-Data-Analysis/ccnl_fmri_prepoc.sh": [
            "jobs.txt"
        ],
        "VGDL-fMRI-Data-Analysis/jobspec-cfg/jobs.txt": [
            "ccnl_fmri_glm.sh",
            "ccnl_fmri_glm_parallel.sh",
            "ccnl_fmri_glm_nosmooth.sh",
            "ccnl_rsa_searchlight.sh",
            "neurosynth_rsa.sh",
            "neurosynth_cva.sh",
            "might.sh",
            "searchlight_rsa.sh",
            "fit_gp.sh",
            "fit_gp_CV.sh",
            "fit_gp_CV_batch.sh",
            "decode_gp_CV.sh",
            "ccnl_fmri_con.sh",
            "fit_ridge_CV.sh",
            "gen_PETHs.sh",
            "confirmatory_betas_for_masks.sh",
            "fit_gp_CV_by_game.sh"
        ]
    },
    "bergeycm/ABCtoolbox_power_analysis": {
        "ABCtoolbox_power_analysis/jobspec-cfg/pbs/call_fastsimcoal.pbs": [
            "pbs/call_fastsimcoal.pbs"
        ],
        "ABCtoolbox_power_analysis/jobspec-cfg/pbs/call_est.pbs": [
            "pbs/call_est.pbs",
            "scripts/run_estimator_all_PODs_in_parallel.sh"
        ],
        "ABCtoolbox_power_analysis/jobspec-cfg/scripts/run_estimator_all_PODs_in_parallel.sh": [
            "scripts/run_estimator.sh"
        ],
        "ABCtoolbox_power_analysis/pbs/call_fastsimcoal.pbs": [
            "pbs/call_fastsimcoal.pbs"
        ],
        "ABCtoolbox_power_analysis/pbs/call_est.pbs": [
            "pbs/call_est.pbs",
            "scripts/run_estimator_all_PODs_in_parallel.sh"
        ]
    },
    "PwnerHarry/META": {
        "META/ringworld2.sh": [
            "predict_ringworld.py"
        ],
        "META/ringworld.sh": [
            "predict_ringworld.py"
        ],
        "META/BACKUPS/ringworld_mp2.sh": [
            "predict_ringworld.py"
        ]
    },
    "ThrunGroup/maptree": {
        "maptree/script.slurm": [
            "run_experiment.py"
        ]
    },
    "NSAPH-Projects/topological-equivariant-networks": {
        "topological-equivariant-networks/train_ten_s4.sh": [
            "src/main_qm9.py"
        ],
        "topological-equivariant-networks/train_ten_s3.sh": [
            "src/main_qm9.py"
        ],
        "topological-equivariant-networks/train_ten_s2.sh": [
            "src/main_qm9.py"
        ],
        "topological-equivariant-networks/train_ten_s1.sh": [
            "src/main_qm9.py"
        ]
    },
    "NSAPH-Projects/space-data": {
        "space-data/slurm/run_snakemake.slurm": [
            "conf/pipeline.yaml",
            "conf/cluster.yaml"
        ]
    },
    "bioThai/Bulk-RNA-seq-pipeline-PE": {
        "Bulk-RNA-seq-pipeline-PE/submit_snakemake.sh": [
            "cluster.yaml"
        ]
    },
    "retostauffer/stagewise": {
        "stagewise/jobs/reto_B.sh": [
            "reto_test.R"
        ],
        "stagewise/jobs/reto_A.sh": [
            "reto_test.R"
        ]
    },
    "ERSchultz/sequences_to_contact_maps": {
        "sequences_to_contact_maps/bin/env.sh": [
            "logFiles/env_local2.yml",
            "logFiles/env_midway3.yml"
        ]
    },
    "diku-dk/CFAL-bench": {
        "CFAL-bench/util/benchmark_futhark.sh": [
            "util/benchmark_futhark.sh"
        ],
        "CFAL-bench/jobspec-cfg/util/benchmark_futhark.sh": [
            "util/benchmark_futhark.sh"
        ]
    },
    "OpenOmics/pbAmp-seek": {
        "ervx/src/run.sh": [
            "kickoff.sh"
        ],
        "metamorph/src/run.sh": [
            "kickoff.sh"
        ],
        "cyte-seek/src/run.sh": [
            "kickoff.sh"
        ],
        "baseline/src/run.sh": [
            "kickoff.sh"
        ],
        "modr/src/run.sh": [
            "kickoff.sh"
        ],
        "pbAmp-seek/src/run.sh": [
            "kickoff.sh"
        ],
        "metavirs/src/run.sh": [
            "kickoff.sh"
        ],
        "genome-seek/src/run.sh": [
            "kickoff.sh"
        ],
        "chrom-seek/src/run.sh": [
            "kickoff.sh"
        ],
        "mir-seek/src/run.sh": [
            "kickoff.sh"
        ],
        "scErvx/src/run.sh": [
            "kickoff.sh"
        ],
        "HiIP/src/run.sh": [
            "kickoff.sh"
        ]
    },
    "ARCLeeds/distributed_keras": {
        "distributed_keras/submit-slurm.sh": [
            "model/main.py"
        ]
    },
    "EcoExtreML/STEMMUS_SCOPE_WOFOST": {
        "STEMMUS_SCOPE_WOFOST/exe/build_stemmus_scope_exe.sh": [
            "exe/build_stemmus_scope_exe.sh",
            "./src/STEMMUS_SCOPE_exe.m"
        ],
        "STEMMUS_SCOPE_WOFOST/jobspec-cfg/exe/build_stemmus_scope_exe.sh": [
            "exe/build_stemmus_scope_exe.sh",
            "./src/STEMMUS_SCOPE_exe.m"
        ]
    },
    "joezuntz/mink2": {
        "mink2/run_sim.sub": [
            "run_sim.py"
        ],
        "mink2/submit-cuillin.sub": [
            "./run-cuillin.sh"
        ],
        "mink2/jobspec-cfg/run-cuillin.sh": [
            "run-calculation.py"
        ]
    },
    "jerinphilip/fairseq-ilmt": {
        "fairseq-ilmt/cmd.sh": [
            "preprocess_cvit.py",
            "config.yaml",
            "train.py",
            "generate.py"
        ],
        "fairseq-ilmt/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "fairseq-ilmt/jobspec-cfg/generate.py": [
            "LICENSE"
        ]
    },
    "xmodar/gaussian-regularizer": {
        "gaussian-regularizer/run.sh": [
            "main.py"
        ]
    },
    "weecology/DeepForest_Model": {
        "DeepForest_Model/SLURM/generate.sbatch": [
            "generate.py",
            "GenerateAnchors.py"
        ],
        "DeepForest_Model/SLURM/compare.sbatch": [
            "compare.py"
        ],
        "DeepForest_Model/SLURM/anchors.sbatch": [
            "GenerateAnchors.py"
        ],
        "DeepForest_Model/SLURM/submit_profile.sbatch": [
            "train.prof",
            "profiler.py"
        ],
        "DeepTreeAttention/SLURM/experiment.sh": [
            "train.py"
        ],
        "DeepTreeAttention/SLURM/predict.sh": [
            "predict.py"
        ],
        "everwatch-workflow/SLURM/predict.sbatch": [
            "predict.py"
        ]
    },
    "weecology/NEON_crown_maps": {
        "DeepForest_Model/SLURM/generate.sbatch": [
            "generate.py"
        ],
        "NEON_crown_maps/SLURM/predict.sbatch": [
            "main.py"
        ],
        "NEON_crown_maps/SLURM/rasterize.sbatch": [
            "analysis/rasterize.py"
        ],
        "NeonTreeEvaluation/utilities/predict.sbatch": [
            "predict_crops.py"
        ]
    },
    "weecology/portal-forecasts": {
        "portal-forecasts/portal_weekly_forecast.sh": [
            "PortalForecasts.R",
            "tests/testthat/test-successful_forecasts.R",
            "archive_hipergator.sh",
            "tests/testthat/test-forecasts_committed.R"
        ],
        "portal-forecasts/jobspec-cfg/archive_hipergator.sh": [
            "portal_weekly_forecast.sh",
            "portal_dryrun_forecast.sh",
            "forecasts/forecasts_evaluations.zip",
            "forecasts/forecasts_metadata.csv",
            "forecasts/forecasts_results.csv"
        ],
        "pp_stack_test/portal_weekly_forecast.sh": [
            "tests/testthat.R",
            "archive_hipergator.sh"
        ],
        "pp_stack_test/jobspec-cfg/portal_weekly_forecast.sh": [
            "tests/testthat.R",
            "archive_hipergator.sh"
        ]
    },
    "weecology/DeepTreeAttention": {
        "DeepTreeAttention/SLURM/multinomial.py": [
            "sample_multinomial.py"
        ],
        "DeepTreeAttention/SLURM/experiment.sh": [
            "train.py"
        ],
        "DeepTreeAttention/SLURM/selfsupervised.sh": [
            "notebooks/crop_random_tile.py"
        ],
        "DeepTreeAttention/SLURM/dead.sh": [
            "train_dead.py"
        ],
        "DeepTreeAttention/SLURM/predict.sh": [
            "predict.py"
        ],
        "everwatch-workflow/SLURM/predict.sbatch": [
            "predict.py"
        ]
    },
    "weecology/BirdDetector": {
        "BirdDetector/SLURM/random.sbatch": [
            "random_weight.py"
        ],
        "BirdDetector/SLURM/submit_DOTA.py": [
            "utils/DOTA_pretraining.py"
        ],
        "BirdDetector/SLURM/everglades.sbatch": [
            "utils/everglades_mini.py"
        ],
        "BirdDetector/SLURM/submit_single.sh": [
            "single_run.py"
        ],
        "BirdDetector/SLURM/neill.sbatch": [
            "utils/neill_mini.py"
        ],
        "BirdDetector/SLURM/submit_generalization.sbatch": [
            "generalization.py"
        ],
        "BirdDetector/SLURM/submit_everglades.py": [
            "everglades.py"
        ],
        "BirdDetector/SLURM/submit_generalization_branch.sh": [
            "generalization.py"
        ]
    },
    "weecology/pp_stack_test": {
        "portal-forecasts/portal_weekly_forecast.sh": [
            "archive_hipergator.sh"
        ],
        "portal-forecasts/jobspec-cfg/portal_weekly_forecast.sh": [
            "archive_hipergator.sh"
        ],
        "portal-forecasts/jobspec-cfg/archive_hipergator.sh": [
            "portal_weekly_forecast.sh"
        ],
        "pp_stack_test/portal_weekly_forecast.sh": [
            "stack_test.R",
            "tests/testthat.R",
            "archive_hipergator.sh"
        ],
        "pp_stack_test/jobspec-cfg/portal_weekly_forecast.sh": [
            "stack_test.R",
            "tests/testthat.R",
            "archive_hipergator.sh"
        ]
    },
    "weecology/everwatch-workflow": {
        "DeepTreeAttention/SLURM/predict.sh": [
            "predict.py"
        ],
        "everwatch-workflow/SLURM/predict.sbatch": [
            "predict.py",
            "nest_detection.py"
        ]
    },
    "jahatef/TransformerSizing": {
        "TransformerSizing/nkSweep_mm_b.sh": [
            "mm_flops.py",
            "results/vocab.out"
        ],
        "TransformerSizing/print_torch_version.sh": [
            "printTorchVersion.py",
            "torchVersion.txt"
        ],
        "TransformerSizing/hiddenSweep256.sh": [
            "transformer_flops_256.py"
        ],
        "TransformerSizing/layer_norm_batch.sh": [
            "layernorm_flops.py",
            "results/layer_norm.out"
        ],
        "TransformerSizing/cutlass_transformer_flops.sh": [
            "cutlass_transformer_flops.py",
            "results/max_output_cutlass.out"
        ],
        "TransformerSizing/cutlass_batch.sh": [
            "cutlass_bmm.py"
        ]
    },
    "Rithsek99/cs5043_hw0": {
        "cs5043_hw0/batch_many.sh": [
            "hw_0.py"
        ]
    },
    "ezhilmathik/fenicsx-iris-cluster": {
        "fenicsx-iris-cluster/build-all.sh": [
            "env-build-fenics.sh",
            "./build-petsc.sh",
            "./build-python-modules.sh",
            "./build-fenics.sh",
            "env-fenics.sh"
        ],
        "fenicsx-iris-cluster/jobspec-cfg/build-fenics.sh": [
            "env-build-fenics.sh",
            "always-use-parmetis.diff"
        ],
        "fenicsx-iris-cluster/jobspec-cfg/build-python-modules.sh": [
            "env-build-fenics.sh"
        ],
        "fenicsx-iris-cluster/jobspec-cfg/build-petsc.sh": [
            "env-build-fenics.sh"
        ]
    },
    "RRZE-HPC/DisCostiC-Sim": {
        "DisCostiC-Sim/Run_Simulation_ITAC.sh": [
            "config.cfg",
            "./test/P2P.hpp"
        ]
    },
    "davidwych/HtrA1_Diffuse_Scattering": {
        "HtrA1_Diffuse_Scattering/run_3.X.sh": [
            "add_ions_loop_3.sh"
        ],
        "HtrA1_Diffuse_Scattering/run_prep_2.X.sh": [
            "prep_supercell_2_amber.in"
        ],
        "HtrA1_Diffuse_Scattering/run_1.X.sh": [
            "add_ions_loop_1.sh"
        ],
        "HtrA1_Diffuse_Scattering/run_2.X.sh": [
            "add_ions_loop_2.sh"
        ],
        "HtrA1_Diffuse_Scattering/run_prep_3.X.sh": [
            "prep_supercell_3_amber.in"
        ],
        "HtrA1_Diffuse_Scattering/run_prep_1.X.sh": [
            "prep_supercell_1_amber.in"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/add_ions_loop_1.sh": [
            "./lithium/lithium.pdb",
            "./sodium/sodium.pdb",
            "./sulfate/sulfate.pdb",
            "./ammonium/ammonium.pdb",
            "./citrate/citrate.pdb"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/add_ions_loop_3.sh": [
            "./lithium/lithium.pdb",
            "./sodium/sodium.pdb",
            "./sulfate/sulfate.pdb",
            "./ammonium/ammonium.pdb",
            "./citrate/citrate.pdb"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/prep_supercell_3_amber.in": [
            "./lithium/lithium.lib",
            "./sodium/sodium.lib",
            "./citrate/citrate.lib",
            "./citrate/citrate.frcmod",
            "./ammonium/ammonium.lib",
            "./sulfate/sulfate.lib"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/add_ions_loop_2.sh": [
            "./lithium/lithium.pdb",
            "./sodium/sodium.pdb",
            "./sulfate/sulfate.pdb",
            "./ammonium/ammonium.pdb",
            "./citrate/citrate.pdb"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/prep_supercell_2_amber.in": [
            "./lithium/lithium.lib",
            "./sodium/sodium.lib",
            "./citrate/citrate.lib",
            "./citrate/citrate.frcmod",
            "./ammonium/ammonium.lib",
            "./sulfate/sulfate.lib"
        ],
        "HtrA1_Diffuse_Scattering/jobspec-cfg/prep_supercell_1_amber.in": [
            "./lithium/lithium.lib",
            "./sodium/sodium.lib",
            "./citrate/citrate.lib",
            "./citrate/citrate.frcmod",
            "./ammonium/ammonium.lib",
            "./sulfate/sulfate.lib",
            "./water/water.lib"
        ]
    },
    "af0974/data_mag_assim": {
        "data_mag_assim/submit_wf.job": [
            "./workflow.py"
        ]
    },
    "jacobkrantz/VLN-CE": {
        "VLN-CE/jobspec-cfg/vlnce_baselines/config/r2r_waypoint/2-wpn-dc.yaml": [
            "habitat_extensions/config/vlnce_waypoint_task.yaml"
        ],
        "VLN-CE/jobspec-cfg/vlnce_baselines/config/rxr_baselines/rxr_cma_en.yaml": [
            "habitat_extensions/config/rxr_vlnce_english_task.yaml"
        ],
        "VLN-CE/sbatch_scripts/cluster_example.sh": [
            "run.py",
            "vlnce_baselines/config/rxr_baselines/rxr_cma_en.yaml"
        ],
        "VLN-CE/sbatch_scripts/waypoint_train.sh": [
            "run.py",
            "vlnce_baselines/config/r2r_waypoint/2-wpn-dc.yaml"
        ]
    },
    "abdohlman/tcma_code": {
        "tcma_code/pathseq.sh": [
            "pathseq.sh"
        ],
        "tcma_code/jobspec-cfg/pathseq.sh": [
            "pathseq.sh"
        ]
    },
    "OliverXUZY/few_shot_image": {
        "few_shot_image/jobArrayScript.sh": [
            "input_file_list.txt",
            "input_path_list.txt",
            "finetune_maml.py",
            "input_files_jobarray/input_maml_ft_configs.txt",
            "input_files_jobarray/input_maml_ft_outpath.txt",
            "test.py",
            "input_files_jobarray/input_maml_test_configs.txt",
            "input_files_jobarray/input_maml_test_loadpath.txt",
            "jobArrayScript.sh"
        ],
        "few_shot_image/script.sh": [
            "runVisionLM.py"
        ],
        "few_shot_image/jobspec-cfg/jobArrayScript.sh": [
            "input_file_list.txt",
            "input_path_list.txt",
            "finetune_maml.py",
            "input_files_jobarray/input_maml_ft_configs.txt",
            "input_files_jobarray/input_maml_ft_outpath.txt",
            "test.py",
            "input_files_jobarray/input_maml_test_configs.txt",
            "input_files_jobarray/input_maml_test_loadpath.txt",
            "jobArrayScript.sh"
        ],
        "few_shot_image/jobspec-cfg/input_files_jobarray/input_maml_test_configs.txt": [
            "configs/dinov2/mini-imagenet/test.yaml",
            "configs/dinov2/tiered-imagenet/test.yaml",
            "configs/dinov2/domain-net/test.yaml",
            "configs/mocov3/mini-imagenet/test.yaml",
            "configs/mocov3/tiered-imagenet/test.yaml",
            "configs/mocov3/domain-net/test.yaml",
            "configs/torchvision/mini-imagenet/test.yaml",
            "configs/torchvision/tiered-imagenet/test.yaml",
            "configs/torchvision/domain-net/test.yaml"
        ],
        "few_shot_image/jobspec-cfg/input_files_jobarray/input_maml_ft_configs.txt": [
            "configs/dinov2/mini-imagenet/finetune_maml.yaml",
            "configs/dinov2/tiered-imagenet/finetune_maml.yaml",
            "configs/dinov2/domain-net/finetune_maml.yaml",
            "configs/mocov3/mini-imagenet/finetune_maml.yaml",
            "configs/mocov3/tiered-imagenet/finetune_maml.yaml",
            "configs/mocov3/domain-net/finetune_maml.yaml",
            "configs/mocov3/mini-imagenet/finetune_maml_RN50.yaml",
            "configs/mocov3/tiered-imagenet/finetune_maml_RN50.yaml",
            "configs/mocov3/domain-net/finetune_maml_RN50.yaml",
            "configs/torchvision/mini-imagenet/finetune_maml.yaml",
            "configs/torchvision/tiered-imagenet/finetune_maml.yaml",
            "configs/torchvision/domain-net/finetune_maml.yaml",
            "configs/torchvision/mini-imagenet/finetune_maml_RN50.yaml",
            "configs/torchvision/tiered-imagenet/finetune_maml_RN50.yaml",
            "configs/torchvision/domain-net/finetune_maml_RN50.yaml"
        ],
        "adaptive_inference_/jobArrayScript.sh": [
            "jobArrayScript.sh"
        ],
        "adaptive_inference_/jobArrayScript2.sh": [
            "input_file_list.txt",
            "input_path_list.txt"
        ],
        "adaptive_inference_/jobspec-cfg/jobArrayScript.sh": [
            "jobArrayScript.sh"
        ],
        "adaptive_inference_/jobspec-cfg/jobArrayScript2.sh": [
            "input_file_list.txt",
            "input_path_list.txt"
        ]
    },
    "OliverXUZY/adaptive_inference_": {
        "few_shot_image/jobArrayScript.sh": [
            "jobArrayScript.sh"
        ],
        "few_shot_image/jobspec-cfg/jobArrayScript.sh": [
            "jobArrayScript.sh"
        ],
        "adaptive_inference_/jobArrayScript.sh": [
            "tools/eval_baseline.py",
            "input_files_jobarray/input_file_skip_block.txt",
            "eval_constrain_macs.py",
            "jobArrayScript.sh"
        ],
        "adaptive_inference_/jobArrayScript2.sh": [
            "tools/eval_baseline.py",
            "input_files_jobarray/input_file_skip_block.txt",
            "jobArrayScript2.sh"
        ],
        "adaptive_inference_/submit.sh": [
            "train.py"
        ],
        "adaptive_inference_/jobspec-cfg/jobArrayScript.sh": [
            "tools/eval_baseline.py",
            "input_files_jobarray/input_file_skip_block.txt",
            "eval_constrain_macs.py",
            "jobArrayScript.sh"
        ],
        "adaptive_inference_/jobspec-cfg/jobArrayScript2.sh": [
            "tools/eval_baseline.py",
            "input_files_jobarray/input_file_skip_block.txt",
            "jobArrayScript2.sh"
        ]
    },
    "JohnRFoster/pigs-simulation": {
        "pigs-simulation/slurm_run.sh": [
            "R/workflow.R"
        ]
    },
    "evilpegasus/transfer-learning": {
        "transfer-learning/preprocess.sh": [
            "data_utils.py"
        ],
        "transfer-learning/train_pretrain.sh": [
            "run.py"
        ],
        "transfer-learning/jobspec-cfg/data_utils.py": [
            "data_utils.py"
        ]
    },
    "mahdipasaie/coupled-pure": {
        "Nature_Cluster_version/job.sh": [
            "coupled_set_edit.py"
        ],
        "Nature_Coupled/job.sh": [
            "coupled_set_edit.py"
        ]
    },
    "mahdipasaie/Nature_Cluster_version": {
        "Nature_Cluster_version/job.sh": [
            "coupled_set_edit.py"
        ],
        "Nature_Coupled/job.sh": [
            "coupled_set_edit.py"
        ]
    },
    "mahdipasaie/Nature_Coupled": {
        "Nature_Cluster_version/job.sh": [
            "coupled_set_edit.py"
        ],
        "Nature_Coupled/job.sh": [
            "coupled_set_edit.py"
        ]
    },
    "deniCR/LA_Stream_Queries": {
        "LA_Stream_Queries/Vtune_collect/start_collection.sh": [
            "./set_tcph.sh"
        ]
    },
    "szymongalecki/Settlers_of_Agar_Hackathon": {
        "Settlers_of_Agar_Hackathon/mtat.job": [
            "model1.py"
        ]
    },
    "Marinyyt/PVDD": {
        "PVDD/sbatch_run.sh": [
            "train.py",
            "./configs/PVDD_pvdd0815_02_charbo_bs1_pvdd_model.yaml"
        ]
    },
    "shreayan98c/Protein-Protein-Interaction": {
        "Protein-Protein-Interaction/launchpad_16.sh": [
            "requirements.txt",
            "main.py"
        ],
        "Protein-Protein-Interaction/launchpad_32.sh": [
            "requirements.txt",
            "main.py"
        ],
        "Protein-Protein-Interaction/launchpad.sh": [
            "requirements.txt",
            "main.py"
        ]
    },
    "baileyp1/PhylogenomicsPipelines": {
        "PhylogenomicsPipelines/make_species_trees.sh": [
            "make_species_trees.sh"
        ],
        "PhylogenomicsPipelines/jobspec-cfg/make_species_trees.sh": [
            "make_species_trees.sh"
        ]
    },
    "ayushchatur/2dnet": {
        "2dnet/job_tinker.sh": [
            "trainers_new_dl.py",
            "trainers.py",
            "ddnet_inference.py"
        ],
        "2dnet/job_infer.sh": [
            "ddnet_inference.py"
        ]
    },
    "ayushchatur/ddnet_wgan_cmp": {
        "ddnet_wgan_cmp/job_tinker.sh": [
            "main.py"
        ]
    },
    "rishabh135/FourCastNet_gil": {
        "FourCastNet_gil/submit_batch_ensemble.sh": [
            "inference/inference_ensemble.py",
            "inference/inference_ensemble_precip.py",
            "export_DDP_vars.sh"
        ],
        "FourCastNet_gil/submit_batch.sh": [
            "export_DDP_vars.sh",
            "train.py"
        ],
        "FourCastNet_gil/sbatch_train.sh": [
            "./gpu-percent.log",
            "./gpu-memory.log",
            "./cpu-percent.log",
            "./cpu-memory.log",
            "./export_DDP_vars.sh"
        ]
    },
    "ymiki-repo/nbody": {
        "nbody/sh/slurm/plot_parallel.sh": [
            "sh/wrapper/mpi_matplotlib.sh"
        ]
    },
    "christiangil/Optimization-Tutorial": {
        "Optimization-Tutorial/jobs/stab_scores.pbs": [
            "new_sys_stable.py"
        ]
    },
    "MBora/IJCB-Journal": {
        "IJCB-Journal/job.sh": [
            "./run.py"
        ]
    },
    "SongXia-NYU/sPhysNet-MT": {
        "sPhysNet-MT/jobspec-cfg/train.py": [
            "train.py"
        ],
        "sPhysNet-MT/utils/file_templates/subjob-al-amd.pbs": [
            "active_learning.py"
        ],
        "sPhysNet-MT/utils/file_templates/subjob-amd.pbs": [
            "train.py"
        ],
        "sPhysNet-MT/deprecated_code/subjob-amd-rd_split.pbs": [
            "train_rd_split.py"
        ]
    },
    "Karagul/Asset-Pricing": {
        "Asset-Pricing/pca_cedar.sh": [
            "pca.py"
        ],
        "Asset-Pricing/capm_cedar.sh": [
            "capm.py"
        ],
        "Asset-Pricing/pca.sh": [
            "pca.py"
        ]
    },
    "veg/SARS-CoV-2": {
        "SARS-CoV-2/scripts/extract_genes.sh": [
            "python/get_raw_duplicates.py",
            "python/remove_seq.py",
            "python/merge_duplicates.py",
            "python/fix_duplicates.py",
            "python/update_fasta_duplicates.py",
            "data/comparative-annotation.json",
            "data/ctl/epitopes.json",
            "data/evo_annotation.json",
            "scripts/reroot-on-oldest.bf"
        ]
    },
    "PCLC7Z2/DeepLidar": {
        "DeepLidar/HPC/sequence.sbatch": [
            "retrain_sequence.py",
            "analysis/pretraining_size.csv"
        ],
        "DeepLidar/HPC/fullmodel.sbatch": [
            "train.py"
        ],
        "DeepLidar/HPC/grid.sbatch": [
            "site_grid.py",
            "analysis/site_grid.csv"
        ]
    },
    "JuliaWilbers/MedNet_DRF": {
        "MedNet_DRF/run_training.sh": [
            "train.py"
        ]
    },
    "rabiafidan/candy": {
        "candy/snakemake.sh": [
            "./status-sacct.sh"
        ]
    },
    "donnate/SelfGCon": {
        "SelfGCon/Ours/array.sbatch": [
            "Ours/hyperparameter.py"
        ],
        "SelfGCon/Ours/main3_gpu.sbatch": [
            "Ours/main3.py"
        ],
        "SelfGCon/GRACE/main_cs.sbatch": [
            "GRACE/main_cs.py"
        ]
    },
    "donnate/gnumap": {
        "CCA/experiments/bash_scripts/array.sbatch": [
            "experiments/experiment.py"
        ]
    },
    "donnate/CCA": {
        "CCA/experiments/bash_scripts/array.sbatch": [
            "experiments/experiment.py"
        ]
    },
    "xiyuez2/Darpa_Unet": {
        "Darpa_Unet/unet.swb": [
            "train.py"
        ]
    },
    "sp-uhh/derevdps": {
        "derevdps/_enhancement.sh": [
            "enhancement.py"
        ]
    },
    "b01901143/TRN-pytorch": {
        "TRN-pytorch/xx.job": [
            "./test_moment.sh"
        ],
        "TRN-pytorch/train.job": [
            "./train.sh"
        ],
        "TRN-pytorch/jobspec-cfg/test_moment.sh": [
            "test_video.py",
            "test_moment.py"
        ],
        "TRN-pytorch/jobspec-cfg/train.sh": [
            "main.py"
        ]
    },
    "durrantlab/subpex": {
        "subpex/aux_scripts/run.slurm.gpu.sh": [
            "init.sh"
        ],
        "subpex/aux_scripts/run.slurm.sh": [
            "init.sh"
        ],
        "subpex/jobspec-cfg/init.sh": [
            "init.sh"
        ]
    },
    "TheJacksonLaboratory/splicing-pipelines-nf": {
        "splicing-pipelines-nf/main.pbs": [
            "NF_splicing_pipeline.config",
            "DAG.png"
        ],
        "splicing-pipelines-nf/trim_test.pbs": [
            "NF_splicing_pipeline.config"
        ]
    },
    "TheJacksonLaboratory/gene_exp_psi": {
        "gene_exp_psi/run_types_pipeline.sh": [
            "run_snakemake.sh"
        ]
    },
    "TheJacksonLaboratory/Star_indices": {
        "Star_indices/main.pbs": [
            "NF_Star_Index.config"
        ]
    },
    "TheJacksonLaboratory/ATAC-seq": {
        "ATAC-seq/auyar_scripts.sh": [
            "auyar/bwa_trimmomatic.sh",
            "auyar/macs2_bwa_trimmomatic.sh",
            "auyar/homer_bwa_trimmomatic.sh",
            "auyar/nReads.sh"
        ]
    },
    "TheJacksonLaboratory/lama_workflow": {
        "lama_workflow/lama_spatial.sbatch": [
            "lama_workspace/spatially_normalise_data.sh"
        ],
        "lama_workflow/lama_popavg.sbatch": [
            "lama_workspace/population_average.sh"
        ]
    },
    "Alpine-DAV/PeleLMTestSim": {
        "PeleLMTestSim/submit_pelelm_1gpu_x2.bsub": [
            "input_1GPU"
        ]
    },
    "lucapantea/active-learning": {
        "active-learning/experiments/MNIST_resnet18_random_experiment.job": [
            "main.py"
        ],
        "active-learning/experiments/CIFAR_resnet18_random_experiment.job": [
            "main.py"
        ],
        "active-learning/experiments/MNIST_resnet18_bald_experiment.job": [
            "main.py"
        ]
    },
    "Roger-luo/SimplexThreeGT": {
        "SimplexThreeGT/scripts/task.sh": [
            "scripts/main.jl"
        ]
    },
    "yuchenlin/LLM-Blender": {
        "LLM-Blender/train_ranker.sh": [
            "train_ranker.py"
        ],
        "LLM-Blender/jobspec-cfg/train_ranker.py": [
            "LICENSE"
        ]
    },
    "vari-bbc/demultiplex": {
        "demultiplex/bcl2fastq_snake.sh": [
            "SampleSheet.csv"
        ]
    },
    "vari-bbc/prep_bbc_shared": {
        "prep_bbc_shared/bin/run_snakemake.sh": [
            "logs/dag.png",
            "logs/filegraph.png",
            "logs/rulegraph.png"
        ]
    },
    "meglab-metagenomics/amrplusplus_v2": {
        "amrplusplus_v2/launch_mpi_slurm.sh": [
            "main_AmrPlusPlus_v2.nf"
        ]
    },
    "janberges/nbs2cdw": {
        "nbs2cdw/run.sh": [
            "cdw_relax.py",
            "change_smearing.py",
            "change_doping.py",
            "change_scaling.py",
            "compute_dos.py",
            "compute_a2f.py",
            "compute_modes.py",
            "plot.py",
            "plot_doping.py",
            "plot_phases.py"
        ]
    },
    "mauriciogtec/Neural-MCTS-TextWorld": {
        "Neural-MCTS-TextWorld/jobs_cloud/train_cloud_knl.sh": [
            "scripts/train3.py"
        ]
    },
    "mauriciogtec/weather2vec-reproduce": {
        "weather2vec-reproduce/scripts/launcher_sim_effects2_basic.sh": [
            "train_sim_embs.py"
        ],
        "weather2vec-reproduce/scripts/launcher_sim_embs4.sh": [
            "train_sim_embs.py"
        ],
        "weather2vec-reproduce/scripts/launcher_sim_effects4.sh": [
            "train_sim_effects.py"
        ]
    },
    "Thomas-Fulton/Ludwig_2019": {
        "Ludwig_2019/prefetch_files.sh": [
            "README.md",
            "parse.py",
            "categories.txt",
            "data/SraRunTable.txt"
        ],
        "Ludwig_2019/jobspec-cfg/README.md": [
            "analyse.sh"
        ]
    },
    "gaochonghan/darts": {
        "darts/run/10.sh": [
            "./augment.py"
        ],
        "darts/run/img.sh": [
            "./train_imagenet.py"
        ],
        "darts/run/e2h2/100.sh": [
            "./augment.py"
        ],
        "darts/run/h2e2/10.sh": [
            "./augment.py"
        ],
        "darts/run/h2e2/i.sh": [
            "./augment.py"
        ]
    },
    "leiapple/Potential_benchmark_iron": {
        "Potential_benchmark_iron/submit.sh": [
            "README.md"
        ]
    },
    "leiapple/Interatomic-potential-Test": {
        "Potential_benchmark_iron/submit.sh": [
            "README.md"
        ],
        "Interatomic-potential-Test/submit.sh": [
            "./potential.in"
        ]
    },
    "yanguojun123/Multilingual_Dialogue": {
        "Multilingual_Dialogue/run_mt5.sh": [
            "run_mt5.sh"
        ],
        "Multilingual_Dialogue/jobspec-cfg/run_mt5.sh": [
            "run_mt5.sh"
        ]
    },
    "TanyaAggrawal/crack_detection": {
        "crack_detection/task.sbatch": [
            "do_test.py"
        ]
    },
    "justinkay/aldi": {
        "aldi/tools/singularity_train_net.sh": [
            "tools/download_model_for_config.py",
            "tools/train_net.py"
        ]
    },
    "EdJeeOnGitHub/takeup": {
        "takeup/slurm_array.sh": [
            "run_takeup.R"
        ],
        "takeup/r-batch-submit.sh": [
            "run_takeup.R",
            "quick_ate_postprocess.R"
        ],
        "takeup/all_run.sh": [
            "run_takeup.R",
            "quick_postprocess.sh"
        ],
        "takeup/jobspec-cfg/quick_ate_postprocess.R": [
            "quick_ate_postprocess.R"
        ],
        "takeup/jobspec-cfg/quick_postprocess.sh": [
            "quick_ate_postprocess.R",
            "quick_roc_postprocess.R",
            "quick_submodel_postprocess.R"
        ],
        "takeup/jobspec-cfg/run_takeup.R": [
            "run_takeup.R"
        ]
    },
    "ss555/drqv2": {
        "drqv2/other/swim.slurm": [
            "train_dm_custom.py"
        ],
        "drqv2/other/crun.slurm": [
            "train.py"
        ],
        "drqv2/other/run.slurm": [
            "train_gym.py",
            "train_dm_custom.py"
        ]
    },
    "aborowicz/spacewhale": {
        "spacewhale/model_logs/resnext_train_slurm.sh": [
            "training_tester_weighted.py"
        ]
    },
    "Mengjintao/chemprop": {
        "chemprop/szbatch_2_sca.sh": [
            "train.py"
        ]
    },
    "JoseLGomez/MCV_CNN_framework": {
        "MCV_CNN_framework/slurm_launch_experiment.sh": [
            "main.py",
            "config/SemSeg_sample_fcn8_Camvid.yml"
        ]
    },
    "mkhoshle/Multiple_Human_Reconstruction": {
        "Multiple_Human_Reconstruction/training_HOI.slurm": [
            "HumanObj_videos_ResNet/train.py"
        ]
    },
    "zxhcelestes/DualPLBart": {
        "DualPLBart/train_sep.bash": [
            "train_sep.py"
        ]
    },
    "dariodematties/Self_Supervised_Federated_Learning": {
        "Self_Supervised_Federated_Learning/run_rl.sh": [
            "src/rl_main.py"
        ]
    },
    "NVlabs/long-video-gan": {
        "long-video-gan/dataset_tools/make_dataset_sbatch.sh": [
            "dataset_tools/make_dataset_from_videos.py"
        ]
    },
    "zhu-xlab/DINO-MM": {
        "DINO-MM/scripts/slurm/sar_optical/srun_B2_sup_rn50_100.sh": [
            "sup_rn_B2.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B2_lc_dino_1.sh": [
            "linear_dino_B2.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B2_lc_dino_100.sh": [
            "linear_dino_B2.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B2_sup_rn50_1.sh": [
            "sup_rn_B2.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B2_train_dino.sh": [
            "main_dino_B2.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B14_sup_rn50_1.sh": [
            "sup_rn_B14.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B12_sup_rn50_100.sh": [
            "sup_rn_B12.py"
        ],
        "DINO-MM/scripts/slurm/sar_optical/srun_B14_sup_rn50_100.sh": [
            "sup_rn_B14.py"
        ]
    },
    "cdaley/SC21-NERSC-NRE-paper": {
        "SC21-NERSC-NRE-paper/build_run_all.sh": [
            "./BabelStream_build_script.sh",
            "./BerkeleyGW_build_script.sh",
            "./Kokkos_build_script.sh",
            "./TestSNAP_build_script.sh",
            "./TestSNAP_native_build_script.sh"
        ]
    },
    "hujilin1229/od-pred": {
        "od-pred/bash/run_exp_restore.sh": [
            "mgrnn_train_hist.py"
        ],
        "od-pred/bash/run_exp.sh": [
            "mgrnn_train_hist.py"
        ],
        "od-pred/bash/run_exp_cd_baseline.sh": [
            "baseline_train_cd.py"
        ],
        "od-pred/bash/run_exp_cd_fc.sh": [
            "mgrnn_train_hist.py",
            "fcgrnn_train_cd.py"
        ],
        "od-pred/bash/run_exp_fc_restore.sh": [
            "fcgrnn_train.py"
        ],
        "od-pred/bash/run_exp_cd_fc_restore.sh": [
            "fcgrnn_train_cd.py"
        ],
        "od-pred/bash/run_exp_cd.sh": [
            "mgrnn_train_hist.py",
            "mgrnn_train_hist_cd.py"
        ],
        "od-pred/bash/run_exp_gpu.sh": [
            "mgrnn_train_hist.py"
        ],
        "od-pred/bash/run_exp_fc.sh": [
            "mgrnn_train_hist.py",
            "fcgrnn_train.py"
        ],
        "od-pred/bash/run_exp_mura.sh": [
            "mgrnn_train_hist.py",
            "fcgrnn_train_cd.py"
        ],
        "od-pred/bash/run_exp_l2norm.sh": [
            "mgrnn_train_hist.py"
        ]
    },
    "PDNALab/NFold": {
        "NFold/job_30_new.sh": [
            "setup_aMeld.py"
        ]
    },
    "jrmylee/cochlea": {
        "cochlea/process.sh": [
            "main.py"
        ]
    },
    "kwells4/Sussel_RNAseq_PTPN": {
        "Sussel_RNAseq_PTPN/snakecharmer.sh": [
            "Snakefile",
            "config.yaml"
        ],
        "Sussel_RNAseq_PTPN/snakecharmer_no_trim.sh": [
            "Snakefile",
            "config_no_trim.yaml"
        ],
        "Sussel_RNAseq_PTPN/snakecharmer_cutadapt.sh": [
            "Snakefile",
            "config_cutadapt.yaml"
        ],
        "eclip_idr/snakecharmer.sh": [
            "Snakefile",
            "config.yaml"
        ]
    },
    "kwells4/eclip_idr": {
        "Sussel_RNAseq_PTPN/snakecharmer.sh": [
            "Snakefile",
            "config.yaml"
        ],
        "Sussel_RNAseq_PTPN/snakecharmer_no_trim.sh": [
            "Snakefile"
        ],
        "Sussel_RNAseq_PTPN/snakecharmer_cutadapt.sh": [
            "Snakefile"
        ],
        "eclip_idr/snakecharmer.sh": [
            "Snakefile",
            "config.yaml"
        ]
    },
    "yaozhewei/pytorch-benchmarks": {
        "pytorch-benchmarks/scripts/run_hsw.sh": [
            "train.py",
            "parse.py"
        ],
        "pytorch-benchmarks/scripts/run_knl.sh": [
            "train.py",
            "parse.py"
        ]
    },
    "Pratham-mehta/OptimizedEfficientNets": {
        "OptimizedEfficientNets/submit_job.sbatch": [
            "train.py"
        ],
        "OptimizedEfficientNets/job.sbatch": [
            "train.py"
        ]
    },
    "shash42/Evaluating-Inexact-Unlearning": {
        "Evaluating-Inexact-Unlearning/jobspec-cfg/scripts/evaluation.sh": [
            "scripts/evaluation.sh",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/cifar100-exch_cutmix.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/cifar10-exch-batch.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/cifar10-noise.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/evaluation.sh": [
            "scripts/evaluation.sh",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/pretrain.sh": [
            "src/learn.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/small-cifar5-CRT.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/small-cifar-5.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ],
        "Evaluating-Inexact-Unlearning/scripts/cifar100-noise.sh": [
            "src/train.py",
            "src/unlearn.py",
            "src/evaluation.py"
        ]
    },
    "JoseAlanis/eeg-signal-variability": {
        "eeg-signal-variability/slaveR.sh": [
            "302_signal_variability_analysis_single_trial.R"
        ]
    },
    "Tack-Tau/fplib3": {
        "fplib3/utilities/ase_TB3_job.sh": [
            "mixing_test.py"
        ]
    },
    "Shinobs11/it388-group-project": {
        "it388-group-project/mpi_jobscript.sb": [
            "cat.jpg",
            "comp.jpg",
            "gray.jpg"
        ]
    },
    "Shanka123/STSN": {
        "STSN/pgm_job.slurm": [
            "train_slot_transformer_pgm_multigpu.py"
        ]
    },
    "GreshamLab/RNAseq": {
        "RNAseq/rnaseq-array-pipeline.sh": [
            "rnaseq-array-pipeline.sh"
        ],
        "RNAseq/jobspec-cfg/rnaseq-array-pipeline.sh": [
            "rnaseq-array-pipeline.sh"
        ]
    },
    "ai4er-cdt/sea-ice-classification": {
        "sea-ice-classification/train_slurm_script.sh": [
            "train.py"
        ]
    },
    "flass/pantagruel": {
        "pantagruel/scripts/ecceTERA_array_PBS.qsub": [
            "pantagruel"
        ]
    },
    "grupoioa/stats_py": {
        "stats_py/tplot.sh": [
            "plot_test.py"
        ]
    },
    "Benjamin-Walker/heart-murmur-detection": {
        "heart-murmur-detection/jobspec-cfg/xgboost_integration.py": [
            "xgboost_integration.py"
        ],
        "heart-murmur-detection/jobspec-cfg/data_splits.py": [
            "data_splits.py"
        ],
        "heart-murmur-detection/jobspec-cfg/train_resnet.py": [
            "train_resnet.py"
        ],
        "heart-murmur-detection/jobspec-cfg/dbres.py": [
            "dbres.py"
        ],
        "heart-murmur-detection/run_files/slurm_murmur_binary_bayesian.sh": [
            "data_splits.py",
            "train_resnet.py",
            "dbres.py"
        ],
        "heart-murmur-detection/run_files/slurm_murmur_outcome_1.sh": [
            "train_resnet.py",
            "dbres.py",
            "xgboost_integration.py"
        ],
        "heart-murmur-detection/run_files/slurm_murmur_multiclass_1.sh": [
            "train_resnet.py",
            "dbres.py"
        ],
        "heart-murmur-detection/run_files/slurm_murmur_binary_1.sh": [
            "train_resnet.py",
            "dbres.py",
            "xgboost_integration.py"
        ],
        "heart-murmur-detection/run_files/slurm_murmur_binary_res.sh": [
            "data_splits.py",
            "train_resnet.py",
            "dbres.py"
        ]
    },
    "tlkh/pytorch-ngc-multinode-nlp": {
        "pytorch-ngc-multinode-nlp/nlp.qsub": [
            "log.txt"
        ]
    },
    "chhetribsurya/Encode_chipseq_pipe": {
        "PartridgeChhetri_etal/Shell_scripts/submit_peak_calls.sh": [
            "./PeakCallers.main.sh"
        ],
        "Encode_chipseq_pipe/submit_run_idr.sh": [
            "./Idr.main.sh"
        ]
    },
    "whettenr/brq-att-alt-exp": {
        "brq-att-alt-exp/run/run_hc_lg.sh": [
            "train.py",
            "hparams/hyperconformer_lg.yaml"
        ],
        "brq-att-alt-exp/run/run_hc.sh": [
            "train.py",
            "hparams/hyperconformer.yaml"
        ],
        "brq-att-alt-exp/run/run_ff.sh": [
            "train.py",
            "hparams/fastformer.yaml"
        ],
        "brq-att-alt-exp/run/run_brq_lg.sh": [
            "train.py",
            "hparams/brq_lg.yaml"
        ],
        "brq-att-alt-exp/run/run_brq.sh": [
            "train.py",
            "hparams/brq.yaml"
        ],
        "brq-att-alt-exp/run/run_summix.sh": [
            "train.py",
            "hparams/brq_summarymixing.yaml"
        ],
        "brq-att-alt-exp/run/a100/run_bff.sh": [
            "train.py",
            "hparams/branchfastformer.yaml"
        ],
        "brq-att-alt-exp/run/a100/run_bff_lg.sh": [
            "train.py",
            "hparams/branchfastformer_lg.yaml"
        ],
        "brq-att-alt-exp/run/a100/run_hc.sh": [
            "train.py",
            "hparams/hyperconformer.yaml"
        ],
        "brq-att-alt-exp/run/a100/run_hb_lg.sh": [
            "train.py",
            "hparams/hyperbranchformer_lg.yaml"
        ]
    },
    "whettenr/bestrq": {
        "brq-att-alt-exp/run/run_hc_lg.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/run_hc.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/run_ff.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/run_brq_lg.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/run_brq.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/run_summix.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/a100/run_bff.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/a100/run_bff_lg.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/a100/run_hc.sh": [
            "train.py"
        ],
        "brq-att-alt-exp/run/a100/run_hb_lg.sh": [
            "train.py"
        ],
        "bestrq/jobspec-cfg/wav2vec2/hparams/wav2vec2_base.yaml": [
            "results/bestrq/csv/train.csv",
            "results/bestrq/csv/dev-clean.csv"
        ],
        "bestrq/run/a100/run_w2v2.sh": [
            "wav2vec2/train_sb_wav2vec2.py",
            "wav2vec2/hparams/wav2vec2_base.yaml"
        ]
    },
    "CU-DBMI/example-hpc-alpine-python": {
        "example-hpc-alpine-python/run_script.sh": [
            "run_script.sh",
            "environment.yml",
            "code/example.py"
        ],
        "example-hpc-alpine-python/jobspec-cfg/run_script.sh": [
            "run_script.sh",
            "environment.yml",
            "code/example.py"
        ]
    },
    "uark-cviu/Algonauts2023": {
        "Algonauts2023/bin/train_algonauts.sh": [
            "scripts/train.py"
        ]
    },
    "karanchahal/distiller": {
        "distiller/batch_job.s": [
            "evaluate_kd.py"
        ]
    },
    "Nikunj-Gupta/conformal-agent-modelling": {
        "conformal-agent-modelling/scripts/run_baselines.sh": [
            "baselines/baselines.py"
        ],
        "conformal-agent-modelling/scripts/run_lbf_cp.sh": [
            "cam-lbf/exact-actions.py"
        ]
    },
    "Nikunj-Gupta/HAMMER": {
        "HAMMER/runs_new_cn/run148.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run48.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run135.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run81.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run55.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run80.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run6.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ],
        "HAMMER/runs_new_cn/run23.sh": [
            "hammer-run.py",
            "configs/cn.yaml"
        ]
    },
    "Nikunj-Gupta/Efficient_ResNets": {
        "Efficient_ResNets/runs/run7.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run1.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run15.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run5.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run3.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run9.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run13.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run16.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run18.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run14.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run8.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run19.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run2.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run10.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run20.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run17.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run6.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run4.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run12.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ],
        "Efficient_ResNets/runs/run11.sh": [
            "main.py",
            "resnet_configs/se_fulldrop_good_ResNet4.yaml"
        ]
    },
    "QROWD/KGE": {
        "KGE/pbs.sh": [
            "run.py"
        ]
    },
    "ut-amrl/tacc-tutorial": {
        "tacc-tutorial/launch_mpi.bash": [
            "test_mpi.py"
        ]
    },
    "yashsmehta/named-entity-normalization": {
        "named-entity-normalization/submit_job.sbatch": [
            "scraper.py"
        ]
    },
    "mcx-lab/rl-baselines3-zoo": {
        "rl-baselines3-zoo/dgx/dgx_build_image.sh": [
            "docker/Dockerfile-sbl3"
        ],
        "rl-baselines3-zoo/dgx/dgx_run_image.sh": [
            "train.py"
        ]
    },
    "penn-pal-lab/scaffolder": {
        "scaffolder/slurm/rgb_pen.bash": [
            "dreamerv3/train.py"
        ],
        "scaffolder/slurm/blind_pick.bash": [
            "dreamerv3/train.py"
        ],
        "scaffolder/slurm/noisy_monkey.bash": [
            "dreamerv3/train.py"
        ]
    },
    "caus-am/sigmasep": {
        "sigmasep/python/experiment.sh": [
            "LICENSE"
        ]
    },
    "JustinFletcher/rso_cd": {
        "rso_cd/rso_cd.pbs": [
            "train_rso_change_detection.py"
        ]
    },
    "JustinFletcher/tensorflow-zoo": {
        "tensorflow-zoo/queue_exhaustion_experiment.pbs": [
            "queue_exhaustion_experiment.py"
        ],
        "tensorflow-zoo/sample_mpi_experiment.pbs": [
            "sample_mpi_experiment.py"
        ],
        "tensorflow-zoo/evaluate_model_stability.pbs": [
            "evaluate_model_stability.py"
        ],
        "tensorflow-zoo/mpi_example.pbs": [
            "trapParallel_1.py"
        ],
        "tensorflow-zoo/queue_exhaustion.pbs": [
            "queue_exhaustion.py"
        ],
        "tensorflow-zoo/sample_experiment.pbs": [
            "sample_experiment.py"
        ],
        "tensorflow-zoo/jobspec-cfg/trapParallel_1.py": [
            "trapParallel_1.py"
        ]
    },
    "JustinFletcher/hpc-tensorflow": {
        "hpc-tensorflow/tensorflow_experiment_launcher.pbs": [
            "tensorflow_experiment_launcher.py"
        ],
        "hpc-tensorflow/cluster_experiment_launcher.pbs": [
            "cluster_experiment_launcher.py"
        ],
        "hpc-tensorflow/queue_exhaustion_study_launcher.pbs": [
            "queue_exhaustion_study_launcher.py"
        ]
    },
    "Wektor607/TAPE": {
        "TAPE/core/scripts/gae.sh": [
            "core/yamls/cora/gcns/gae.yaml",
            "core/yamls/cora/gcns/gae_sp1.yaml",
            "core/gcns/wb_tune.py"
        ]
    },
    "Taishi-N324/llama-recipes": {
        "llama-recipes/scripts/juwels/7b_2node.sh": [
            "examples/finetuning.py"
        ],
        "llama-recipes/scripts/juwels/34b_2node.sh": [
            "examples/finetuning.py"
        ]
    },
    "nicolaracheladele/2D-Human-Pose-Estimation": {
        "2D-Human-Pose-Estimation/OmniPose/train_gpu.sh": [
            "./OmniPose/run_train.sh"
        ],
        "2D-Human-Pose-Estimation/jobspec-cfg/OmniPose/run_train.sh": [
            "OmniPose/train.py"
        ]
    },
    "HPAC/CP-CALS": {
        "CP-CALS/scripts/slurm/CLAIX_18_evaluate.sl": [
            "build/.gitkeep"
        ]
    },
    "cadia-lvl/SMT": {
        "SMT/jobspec-cfg/scripts/2preprocess/preprocess.sh": [
            "preprocessing/main.py",
            "scripts/run_in_singularity.sh",
            "scripts/2preprocess/lm.sh"
        ],
        "SMT/jobspec-cfg/scripts/1format/extract_dicts.sh": [
            "data/raw/dictionary/wiki.tsv"
        ],
        "SMT/scripts/end_to_end.sh": [
            "scripts/environment.sh",
            "scripts/1format/extract_dicts.sh",
            "scripts/1format/en_mono_format.py",
            "preprocessing/main.py",
            "scripts/2preprocess/preprocess.sh",
            "scripts/run_in_singularity.sh",
            "scripts/3train/dict.sh",
            "scripts/3train/translate.sh",
            "scripts/3train/evaluate.sh",
            "preprocessing/docker-build.sh",
            "scripts/4package/docker-build.sh"
        ]
    },
    "huggingface/accelerate": {
        "accelerate/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "datablations/utils/install_apex.sh": [
            "setup.py"
        ],
        "datablations/utils/setup_venv.sh": [
            "setup.py"
        ]
    },
    "huggingface/open-muse": {
        "accelerate/jobspec-cfg/setup.py": [
            "setup.py"
        ],
        "datablations/utils/install_apex.sh": [
            "setup.py"
        ],
        "datablations/utils/setup_venv.sh": [
            "setup.py"
        ],
        "open-muse/slurm_scripts/cc12m.slurm": [
            "training/train_muse.py"
        ],
        "open-muse/slurm_scripts/imagenet.slurm": [
            "training/train_maskgit_imagenet.py"
        ],
        "open-muse/slurm_scripts/imagenet_text2image.slurm": [
            "training/train_muse.py"
        ]
    },
    "joeolson42/WRFv3.9_HRRRv4": {
        "WRFv3.9_HRRRv4/wcoss_batchit.sh": [
            "./wcoss_doit.sh",
            "compile"
        ],
        "WRFv3.9_HRRRv4/jobspec-cfg/wcoss_doit.sh": [
            "configure",
            "./clean",
            "./configure",
            "compile",
            "./compile"
        ]
    },
    "Stanford-ILIAD/reward_adaptation": {
        "reward_adaptation/script.sh": [
            "baselines/PNN/train.py",
            "baselines/L2SP/train.py",
            "baselines/BSS/train.py"
        ]
    },
    "AidanaKaripbayeva/Sigmorphon2020": {
        "Sigmorphon2020/run_bw.sh": [
            "code/main.py",
            "./code/data/languages/individual_alphabets.tsv"
        ],
        "Sigmorphon2020/run_bw_cpu.sh": [
            "code/main.py",
            "./code/data/languages/individual_alphabets.tsv"
        ],
        "Sigmorphon2020/run_bw_gpu.sh": [
            "code/main.py",
            "./code/data/languages/individual_alphabets.tsv"
        ]
    },
    "AI4OPT/OPFGenerator": {
        "OPFGenerator/slurm/template/sysimage.sbatch": [
            "slurm/make_sysimage.jl"
        ],
        "OPFGenerator/jobspec-cfg/slurm/make_sysimage.jl": [
            "exp/sampler.jl"
        ]
    },
    "ay-lab-team/Loop-Catalog-Pipelines": {
        "Loop-Catalog-Pipelines/jobspec-cfg/workflow/scripts/peaks/run_fithichip_peakcalling.sh": [
            "workflow/scripts/peaks/run_fithichip_peakcalling.sh",
            "workflow/source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/motif_analysis/run_fimo.sh": [
            "workflow/source_paths.sh",
            "workflow/scripts/motif_analysis/clean_up_fimo_summary.py"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/peaks/run_fithichip_peakcalling.sh": [
            "workflow/scripts/peaks/run_fithichip_peakcalling.sh",
            "workflow/source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/peaks/run_fithichip_peakcalling_t2t.sh": [
            "workflow/scripts/peaks/run_fithichip_peakcalling.sh",
            "workflow/source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_S5_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_L5_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_S10_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_L10.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_S5.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_L25_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_S25_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_L5.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_S10.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/loops/run_fithichip_loopcalling_L10_t2t.sh": [
            "workflow/scripts/loops/fithichip_source_paths.sh"
        ],
        "Loop-Catalog-Pipelines/workflow/scripts/hicpro/merge_validpairs_mouse.sh": [
            "workflow/source_paths.sh"
        ]
    },
    "xavierfav/coala": {
        "coala/train_encoders.sh": [
            "train_dual_ae.py"
        ],
        "coala/train_ae_c.sh": [
            "train_dual_ae.py"
        ]
    },
    "manGitHub/ngs_pipeline_COMPASS_master": {
        "ngs_pipeline_COMPASS_master/submit_snakemake.sh": [
            "config/config_cluster.json"
        ],
        "ngs_pipeline_master/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "manGitHub/ngs_pipeline_master": {
        "ngs_pipeline_COMPASS_master/submit_snakemake.sh": [
            "config/config_cluster.json"
        ],
        "ngs_pipeline_master/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "gmum/InterContiNet": {
        "InterContiNet/scripts/alexnet_cifar10.sh": [
            "train.py"
        ],
        "InterContiNet/scripts/alexnet_cifar20x5.sh": [
            "train.py"
        ]
    },
    "nick-wilson/multigpu-cgroups": {
        "examples-pbs-dgx/mpi/multinode.pbs": [
            "pbs-attach"
        ]
    },
    "nick-wilson/hpc-checks": {
        "examples-pbs-dgx/horovod/horovod-2x8.pbs": [
            "check"
        ]
    },
    "mmdarmofal/GDD_ENS": {
        "GDD_ENS/scripts/single_prior.sh": [
            "scripts/adaptable_prior.py",
            "data/prior_table_single.csv",
            "output/single_ft_res.csv"
        ],
        "GDD_ENS/scripts/train_gdd_nn.sh": [
            "scripts/train_gdd_nn.py"
        ],
        "GDD_ENS/scripts/multi_prior.sh": [
            "scripts/adaptable_prior.py",
            "data/prior_table_multi.csv",
            "output/single_ft_res.csv"
        ],
        "GDD_ENS/scripts/split_data.sh": [
            "scripts/split_data.py"
        ]
    },
    "msmilevski/mlp_lanl_earthquake_prediction": {
        "mlp_lanl_earthquake_prediction/run_lstm.sh": [
            "scripts/experiments/lstm_experiment.py"
        ]
    },
    "maxrousseau/o-nlp": {
        "o-nlp/scripts/slurm_bart.sh": [
            "main.py",
            "configs/bart_sft.toml"
        ],
        "o-nlp/scripts/slurm_seq.sh": [
            "main.py",
            "configs/t5_sft.toml"
        ]
    },
    "rabbanitw/PGHash": {
        "PGHash/pg_amz.sh": [
            "run_pg.py"
        ],
        "PGHash/pg_wiki.sh": [
            "run_pg.py"
        ]
    },
    "DominikStiller/dtu-speechsep": {
        "dtu-speechsep/bin/librimix/train_job.sh": [
            "bin/librimix/train.sh"
        ],
        "dtu-speechsep/bin/sinusoid/train_job.sh": [
            "bin/sinusoid/train.sh"
        ],
        "dtu-speechsep/jobspec-cfg/bin/librimix/train.sh": [
            "bin/train.sh"
        ],
        "dtu-speechsep/jobspec-cfg/bin/sinusoid/train.sh": [
            "bin/train.sh"
        ]
    },
    "FenrisWulven/Normalising-Flow-DNN": {
        "Normalising-Flow-DNN/submit1.sh": [
            "postnet/run.py",
            "ensemble/run_ensemble.py"
        ]
    },
    "QuentinRougemont/abc_inferences": {
        "abc_inferences/00-scripts/various_rscripts/08.simulate.neutral.fst.eq.homo.sh": [
            "./00-scripts/rscript/05.eq.generate.prior.from.post.best.homo.R"
        ]
    },
    "QuentinRougemont/DemographicInference": {
        "DemographicInference/01-scripts/colosse/00-launcher/model_job_array.AMG.sh": [
            "./01-scripts/00.run_dadi_parallel_v2.sh"
        ],
        "DemographicInference/jobspec-cfg/01-scripts/00.run_dadi_parallel_v2.sh": [
            "./01-scripts/01-run_model_iteration_v2.sh"
        ]
    },
    "HusseinLakkis01/scCoAnnotate": {
        "scCoAnnotate/submit.sh": [
            "config.yml"
        ]
    },
    "dkweiss31/parallel_computing": {
        "parallel_computing/submit.sh": [
            "expensive_job.py"
        ]
    },
    "fieldtrip/dashboard": {
        "dashboard/schedule-batch.sh": [
            "schedule-batch.sh",
            "tobytes.sh",
            "togb.sh",
            "toseconds.sh",
            "tohms.sh",
            "run-test.sh"
        ],
        "dashboard/jobspec-cfg/run-test.sh": [
            "run-test.sh",
            "schedule-batch.sh"
        ],
        "dashboard/jobspec-cfg/schedule-batch.sh": [
            "schedule-batch.sh",
            "tobytes.sh",
            "togb.sh",
            "toseconds.sh",
            "tohms.sh",
            "run-test.sh"
        ]
    },
    "tejuafonja/GRouNdGAN": {
        "GRouNdGAN/scripts/train.sh": [
            "src/main.py"
        ]
    },
    "diegoaldarondo/stac": {
        "stac/stac_merge.sh": [
            "stac_and_preprocess.sh"
        ],
        "stac/jobspec-cfg/stac_and_preprocess.sh": [
            "stac_and_preprocess.sh"
        ],
        "stac/cluster/dannce2npmp.sh": [
            "setup.py"
        ]
    },
    "WashU-IT-RIS/docker-osu-micro-benchmarks": {
        "docker-osu-micro-benchmarks/osu_allgather_intel.bsub": [
            "osu_allgather_intel.bsub"
        ],
        "docker-osu-micro-benchmarks/jobspec-cfg/osu_allgather_intel.bsub": [
            "osu_allgather_intel.bsub"
        ]
    },
    "SYSU-SCC/IPCC_stencil": {
        "IPCC_stencil/run.slurm": [
            "./setup-omp.sh",
            "IPCC.png"
        ]
    },
    "JeffersonLab/clas12-timeline": {
        "clas12-timeline/bin/run-monitoring.sh": [
            "qa-physics/monitorRead.groovy"
        ]
    },
    "arplaboratory/satellite-thermal-geo-localization": {
        "satellite-thermal-geo-localization/jobspec-cfg/eval.py": [
            "eval.py"
        ],
        "satellite-thermal-geo-localization/scripts/train_bing_thermal_partial_conv4096_resnet50_bn_lr_wd.sbatch": [
            "train.py"
        ],
        "satellite-thermal-geo-localization/scripts/eval_nocontrast.sbatch": [
            "eval.py"
        ],
        "satellite-thermal-geo-localization/scripts/train_bing_thermal_partial_conv4096_resnet50_bn_lr_wd_contrast.sbatch": [
            "train.py"
        ],
        "satellite-thermal-geo-localization/scripts/eval.sbatch": [
            "eval.py"
        ]
    },
    "sbrl/research-smflooding": {
        "research-smflooding/slurm.job": [
            "src/text_classifier.py"
        ],
        "research-smflooding/slurm-confusionmatriximage.job": [
            "slurm-confusionmatrix.job",
            "src/confusion_matrix_image.py"
        ],
        "research-smflooding/jobspec-cfg/slurm-confusionmatrix.job": [
            "slurm-confusionmatrix.job",
            "src/confusion_matrix.py"
        ]
    },
    "AlessandroRuzzi/Computational-Intelligence-Lab": {
        "Computational-Intelligence-Lab/leonhard_run.sh": [
            "./run.py"
        ]
    },
    "jarbus/evo": {
        "evo/launch-template.sh": [
            "run-script.jl"
        ]
    },
    "guillemgt/l65_er647_gg457_js2837": {
        "l65_er647_gg457_js2837/new_bash_scripts/slurm_sweep_mamba_pe1u_noise_struct.wilkes3": [
            "configs/Experiments/peptides-struct.yaml"
        ],
        "l65_er647_gg457_js2837/new_bash_scripts/slurm_sweep_mamba_pe1u_noise_voc.wilkes3": [
            "configs/Experiments/pascal-voc.yaml"
        ],
        "l65_er647_gg457_js2837/slurm_scripts/slurm_submit_peptides.wilkes3": [
            "configs/L65/peptides-func-EX.yaml"
        ],
        "l65_er647_gg457_js2837/slurm_scripts/slurm_submit_COCO_SP.wilkes3": [
            "configs/Mamba/cocosuperpixels-EX.yaml"
        ]
    },
    "dembra96/EukBook": {
        "EukBook/bibigrid/Configure_EukBook_clister_slurm.sh": [
            "Snakemake",
            "./Snakemake",
            "sample_yamls/samples_small.yaml"
        ],
        "EukBook/bibigrid/EukBook_slurm.sh": [
            "./Snakemake"
        ],
        "EukBook/bibigrid/Fixing_fails_slurm.sh": [
            "./Snakemake"
        ]
    },
    "stevinc/EGNNA_WND": {
        "EGNNA_WND/job_launcher.sh": [
            "main.py"
        ]
    },
    "ai-se/magic101": {
        "magic101/main.mpi": [
            "addroot.sh",
            "Main/experiment.py"
        ],
        "magic101/jobspec-cfg/Main/experiment.py": [
            "final_list.txt"
        ]
    },
    "CNCLgithub/liquid_gen_model_depth_img": {
        "liquid_gen_model_depth_img/schedule_sbatch_one_job.sh": [
            "./run.sh",
            "src/exp_basic.jl"
        ],
        "liquid_gen_model_depth_img/jobspec-cfg/run.sh": [
            "load_config.sh"
        ],
        "Woven/tmp.sh": [
            "./run.sh"
        ],
        "Woven/schedule_sbatch_do_not_check_existing.sh": [
            "./run.sh"
        ],
        "Woven/jobspec-cfg/run.sh": [
            "run.sh",
            "./run.sh",
            "src/exp_basic.jl",
            "load_config.sh"
        ]
    },
    "CNCLgithub/Woven": {
        "liquid_gen_model_depth_img/schedule_sbatch_one_job.sh": [
            "./run.sh",
            "src/exp_basic.jl"
        ],
        "liquid_gen_model_depth_img/jobspec-cfg/run.sh": [
            "load_config.sh"
        ],
        "Woven/tmp.sh": [
            "./run.sh"
        ],
        "Woven/schedule_sbatch_do_not_check_existing.sh": [
            "./run.sh"
        ],
        "Woven/jobspec-cfg/run.sh": [
            "run.sh",
            "load_config.sh"
        ]
    },
    "arabporr/HyperNetwork": {
        "HyperNetwork/scripts/Slurm_7.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_12.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_24.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_14.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_11.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_17.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_16.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_0.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_5.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_20.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_9.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_15.sh": [
            "main.py"
        ],
        "HyperNetwork/scripts/Slurm_8.sh": [
            "main.py"
        ]
    },
    "attilasimko/dice_variants": {
        "dice_variants/script.sh": [
            "training.py"
        ]
    },
    "zhaozh10/mmdetection": {
        "mmdetection/tools/bme_train.sh": [
            "tools/train.py"
        ]
    },
    "zhaozh10/LLM_CMP": {
        "LLM_CMP/plus.sh": [
            "chatcad_plus_eval.py"
        ],
        "LLM_CMP/chatcad.sh": [
            "chatcad_eval.py"
        ]
    },
    "imace/magpie": {
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-tachyon-and-hdfs": [
            "README",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-spark-with-hdfs": [
            "README",
            "examples/spark-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-and-mahout": [
            "README"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun": [
            "README",
            "examples/hadoop-example-job-script",
            "examples/hbase-example-job-script",
            "examples/spark-example-job-script",
            "examples/storm-example-job-script"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-and-pig": [
            "README"
        ],
        "magpie/submission-scripts/script-lsf-mpirun/magpie.lsf-mpirun-hadoop-with-uda": [
            "README",
            "examples/hadoop-example-job-script"
        ]
    },
    "TheLukaDragar/VRA": {
        "VRA/0_dataset.sh": [
            "0_extract_faces.py"
        ],
        "UNI-LJ-VRA/code/random_search_convnext.sh": [
            "train_convnext.py"
        ]
    },
    "TheLukaDragar/UNI-LJ-VRA": {
        "VRA/0_dataset.sh": [
            "0_extract_faces.py"
        ],
        "UNI-LJ-VRA/pp.sh": [
            "train_convnext_SequecingWithzaporednimifrmi2nodes.py"
        ]
    },
    "Big-Biodiversity-Collaborative/butterfly-species-declines": {
        "butterfly-species-declines/script/pbs_scripts/map_loop.pbs": [
            "./script/analysis_mapping/map_loop.R"
        ],
        "butterfly-species-declines/script/pbs_scripts/pbs.tmp": [
            "./script/master.R"
        ]
    },
    "Don767/segdet_mlcr2024": {
        "segdet_mlcr2024/jobspec-cfg/config/coco.yaml": [
            "./scripts/get_coco.sh"
        ],
        "segdet_mlcr2024/scripts/run_all.sh": [
            "run_all.py"
        ],
        "segdet_mlcr2024/scripts/eval_custom.sh": [
            "tools/metrics.py",
            "config/rtmdet.py",
            "weights/rtmdet.pth",
            "config/vitdet.py",
            "weights/vitdet_preliminary.pth"
        ],
        "segdet_mlcr2024/scripts/train_slurm.sh": [
            "tools/train.py"
        ],
        "segdet_mlcr2024/scripts/train_yolov7_slurm.sh": [
            "segdet/models/yolov7/yolo_train.py",
            "config/coco.yaml",
            "config/config_yolov7.yaml",
            "tools/train.py"
        ]
    },
    "MetaAnonym/RobustDARTS": {
        "RobustDARTS/scripts/DARTS_eval.sh": [
            "src/evaluation/train.py"
        ],
        "RobustDARTS/scripts/DARTS_search.sh": [
            "src/search/train_search.py"
        ]
    },
    "navidcy/ASC-idealised": {
        "ASC-idealised/asc_navid.sh": [
            "asc.jl"
        ],
        "ASC-idealised/asc.sh": [
            "asc.jl"
        ]
    },
    "nylander/birdscanner2": {
        "birdscanner2/jobspec-cfg/workflow/scripts/bs2-run.slurm.sh": [
            "workflow/scripts/bs2-run.slurm.sh"
        ],
        "birdscanner2/workflow/scripts/bs2-run.slurm.sh": [
            "workflow/scripts/bs2-run.slurm.sh"
        ]
    },
    "VivekBits2210/fine-tuning-large-language-models-on-limited-hardware": {
        "fine-tuning-large-language-models-on-limited-hardware/shell%20scripts/run_train_job.sh": [
            "./train_v4.py"
        ]
    },
    "saltysoup/llama-recipes-lab": {
        "llama-recipes-lab/single_node.slurm": [
            "examples/finetuning.py"
        ]
    },
    "zuzannad2/PixelSum": {
        "PixelSum/pretrain_no_trainer.sh": [
            "scripts/training/run_pretraining_no_trainer.py"
        ]
    },
    "mkandes/galyleo": {
        "galyleo/galyleo.sh": [
            "galyleo.sh",
            "galyleo"
        ],
        "galyleo/jobspec-cfg/galyleo.sh": [
            "galyleo.sh",
            "galyleo"
        ]
    },
    "accre/SLURM": {
        "SLURM/slurm-commands.sh": [
            "slurm-commands.sh"
        ],
        "SLURM/jobspec-cfg/slurm-commands.sh": [
            "slurm-commands.sh"
        ]
    },
    "tuk76325/AutoencoderFinal": {
        "AutoencoderFinal/jobLeakyrelu.sh": [
            "main.py"
        ],
        "AutoencoderFinal/jobRelu.sh": [
            "main.py"
        ],
        "AutoencoderFinal/jobSigmoid.sh": [
            "main.py"
        ],
        "AutoencoderFinal/job.sh": [
            "main.py"
        ],
        "AutoencoderFinal/jobTanh.sh": [
            "main.py"
        ]
    },
    "ZhiYuanZeng/Collie": {
        "fairseq-moe/jobspec-cfg/generate_multiple.py": [
            "LICENSE"
        ]
    },
    "ZhiYuanZeng/fairseq-moe": {
        "fairseq-moe/eval_scripts/eval_large_on_opus.sh": [
            "generate_multiple.py",
            "./translation_utils/extract_translation.py",
            "./translation_utils/average_bleu.py"
        ]
    },
    "ZhiYuanZeng/git-neox-moe": {
        "fairseq-moe/jobspec-cfg/generate_multiple.py": [
            "LICENSE"
        ]
    },
    "haelai77/IACO-For-Autonomous-Cars": {
        "IACO-For-Autonomous-Cars/run_sim.sh": [
            "./code/main.py"
        ]
    },
    "tyang816/SES-Adapter": {
        "SES-Adapter/script/slurm/train.slurm": [
            "train.py"
        ],
        "SES-Adapter/script/slurm/train_wofs.slurm": [
            "train.py"
        ],
        "SES-Adapter/script/slurm/train_wofsss.slurm": [
            "train.py"
        ],
        "SES-Adapter/script/slurm/train_woss.slurm": [
            "train.py"
        ]
    },
    "santisy/DiT": {
        "DiT/run_l0.sh": [
            "train.py",
            "configs/OFALG_config.yaml"
        ],
        "DiT/run_l2.sh": [
            "train.py",
            "configs/OFALG_config.yaml"
        ]
    },
    "Magdk01/Anubis": {
        "Anubis/shell_scripts/submit_gpu.sh": [
            "scaling_model/train_model.py"
        ]
    },
    "bioinformatics-lab/SPEAQeasy": {
        "SPEAQeasy/run_pipeline_slurm.sh": [
            "main.nf"
        ],
        "SPEAQeasy/jobspec-cfg/main.nf": [
            "main.nf"
        ]
    },
    "jhgille2/rna_seq_pipeline_template": {
        "rna_seq_pipeline_template/job_singularity_lsf.sh": [
            "run.R"
        ],
        "rna_seq_pipeline_template/job_singularity.sh": [
            "run.R"
        ],
        "rqtl_hpc_template/jobspec-cfg/job.sh": [
            "run.R"
        ]
    },
    "jhgille2/rqtl_hpc_template": {
        "rna_seq_pipeline_template/job_singularity_lsf.sh": [
            "job.sh",
            "run.R",
            ".RData"
        ],
        "rna_seq_pipeline_template/job_singularity.sh": [
            "job.sh",
            "run.R",
            ".RData"
        ],
        "rqtl_hpc_template/jobspec-cfg/job.sh": [
            "job.sh",
            "run.R",
            ".RData"
        ]
    },
    "lonce/sonyGanFork": {
        "sonyGanFork/runscripts/C/runtrainTEST2.pb": [
            "train.py"
        ],
        "sonyGanFork/runscripts/C/runtrainTEST.pb": [
            "train.py"
        ],
        "sonyGanFork/runscripts/C/runtrainTEST2_noif.pb": [
            "train.py"
        ],
        "sonyGanFork/runscripts/L/runtrainTEST.pb": [
            "train.py"
        ]
    },
    "olmozavala/ocean_litter": {
        "ocean_litter/generalrun_hpc.sh": [
            "1_WorldLitter.py",
            "2_MergeRuns.py"
        ]
    },
    "pujacomputes/classifier_playground": {
        "classifier_playground/scripts/run_cka_base_lp.sh": [
            "extract_cka.py"
        ]
    },
    "34-Matt/Latex-Math": {
        "Latex-Math/runTrainCNN.sh": [
            "TrainCNN.py"
        ]
    },
    "johntiger1/csc2547-project": {
        "csc2547-project/run_script.sh": [
            "main.py"
        ]
    },
    "bonlime/sota_imagenet": {
        "sota_imagenet/docker/slurm_train_2gpu.slurm": [
            "train.py"
        ],
        "sota_imagenet/docker/slurm_train_1gpu.slurm": [
            "train.py"
        ]
    },
    "Eric-Fowler/TeamPip-PyTorch": {
        "TeamPip-PyTorch/init.sh": [
            "env/bin/activate",
            "requirements.txt",
            "Script.py",
            "launch.sh"
        ],
        "TeamPip-PyTorch/jobspec-cfg/launch.sh": [
            "Script.py",
            "job.slurm"
        ]
    },
    "finnor/goal-uab": {
        "goal-uab/analyze.job": [
            "./goalConsensus.nf"
        ]
    },
    "wuyushuwys/MyTemplate": {
        "MyTemplate/scripts/sb_train.bash": [
            "train.py"
        ]
    },
    "yinxusen/deepword": {
        "deepword/bin/eval-dqn.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ],
        "deepword/bin/run-walkthrough-eval.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ],
        "deepword/bin/train-dqn.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ],
        "deepword/bin/train-sentence-bert.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ],
        "deepword/bin/gen-teacher-data-dev.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ],
        "deepword/bin/eval-zork.sh": [
            "./sbin/run.sh",
            "python/deepword/main.py"
        ]
    },
    "WangZesen/Reproduce-ResNet": {
        "Reproduce-ResNet/script/train/4xA40.sh": [
            "src/train.py"
        ]
    },
    "joex3999/SemanticStyleGAN": {
        "SemanticStyleGAN/slurm_idd.sh": [
            "prepare_image_data.py",
            "prepare_mask_data.py",
            "prepare_inception.py",
            "train.py",
            "calc_fsd.py"
        ]
    },
    "kaimu11111/ICL": {
        "ICL/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "Metaicl/train_jl.sh": [
            "train.py"
        ],
        "Metaicl/jobspec-cfg/train.py": [
            "LICENSE"
        ]
    },
    "kaimu11111/Metaicl": {
        "ICL/jobspec-cfg/train.py": [
            "LICENSE"
        ],
        "Metaicl/train_jl.sh": [
            "train.py"
        ],
        "Metaicl/jobspec-cfg/train.py": [
            "LICENSE"
        ]
    },
    "feyzaakyurek/subspace-reg": {
        "subspace-reg/scripts/continual/slurm_fine_tune.sh": [
            "eval_incremental.py"
        ],
        "subspace-reg/scripts/continual/slurm_linear_mapping.sh": [
            "eval_incremental.py"
        ],
        "subspace-reg/scripts/continual/slurm_run_backbone.sh": [
            "train_supervised.py"
        ],
        "subspace-reg/scripts/continual/slurm_subspace_reg.sh": [
            "eval_incremental.py"
        ]
    },
    "serre-lab/prj_depth": {
        "prj_depth/run_dataloader.sh": [
            "file_management.py",
            "pytorch_dataloader.py"
        ]
    },
    "serre-lab/prj_probcod": {
        "prj_probcod/run_IVAE.sh": [
            "train_vae.py"
        ]
    },
    "rohans0509/Clarinet": {
        "Clarinet/pbs.sh": [
            "test.py"
        ]
    },
    "wpmccormack/sonic-slurm": {
        "sonic-slurm/run_splitServer_JustAK4_PT.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustDT.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustDT_Compress.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustAK4_2.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustDM.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustAK8.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustDT_2.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustDT_TRT.slurm": [
            "run_files_splitServer.py"
        ],
        "sonic-slurm/run_splitServer_JustAK8_2.slurm": [
            "run_files_splitServer.py"
        ]
    },
    "PhillipHoejbjerg/ADLCV-recipe-retrieval": {
        "ADLCV-recipe-retrieval/job100.sh": [
            "src/models/train_model.py"
        ],
        "ADLCV-recipe-retrieval/job.sh": [
            "src/models/train_model.py"
        ],
        "ADLCV-recipe-retrieval/job5.sh": [
            "src/models/train_model.py"
        ]
    },
    "malteprinzler/VisualFashionAttributePrediction": {
        "VisualFashionAttributePrediction/slurm_submit.sh": [
            "train.py"
        ]
    },
    "ArchanaPrasad/PhysicalIQA": {
        "PhysicalIQA/run_saga.sh": [
            "train.py"
        ]
    },
    "gracekrahm/gk_simulation_tools": {
        "gk_simulation_tools/prosp_fits_setup.sh": [
            "parameters_master.py"
        ]
    },
    "dquesadacr/Rep_SDDL": {
        "Rep_SDDL/job_alphacentauri.sh": [
            "sing_run.sh",
            "parse_aux/unet_def.R",
            "parse_aux/aux_funs_train.R"
        ]
    },
    "Krebrov001/geopm": {
        "geopm/integration/smoke/run_smoke_parallel.sh": [
            "integration/experiment/gen_slurm.sh"
        ]
    },
    "pzharrington/DDP_UNet": {
        "DDP_UNet/submit1.slr": [
            "train.py"
        ],
        "DDP_UNet/submit16.slr": [
            "train.py"
        ],
        "DDP_UNet/submit8.slr": [
            "train.py"
        ]
    },
    "byucsl/gnumap": {
        "gnumap/scripts/valgrind.sh": [
            "examples/1.fq"
        ]
    },
    "xingchenxu28/HiJAC": {
        "HiJAC/HiJAC_python/rerunarray.sbatch": [
            "rerun.m"
        ]
    },
    "neurodata/bohb_runs_sporf": {
        "bohb_runs_sporf/misc_code/MASTER_CC18.scr": [
            "bohb_run.py"
        ]
    },
    "ziotom78/pico-calibration": {
        "pico-calibration/calibrate.slurm": [
            "calibrate.slurm"
        ],
        "pico-calibration/jobspec-cfg/calibrate.slurm": [
            "calibrate.slurm"
        ]
    },
    "PMatthaei/ma-league": {
        "ma-league/slurm/slurm-run.sh": [
            "requirements.txt",
            "./requirements.txt",
            "run.py",
            "./run.py"
        ]
    },
    "parisepigenetics/RASflow_EDC": {
        "RASflow_EDC/Unlock.sh": [
            "configs/config_main.yaml",
            "workflow/quality_control.rules"
        ],
        "RASflow_EDC/Workflow.sh": [
            "scripts/parse_yaml.sh",
            "configs/cluster_config.yaml",
            "configs/.config_template.yaml",
            "configs/config_main.yaml",
            "scripts/main_cluster.py"
        ]
    },
    "zly7/language-model-from-scratch": {
        "language-model-from-scratch/train_speed.sh": [
            "acce_config_1GPU.yaml"
        ]
    },
    "mvilucchio/robust_linear_regression": {
        "robust_linear_regression/run2_Huber.sh": [
            "optimal_experiments_Huber_decorrerlated_2.py"
        ],
        "robust_linear_regression/run2_L2.sh": [
            "optimal_experiments_L2_decorrerlated_2.py"
        ]
    },
    "YDU-uva/ProtoDiff": {
        "ProtoDiff/run.sh": [
            "train_1.py",
            "train_5.py"
        ]
    },
    "stefanlclarke/quoridor": {
        "quoridor/train.slurm": [
            "train.py"
        ]
    },
    "mariuscaptari/value-discrepancy-state-counts": {
        "value-discrepancy-state-counts/job_atari_exploration.sh": [
            "job_atari.sh"
        ],
        "value-discrepancy-state-counts/jobspec-cfg/job_atari.sh": [
            "job_atari.sh"
        ]
    },
    "CovertLab/WholeCell": {
        "WholeCell/job.analysis.sh.tmpl": [
            "./run.sh",
            "./compileSummary.pl",
            "./mailSimulationsSummary.pl"
        ],
        "WholeCell/jobspec-cfg/mailSimulationsSummary.pl": [
            "./mailSimulationsSummary.pl"
        ],
        "WholeCell/jobspec-cfg/compileSummary.pl": [
            "./compileSummary.pl"
        ]
    },
    "kaiqiangh/extracting-video-features-ResNeXt": {
        "extracting-video-features-ResNeXt/ext_feat_hmdb51.sh": [
            "ext_feat_hmdb51.sh",
            "main.py",
            "./hmdb51_input_filename.txt",
            "./ucf101_input_filename.txt"
        ],
        "extracting-video-features-ResNeXt/jobspec-cfg/ext_feat_hmdb51.sh": [
            "ext_feat_hmdb51.sh",
            "main.py",
            "./hmdb51_input_filename.txt",
            "./ucf101_input_filename.txt"
        ]
    },
    "Jorgro/road-detector": {
        "road-detector/job.slurm": [
            "./tools/train.py"
        ]
    },
    "ivhak/cardiac-fibers": {
        "cardiac-fibers/slurm/ex3/mi210q/run_mi210q.sbatch": [
            "envsetup-ex3.sh"
        ],
        "cardiac-fibers/slurm/ex3/hgx2q/run_hgx2q.sbatch": [
            "envsetup-ex3.sh"
        ]
    },
    "SanoScience/graphtar": {
        "graphtar/venv_setup_slurm.sh": [
            "requirements.txt"
        ]
    },
    "lbl-camera/batteryNET": {
        "batteryNET/batch_scripts/train_unet2d.sh": [
            "train.py",
            "predict_2d.py"
        ],
        "batteryNET/batch_scripts/predict_unet2d.sh": [
            "predict_2d.py",
            "setup_files/xsection-unet2d.json"
        ]
    },
    "CCRGeneticsBranch/AWS_POC_Snakemake": {
        "AWS_POC_Snakemake/run_SN_MVP.sh": [
            "run"
        ],
        "AWS_MVP_HPC/snakemake/run_SN_MVP.sh": [
            "run"
        ],
        "khanlab_ngs_pipeline/submit_snakemake.sh": [
            "run"
        ],
        "ngs_pipeline.hg38_v1/submit_snakemake.sh": [
            "run"
        ]
    },
    "CCRGeneticsBranch/khanlab_ngs_pipeline": {
        "khanlab_ngs_pipeline/submit_snakemake.sh": [
            "config/config_cluster.json"
        ],
        "ngs_pipeline.hg38_v1/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "CCRGeneticsBranch/ngs_pipeline.hg38_v1": {
        "khanlab_ngs_pipeline/submit_snakemake.sh": [
            "config/config_cluster.json"
        ],
        "ngs_pipeline.hg38_v1/submit_snakemake.sh": [
            "config/config_cluster.json"
        ]
    },
    "VimsLab/Local3DFeatures": {
        "Local3DFeatures/script/main_partseg.sh": [
            "examples/shapenetpart/main.py"
        ]
    },
    "ZjGaothu/EpiGePT": {
        "EpiGePT/runme.sh": [
            "preprocess.py"
        ]
    },
    "s1mhadri/Diabetic-Retinopathy-Detection": {
        "Diabetic-Retinopathy-Detection/drtune.sh": [
            "wandb-tune.py"
        ]
    },
    "alejandrox1/poisson_lammps": {
        "poisson_lammps/stampede_single.sh": [
            "potential.mod",
            "in.elastic"
        ],
        "poisson_lammps/jobspec-cfg/potential.mod": [
            "in.elastic",
            "CH.airebo"
        ],
        "poisson_lammps/jobspec-cfg/in.elastic": [
            "init.mod",
            "potential.mod",
            "displace.mod"
        ]
    },
    "khalillab/coop-TF-chipseq": {
        "coop-TF-chipseq/slurm_submit.sh": [
            "cluster.yaml"
        ]
    },
    "gpauloski/BERT-PyTorch": {
        "BERT-PyTorch/scripts/run_pretraining.cobalt": [
            "run_pretraining.py"
        ]
    },
    "parushgera/lsda": {
        "lsda/hlt.sh": [
            "hlt.py"
        ]
    },
    "talhanai/slurm-check-gpu-usage": {
        "slurm-check-gpu-usage/job.sbatch": [
            "check-gpu-state.py",
            "keras-script.py"
        ]
    },
    "Stability-AI/StableCascade": {
        "StableCascade/train/example_train.sh": [
            "train/train_c_lora.py",
            "configs/training/finetune_c_3b_lora.yaml"
        ]
    },
    "webclinic017/scripts-2": {
        "scripts-2/scratch.slurm": [
            "mqpar.xml",
            "scratch.slurm"
        ],
        "scripts-2/jobspec-cfg/scratch.slurm": [
            "mqpar.xml",
            "scratch.slurm"
        ]
    },
    "xyang35/Disentangled-GAN": {
        "Disentangled-GAN/scripts/disentangled_resnet.sh": [
            "train.py",
            "test.py"
        ],
        "Disentangled-GAN/scripts/disentangled_final.sh": [
            "train.py",
            "test.py"
        ],
        "Disentangled-GAN/scripts/disentangledLB_resnet.sh": [
            "train.py",
            "test.py"
        ],
        "Disentangled-GAN/scripts/recon10_resnet_gan.sh": [
            "train.py",
            "test.py"
        ],
        "Disentangled-GAN/scripts/disentangledLB_filter.sh": [
            "train.py",
            "test.py"
        ],
        "Disentangled-GAN/scripts/recon_resnet_gan.sh": [
            "train.py",
            "test.py"
        ]
    },
    "Jon-Ting/sphractal-methodology-publication": {
        "sphractal-methodology-publication/runCase.sh": [
            "runCase.py"
        ]
    },
    "tonywu71/distilling-and-forgetting-in-large-pre-trained-models": {
        "distilling-and-forgetting-in-large-pre-trained-models/run/tac/finetune_tac/finetune_tac-debug.sh": [
            "scripts/finetune_whisper.py",
            "configs/finetune_tac_configs/debug/finetune_tac-tiny-debug.yaml"
        ],
        "distilling-and-forgetting-in-large-pre-trained-models/run/eval/wer/fad/eval_whisper_on_fad-vanilla.sh": [
            "scripts/eval_whisper.py"
        ],
        "distilling-and-forgetting-in-large-pre-trained-models/run/ewc/finetune_ewc-ami_100h.sh": [
            "scripts/finetune_whisper.py",
            "configs/finetune_ewc_configs/preserve_french/finetune_ewc_tiny-ami_100h-preserve_french-lambda_1e-4-full.yaml",
            "configs/finetune_ewc_configs/combined/finetune_ewc_tiny-ami_100h-combined-full.yaml"
        ],
        "distilling-and-forgetting-in-large-pre-trained-models/run/ewc/save_whisper_ewc_params.sh": [
            "scripts/save_whisper_ewc_params.py"
        ],
        "distilling-and-forgetting-in-large-pre-trained-models/run/utils/cache_dataset/cache_mls.sh": [
            "scripts/cache_datasets/cache_mls.py"
        ]
    },
    "VladShkolnikov/BeH2_dissociation_curve": {
        "BeH2_dissociation_curve/job.sh": [
            "BeH2.py"
        ]
    },
    "ayroles-lab/turkana-stc1": {
        "turkana-stc1/02_slurm-simulate.sh": [
            "02_simulate.smk"
        ]
    },
    "JustOneMoreLine/jacobi-mpi-test": {
        "jacobi-mpi-test/jacobi-np4-512.sh": [
            "np-4-512.out",
            "jacobi-np4-512"
        ]
    },
    "gulp21/languagetool-neural-network": {
        "languagetool-neural-network/job_cbow.bash": [
            "./gradlew"
        ],
        "languagetool-neural-network/job.bash": [
            "./gradlew",
            "src/main/python/nn_words.py"
        ],
        "languagetool-neural-network/job_embedding.bash": [
            "src/main/python/embedding/word2vec.py"
        ],
        "languagetool-neural-network/jobspec-cfg/src/main/python/embedding/word2vec.py": [
            "README.md"
        ]
    },
    "neel04/SUMO": {
        "SUMO/sbatch_files/tfrec_process.sh": [
            "./scripts/Final_converter.py"
        ]
    },
    "HeartArmy/IPN_tensorflow": {
        "IPN_tensorflow/run_train.sh": [
            "train.py"
        ]
    },
    "sydney-machine-learning/MEHH_RCPSP": {
        "MEHH_RCPSP/analysis/gp.q": [
            "params_gp.py"
        ]
    },
    "vmos1/gpu_profiling_pytorch": {
        "gpu_profiling_pytorch/batch_submit.sh": [
            "pytorch_cnn.py"
        ]
    },
    "MrGiovanni/DiffTumor": {
        "DiffTumor/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "DiffTumor/jobspec-cfg/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/direct_inference/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/target_applications/totalsegmentator/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_singlegpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.0_multigpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_multigpu.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/hg_kidney_eval_5_folds.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/jobspec-cfg/hg.sh": [
            "requirements.txt"
        ],
        "Eureka/SuPreM/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ]
    },
    "MrGiovanni/SuPreM": {
        "DiffTumor/hg.sh": [
            "requirements.txt"
        ],
        "DiffTumor/jobspec-cfg/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/direct_inference/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/target_applications/totalsegmentator/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_singlegpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.0_multigpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_multigpu.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/hg_kidney_eval_5_folds.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/jobspec-cfg/hg.sh": [
            "requirements.txt"
        ],
        "Eureka/SuPreM/hg.sh": [
            "requirements.txt"
        ]
    },
    "MrGiovanni/Pixel2Cancer": {
        "DiffTumor/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "DiffTumor/jobspec-cfg/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/direct_inference/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/target_applications/totalsegmentator/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_singlegpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.0_multigpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_multigpu.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/hg_kidney_eval_5_folds.sh": [
            "requirements.txt",
            "validation.py",
            "datafolds/5_fold/kidney/kidney_tumor_0.json",
            "datafolds/5_fold/kidney/kidney_tumor_1.json",
            "datafolds/5_fold/kidney/kidney_tumor_2.json",
            "datafolds/5_fold/kidney/kidney_tumor_3.json",
            "datafolds/5_fold/kidney/kidney_tumor_4.json"
        ],
        "Pixel2Cancer/jobspec-cfg/hg.sh": [
            "requirements.txt",
            "main.py",
            "datafolds/mix_liver.json",
            "validation.py",
            "datafolds/mix_pancreas.json",
            "datafolds/mix_kidney.json",
            "datafolds/healthy_kidney.json",
            "datafolds/real_kidney.json",
            "datafolds/healthy_pancreas.json",
            "datafolds/real_pancreas.json",
            "datafolds/healthy.json",
            "datafolds/lits.json"
        ],
        "Eureka/SuPreM/hg.sh": [
            "requirements.txt",
            "hg.sh"
        ]
    },
    "MrGiovanni/GenesisLung": {
        "DiffTumor/hg.sh": [
            "requirements.txt"
        ],
        "DiffTumor/jobspec-cfg/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/direct_inference/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/target_applications/totalsegmentator/hg.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_singlegpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.0_multigpu.sh": [
            "requirements.txt"
        ],
        "SuPreM/supervised_pretraining/shell_scripts/train_abdomenatlas1.1_multigpu.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/hg_kidney_eval_5_folds.sh": [
            "requirements.txt"
        ],
        "Pixel2Cancer/jobspec-cfg/hg.sh": [
            "requirements.txt"
        ],
        "Eureka/SuPreM/hg.sh": [
            "requirements.txt"
        ]
    },
    "FelixMoeller3/calms": {
        "calms/bin/train_ActiveThief.sh": [
            "./src/main.py"
        ]
    },
    "rioyokotalab/Megatron-Llama2": {
        "Megatron-Llama2/jobspec-cfg/scripts/abci/change_tp_pp.sh": [
            "tools/checkpoint/util.py"
        ],
        "Megatron-Llama2/scripts/ylab/change_tp_pp.sh": [
            "tools/checkpoint/util.py"
        ],
        "Megatron-Llama2/scripts/ylab/megatron_to_hf/convert-70b.sh": [
            "scripts/abci/change_tp_pp.sh",
            "scripts/abci/megatron_to_hf/llama_checkpoint_conversion.py"
        ]
    },
    "aalto-speech/BizSpeech_SpeechBrain": {
        "BizSpeech_SpeechBrain/triton_train_ddp.sh": [
            "tokenizer_train.py",
            "hparams/tokenizer.yaml",
            "train.py",
            "hparams/train_ddp.yaml"
        ],
        "BizSpeech_SpeechBrain/triton_train_ddp_gpu.sh": [
            "tokenizer_train.py",
            "hparams/tokenizer.yaml",
            "train.py",
            "hparams/train_ddp.yaml"
        ]
    },
    "guochengqian/Magic123": {
        "Magic123/scripts/magic123/run_both_priors.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_both_priors_noreg.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_2dprior_notextinv_ironman.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_2dprior.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_2dprior_noinv.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_both_priors_noinv.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_both_priors_camera.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_both_priors_angle60.sh": [
            "main.py"
        ],
        "Magic123/scripts/magic123/run_3dprior.sh": [
            "main.py"
        ]
    },
    "guochengqian/PointNeXt": {
        "PointNeXt/jobspec-cfg/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ],
        "PointNeXt/script/main_segmentation.sh": [
            "examples/segmentation/main.py",
            "script/main_segmentation.sh",
            "cfgs/s3dis/pointnext-s.yaml"
        ]
    },
    "cryotools/cosipy": {
        "cosipy/utilities/hpc/sbatch_FAU_Erlangen.bat": [
            "COSIPY.py"
        ]
    },
    "TheNoyesLab/WGS_SNP_pipelines": {
        "WGS_SNP_pipelines/launch_pbs.sh": [
            "main_combined_pipeline.nf"
        ],
        "WGS_SNP_pipelines/example_launch_SLURM.sh": [
            "main_combined_pipeline.nf"
        ]
    },
    "Samreay/neural-style-tf": {
        "neural-style-tf/slurm.job": [
            "neural_style.py"
        ]
    },
    "RunOnFlux/fluxnode-multitool": {
        "fluxnode-multitool/install_pro.sh": [
            "post-merge"
        ],
        "fluxnode-multitool/multitoolbox_testnet.sh": [
            "post-merge"
        ]
    },
    "zitkat/understanding-neurons": {
        "understanding-neurons/sing_render_timm_model.sh": [
            "render_timm_model.py"
        ]
    },
    "babessell1/strling-generic": {
        "strling-generic/run_realign.sh": [
            "realign.smk"
        ],
        "STRipe/run_hifi.bash": [
            "Snakefile"
        ]
    },
    "babessell1/STRipe": {
        "STRipe/download.bash": [
            "download.smk"
        ]
    },
    "r-kellerm/Motionformer": {
        "Motionformer/slurm_scripts/run_single_node_job.sh": [
            "tools/run_net.py"
        ]
    },
    "biospi/PredictionOfHelminthsInfection": {
        "PredictionOfHelminthsInfection/jobs/launch_imputation.sh": [
            "gain_imputation_test.py"
        ]
    },
    "HanGuo97/wikipedia_parser": {
        "wikipedia_parser/submission.sl": [
            "requirements.txt",
            "sentiAnalysis.py"
        ]
    },
    "DSincerity/CSCI-662-project": {
        "CSCI-662-project/slurm/finetune.sbatch": [
            "train.py"
        ],
        "CSCI-662-project/slurm/infer.emp_dialog_t5.sbatch": [
            "infer.py"
        ],
        "CSCI-662-project/slurm/infer.sbatch": [
            "infer.py"
        ],
        "CSCI-662-project/slurm/finetune.emp.dialog.t5.sbatch": [
            "train.py"
        ]
    },
    "abodinier/Music-Source-Separation": {
        "Music-Source-Separation/slurm.sh": [
            "train.py",
            "cfg.yaml"
        ]
    },
    "nyuxz/ds1012_final_project": {
        "ds1012_final_project/run_drqa.sh": [
            "src/main.py"
        ]
    },
    "JackLangerman/simpleprince": {
        "simpleprince/setup.sbatch": [
            "environment.yml"
        ]
    },
    "eloimoliner/audio-inpainting-diffusion": {
        "audio-inpainting-diffusion/testing.sh": [
            "test.py"
        ],
        "audio-inpainting-diffusion/testing_shortgaps.sh": [
            "test.py"
        ],
        "audio-inpainting-diffusion/training.sh": [
            "train.py"
        ],
        "BABE/testing_blindbwe.sh": [
            "test.py"
        ],
        "BABE/training.sh": [
            "train.py"
        ],
        "unconditional-diff-STFT/training.sh": [
            "train.py"
        ]
    },
    "eloimoliner/BABE": {
        "audio-inpainting-diffusion/testing.sh": [
            "test.py"
        ],
        "audio-inpainting-diffusion/testing_shortgaps.sh": [
            "test.py"
        ],
        "audio-inpainting-diffusion/training.sh": [
            "train.py"
        ],
        "BABE/testing_blindbwe.sh": [
            "test.py"
        ],
        "BABE/training.sh": [
            "train.py"
        ],
        "unconditional-diff-STFT/training.sh": [
            "train.py"
        ]
    },
    "eloimoliner/unconditional-diff-STFT": {
        "audio-inpainting-diffusion/training.sh": [
            "train.py"
        ],
        "BABE/training.sh": [
            "train.py"
        ],
        "unconditional-diff-STFT/training.sh": [
            "train.py"
        ],
        "CQTdiff/scripts/sampling_inpainting.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_STFTdiff.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_CQTdiff.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_noisy.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_hpf.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_resample.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_biquad.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_comp_sens.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_decimation.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_declip.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_cheby1.sh": [
            "sample.py"
        ]
    },
    "eloimoliner/CQTdiff": {
        "audio-inpainting-diffusion/training.sh": [
            "train.py"
        ],
        "BABE/training.sh": [
            "train.py"
        ],
        "unconditional-diff-STFT/training.sh": [
            "train.py"
        ],
        "CQTdiff/scripts/sampling_inpainting.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_STFTdiff.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_CQTdiff.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_firwin_noisy.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_hpf.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_resample.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_biquad.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_comp_sens.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_decimation.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_declip.sh": [
            "sample.py"
        ],
        "CQTdiff/scripts/sampling_bwe_cheby1.sh": [
            "sample.py"
        ]
    },
    "eloimoliner/bwe_historical_recordings": {
        "bwe_historical_recordings/train_denoiser.sh": [
            "train_denoiser.py"
        ],
        "bwe_historical_recordings/train_bwe.sh": [
            "train_bwe.py"
        ]
    },
    "growupboron/ObjectDescriptionSupermarket-CVCS-UniMoRe": {
        "ObjectDescriptionSupermarket-CVCS-UniMoRe/frcnn.slurm": [
            "get_last_epoch.py",
            "train.py",
            "config.yaml",
            "evaluate.py",
            "./config.yaml"
        ],
        "ObjectDescriptionSupermarket-CVCS-UniMoRe/jobspec-cfg/get_last_epoch.py": [
            "get_last_epoch.py"
        ]
    },
    "bernardoct/WaterPaths": {
        "WaterPaths/single_run_input_file.sh": [
            "Tests/test_input_file.wp",
            "Tests/test_input_file_dv_file.wp"
        ],
        "WaterPaths/optimization_wp_paper_input_file.sh": [
            "Tests/test_input_file_borg.wp"
        ]
    },
    "bernardoct/SharedDistributedParallelizationExamples": {
        "SharedDistributedParallelizationExamples/hybrid_python.sh": [
            "./output/hybrid_python.out",
            "./error/hybrid_python.err",
            "hybrid_pure_python.py"
        ],
        "SharedDistributedParallelizationExamples/jobspec-cfg/error/hybrid_python.err": [
            "hybrid_pure_python.py"
        ]
    },
    "charliezchen/fml-final-project": {
        "fml-final-project/gpu-job.sbatch": [
            "train_trades_cifar10.py"
        ]
    },
    "charliezchen/SA-PEDS": {
        "SA-PEDS/experiment.bash": [
            "optimize_peds.py"
        ]
    },
    "wstchhwp/Transformer-YOLOX": {
        "Transformer-YOLOX/jobs/job.sh": [
            "train.py"
        ]
    },
    "madeline-scyphers/palm_wrapper": {
        "palm_wrapper/palm_slurm.sh": [
            "run_model.jl",
            "fetch_finished_trial.jl"
        ],
        "palm_wrapper/jobspec-cfg/run_model.jl": [
            "user_module.f90",
            "topo",
            "palm_slurm.sh"
        ]
    },
    "Ulbert/MLLU_Social-Bias": {
        "MLLU_Social-Bias/glue.slurm": [
            "src/run_glue.py"
        ]
    },
    "neicnordic/GRSworkflow": {
        "GRSworkflow/jobspec-cfg/scripts/start-bash-pipeline.sh": [
            "scripts/RunBashPipeline.sh"
        ],
        "GRSworkflow/scripts/RunComputeromeBatchPipeline.sh": [
            "./scripts/start-bash-pipeline.sh"
        ]
    },
    "yair-schiff/Mask-Predict-Continuous": {
        "Mask-Predict-Continuous/train.sh": [
            "train.py"
        ],
        "Mask-Predict-Continuous/jobspec-cfg/train.py": [
            "LICENSE"
        ]
    },
    "aspuru-guzik-group/SCILLA": {
        "SCILLA/run_coupler.sh": [
            "circuit_searcher.py"
        ]
    },
    "ncucuk/ITMO_with_fast_SRGAN": {
        "ITMO_with_fast_SRGAN/eval.slurm": [
            "main.py"
        ]
    },
    "crvineeth97/scientific-article-tweet-generator": {
        "scientific-article-tweet-generator/script.sh": [
            "make_datafiles.py",
            "pointer-generator/run_summarization.py"
        ],
        "scientific-article-tweet-generator/jobspec-cfg/make_datafiles.py": [
            "make_datafiles.py"
        ]
    },
    "nur-ag/emotion-classification": {
        "emotion-classification/bin/runWithLimit.sh": [
            "requirements.txt",
            "./bin/runExperiment.sh"
        ],
        "emotion-classification/bin/runWithLimitGPU.sh": [
            "requirements.txt",
            "./bin/runExperiment.sh"
        ],
        "emotion-classification/jobspec-cfg/bin/runExperiment.sh": [
            "src/run.py"
        ]
    },
    "AWGL/TSO500_post_processing": {
        "TSO500_post_processing/TSO500_DNA_nextflow.sh": [
            "TSO500_DNA_nextflow.sh"
        ],
        "TSO500_post_processing/1_TSO500.sh": [
            "1_TSO500.sh",
            "2_TSO500.sh"
        ],
        "TSO500_post_processing/jobspec-cfg/2_TSO500.sh": [
            "2_TSO500.sh",
            "3_TSO500.sh"
        ],
        "TSO500_post_processing/jobspec-cfg/TSO500_DNA_nextflow.sh": [
            "TSO500_DNA_nextflow.sh"
        ],
        "TSO500_post_processing/jobspec-cfg/1_TSO500.sh": [
            "1_TSO500.sh",
            "2_TSO500.sh"
        ]
    }
}