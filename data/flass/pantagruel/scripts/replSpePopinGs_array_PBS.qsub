#!/bin/bash
#PBS -S /bin/bash
#PBS -N replSpePopinGs

# load potential modules
if [ ! -z "${modulefile}" ] ; then
  source ${modulefile}
fi

echo "This is job $PBS_JOBNAME, job_ID $PBS_JOBID (array_task_ID $PBS_ARRAY_INDEX) on host $HOSTNAME, running $PBS_NUM_PPN processes on these workers:"
cat $PBS_NODEFILE
echo ""

# all environment variables should have been passed on by  qsub -V
# verify for the most important
if [ -z "${tasklist}" ] ; then
  echo "Error: mandatory variable \${tasklist} not provied, exit now"
  exit 1
fi
if [ -z "${dtag}" ] ; then
  echo "Error: mandatory variable \${dtag} not provied, exit now"
  exit 1
fi
if [ ! -d "${colalinexuscodedir}/${collapsecond}" ] ; then
  echo "Error: input folder '${colalinexuscodedir}/${collapsecond}' does not exist, exit now"
  exit 1
fi
if [ ! -d "${coltreechains}/${collapsecond}" ] ; then
  echo "Error: output folder '${coltreechains}/${collapsecond}' does not exist, exit now"
  exit 1
fi
if [ ! -s "${speciestree}.lsd.nwk" ] ; then
  echo "Error: input ultrametric species tree file '${speciestree}.lsd.nwk' does not exist or is empty, exit now"
  exit 1
fi
if [ ! -s "${speciestree%.*}_populations" ] ; then
  echo "Error: input species population file '${speciestree%.*}_populations' does not exist or is empty, exit now"
  exit 1
fi

if [ ! -z "$ncpus" ] ; then
  ncpus=1
fi


taskchunklist=`awk "NR==$PBS_ARRAY_INDEX" ${tasklist}_${dtag}_taskchunks`
if [ -z "${taskchunklist}" ] ; then
  # to cover the case when not running as an array job
  taskchunklist=${tasklist}
  replrun="${dtag}"
else
  jobrange=$(echo $taskchunklist | awk -F'_' '{print $NF}')
  replrun="${dtag}_${jobrange}"
fi

if [ ! -z "${verbosereplSpePopinGs}" ] ; then
  verbosemode="--verbose=${verbosereplSpePopinGs}"
else
  verbosemode=""
fi

[ -x "${TMPDIR}" ] && cd ${TMPDIR} || cd /tmp/
echo "current directory is ${PWD}"

source ${ptgscripts}/load_python2.7_env.sh

if [[ "${chaintype}" == 'fullgenetree' ]] ; then
  #### OPTION A2: 
  ## no need to replace anything in the tree, just convert format from Nexus to Newick tree chains
  python2.7 ${ptgscripts}/replace_species_by_pop_in_gene_trees.py -G ${taskchunklist} --no_replace \
  -o ${coltreechains}/${collapsecond} --threads=${ncpus} --reuse=0 --max.recursion.limit=12000 \
  --logfile=${repllogs}_${replrun}.log ${verbosemode}

elif [[ "${chaintype}" == 'collapsed' ]] ; then
  #### OPTION B2: collapsed rake clades in gene trees need to be replaced by mock population leaves
  #### will edit collapsed gene trees to attribute an (ancestral) species identity to the leafs 
  #### representing collapsed clades = pre-reconciliation of recent gene history.
  #### In addition, will produce the corresponding (potentially collapsed) species tree based on the 'time'-tree backbone

  python2.7 ${ptgscripts}/replace_species_by_pop_in_gene_trees.py -G ${taskchunklist} -c ${colalinexuscodedir}/${collapsecond} \
  --dir_full_gene_trees=${mlgenetrees}/rootedTree --method=${replmethod} -S ${speciestree}.lsd.nwk --populations=${speciestree%.*}_populations \
  --population_tree=${speciestree%.*}_collapsedPopulations.nwk --population_node_distance=${speciestree%.*}_interNodeDistPopulations \
  -o ${coltreechains}/${collapsecond} --threads=${ncpus} --reuse=0 --max.recursion.limit=12000 \
  --logfile=${repllogs}_${replrun}.log ${verbosemode}
  
else
  echo "Error: incorrect value for environment variable \$chaintype=$chaintype ; exit now"
  exit 1
fi
