#!/bin/bash
### Job Name
#PBS -N Anom_Pred_flux_ESA
### Project code
#PBS -A UMEL0001
#PBS -l walltime=12:00:00
#PBS -q economy
### Merge output and error files
#PBS -j oe
### Write stdout and stderr on runtime
#PBS -k oe
### Select 1 node with 36 CPUs
#PBS -l select=1:ncpus=36:mem=109GB
### Send email on abort, begin and end
#PBS -m abe
### Specify mail recipient
#PBS -M beomjop@andrew.cmu.edu

##$ Load Matlab
module load matlab/R2020a

### Use bash
export SHELL=/bin/bash

### Run the executable
echo "iterEM: ${iter}"
echo "Month: ${mon}"
echo "Type: ${type}"

matCMD="Params_LatFlux_Step2, "

#matCMD+="isAdjusted = false"
matCMD+="isAdjusted = true, nAdjust = 1, "

matCMD+="isDeriv = false, "
matCMD+="fluxType = 'heat', "
matCMD+="typeTag = '${type}', "
matCMD+="typeTag = ['ESA', typeTag], "
matCMD+="isAbsolute = false, "
matCMD+="eqBorder = 2, "

matCMD+="month = ${mon}, "
matCMD+="iterEM = ${iter}, "
matCMD+="isResetRes = false, "

if [ ${mon} = 1:12 ]
then
    echo "FullMonth!"
    matCMD+="isFullMonth = true, "
fi
#intStartList = [10, 15, 20, 30, 50, 75, 100, 125, 150, 200, 250, 300, 400, 500, 600, 700, 800] % Full upper ocean
matCMD+="intStartList = [ 10], "
matCMD+="computeAnomalies_wrapper, "
matCMD+="exit"
echo "${matCMD}"

matlab -nodisplay -r "${matCMD}"
# Lat Flux
#matlab -nodisplay -r "Params_LatFlux_Step1, isAdjusted = false, computeAnomalies_wrapper, exit"

# qsub -v iter=3,mon=11 anomPred_latDyn.pbs