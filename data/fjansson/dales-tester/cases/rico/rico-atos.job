#!/bin/bash
#SBATCH --qos=nf     # nf fractional queue  np parallel queue    np for > 1/2 node
#SBATCH -t 24:00:00
#SBATCH -n 24        #total number of tasks, number of nodes calculated automatically 
#SBATCH -A spnlsieb
#SBATCH --mem-per-cpu=1G

# Other useful SBATCH options
# #SBATCH -N 2  #number of nodes 
# #SBATCH --ntasks-per-node=16

# submit as array job  sbatch --array=1-5 --export=TAG=4.3-rc.1 rico-atos.job
# $SLURM_ARRAY_TASK_ID gives ID, which is used as random seed.
ID=$SLURM_ARRAY_TASK_ID
    

#TAG=4.3-rc.1
#TAG=4.2.1
#TAG=4.1

if [ -z "$TAG" ] 
then
      echo "Set variable $TAG to the DALES version to run."
      exit
fi

SYST=gnu-fast

NAMOPTIONS=namoptions-144.001

module load prgenv/gnu
module load gcc/11.2.0
module load openmpi
module load cmake/3.20.2
module load netcdf4/4.7.4
module load fftw/3.3.9


DALES=`pwd`/../../build-$TAG-$SYST/src/dales4*

CASE=`pwd`
WORK=$SCRATCH/dales-tester/rico-$TAG-$SYST/$ID

# map ID > 100 to negative numbers for RNG testing
# done *after assigning $WORK to avoid -1 as directory name which is very annoying
if [ $ID -ge 100 ]; then
    ID=$(( 100-ID ))
fi


mkdir -p $WORK
cd $WORK
cp $CASE/{lscale.inp.001,$NAMOPTIONS,prof.inp.001,scalar.inp.001} ./

# edit random seed in namoptions
sed -i -r "s/irandom.*=.*/irandom = $ID/" $NAMOPTIONS

echo ID $ID
echo SYST $SYST
echo DALES $DALES
echo CASE $CASE
echo WORK $WORK
echo hostname `hostname`

# /usr/bin/time -f"%e" 
srun $DALES $NAMOPTIONS | tee output.txt

