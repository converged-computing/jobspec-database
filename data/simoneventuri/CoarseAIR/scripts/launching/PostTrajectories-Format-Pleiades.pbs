#!/bin/bash
#PBS -q 
#PBS -l select=
#PBS -N PostTraj_
#PBS -l walltime=
#PBS -o PostTraj_


# ---  PARAMETERS ------------------------------------------------------------------------------- #
NNode=1
ParNodes=1
###################################################################################################  <<<--- WRITE HERE !!!!
NProc=
SlncFlg=
MergeAllFlg=
RmTrajFlg=
BinaryTrajFlg=
###################################################################################################  <<<--- WRITE HERE !!!!
#-------------------------------------------------------------------------------------------------#


# ---  MODULES ---------------------------------------------------------------------------------- #
source ~/.bash_profile
COARSEAIR_UPDATE
COARSEAIR_release
#-------------------------------------------------------------------------------------------------#


# ---  PATHS ------------------------------------------------------------------------------------ #
export RUN_DIR=$PBS_O_WORKDIR
export COARSEAIR_WORKING_DIR=${RUN_DIR}
export COARSEAIR_INPUT_DIR=${RUN_DIR}/input
export COARSEAIR_INPUT_FILE=${RUN_DIR}/input/CoarseAIR.inp
export COARSEAIR_OUTPUT_DIR=${RUN_DIR}/Test
export COARSEAIR_BIN_OUTPUT_DIR=${RUN_DIR}/Test
#-------------------------------------------------------------------------------------------------#


###################################### DEFINING FUNCTIONS #########################################
function SetData() {
  mkdir -p ${COARSEAIR_OUTPUT_DIR}
  mkdir -p ${COARSEAIR_OUTPUT_DIR}/"../output"
  [[ -z "${COARSEAIR_BUILD_CONFIG}" ]] && echo "The CoarseAIR modulefile has not been loaded => Stopping" && exit 1
  
  if [ "${SlncFlg}" == "1" ]; then
    SlncStr=' &>/dev/null'
  else
    SlncStr=' '
  fi
  
  COARSEAIR_SH_DIR=${COARSEAIR_SOURCE_DIR}"/scripts/executing"
}


function PrintParameters() {
  echo ' '
  echo '------------------------------------------------------------------------------------------'
  echo ' CoarseAIR: Coarse-Grained Quasi-Classical Trajectories '
  echo '------------------------------------------------------------------------------------------'
  echo ' ' 
  echo ' Nb of Nodes         = ' $NNode 
  echo ' Nb of Processors    = ' $NProc 
  echo ' ' 
  echo '-----------------------' 
  echo ' Loading CoarseAIR modulefile' 
  echo '-----------------------' 
  echo '  COARSEAIR_LIBRARY_NAME   = ' ${COARSEAIR_LIBRARY_NAME} 
  echo '  COARSEAIR_VERSION        = ' ${COARSEAIR_VERSION} 
  echo '  COARSEAIR_BUILD_CONFIG   = ' ${COARSEAIR_BUILD_CONFIG} 
  echo '  COARSEAIR_SOURCE_DIR     = ' ${COARSEAIR_SOURCE_DIR} 
  echo '  COARSEAIR_BUILD_DIR      = ' ${COARSEAIR_BUILD_DIR} 
  echo '  COARSEAIR_INSTALL_DIR    = ' ${COARSEAIR_INSTALL_DIR} 
  echo '  COARSEAIR_EXECUTABLE_DIR = ' ${COARSEAIR_EXECUTABLE_DIR} 
  echo '  COARSEAIR_CMAKE_DIR      = ' ${COARSEAIR_CMAKE_DIR} 
  echo '  COARSEAIR_LIBRARY_DIR    = ' ${COARSEAIR_LIBRARY_DIR} 
  echo '  COARSEAIR_MODULES_DIR    = ' ${COARSEAIR_MODULES_DIR} 
  echo '  COARSEAIR_DTB_DIR        = ' ${COARSEAIR_DTB_DIR} 
  echo '-----------------------' 
  echo ' ' 
  echo '-----------------------' 
  echo ' Paths:' 
  echo '-----------------------' 
  echo ' Working directory         = ' ${COARSEAIR_WORKING_DIR} 
  echo ' Input directory           = ' ${COARSEAIR_INPUT_DIR} 
  echo ' CoarseAIR Input file      = ' ${COARSEAIR_INPUT_FILE} 
  echo ' CoarseAIR .sh directory   = ' ${COARSEAIR_SH_DIR} 
  echo ' Output directory          = ' ${COARSEAIR_OUTPUT_DIR} 
  echo '-----------------------' 
} 
 
 
function LoadReadBashInput() { 
  source ${COARSEAIR_SH_DIR}/ReadBashInput.sh 
  ReadBashInput 
} 
 
 
function LoadComputeRates() { 
  source ${COARSEAIR_SH_DIR}/ComputeRates.sh 
  PostTrajectoriesAtNode 
} 
 
 
################################################################################################### 
################################################################################################### 
 
 
#################################### RUNNING CoarseAIR CODE ############################################# 
startTot=`date +%s` 
 
SetData 
echo " " 
 

PrintParameters 
echo " " 
 
 
echo "[CoarseAIR]: Calling LoadReadBashInput" 
LoadReadBashInput 
echo " " 
    
 
#=============================================================================================# 
if [ ${Mthd1} == "State-Specific" ] || [ ${Mthd1} == "Vib-Specific" ] ; then 
  typeset -i NLevels1=$(cat "${COARSEAIR_OUTPUT_DIR}/${System}/${Molecule1}/NLevels.inp") 
  echo "[CoarseAIR]: Found "${NLevels1}" Levels for Molecule 1" 
  if [ ${VarB1} -le 0 ]; then 
    MaxLevel1=${NLevels1} 
    echo "[CoarseAIR]: Max Levels for Molecule 1 set to "${MaxLevel1} 
  fi 
fi 
if [ ${NMolecules} -gt 1 ]; then 
  if [ ${Mthd2} == "State-Specific" ] || [ ${Mthd2} == "Vib-Specific" ] ; then 
    typeset -i NLevels2=$(cat ${COARSEAIR_OUTPUT_DIR}/${System}/${Molecule2}/'NLevels.inp') 
    echo "[CoarseAIR]: Found "${NLevels2}" Levels for Molecule 2" 
    if [ ${VarB2} -le 0 ]; then 
      MaxLevel2=${NLevels2} 
      echo "[CoarseAIR]: Max Levels for Molecule 2 set to "${MaxLevel2} 
    fi 
  fi 
fi 
echo " " 
#=============================================================================================# 
 
 
###################################################################################################  <<<--- WRITE HERE !!!! 
MinProcessInNode=
MaxProcessInNode=
Tran=
Tint=
iNode=
###################################################################################################  <<<--- WRITE HERE !!!! 
echo "[CoarseAIR]: MinProcessInNode = "${MinProcessInNode} 
echo "[CoarseAIR]: MaxProcessInNode = "${MaxProcessInNode} 
echo "[CoarseAIR]: Tran             = "${Tran} 
echo "[CoarseAIR]: Tint             = "${Tint} 
echo "[CoarseAIR]: iNode            = "${iNode} 
echo " " 

 
# --- Computing Rates ----------------------------------------------------------------------- # 
if [ ${RunTrajFlg} -eq 1 ] || [ ${PostFlg} -eq 1 ]; then 
  echo "[CoarseAIR]: Calling LoadComputeRates" 
  LoadComputeRates 
  echo " " 
fi 
#=============================================================================================# 
 
 
endTot=`date +%s` 
Totruntime=$((endTot-startTot))
echo "[CoarseAIR]: Done with CoarseAIR. Total RunTime = "${Totruntime}"s" 
echo " " 
################################################################################################### 
################################################################################################### 
 
exit 0