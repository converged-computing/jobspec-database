# Config file for train_and_test.py for Imagenette.
# =========================================================================== #
#                                   Meta Params                               #
# =========================================================================== #
meta:
  exp_id: 251               # Set experiment identifier
  seed: 2020              # Main random seed
  model_name: null        # If set to null, model name is auto-generated
  save_path: '~/rand-smooth/save/'    # Path to save directory (must be absolute)
  data_path: '~/data/imagenette2-320/'           # Path to dataset
  # load_pickle: True     # Uncomment to load test data from pickle file via data_path
  network: 'resnet34'     # Options: 'resnet18', 'resnet34', 'resnet50'
  # load_epoch: 100       # Load weights from a specific epoch if exists
  pretrained: True        # Whether to load the pretrain weight
  dataset: 'imagenette'   # Dataset to use
  classes: null           # Set to classes to sub-sample from
  augment: False           # Whether to augment training data
  normalize: null
  shuffle: True           # Should always be True for consistency
  val_size: 0.1           # Validation set split
  method: 'pgd-rand'          # Options: 'none', 'rand', 'pgd', 'fgsm', 'rand-pgd'
  test:   # Testing params
    batch_size: 160
    num_samples: 160
    save_output: True
    save_name: 'adv'
    save_adv: True           # Save generated adversarial examples
    save_adv_out: True      # Save logits output for adversarial examples
    save_clean_out: True    # Save logits output for clean samples
    clean_only: False        # Evaluate model on clean data only
    adv_only: True
    num_conf_repeats: 10
  train:  # Training params
    batch_size: 128   # Ignored during test
  valid:  # Validation params
    batch_size: 100   # Ignored during test
  num_workers: 16
  console_out: True

# =========================================================================== #
#                                  Attack Params                              #
# =========================================================================== #
attack:
  method: 'opt'   # 'pgd', 'opt', 'auto'
  # method: ['pgd1', 'pgd2', 'pgd3']
  # method: ['opt1', 'opt2', 'opt3']
  # method: ['pgd4']
  p: 'inf'
  # save_grad: True

# Parameters for pgd attack
pgd:
  random_start: True
  loss_func: 'ce'   # 'ce', 'logits'
  gap: 1.0e+9    # Gap parameter of hinge loss
  targeted: False
  clip: [0., 1.]    # clipping values on the perturbed sample (use null for no clipping)
  # init_mode: 1
  num_restarts: 1
  epsilon: 0.06274509803
  num_steps: 1000
  step_size: 0.005
  # step_size: 0.01568
  # step_size: 0.07843137
  # maximin: 10
  # momentum:
  #   mu: 0.9
  #   normalize: True
    # decay: 'linear'
  #   vr: 'basic'
  # sgm_gamma: 0.5
  # linbp_layer: [4, 1]
  report_steps: [100, 200, 500, 800]
  # report_steps: [100, 200, 300, 400, 500, 600, 700, 800, 900]
  # report_steps: [100, 200, 500, 800, 1000, 1600, 2000, 3000]

# Parameters for Opt attack
opt:
  optimizer: 'aggmo'    # 'sgd', 'adam', 'rmsprop', 'adamax', 'radam'
  random_start: True
  loss_func: 'linear'
  gap: 1.0e+9
  # targeted: True
  clip: [0., 1.]
  num_steps: 1000
  # epsilon: 0.04705882352
  epsilon: 0.06274509803
  # epsilon: 0.07843137254
  # epsilon: 0.09411764705
  # epsilon: 0.10980392156
  step_size: 0.005
  # step_size: 0.05
  # step_size: 0.0156862745
  # step_size: 0.0196078431372549   # 5/255
  # step_size: 0.02091503267    # 16/3/255
  # step_size: 0.023529411764705882   # 6/255
  # step_size: 0.03137254901
  # step_size: 0.04705882352  # 12/255 
  # step_size: 0.05490196078
  # step_size: 0.06274509803
  # step_size: 0.07843137254
  # step_size: 0.09411764705  # 24/255
  # step_size: 0.10980392156
  # step_size: 0.12549019607
  # epsilon: 8
  # step_size: 0.05
  # lr_schedule: 'exp'    # 'cyclic', null
  var_change: False
  normalize: False
  # maximin: 10
  aggmo: 
    k: 3
    rand_k: False
  momentum: 
    mu: 0.9999
    # damp: 0.1
    # nesterov: True
  # sgm_gamma: 0.5
  # linbp_layer: [4, 1]
  # report_steps: [100, 200, 500, 800, 1000, 1600, 2000]
  report_steps: [100, 200, 500, 800]
  # report_steps: [100, 200, 500]
  # average: True

gro:
  optimizer: 'accsgd'    # 'sgd', 'adan', 'rmsprop', 'adamax', 'radam'
  random_start: True
  loss_func: 'linear'
  gap: 1.0e+9
  # targeted: True
  clip: [0., 1.]
  epsilon: 0.06274509803
  num_steps: 200
  step_size: 0.005
  var_change: False
  normalize: True
  sgm_gamma: 0.5

# Parameters for auto-attack
auto:
  epsilon: 0.06274509803
  version: 'standard'
  # version: 'rand'

# =========================================================================== #
#                             Random Transform Params                         #
# =========================================================================== #
rand:
  test:
    rule: 'mean_probs'
    num_draws: 20
    # rule: 'none'
    # num_draws: 1
    tf_order: 'random'
    # tf_order: 'fixed'
    # fix_seed: True
    # fix_order_only: True
  attack:
    # rule: 'mean_probs'
    # tf_order: 'random'
    rule: 'mean_logits'
    tf_order: 'fixed'
    num_draws: 10
    # rule: 'none'
    # num_draws: 1
    # fix_seed: True
    # fix_order_only: True
  diversity:
    rule: 'none'
    num_draws: 20
  clip: [0., 1.]
  # set_all_p: 1.
  subset_size: 13
  # same_on_batch: True
  use_saved_transforms: True
  # transforms: ['affine', 'boxblur', 'colorjitter', 'crop', 'pepper', 
  #              'hsv', 'erase', 'fft', 'gamma', 'gaussblur',
  #              'hflip', 'jpeg', 'lab', 'laplacian', 'medblur', 'graymix', 
  #              'motionblur', 'normal', 'gray1', 'poisson', 'gray', 
  #              'precision', 'salt', 'sharp', 'sobel', 'solarize', 'speckle', 
  #              'swirl', 'gray2', 'uniform', 'vflip', 'xyz', 'yuv']
  # transforms: ['affine', 'colorjitter', 'erase', 'fft', 'gamma', 'gaussblur', 
  #              'hflip', 'jpeg', 'laplacian', 'medblur', 'motionblur', 'poisson', 
  #              'precision', 'salt', 'sharp', 'sobel', 'solarize', 'vflip']
  # transforms: ['affine', 'crop', 'erase', 'gaussblur', 'hflip', 'normal', 
  #              'gray1', 'gray', 'salt', 'gray2', 'vflip', 'pepper']
  # transforms: ['affine', 'boxblur', 'crop', 'pepper', 'erase', 'fft', 'gaussblur',
  #              'hflip', 'graymix', 'motionblur', 'normal', 'gray1', 'poisson', 
  #              'gray', 'salt', 'speckle', 'swirl', 'gray2', 'uniform', 'vflip']
  # transforms: ['affine', 'boxblur', 'crop', 'pepper', 'erase', 'gamma', 'gaussblur', 
  #              'hflip', 'graymix', 'motionblur', 'normal', 'gray1', 'gray', 'salt', 
  #              'sharp', 'sobel', 'solarize', 'speckle', 'gray2', 'uniform', 'vflip',]
  transforms: ['affine', 'boxblur', 'crop', 'pepper', 'erase', 'fft', 'gaussblur', 
               'hflip', 'graymix', 'motionblur', 'normal', 'gray1', 'gray', 'salt', 
               'sharp', 'poisson', 'swirl', 'speckle', 'uniform', 'vflip', 'solarize']
  affine:
    alpha: 0.5
  boxblur:
    p: 0.0
  colorjitter:
    alpha: 0.5
  crop: 
    alpha: 0.
  erase:
    alpha: 0.2680
  fft:
    alpha: 0.5
  gamma:
    alpha: 0.5
  gaussblur:
    p: 0.3
  gaussblur_same:
    p: 0.322
    kernel_size: 5
    sigma: 2.5
  gray:
    p: 0.3
  gray1:
    p: 0.3
  gray2:
    p: 0.3
  graymix:
    alpha: 0.3
  hflip:
    p: 0.3859
  hsv:
    alpha: 0.3
  jpeg:
    alpha: 0.5
  lab:
    alpha: 0.3
  laplacian:
    p: 0.5163
    kernel_size: 3
  medblur:
    p: 1.
    kernel_size: 3
  motionblur:
    p: 0.6901
    kernel_size: 3
    angle: 90.0
    direction: 1.0
  normal:
    alpha: 0.
  pepper:
    alpha: 0.    # drop rate
  poisson:
    alpha: 0.5
  precision:
    alpha: 0.221
  salt:
    alpha: 0.5
  sharp:
    alpha: 0.5
  sobel:
    p: 0.2663
  solarize:
    p: 0.4244
  speckle:
    alpha: 0.
  swirl:
    alpha: 0.
  uniform:
    alpha: 0.
  vflip:
    p: 0.5825
  xyz:
    alpha: 0.3
  yuv:
    alpha: 0.3
  save_transformed_img: False

# =========================================================================== #
#                             Preset Attack Params                            #
# =========================================================================== #
pgd1:
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  num_steps: 200
  # num_steps: 50
  step_size: 0.005
  num_draws: 5
  # momentum:
  #   mu: 1.
  #   # decay: False
  #   normalize: True
  #   vr: 'basic'
  # sgm_gamma: 0.5
  # linbp_layer: [4, 1]

pgd2:
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  num_steps: 200
  step_size: 0.005
  num_draws: 10
  # momentum:
  #   mu: 1.
  #   # decay: False
  #   normalize: True
  #   vr: 'basic'
  # sgm_gamma: 0.5
  # linbp_layer: [4, 1]

pgd3:
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  num_steps: 200
  # num_steps: 800
  step_size: 0.005
  num_draws: 20
  # momentum:
  #   mu: 1.
  #   # decay: False
  #   normalize: True
  #   vr: 'basic'
  # sgm_gamma: 0.5
  # linbp_layer: [4, 1]

# =========================================================================== #

opt1:
  optimizer: 'sgd'
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  # num_steps: 200
  num_steps: 50
  step_size: 0.005
  var_change: False
  normalize: True
  momentum: 
    mu: 0.9
    nesterov: True
  # sgm_gamma: 0.5
  # num_draws: 40

opt2:
  optimizer: 'sgd'
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  num_steps: 200
  step_size: 0.005
  var_change: False
  normalize: True
  momentum: 
    mu: 0.9
    nesterov: True
  # sgm_gamma: 0.5
  # num_draws: 80

opt3:
  optimizer: 'sgd'
  # targeted: True
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  epsilon: 0.06274509803
  # num_steps: 200
  num_steps: 800
  step_size: 0.005
  var_change: False
  normalize: True
  momentum: 
    mu: 0.9
    nesterov: True
  # sgm_gamma: 0.5
  # num_draws: 20

# =========================================================================== #

pgd4:
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]  
  num_steps: 10
  step_size: 0.01960784
  momentum:
    mu: 1.
    normalize: True
    vr: 'basic'

pgd5:
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]  
  num_steps: 10
  step_size: 0.01960784
  sgm_gamma: 0.5

opt4:
  optimizer: 'sgd'
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  num_steps: 10
  step_size: 0.01960784
  var_change: False
  normalize: True

opt5:
  optimizer: 'sgd'
  loss_func: 'ce'
  gap: 1.0e+9
  clip: [0., 1.]
  num_steps: 10
  step_size: 0.01960784
  var_change: False
  normalize: True
  sgm_gamma: 0.5
